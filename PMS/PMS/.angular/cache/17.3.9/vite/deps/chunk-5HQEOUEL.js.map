{
  "version": 3,
  "sources": ["../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/enum.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/pdf-operators.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/collections/utils.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/collections/dictionary.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-number.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-array.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/pdf-color.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/drawing/pdf-drawing.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/brushes/pdf-brush.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/brushes/pdf-solid-brush.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/enum.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/pdf-string-format.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/enum.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/pdf-page-size.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/pdf-margins.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/pdf-page-settings.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/pdf-pen.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/images/byte-array.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-name.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/pdf-dictionary-properties.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-dictionary.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-string.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-reference.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/node_modules/@syncfusion/ej2-file-utils/src/save.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/node_modules/@syncfusion/ej2-file-utils/src/xml-writer.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/node_modules/@syncfusion/ej2-file-utils/src/encoding.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/node_modules/@syncfusion/ej2-file-utils/src/stream-writer.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/node_modules/@syncfusion/ej2-compression/src/utils.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/node_modules/@syncfusion/ej2-compression/src/zip-archive.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/node_modules/@syncfusion/ej2-compression/src/compression-writer.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/node_modules/@syncfusion/ej2-compression/src/decompressor-huffman-tree.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/node_modules/@syncfusion/ej2-compression/src/checksum-calculator.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/node_modules/@syncfusion/ej2-compression/src/compression-reader.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-stream.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-boolean.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/images/image-decoder.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/unit-convertor.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/images/pdf-image.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/images/pdf-bitmap.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/enum.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/pdf-writer.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/enum.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/pdf-main-object-collection.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/document/pdf-document-base.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/cross-table.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/document/pdf-viewer-preferences.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/document/pdf-catalog.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/pdf-cross-table.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/pdf-stream-writer.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/string-tokenizer.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/string-layouter.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/pdf-font.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/pdf-transformation-matrix.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/constants.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/collections/object-object-pair/dictionary.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/pdf-transparency.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/document/automatic-fields/automatic-field-info-collection.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/base/graphics-element.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/document/automatic-fields/automatic-field.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/document/automatic-fields/automatic-field-info.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/ttf-table-info.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/ttf-name-table.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/ttf-name-record.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/ttf-head-table.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/ttf-metrics.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/ttf-horizontal-header-table.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/ttf-OS2-Table.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/ttf-post-table.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/ttf-long-hor-metric.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/ttf-cmap-sub-table.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/ttf-cmap-table.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/ttf-glyph-info.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/ttf-loca-table.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/ttf-apple-cmap-sub-table.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/ttf-microsoft-cmap-sub-table.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/ttf-trimmed-cmap-sub-table.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/ttf-glyph-header.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/big-endian-writer.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/ttf-reader.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/pdf-font-metrics.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/unicode-true-type-font.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/rtl/rtl-text-shape.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/rtl/rtl-bidirectional.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/rtl-renderer.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/brushes/pdf-gradient-brush.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/pdf-template.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/pdf-resources.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/brushes/pdf-tiling-brush.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/pdf-graphics.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/pdf-page-layer.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/general/pdf-collection.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/pdf-page-layer-collection.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/pdf-page-base.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/annotations/annotation-collection.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/pdf-page.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/page-added-event-arguments.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/pdf-section-page-collection.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/document/pdf-document-template.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/pdf-section-templates.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/pdf-section.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/pdf-section-collection.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/pdf-document-page-collection.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/general/pdf-cache-collection.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/pdf-standard-font-metrics-factory.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/pdf-standard-font.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/document/pdf-document.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/structured-elements/grid/styles/pdf-borders.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/base/element-layouter.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/layout-element.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/base/text-layouter.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/text-element.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/annotations/annotation.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/annotations/link-annotation.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/annotations/action-link-annotation.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/actions/action.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/actions/uri-action.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/annotations/uri-annotation.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/annotations/pdf-text-web-link.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/document/automatic-fields/pdf-numbers-convertor.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/document/automatic-fields/pdf-template-value-pair.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/document/automatic-fields/multiple-value-field.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/document/automatic-fields/pdf-page-number-field.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/document/automatic-fields/composite-field.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/document/automatic-fields/single-value-field.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/document/automatic-fields/page-count-field.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/structured-elements/tables/light-tables/enum.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/structured-elements/grid/styles/style.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/structured-elements/grid/layout/grid-layouter.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/structured-elements/grid/pdf-grid-cell.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/structured-elements/grid/pdf-grid-column.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/structured-elements/grid/pdf-grid-row.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/structured-elements/grid/pdf-grid.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/pdf-true-type-font.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/pdf-page-template-element.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/annotations/document-link-annotation.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/general/enum.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/general/pdf-destination.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/general/functions/pdf-function.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/general/functions/pdf-sampled-function.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/brushes/enum.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/brushes/pdf-brushes.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/brushes/pdf-blend.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/brushes/pdf-color-blend.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/brushes/pdf-linear-gradient-brush.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/brushes/pdf-radial-gradient-brush.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/base/shape-layouter.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/base/pdf-shape-element.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/base/draw-element.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/base/fill-element.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/path.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/rectangle-area.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/ellipse-part.js", "../../../../../node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/arc.js"],
  "sourcesContent": ["/**\n * public Enum for `PdfHorizontalAlignment`.\n * @private\n */\nexport var PdfHorizontalAlignment;\n(function (PdfHorizontalAlignment) {\n    /**\n     * Specifies the type of `Left`.\n     * @private\n     */\n    PdfHorizontalAlignment[PdfHorizontalAlignment[\"Left\"] = 0] = \"Left\";\n    /**\n     * Specifies the type of `Center`.\n     * @private\n     */\n    PdfHorizontalAlignment[PdfHorizontalAlignment[\"Center\"] = 1] = \"Center\";\n    /**\n     * Specifies the type of `Right`.\n     * @private\n     */\n    PdfHorizontalAlignment[PdfHorizontalAlignment[\"Right\"] = 2] = \"Right\";\n})(PdfHorizontalAlignment || (PdfHorizontalAlignment = {}));\n/**\n * public Enum for `PdfVerticalAlignment`.\n * @private\n */\nexport var PdfVerticalAlignment;\n(function (PdfVerticalAlignment) {\n    /**\n     * Specifies the type of `Top`.\n     * @private\n     */\n    PdfVerticalAlignment[PdfVerticalAlignment[\"Top\"] = 0] = \"Top\";\n    /**\n     * Specifies the type of `Middle`.\n     * @private\n     */\n    PdfVerticalAlignment[PdfVerticalAlignment[\"Middle\"] = 1] = \"Middle\";\n    /**\n     * Specifies the type of `Bottom`.\n     * @private\n     */\n    PdfVerticalAlignment[PdfVerticalAlignment[\"Bottom\"] = 2] = \"Bottom\";\n})(PdfVerticalAlignment || (PdfVerticalAlignment = {}));\n/**\n * public Enum for `public`.\n * @private\n */\nexport var PdfTextAlignment;\n(function (PdfTextAlignment) {\n    /**\n     * Specifies the type of `Left`.\n     * @private\n     */\n    PdfTextAlignment[PdfTextAlignment[\"Left\"] = 0] = \"Left\";\n    /**\n     * Specifies the type of `Center`.\n     * @private\n     */\n    PdfTextAlignment[PdfTextAlignment[\"Center\"] = 1] = \"Center\";\n    /**\n     * Specifies the type of `Right`.\n     * @private\n     */\n    PdfTextAlignment[PdfTextAlignment[\"Right\"] = 2] = \"Right\";\n    /**\n     * Specifies the type of `Justify`.\n     * @private\n     */\n    PdfTextAlignment[PdfTextAlignment[\"Justify\"] = 3] = \"Justify\";\n})(PdfTextAlignment || (PdfTextAlignment = {}));\n/**\n * public Enum for `TextRenderingMode`.\n * @private\n */\nexport var TextRenderingMode;\n(function (TextRenderingMode) {\n    /**\n     * Specifies the type of `Fill`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"Fill\"] = 0] = \"Fill\";\n    /**\n     * Specifies the type of `Stroke`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"Stroke\"] = 1] = \"Stroke\";\n    /**\n     * Specifies the type of `FillStroke`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"FillStroke\"] = 2] = \"FillStroke\";\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"None\"] = 3] = \"None\";\n    /**\n     * Specifies the type of `ClipFlag`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"ClipFlag\"] = 4] = \"ClipFlag\";\n    /**\n     * Specifies the type of `ClipFill`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"ClipFill\"] = 4] = \"ClipFill\";\n    /**\n     * Specifies the type of `ClipStroke`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"ClipStroke\"] = 5] = \"ClipStroke\";\n    /**\n     * Specifies the type of `ClipFillStroke`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"ClipFillStroke\"] = 6] = \"ClipFillStroke\";\n    /**\n     * Specifies the type of `Clip`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"Clip\"] = 7] = \"Clip\";\n})(TextRenderingMode || (TextRenderingMode = {}));\n/**\n * public Enum for `PdfLineJoin`.\n * @private\n */\nexport var PdfLineJoin;\n(function (PdfLineJoin) {\n    /**\n     * Specifies the type of `Miter`.\n     * @private\n     */\n    PdfLineJoin[PdfLineJoin[\"Miter\"] = 0] = \"Miter\";\n    /**\n     * Specifies the type of `Round`.\n     * @private\n     */\n    PdfLineJoin[PdfLineJoin[\"Round\"] = 1] = \"Round\";\n    /**\n     * Specifies the type of `Bevel`.\n     * @private\n     */\n    PdfLineJoin[PdfLineJoin[\"Bevel\"] = 2] = \"Bevel\";\n})(PdfLineJoin || (PdfLineJoin = {}));\n/**\n * public Enum for `PdfLineCap`.\n * @private\n */\nexport var PdfLineCap;\n(function (PdfLineCap) {\n    /**\n     * Specifies the type of `Flat`.\n     * @private\n     */\n    PdfLineCap[PdfLineCap[\"Flat\"] = 0] = \"Flat\";\n    /**\n     * Specifies the type of `Round`.\n     * @private\n     */\n    PdfLineCap[PdfLineCap[\"Round\"] = 1] = \"Round\";\n    /**\n     * Specifies the type of `Square`.\n     * @private\n     */\n    PdfLineCap[PdfLineCap[\"Square\"] = 2] = \"Square\";\n})(PdfLineCap || (PdfLineCap = {}));\n/**\n * public Enum for `PdfDashStyle`.\n * @private\n */\nexport var PdfDashStyle;\n(function (PdfDashStyle) {\n    /**\n     * Specifies the type of `Solid`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"Solid\"] = 0] = \"Solid\";\n    /**\n     * Specifies the type of `Dash`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"Dash\"] = 1] = \"Dash\";\n    /**\n     * Specifies the type of `Dot`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"Dot\"] = 2] = \"Dot\";\n    /**\n     * Specifies the type of `DashDot`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"DashDot\"] = 3] = \"DashDot\";\n    /**\n     * Specifies the type of `DashDotDot`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"DashDotDot\"] = 4] = \"DashDotDot\";\n    /**\n     * Specifies the type of `Custom`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"Custom\"] = 5] = \"Custom\";\n})(PdfDashStyle || (PdfDashStyle = {}));\n/**\n * public Enum for `PdfFillMode`.\n * @private\n */\nexport var PdfFillMode;\n(function (PdfFillMode) {\n    /**\n     * Specifies the type of `Winding`.\n     * @private\n     */\n    PdfFillMode[PdfFillMode[\"Winding\"] = 0] = \"Winding\";\n    /**\n     * Specifies the type of `Alternate`.\n     * @private\n     */\n    PdfFillMode[PdfFillMode[\"Alternate\"] = 1] = \"Alternate\";\n})(PdfFillMode || (PdfFillMode = {}));\n/**\n * public Enum for `PdfColorSpace`.\n * @private\n */\nexport var PdfColorSpace;\n(function (PdfColorSpace) {\n    /**\n     * Specifies the type of `Rgb`.\n     * @private\n     */\n    PdfColorSpace[PdfColorSpace[\"Rgb\"] = 0] = \"Rgb\";\n    /**\n     * Specifies the type of `Cmyk`.\n     * @private\n     */\n    PdfColorSpace[PdfColorSpace[\"Cmyk\"] = 1] = \"Cmyk\";\n    /**\n     * Specifies the type of `GrayScale`.\n     * @private\n     */\n    PdfColorSpace[PdfColorSpace[\"GrayScale\"] = 2] = \"GrayScale\";\n    /**\n     * Specifies the type of `Indexed`.\n     * @private\n     */\n    PdfColorSpace[PdfColorSpace[\"Indexed\"] = 3] = \"Indexed\";\n})(PdfColorSpace || (PdfColorSpace = {}));\n/**\n * public Enum for `PdfBlendMode`.\n * @private\n */\nexport var PdfBlendMode;\n(function (PdfBlendMode) {\n    /**\n     * Specifies the type of `Normal`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Normal\"] = 0] = \"Normal\";\n    /**\n     * Specifies the type of `Multiply`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Multiply\"] = 1] = \"Multiply\";\n    /**\n     * Specifies the type of `Screen`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Screen\"] = 2] = \"Screen\";\n    /**\n     * Specifies the type of `Overlay`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Overlay\"] = 3] = \"Overlay\";\n    /**\n     * Specifies the type of `Darken`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Darken\"] = 4] = \"Darken\";\n    /**\n     * Specifies the type of `Lighten`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Lighten\"] = 5] = \"Lighten\";\n    /**\n     * Specifies the type of `ColorDodge`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"ColorDodge\"] = 6] = \"ColorDodge\";\n    /**\n     * Specifies the type of `ColorBurn`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"ColorBurn\"] = 7] = \"ColorBurn\";\n    /**\n     * Specifies the type of `HardLight`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"HardLight\"] = 8] = \"HardLight\";\n    /**\n     * Specifies the type of `SoftLight`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"SoftLight\"] = 9] = \"SoftLight\";\n    /**\n     * Specifies the type of `Difference`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Difference\"] = 10] = \"Difference\";\n    /**\n     * Specifies the type of `Exclusion`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Exclusion\"] = 11] = \"Exclusion\";\n    /**\n     * Specifies the type of `Hue`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Hue\"] = 12] = \"Hue\";\n    /**\n     * Specifies the type of `Saturation`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Saturation\"] = 13] = \"Saturation\";\n    /**\n     * Specifies the type of `Color`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Color\"] = 14] = \"Color\";\n    /**\n     * Specifies the type of `Luminosity`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Luminosity\"] = 15] = \"Luminosity\";\n})(PdfBlendMode || (PdfBlendMode = {}));\n/**\n * public Enum for `PdfGraphicsUnit`.\n * @private\n */\nexport var PdfGraphicsUnit;\n(function (PdfGraphicsUnit) {\n    /**\n     * Specifies the type of `Centimeter`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Centimeter\"] = 0] = \"Centimeter\";\n    /**\n     * Specifies the type of `Pica`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Pica\"] = 1] = \"Pica\";\n    /**\n     * Specifies the type of `Pixel`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Pixel\"] = 2] = \"Pixel\";\n    /**\n     * Specifies the type of `Point`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Point\"] = 3] = \"Point\";\n    /**\n     * Specifies the type of `Inch`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Inch\"] = 4] = \"Inch\";\n    /**\n     * Specifies the type of `Document`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Document\"] = 5] = \"Document\";\n    /**\n     * Specifies the type of `Millimeter`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Millimeter\"] = 6] = \"Millimeter\";\n})(PdfGraphicsUnit || (PdfGraphicsUnit = {}));\n/**\n * public Enum for `PdfGridImagePosition`.\n * @private\n */\nexport var PdfGridImagePosition;\n(function (PdfGridImagePosition) {\n    /**\n     * Specifies the type of `Fit`.\n     * @private\n     */\n    PdfGridImagePosition[PdfGridImagePosition[\"Fit\"] = 0] = \"Fit\";\n    /**\n     * Specifies the type of `Center`.\n     * @private\n     */\n    PdfGridImagePosition[PdfGridImagePosition[\"Center\"] = 1] = \"Center\";\n    /**\n     * Specifies the type of `Stretch`.\n     * @private\n     */\n    PdfGridImagePosition[PdfGridImagePosition[\"Stretch\"] = 2] = \"Stretch\";\n    /**\n     * Specifies the type of `Tile`.\n     * @private\n     */\n    PdfGridImagePosition[PdfGridImagePosition[\"Tile\"] = 3] = \"Tile\";\n})(PdfGridImagePosition || (PdfGridImagePosition = {}));\n/**\n * public Enum for `the text rendering direction`.\n * @private\n */\nexport var PdfTextDirection;\n(function (PdfTextDirection) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfTextDirection[PdfTextDirection[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `LeftToRight`.\n     * @private\n     */\n    PdfTextDirection[PdfTextDirection[\"LeftToRight\"] = 1] = \"LeftToRight\";\n    /**\n     * Specifies the type of `RightToLeft`.\n     * @private\n     */\n    PdfTextDirection[PdfTextDirection[\"RightToLeft\"] = 2] = \"RightToLeft\";\n})(PdfTextDirection || (PdfTextDirection = {}));\n", "/**\n * PdfOperators.ts class for EJ2-PDF\n * Class of string PDF common operators.\n * @private\n */\nvar Operators = /** @class */ (function () {\n    /**\n     * Create an instance of `PdfOperator` class.\n     * @private\n     */\n    function Operators() {\n        /**\n         * Specifies the value of `test`.\n         * @private\n         */\n        this.forTest = 'test';\n        this.forTest = Operators.obj;\n    }\n    /**\n     * Specifies the value of `obj`.\n     * @private\n     */\n    Operators.obj = 'obj';\n    /**\n     * Specifies the value of `endObj`.\n     * @private\n     */\n    Operators.endObj = 'endobj';\n    /**\n     * Specifies the value of `R`.\n     * @private\n     */\n    Operators.r = 'R';\n    /**\n     * Specifies the value of ` `.\n     * @private\n     */\n    Operators.whiteSpace = ' ';\n    /**\n     * Specifies the value of `/`.\n     * @private\n     */\n    Operators.slash = '/';\n    /**\n     * Specifies the value of `\\r\\n`.\n     * @private\n     */\n    Operators.newLine = '\\r\\n';\n    /**\n     * Specifies the value of `stream`.\n     * @private\n     */\n    Operators.stream = 'stream';\n    /**\n     * Specifies the value of `endStream`.\n     * @private\n     */\n    Operators.endStream = 'endstream';\n    /**\n     * Specifies the value of `xref`.\n     * @private\n     */\n    Operators.xref = 'xref';\n    /**\n     * Specifies the value of `f`.\n     * @private\n     */\n    Operators.f = 'f';\n    /**\n     * Specifies the value of `n`.\n     * @private\n     */\n    Operators.n = 'n';\n    /**\n     * Specifies the value of `trailer`.\n     * @private\n     */\n    Operators.trailer = 'trailer';\n    /**\n     * Specifies the value of `startxref`.\n     * @private\n     */\n    Operators.startxref = 'startxref';\n    /**\n     * Specifies the value of `eof`.\n     * @private\n     */\n    Operators.eof = '%%EOF';\n    /**\n     * Specifies the value of `header`.\n     * @private\n     */\n    Operators.header = '%PDF-1.5';\n    /**\n     * Specifies the value of `beginText`.\n     * @private\n     */\n    Operators.beginText = 'BT';\n    /**\n     * Specifies the value of `endText`.\n     * @private\n     */\n    Operators.endText = 'ET';\n    /**\n     * Specifies the value of `m`.\n     * @private\n     */\n    Operators.beginPath = 'm';\n    /**\n     * Specifies the value of `l`.\n     * @private\n     */\n    Operators.appendLineSegment = 'l';\n    /**\n     * Specifies the value of `S`.\n     * @private\n     */\n    Operators.stroke = 'S';\n    /**\n     * Specifies the value of `f`.\n     * @private\n     */\n    Operators.fill = 'f';\n    /**\n     * Specifies the value of `f*`.\n     * @private\n     */\n    Operators.fillEvenOdd = 'f*';\n    /**\n     * Specifies the value of `B`.\n     * @private\n     */\n    Operators.fillStroke = 'B';\n    /**\n     * Specifies the value of `B*`.\n     * @private\n     */\n    Operators.fillStrokeEvenOdd = 'B*';\n    /**\n     * Specifies the value of `c`.\n     * @private\n     */\n    Operators.appendbeziercurve = 'c';\n    /**\n     * Specifies the value of `re`.\n     * @private\n     */\n    Operators.appendRectangle = 're';\n    /**\n     * Specifies the value of `q`.\n     * @private\n     */\n    Operators.saveState = 'q';\n    /**\n     * Specifies the value of `Q`.\n     * @private\n     */\n    Operators.restoreState = 'Q';\n    /**\n     * Specifies the value of `Do`.\n     * @private\n     */\n    Operators.paintXObject = 'Do';\n    /**\n     * Specifies the value of `cm`.\n     * @private\n     */\n    Operators.modifyCtm = 'cm';\n    /**\n     * Specifies the value of `Tm`.\n     * @private\n     */\n    Operators.modifyTM = 'Tm';\n    /**\n     * Specifies the value of `w`.\n     * @private\n     */\n    Operators.setLineWidth = 'w';\n    /**\n     * Specifies the value of `J`.\n     * @private\n     */\n    Operators.setLineCapStyle = 'J';\n    /**\n     * Specifies the value of `j`.\n     * @private\n     */\n    Operators.setLineJoinStyle = 'j';\n    /**\n     * Specifies the value of `d`.\n     * @private\n     */\n    Operators.setDashPattern = 'd';\n    /**\n     * Specifies the value of `i`.\n     * @private\n     */\n    Operators.setFlatnessTolerance = 'i';\n    /**\n     * Specifies the value of `h`.\n     * @private\n     */\n    Operators.closePath = 'h';\n    /**\n     * Specifies the value of `s`.\n     * @private\n     */\n    Operators.closeStrokePath = 's';\n    /**\n     * Specifies the value of `b`.\n     * @private\n     */\n    Operators.closeFillStrokePath = 'b';\n    /**\n     * Specifies the value of `setCharacterSpace`.\n     * @private\n     */\n    Operators.setCharacterSpace = 'Tc';\n    /**\n     * Specifies the value of `setWordSpace`.\n     * @private\n     */\n    Operators.setWordSpace = 'Tw';\n    /**\n     * Specifies the value of `setHorizontalScaling`.\n     * @private\n     */\n    Operators.setHorizontalScaling = 'Tz';\n    /**\n     * Specifies the value of `setTextLeading`.\n     * @private\n     */\n    Operators.setTextLeading = 'TL';\n    /**\n     * Specifies the value of `setFont`.\n     * @private\n     */\n    Operators.setFont = 'Tf';\n    /**\n     * Specifies the value of `setRenderingMode`.\n     * @private\n     */\n    Operators.setRenderingMode = 'Tr';\n    /**\n     * Specifies the value of `setTextRise`.\n     * @private\n     */\n    Operators.setTextRise = 'Ts';\n    /**\n     * Specifies the value of `setTextScaling`.\n     * @private\n     */\n    Operators.setTextScaling = 'Tz';\n    /**\n     * Specifies the value of `setCoords`.\n     * @private\n     */\n    Operators.setCoords = 'Td';\n    /**\n     * Specifies the value of `goToNextLine`.\n     * @private\n     */\n    Operators.goToNextLine = 'T*';\n    /**\n     * Specifies the value of `setText`.\n     * @private\n     */\n    Operators.setText = 'Tj';\n    /**\n     * Specifies the value of `setTextWithFormatting`.\n     * @private\n     */\n    Operators.setTextWithFormatting = 'TJ';\n    /**\n     * Specifies the value of `setTextOnNewLine`.\n     * @private\n     */\n    Operators.setTextOnNewLine = '\\'';\n    /**\n     * Specifies the value of `selectcolorspaceforstroking`.\n     * @private\n     */\n    Operators.selectcolorspaceforstroking = 'CS';\n    /**\n     * Specifies the value of `selectcolorspacefornonstroking`.\n     * @private\n     */\n    Operators.selectcolorspacefornonstroking = 'cs';\n    /**\n     * Specifies the value of `setrbgcolorforstroking`.\n     * @private\n     */\n    Operators.setrbgcolorforstroking = 'RG';\n    /**\n     * Specifies the value of `setrbgcolorfornonstroking`.\n     * @private\n     */\n    Operators.setrbgcolorfornonstroking = 'rg';\n    /**\n     * Specifies the value of `K`.\n     * @private\n     */\n    Operators.setcmykcolorforstroking = 'K';\n    /**\n     * Specifies the value of `k`.\n     * @private\n     */\n    Operators.setcmykcolorfornonstroking = 'k';\n    /**\n     * Specifies the value of `G`.\n     * @private\n     */\n    Operators.setgraycolorforstroking = 'G';\n    /**\n     * Specifies the value of `g`.\n     * @private\n     */\n    Operators.setgraycolorfornonstroking = 'g';\n    /**\n     * Specifies the value of `W`.\n     * @private\n     */\n    Operators.clipPath = 'W';\n    /**\n     * Specifies the value of `clipPathEvenOdd`.\n     * @private\n     */\n    Operators.clipPathEvenOdd = 'W*';\n    /**\n     * Specifies the value of `n`.\n     * @private\n     */\n    Operators.endPath = 'n';\n    /**\n     * Specifies the value of `setGraphicsState`.\n     * @private\n     */\n    Operators.setGraphicsState = 'gs';\n    /**\n     * Specifies the value of `%`.\n     * @private\n     */\n    Operators.comment = '%';\n    /**\n     * Specifies the value of `*`.\n     * @private\n     */\n    Operators.evenOdd = '*';\n    /**\n     * Specifies the value of `M`.\n     * @private\n     */\n    Operators.setMiterLimit = 'M';\n    /**\n     * Same as SC, but also supports Pattern, Separation, DeviceN, and ICCBased color spaces. For non-stroking operations.\n     * @public\n     */\n    Operators.setColorAndPattern = 'scn';\n    /**\n     * Same as SC, but also supports Pattern, Separation, DeviceN, and ICCBased color spaces. For stroking.\n     */\n    Operators.setColorAndPatternStroking = 'SCN';\n    return Operators;\n}());\nexport { Operators };\n", "/**\n * @private\n * @hidden\n */\nexport function defaultToString(item) {\n    // if (item === null) {\n    //     return 'COLLECTION_NULL';\n    // } else if (typeof item === 'undefined') {\n    //     return 'COLLECTION_UNDEFINED';\n    // } else if (Object.prototype.toString.call(item) === '[object String]') {\n    if (Object.prototype.toString.call(item) === '[object String]') {\n        return '$s' + item;\n    }\n    else {\n        return '$o' + item.toString();\n    }\n}\n", "/**\n * Dictionary.ts class for EJ2-PDF\n * @private\n * @hidden\n */\nimport { defaultToString } from './utils';\n/**\n * @private\n * @hidden\n */\nvar Dictionary = /** @class */ (function () {\n    /**\n     * @private\n     * @hidden\n     */\n    function Dictionary(toStringFunction) {\n        this.table = {};\n        this.nElements = 0;\n        this.toStr = toStringFunction || defaultToString;\n    }\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.getValue = function (key) {\n        var pair = this.table['$' + this.toStr(key)];\n        if (typeof pair === 'undefined') {\n            return undefined;\n        }\n        return pair.value;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.setValue = function (key, value) {\n        // if (typeof key === 'undefined' || typeof value === 'undefined') {\n        //     return undefined;\n        // }\n        var ret;\n        var k = '$' + this.toStr(key);\n        var previousElement = this.table[k];\n        // if (typeof previousElement === 'undefined') {\n        this.nElements++;\n        ret = undefined;\n        // }\n        this.table[k] = {\n            key: key,\n            value: value\n        };\n        return ret;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.remove = function (key) {\n        var k = '$' + this.toStr(key);\n        var previousElement = this.table[k];\n        // if (typeof previousElement !== 'undefined') {\n        delete this.table[k];\n        this.nElements--;\n        return previousElement.value;\n        // }\n        // return undefined;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.keys = function () {\n        var keysArray = [];\n        var namesOfKeys = Object.keys(this.table);\n        for (var index1 = 0; index1 < namesOfKeys.length; index1++) {\n            // if (Object.prototype.hasOwnProperty.call(this.table, namesOfKeys[index1])) {\n            var pair1 = this.table[namesOfKeys[index1]];\n            keysArray.push(pair1.key);\n            // }\n        }\n        return keysArray;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.values = function () {\n        var valuesArray = [];\n        var namesOfValues = Object.keys(this.table);\n        for (var index2 = 0; index2 < namesOfValues.length; index2++) {\n            // if (Object.prototype.hasOwnProperty.call(this.table, namesOfValues[index2])) {\n            var pair2 = this.table[namesOfValues[index2]];\n            valuesArray.push(pair2.value);\n            // }\n        }\n        return valuesArray;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.containsKey = function (key) {\n        var retutnValue = true;\n        if (typeof this.getValue(key) === 'undefined') {\n            retutnValue = true;\n        }\n        else {\n            retutnValue = false;\n        }\n        return !retutnValue;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.clear = function () {\n        this.table = {};\n        this.nElements = 0;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.size = function () {\n        return this.nElements;\n    };\n    return Dictionary;\n}()); // End of dictionary\nexport { Dictionary };\n", "/**\n * `PdfNumber` class is used to perform number related primitive operations.\n * @private\n */\nvar PdfNumber = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfNumber` class.\n     * @private\n     */\n    function PdfNumber(value) {\n        /**\n         * Sotres the `position`.\n         * @default -1\n         * @private\n         */\n        this.position5 = -1;\n        this.value = value;\n    }\n    Object.defineProperty(PdfNumber.prototype, \"intValue\", {\n        /**\n         * Gets or sets the `integer` value.\n         * @private\n         */\n        get: function () {\n            return this.value;\n        },\n        set: function (value) {\n            this.value = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"isInteger\", {\n        /**\n         * Gets or sets a value indicating whether this instance `is integer`.\n         * @private\n         */\n        get: function () {\n            return this.integer;\n        },\n        set: function (value) {\n            this.integer = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"status\", {\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status5;\n        },\n        set: function (value) {\n            this.status5 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving5;\n        },\n        set: function (value) {\n            this.isSaving5 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index5;\n        },\n        set: function (value) {\n            this.index5 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position5;\n        },\n        set: function (value) {\n            this.position5 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            var rValue = null;\n            return rValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Saves the object`.\n     * @private\n     */\n    PdfNumber.prototype.save = function (writer) {\n        writer.write(this.intValue.toString()); //tostring(CultureInfo.InletiantCulture)\n    };\n    /**\n     * Creates a `copy of PdfNumber`.\n     * @private\n     */\n    PdfNumber.prototype.clone = function (crossTable) {\n        var newNumber = new PdfNumber(this.value);\n        return newNumber;\n    };\n    /**\n     * Converts a `float value to a string` using Adobe PDF rules.\n     * @private\n     */\n    PdfNumber.floatToString = function (number) {\n        // let tempString1 : string = number.toString();\n        // let tempString2 : string = tempString1.indexOf('.') != -1 ? tempString1.substring(0, tempString1.indexOf('.')) : tempString1;\n        var returnString = number.toFixed(2);\n        if (returnString === '0.00') {\n            returnString = '.00';\n        }\n        // let prefixLength : number = (22 - tempString2.length) >= 0 ? (22 - tempString2.length) : 0;\n        // for (let index : number = 0; index < prefixLength; index++) {\n        //     returnString += '0';\n        // }\n        // returnString += tempString2 + '.00';\n        // returnString += (tempString3.length > 6) ? tempString3.substring(0,6) : tempString3;\n        // let suffixLength : number = (6 - tempString3.length) >= 0 ? (6 - tempString3.length) : 0;\n        // for (let index : number = 0; index < suffixLength; index++) {\n        //     returnString += '0';\n        // }\n        return returnString;\n    };\n    /**\n     * Determines the `minimum of the three values`.\n     * @private\n     */\n    PdfNumber.min = function (x, y, z) {\n        var r = Math.min(x, y);\n        return Math.min(z, r);\n    };\n    return PdfNumber;\n}());\nexport { PdfNumber };\n", "import { PdfNumber } from './pdf-number';\nimport { Operators } from './../input-output/pdf-operators';\n/**\n * `PdfArray` class is used to perform array related primitive operations.\n * @private\n */\nvar PdfArray = /** @class */ (function () {\n    function PdfArray(array) {\n        //Fields\n        /**\n         * `startMark` - '['\n         * @private\n         */\n        this.startMark = '[';\n        /**\n         * `endMark` - ']'.\n         * @private\n         */\n        this.endMark = ']';\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position9 = -1;\n        /**\n         * Internal variable to hold `cloned object`.\n         * @default null\n         * @private\n         */\n        this.clonedObject9 = null;\n        /**\n         * Represents the Font dictionary.\n         * @hidden\n         * @private\n         */\n        this.isFont = false;\n        if (typeof array === 'undefined') {\n            this.internalElements = [];\n        }\n        else {\n            if (typeof array !== 'undefined' && !(array instanceof PdfArray)) {\n                var tempNumberArray = array;\n                for (var index = 0; index < tempNumberArray.length; index++) {\n                    var pdfNumber = new PdfNumber(tempNumberArray[index]);\n                    this.add(pdfNumber);\n                }\n                // } else if (typeof array !== 'undefined' && (array instanceof PdfArray)) {\n            }\n            else {\n                var tempArray = array;\n                // if (tempArray.Elements.length > 0) {\n                this.internalElements = [];\n                for (var index = 0; index < tempArray.elements.length; index++) {\n                    this.internalElements.push(tempArray.elements[index]);\n                }\n                // }\n            }\n        }\n    }\n    //property\n    /**\n     * Gets the `IPdfSavable` at the specified index.\n     * @private\n     */\n    PdfArray.prototype.items = function (index) {\n        // if (index < 0 || index >= this.Count) {\n        //     throw new Error('ArgumentOutOfRangeException : index, The index can\"t be less then zero or greater then Count.');\n        // }\n        return this.internalElements[index];\n    };\n    Object.defineProperty(PdfArray.prototype, \"count\", {\n        /**\n         * Gets the `count`.\n         * @private\n         */\n        get: function () {\n            return this.internalElements.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"status\", {\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status9;\n        },\n        set: function (value) {\n            this.status9 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving9;\n        },\n        set: function (value) {\n            this.isSaving9 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            return this.clonedObject9;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position9;\n        },\n        set: function (value) {\n            this.position9 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index9;\n        },\n        set: function (value) {\n            this.index9 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"CrossTable\", {\n        /**\n         * Returns `PdfCrossTable` associated with the object.\n         * @private\n         */\n        get: function () {\n            return this.pdfCrossTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"elements\", {\n        /**\n         * Gets the `elements` of the Pdf Array.\n         * @private\n         */\n        get: function () {\n            return this.internalElements;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Adds` the specified element to the PDF array.\n     * @private\n     */\n    PdfArray.prototype.add = function (element) {\n        // if (element === null) {\n        //     throw new Error('ArgumentNullException : obj');\n        // }\n        if (typeof this.internalElements === 'undefined') {\n            this.internalElements = [];\n        }\n        this.internalElements.push(element);\n        this.markedChange();\n    };\n    /**\n     * `Marks` the object changed.\n     * @private\n     */\n    PdfArray.prototype.markedChange = function () {\n        this.bChanged = true;\n    };\n    /**\n     * `Determines` whether the specified element is within the array.\n     * @private\n     */\n    PdfArray.prototype.contains = function (element) {\n        var returnValue = false;\n        for (var index = 0; index < this.internalElements.length; index++) {\n            var tempElement = this.internalElements[index];\n            var inputElement = element;\n            if (tempElement != null && typeof tempElement !== 'undefined' && inputElement != null && typeof inputElement !== 'undefined') {\n                if (tempElement.value === inputElement.value) {\n                    return true;\n                }\n            }\n            // if (this.internalElements[index] === element) {\n            //     returnValue = true;\n            // }\n        }\n        return returnValue;\n    };\n    /**\n     * Returns the `primitive object` of input index.\n     * @private\n     */\n    PdfArray.prototype.getItems = function (index) {\n        // if (index < 0 || index >= this.Count) {\n        //     throw new Error('ArgumentOutOfRangeException : index , The index can\"t be less then zero or greater then Count.');\n        // }\n        return this.internalElements[index];\n    };\n    /**\n     * `Saves` the object using the specified writer.\n     * @private\n     */\n    PdfArray.prototype.save = function (writer) {\n        // if (writer === null) {\n        //     throw new Error('ArgumentNullException : writer');\n        // }\n        writer.write(this.startMark);\n        for (var i = 0, len = this.count; i < len; i++) {\n            this.getItems(i).save(writer);\n            if (i + 1 !== len) {\n                writer.write(Operators.whiteSpace);\n            }\n        }\n        writer.write(this.endMark);\n    };\n    /**\n     * Creates a `copy of PdfArray`.\n     * @private\n     */\n    PdfArray.prototype.clone = function (crossTable) {\n        // if (this.clonedObject9 !== null && this.clonedObject9.CrossTable === crossTable) {\n        //     return this.clonedObject9;\n        // } else {\n        this.clonedObject9 = null;\n        // Else clone the object.\n        var newArray = new PdfArray();\n        for (var index = 0; index < this.internalElements.length; index++) {\n            var obj = this.internalElements[index];\n            newArray.add(obj.clone(crossTable));\n        }\n        newArray.pdfCrossTable = crossTable;\n        this.clonedObject9 = newArray;\n        return newArray;\n    };\n    /**\n     * Creates filled PDF array `from the rectangle`.\n     * @private\n     */\n    PdfArray.fromRectangle = function (bounds) {\n        var values = [bounds.x, bounds.y, bounds.width, bounds.height];\n        var array = new PdfArray(values);\n        return array;\n    };\n    // /**\n    //  * Creates the rectangle from filled PDF array.\n    //  * @private\n    //  */\n    // public ToRectangle() : RectangleF {\n    //     if (this.Count < 4) {\n    //         throw Error('InvalidOperationException-Can not convert to rectangle.');\n    //     }\n    //     let x1 : number;\n    //     let x2 : number;\n    //     let y1 : number;\n    //     let y2 : number;\n    //     let num : PdfNumber = this.getItems(0) as PdfNumber;\n    //     x1 = num.IntValue;\n    //     num = this.getItems(1) as PdfNumber;\n    //     y1 = num.IntValue;\n    //     num = this.getItems(2) as PdfNumber;\n    //     x2 = num.IntValue;\n    //     num = this.getItems(3) as PdfNumber;\n    //     y2 = num.IntValue;\n    //     let x : number = Math.min(x1, x2);\n    //     let y : number = Math.min(y1, y2);\n    //     let width : number = Math.abs(x1 - x2);\n    //     let height : number = Math.abs(y1 - y2);\n    //     let rect : RectangleF = new RectangleF(new PointF(x, y), new SizeF(width, height));\n    //     return rect;\n    // }\n    /**\n     * `Inserts` the element into the array.\n     * @private\n     */\n    PdfArray.prototype.insert = function (index, element) {\n        if (index < this.internalElements.length && index > 0) {\n            var tempElements = [];\n            for (var i = 0; i < index; i++) {\n                tempElements.push(this.internalElements[i]);\n            }\n            tempElements.push(element);\n            for (var i = index; i < this.internalElements.length; i++) {\n                tempElements.push(this.internalElements[i]);\n            }\n            this.internalElements = tempElements;\n        }\n        else {\n            this.internalElements.push(element);\n        }\n        this.markChanged();\n    };\n    /**\n     * `Checks whether array contains the element`.\n     * @private\n     */\n    PdfArray.prototype.indexOf = function (element) {\n        return this.internalElements.indexOf(element);\n    };\n    /**\n     * `Removes` element from the array.\n     * @private\n     */\n    PdfArray.prototype.remove = function (element) {\n        // if (element === null) {\n        //     throw new Error('ArgumentNullException : element');\n        // }\n        var index = this.internalElements.indexOf(element);\n        // if (index >= 0 && index < this.internalElements.length) {\n        this.internalElements[index] = null;\n        // }\n        this.markChanged();\n    };\n    /**\n     * `Remove` the element from the array by its index.\n     * @private\n     */\n    PdfArray.prototype.removeAt = function (index) {\n        // this.internalElements.RemoveAt(index);\n        if (this.internalElements.length > index) {\n            var tempArray = [];\n            for (var i = 0; i < index; i++) {\n                tempArray.push(this.internalElements[i]);\n            }\n            for (var i = index + 1; i < this.internalElements.length; i++) {\n                tempArray.push(this.internalElements[i]);\n            }\n            this.internalElements = tempArray;\n        }\n        this.markChanged();\n    };\n    /**\n     * `Clear` the array.\n     * @private\n     */\n    PdfArray.prototype.clear = function () {\n        this.internalElements = [];\n        this.markChanged();\n    };\n    /**\n     * `Marks` the object changed.\n     * @private\n     */\n    PdfArray.prototype.markChanged = function () {\n        this.bChanged = true;\n    };\n    return PdfArray;\n}());\nexport { PdfArray };\n", "import { PdfColorSpace } from './enum';\nimport { Operators } from './../input-output/pdf-operators';\nimport { Dictionary } from './../collections/dictionary';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfArray } from './../primitives/pdf-array';\n/**\n * Implements structures and routines working with `color`.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * // set the font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * //\n * // set color\n * let brushColor : PdfColor = new PdfColor(0, 0, 0);\n * //\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(brushColor);\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n * @default black color\n */\nvar PdfColor = /** @class */ (function () {\n    function PdfColor(color1, color2, color3, color4) {\n        if (typeof color1 === 'undefined') {\n            if (typeof color2 !== 'undefined' && typeof color3 !== 'undefined' && typeof color4 !== 'undefined') {\n                this.assignRGB(color2, color3, color4);\n            }\n            else {\n                this.filled = false;\n            }\n        }\n        else if (color1 instanceof PdfColor) {\n            this.redColor = color1.r;\n            this.greenColor = color1.g;\n            this.blueColor = color1.b;\n            this.grayColor = color1.gray;\n            this.alpha = color1.alpha;\n            this.filled = (this.alpha !== 0);\n            /* tslint:disable-next-line:max-line-length */\n        }\n        else if (typeof color1 === 'number' && typeof color2 === 'undefined' && typeof color3 === 'undefined' && typeof color4 === 'undefined') {\n            if (color1 < 0) {\n                color1 = 0;\n            }\n            if (color1 > 1) {\n                color1 = 1;\n            }\n            this.redColor = color1 * PdfColor.maxColourChannelValue;\n            this.greenColor = color1 * PdfColor.maxColourChannelValue;\n            this.blueColor = color1 * PdfColor.maxColourChannelValue;\n            this.cyanColor = color1;\n            this.magentaColor = color1;\n            this.yellowColor = color1;\n            this.blackColor = color1;\n            this.grayColor = color1;\n            this.alpha = PdfColor.maxColourChannelValue;\n            this.filled = true;\n        }\n        else if (typeof color4 === 'undefined') {\n            this.assignRGB(color1, color2, color3);\n        }\n        else {\n            this.assignRGB(color2, color3, color4, color1);\n        }\n    }\n    /**\n     * `Assign` red, green, blue colors with alpha value..\n     * @private\n     */\n    PdfColor.prototype.assignRGB = function (r, g, b, a) {\n        if (typeof r === 'undefined' || typeof g === 'undefined' || typeof b === 'undefined') {\n            this.filled = false;\n        }\n        else {\n            this.cyanColor = 0;\n            this.magentaColor = 0;\n            this.yellowColor = 0;\n            this.blackColor = 0;\n            this.grayColor = 0;\n            this.redColor = r;\n            this.greenColor = g;\n            this.blueColor = b;\n            if (typeof a === 'undefined') {\n                this.alpha = PdfColor.maxColourChannelValue;\n            }\n            else {\n                this.alpha = a;\n            }\n            this.filled = true;\n            this.assignCMYK(r, g, b);\n        }\n    };\n    /**\n     * `Calculate and assign` cyan, megenta, yellow colors from rgb values..\n     * @private\n     */\n    PdfColor.prototype.assignCMYK = function (r, g, b) {\n        var red = r / PdfColor.maxColourChannelValue;\n        var green = g / PdfColor.maxColourChannelValue;\n        var blue = b / PdfColor.maxColourChannelValue;\n        var black = PdfNumber.min(1 - red, 1 - green, 1 - blue);\n        var cyan = (black === 1.0) ? 0 : (1 - red - black) / (1 - black);\n        var magenta = (black === 1.0) ? 0 : (1 - green - black) / (1 - black);\n        var yellow = (black === 1.0) ? 0 : (1 - blue - black) / (1 - black);\n        this.blackColor = black;\n        this.cyanColor = cyan;\n        this.magentaColor = magenta;\n        this.yellowColor = yellow;\n    };\n    Object.defineProperty(PdfColor.prototype, \"r\", {\n        //Properties\n        // public static get Empty():PdfColor\n        // {\n        //     return this.s_emptyColor\n        // }\n        /**\n         * Gets or sets `Red` channel value.\n         * @private\n         */\n        get: function () {\n            return this.redColor;\n        },\n        set: function (value) {\n            this.redColor = value;\n            this.assignCMYK(this.redColor, this.greenColor, this.blueColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"red\", {\n        /**\n         * Gets the `Red` color\n         * @private\n         */\n        get: function () {\n            return (this.r / PdfColor.maxColourChannelValue);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"b\", {\n        /**\n         * Gets or sets `Blue` channel value.\n         * @private\n         */\n        get: function () {\n            return this.blueColor;\n        },\n        set: function (value) {\n            this.blueColor = value;\n            this.assignCMYK(this.redColor, this.greenColor, this.blueColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"blue\", {\n        /**\n         * Gets the `blue` color.\n         * @private\n         */\n        get: function () {\n            return (this.b / PdfColor.maxColourChannelValue);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"c\", {\n        /**\n         * Gets or sets `Cyan` channel value.\n         * @private\n         */\n        get: function () {\n            return this.cyanColor;\n        },\n        set: function (value) {\n            if (value < 0) {\n                this.cyanColor = 0;\n            }\n            else if (value > 1) {\n                this.cyanColor = 1;\n            }\n            else {\n                this.cyanColor = value;\n            }\n            this.assignRGB(this.cyanColor, this.magentaColor, this.yellowColor, this.blackColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"k\", {\n        /**\n         * Gets or sets `Black` channel value.\n         * @private\n         */\n        get: function () {\n            return this.blackColor;\n        },\n        set: function (value) {\n            if ((value < 0)) {\n                this.blackColor = 0;\n            }\n            else if ((value > 1)) {\n                this.blackColor = 1;\n            }\n            else {\n                this.blackColor = value;\n            }\n            this.assignRGB(this.cyanColor, this.magentaColor, this.yellowColor, this.blackColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"m\", {\n        /**\n         * Gets or sets `Magenta` channel value.\n         * @private\n         */\n        get: function () {\n            return this.magentaColor;\n        },\n        set: function (value) {\n            if ((value < 0)) {\n                this.magentaColor = 0;\n            }\n            else if ((value > 1)) {\n                this.magentaColor = 1;\n            }\n            else {\n                this.magentaColor = value;\n            }\n            this.assignRGB(this.cyanColor, this.magentaColor, this.yellowColor, this.blackColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"y\", {\n        /**\n         * Gets or sets `Yellow` channel value.\n         * @private\n         */\n        get: function () {\n            return this.yellowColor;\n        },\n        set: function (value) {\n            if ((value < 0)) {\n                this.yellowColor = 0;\n            }\n            else if ((value > 1)) {\n                this.yellowColor = 1;\n            }\n            else {\n                this.yellowColor = value;\n            }\n            this.assignRGB(this.cyanColor, this.magentaColor, this.yellowColor, this.blackColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"g\", {\n        /**\n         *  Gets or sets `Green` channel value.\n         * @private\n         */\n        get: function () {\n            return this.greenColor;\n        },\n        set: function (value) {\n            this.greenColor = value;\n            this.assignCMYK(this.redColor, this.greenColor, this.blueColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"green\", {\n        /**\n         * Gets the `Green` color.\n         * @private\n         */\n        get: function () {\n            return (this.g / PdfColor.maxColourChannelValue);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"gray\", {\n        /**\n         * Gets or sets `Gray` channel value.\n         * @private\n         */\n        get: function () {\n            return ((((this.redColor + this.greenColor) + this.blueColor)) / (PdfColor.maxColourChannelValue * 3));\n        },\n        set: function (value) {\n            if (value < 0) {\n                this.grayColor = 0;\n            }\n            else if (value > 1) {\n                this.grayColor = 1;\n            }\n            else {\n                this.grayColor = value;\n            }\n            this.r = (this.grayColor * PdfColor.maxColourChannelValue);\n            this.g = (this.grayColor * PdfColor.maxColourChannelValue);\n            this.b = (this.grayColor * PdfColor.maxColourChannelValue);\n            this.assignCMYK(this.redColor, this.greenColor, this.blueColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"isEmpty\", {\n        /**\n         * Gets whether the PDFColor `is Empty` or not.\n         * @private\n         */\n        get: function () {\n            return !this.filled;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"a\", {\n        /**\n         * Gets or sets `Alpha` channel value.\n         * @private\n         */\n        get: function () {\n            return this.alpha;\n        },\n        set: function (value) {\n            if (value < 0) {\n                this.alpha = 0;\n            }\n            else {\n                // if (this.alpha !== value) {\n                this.alpha = value;\n                // }\n            }\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Public methods\n    /**\n     * Converts `PDFColor to PDF string` representation.\n     * @private\n     */\n    PdfColor.prototype.toString = function (colorSpace, stroke) {\n        if (this.isEmpty) {\n            return '';\n        }\n        var str = '';\n        switch (colorSpace) {\n            case PdfColorSpace.Rgb:\n                str = this.rgbToString(stroke);\n                break;\n            case PdfColorSpace.GrayScale:\n                str = this.grayScaleToString(stroke);\n                break;\n            case PdfColorSpace.Cmyk:\n                str = this.cmykToString(stroke);\n                break;\n        }\n        return str;\n    };\n    /**\n     * Sets `GrayScale` color.\n     * @private\n     */\n    PdfColor.prototype.grayScaleToString = function (ifStroking) {\n        var gray = this.gray;\n        var colour = '';\n        var obj = null;\n        /* tslint:disable-next-line:max-line-length */\n        obj = (ifStroking) ? PdfColor.grayStringsSroke.containsKey(gray) ? PdfColor.grayStringsSroke.getValue(gray) : null : PdfColor.grayStringsFill.containsKey(gray) ? PdfColor.grayStringsFill.getValue(gray) : null;\n        if (obj == null) {\n            if (ifStroking) {\n                colour = gray.toString() + ' G';\n                PdfColor.grayStringsSroke.setValue(gray, colour);\n            }\n        }\n        else {\n            colour = obj.toString();\n        }\n        return colour + Operators.newLine;\n    };\n    /**\n     * Sets `RGB` color.\n     * @private\n     */\n    PdfColor.prototype.rgbToString = function (ifStroking) {\n        var r = this.r;\n        var g = this.g;\n        var b = this.b;\n        var key = (r << 16) + (g << 8) + b;\n        if (ifStroking) {\n            key += 1 << 24;\n        }\n        var colour = '';\n        var obj = null;\n        if (PdfColor.rgbStrings.containsKey(key)) {\n            obj = PdfColor.rgbStrings.getValue(key);\n        }\n        if (obj == null) {\n            var red = r / PdfColor.maxColourChannelValue;\n            var green = g / PdfColor.maxColourChannelValue;\n            var blue = b / PdfColor.maxColourChannelValue;\n            if (ifStroking) {\n                colour = red.toString() + ' ' + green.toString() + ' ' + blue.toString() + ' RG';\n            }\n            else {\n                colour = red.toString() + ' ' + green.toString() + ' ' + blue.toString() + ' rg';\n            }\n            PdfColor.rgbStrings.setValue(key, colour);\n        }\n        else {\n            colour = obj.toString();\n        }\n        return colour + Operators.newLine;\n    };\n    /***\n     * Sets `CMYK` color.\n     * @private\n     */\n    PdfColor.prototype.cmykToString = function (ifStroking) {\n        var cyan = this.c;\n        var magenta = this.m;\n        var yellow = this.y;\n        var black = this.b;\n        var colour = '';\n        colour = cyan.toString() + ' ' + magenta.toString() + ' ' + yellow.toString() + ' ' + black.toString() + ' K';\n        return colour + Operators.newLine;\n    };\n    /**\n     * Converts `colour to a PDF array`.\n     * @private\n     */\n    PdfColor.prototype.toArray = function (colorSpace) {\n        var array = new PdfArray();\n        switch (colorSpace) {\n            case PdfColorSpace.Rgb:\n                array.add(new PdfNumber(this.red));\n                array.add(new PdfNumber(this.green));\n                array.add(new PdfNumber(this.blue));\n                break;\n        }\n        return array;\n    };\n    //Fields\n    /**\n     * Holds `RGB colors` converted into strings.\n     * @private\n     */\n    PdfColor.rgbStrings = new Dictionary();\n    /**\n     * Holds Gray scale colors converted into strings for `stroking`.\n     * @private\n     */\n    PdfColor.grayStringsSroke = new Dictionary();\n    /**\n     * Holds Gray scale colors converted into strings for `filling`.\n     * @private\n     */\n    PdfColor.grayStringsFill = new Dictionary();\n    /**\n     * `Max value` of color channel.\n     * @private\n     */\n    PdfColor.maxColourChannelValue = 255.0;\n    return PdfColor;\n}());\nexport { PdfColor };\n", "/**\n * Coordinates of Position for `PointF`.\n * @private\n */\nvar PointF = /** @class */ (function () {\n    function PointF(x, y) {\n        if (typeof x === 'undefined') {\n            this.x = 0;\n            this.y = 0;\n        }\n        else {\n            if (x !== null) {\n                this.x = x;\n            }\n            else {\n                this.x = 0;\n            }\n            if (y !== null) {\n                this.y = y;\n            }\n            else {\n                this.y = 0;\n            }\n        }\n    }\n    return PointF;\n}());\nexport { PointF };\n/**\n * Width and Height as `Size`.\n * @private\n */\nvar SizeF = /** @class */ (function () {\n    function SizeF(width, height) {\n        if (typeof height === 'undefined') {\n            this.height = 0;\n            this.width = 0;\n        }\n        else {\n            if (height !== null) {\n                this.height = height;\n            }\n            else {\n                this.height = 0;\n            }\n            if (width !== null) {\n                this.width = width;\n            }\n            else {\n                this.width = 0;\n            }\n        }\n    }\n    return SizeF;\n}());\nexport { SizeF };\n/**\n * `RectangleF` with Position and size.\n * @private\n */\nvar RectangleF = /** @class */ (function () {\n    function RectangleF(arg1, arg2, arg3, arg4) {\n        if (typeof arg1 === typeof arg1 && typeof arg1 === 'undefined') {\n            this.x = 0;\n            this.y = 0;\n            this.height = 0;\n            this.width = 0;\n        }\n        else {\n            if (arg1 instanceof PointF && arg2 instanceof SizeF && typeof arg3 === 'undefined') {\n                var pointf = arg1;\n                this.x = pointf.x;\n                this.y = pointf.y;\n                var sizef = arg2;\n                this.height = sizef.height;\n                this.width = sizef.width;\n            }\n            else {\n                var x = arg1;\n                var y = arg2;\n                var width = arg3;\n                var height = arg4;\n                this.x = x;\n                this.y = y;\n                this.height = height;\n                this.width = width;\n            }\n        }\n    }\n    return RectangleF;\n}());\nexport { RectangleF };\n/**\n * `Rectangle` with left, right, top and bottom.\n * @private\n */\nvar Rectangle = /** @class */ (function () {\n    /**\n     * Instance of `RectangleF` class with X, Y, Width and Height.\n     * @private\n     */\n    function Rectangle(left, top, right, bottom) {\n        this.left = left;\n        this.top = top;\n        this.right = right;\n        this.bottom = bottom;\n    }\n    Object.defineProperty(Rectangle.prototype, \"width\", {\n        /**\n         * Gets a value of width\n         */\n        get: function () {\n            return this.right - this.left;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rectangle.prototype, \"height\", {\n        /**\n         * Gets a value of height\n         */\n        get: function () {\n            return this.bottom - this.top;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rectangle.prototype, \"topLeft\", {\n        /**\n         * Gets a value of Top and Left\n         */\n        get: function () {\n            return new PointF(this.left, this.top);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rectangle.prototype, \"size\", {\n        /**\n         * Gets a value of size\n         */\n        get: function () {\n            return new SizeF(this.width, this.height);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Rectangle.prototype.toString = function () {\n        return this.topLeft + 'x' + this.size;\n    };\n    return Rectangle;\n}());\nexport { Rectangle };\n", "/**\n * `PdfBrush` class provides objects used to fill the interiors of graphical shapes such as rectangles,\n * ellipses, pies, polygons, and paths.\n * @private\n */\nvar PdfBrush = /** @class */ (function () {\n    /**\n     * Creates instanceof `PdfBrush` class.\n     * @hidden\n     * @private\n     */\n    function PdfBrush() {\n        //\n    }\n    //IClonable implementation\n    PdfBrush.prototype.clone = function () {\n        return this;\n    };\n    return PdfBrush;\n}());\nexport { PdfBrush };\n", "var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfColor } from './../pdf-color';\nimport { PdfColorSpace } from './../enum';\nimport { PdfBrush } from './pdf-brush';\n/**\n * Represents a brush that fills any object with a solid color.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a pages to the document\n * let page1 : PdfPage = document.pages.add();\n * // set font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // set brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10));\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfSolidBrush = /** @class */ (function (_super) {\n    __extends(PdfSolidBrush, _super);\n    //Constructors\n    /**\n     * Initializes a new instance of the `PdfSolidBrush` class.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // add a pages to the document\n     * let page1 : PdfPage = document.pages.add();\n     * // set font\n     * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // set brush\n     * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n     * // draw the text\n     * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10));\n     * // save the document\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     * @param color color of the brush\n     */\n    function PdfSolidBrush(color) {\n        var _this = _super.call(this) || this;\n        _this.pdfColor = color;\n        return _this;\n    }\n    Object.defineProperty(PdfSolidBrush.prototype, \"color\", {\n        //Properties\n        /**\n         * Gets or sets the `color` of the brush.\n         * @private\n         */\n        get: function () {\n            return this.pdfColor;\n        },\n        set: function (value) {\n            this.pdfColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * `Monitors` the changes of the brush and modify PDF state respectively.\n     * @private\n     */\n    PdfSolidBrush.prototype.monitorChanges = function (brush, streamWriter, getResources, saveChanges, currentColorSpace) {\n        if (streamWriter == null) {\n            throw new Error('ArgumentNullException:streamWriter');\n        }\n        var diff = false;\n        if (brush == null) {\n            diff = true;\n            streamWriter.setColorAndSpace(this.pdfColor, currentColorSpace, false);\n            return diff;\n        }\n        else {\n            var sBrush = brush;\n            diff = true;\n            streamWriter.setColorAndSpace(this.pdfColor, currentColorSpace, false);\n            return diff;\n        }\n    };\n    /**\n     * `Resets` the changes, which were made by the brush.\n     * @private\n     */\n    PdfSolidBrush.prototype.resetChanges = function (streamWriter) {\n        streamWriter.setColorAndSpace(new PdfColor(0, 0, 0), PdfColorSpace.Rgb, false);\n    };\n    return PdfSolidBrush;\n}(PdfBrush));\nexport { PdfSolidBrush };\n", "/**\n * public Enum for `PdfFontStyle`.\n * @private\n */\nexport var PdfFontStyle;\n(function (PdfFontStyle) {\n    /**\n     * Specifies the type of `Regular`.\n     * @private\n     */\n    PdfFontStyle[PdfFontStyle[\"Regular\"] = 0] = \"Regular\";\n    /**\n     * Specifies the type of `Bold`.\n     * @private\n     */\n    PdfFontStyle[PdfFontStyle[\"Bold\"] = 1] = \"Bold\";\n    /**\n     * Specifies the type of `Italic`.\n     * @private\n     */\n    PdfFontStyle[PdfFontStyle[\"Italic\"] = 2] = \"Italic\";\n    /**\n     * Specifies the type of `Underline`.\n     * @private\n     */\n    PdfFontStyle[PdfFontStyle[\"Underline\"] = 4] = \"Underline\";\n    /**\n     * Specifies the type of `Strikeout`.\n     * @private\n     */\n    PdfFontStyle[PdfFontStyle[\"Strikeout\"] = 8] = \"Strikeout\";\n})(PdfFontStyle || (PdfFontStyle = {}));\n/**\n * Specifies the font family from the standard font.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * // create new standard font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * // save the document\n * document.save('output.pdf');\n * ```\n */\nexport var PdfFontFamily;\n(function (PdfFontFamily) {\n    /**\n     * Specifies the `Helvetica` font.\n     */\n    PdfFontFamily[PdfFontFamily[\"Helvetica\"] = 0] = \"Helvetica\";\n    /**\n     * Specifies the `Courier` font.\n     */\n    PdfFontFamily[PdfFontFamily[\"Courier\"] = 1] = \"Courier\";\n    /**\n     * Specifies the `TimesRoman` font.\n     */\n    PdfFontFamily[PdfFontFamily[\"TimesRoman\"] = 2] = \"TimesRoman\";\n    /**\n     * Specifies the `Symbol` font.\n     */\n    PdfFontFamily[PdfFontFamily[\"Symbol\"] = 3] = \"Symbol\";\n    /**\n     * Specifies the `ZapfDingbats` font.\n     */\n    PdfFontFamily[PdfFontFamily[\"ZapfDingbats\"] = 4] = \"ZapfDingbats\";\n})(PdfFontFamily || (PdfFontFamily = {}));\n/**\n * public Enum for `PdfFontType`.\n * @private\n */\nexport var PdfFontType;\n(function (PdfFontType) {\n    /**\n     * Specifies the type of `Standard`.\n     * @private\n     */\n    PdfFontType[PdfFontType[\"Standard\"] = 0] = \"Standard\";\n    /**\n     * Specifies the type of `TrueType`.\n     * @private\n     */\n    PdfFontType[PdfFontType[\"TrueType\"] = 1] = \"TrueType\";\n    /**\n     * Specifies the type of `TrueTypeEmbedded`.\n     * @private\n     */\n    PdfFontType[PdfFontType[\"TrueTypeEmbedded\"] = 2] = \"TrueTypeEmbedded\";\n})(PdfFontType || (PdfFontType = {}));\n/**\n * public Enum for `PdfWordWrapType`.\n * @private\n */\nexport var PdfWordWrapType;\n(function (PdfWordWrapType) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfWordWrapType[PdfWordWrapType[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `Word`.\n     * @private\n     */\n    PdfWordWrapType[PdfWordWrapType[\"Word\"] = 1] = \"Word\";\n    /**\n     * Specifies the type of `WordOnly`.\n     * @private\n     */\n    PdfWordWrapType[PdfWordWrapType[\"WordOnly\"] = 2] = \"WordOnly\";\n    /**\n     * Specifies the type of `Character`.\n     * @private\n     */\n    PdfWordWrapType[PdfWordWrapType[\"Character\"] = 3] = \"Character\";\n})(PdfWordWrapType || (PdfWordWrapType = {}));\n/**\n * public Enum for `PdfSubSuperScript`.\n * @private\n */\nexport var PdfSubSuperScript;\n(function (PdfSubSuperScript) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfSubSuperScript[PdfSubSuperScript[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `SuperScript`.\n     * @private\n     */\n    PdfSubSuperScript[PdfSubSuperScript[\"SuperScript\"] = 1] = \"SuperScript\";\n    /**\n     * Specifies the type of `SubScript`.\n     * @private\n     */\n    PdfSubSuperScript[PdfSubSuperScript[\"SubScript\"] = 2] = \"SubScript\";\n})(PdfSubSuperScript || (PdfSubSuperScript = {}));\n/**\n * public Enum for `FontEncoding`.\n * @private\n */\nexport var FontEncoding;\n(function (FontEncoding) {\n    /**\n     * Specifies the type of `Unknown`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"Unknown\"] = 0] = \"Unknown\";\n    /**\n     * Specifies the type of `StandardEncoding`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"StandardEncoding\"] = 1] = \"StandardEncoding\";\n    /**\n     * Specifies the type of `MacRomanEncoding`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"MacRomanEncoding\"] = 2] = \"MacRomanEncoding\";\n    /**\n     * Specifies the type of `MacExpertEncoding`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"MacExpertEncoding\"] = 3] = \"MacExpertEncoding\";\n    /**\n     * Specifies the type of `WinAnsiEncoding`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"WinAnsiEncoding\"] = 4] = \"WinAnsiEncoding\";\n    /**\n     * Specifies the type of `PdfDocEncoding`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"PdfDocEncoding\"] = 5] = \"PdfDocEncoding\";\n    /**\n     * Specifies the type of `IdentityH`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"IdentityH\"] = 6] = \"IdentityH\";\n})(FontEncoding || (FontEncoding = {}));\n/**\n * public Enum for `TtfCmapFormat`.\n * @private\n */\nexport var TtfCmapFormat;\n(function (TtfCmapFormat) {\n    /**\n     * This is the Apple standard character to glyph index mapping table.\n     * @private\n     */\n    TtfCmapFormat[TtfCmapFormat[\"Apple\"] = 0] = \"Apple\";\n    /**\n     * This is the Microsoft standard character to glyph index mapping table.\n     * @private\n     */\n    TtfCmapFormat[TtfCmapFormat[\"Microsoft\"] = 4] = \"Microsoft\";\n    /**\n     * Format 6: Trimmed table mapping.\n     * @private\n     */\n    TtfCmapFormat[TtfCmapFormat[\"Trimmed\"] = 6] = \"Trimmed\";\n})(TtfCmapFormat || (TtfCmapFormat = {}));\n/**\n * Enumerator that implements CMAP encodings.\n * @private\n */\nexport var TtfCmapEncoding;\n(function (TtfCmapEncoding) {\n    /**\n     * Unknown encoding.\n     * @private\n     */\n    TtfCmapEncoding[TtfCmapEncoding[\"Unknown\"] = 0] = \"Unknown\";\n    /**\n     * When building a symbol font for Windows.\n     * @private\n     */\n    TtfCmapEncoding[TtfCmapEncoding[\"Symbol\"] = 1] = \"Symbol\";\n    /**\n     * When building a Unicode font for Windows.\n     * @private\n     */\n    TtfCmapEncoding[TtfCmapEncoding[\"Unicode\"] = 2] = \"Unicode\";\n    /**\n     * For font that will be used on a Macintosh.\n     * @private\n     */\n    TtfCmapEncoding[TtfCmapEncoding[\"Macintosh\"] = 3] = \"Macintosh\";\n})(TtfCmapEncoding || (TtfCmapEncoding = {}));\n/**\n * Ttf platform ID.\n * @private\n */\nexport var TtfPlatformID;\n(function (TtfPlatformID) {\n    /**\n     * Apple platform.\n     * @private\n     */\n    TtfPlatformID[TtfPlatformID[\"AppleUnicode\"] = 0] = \"AppleUnicode\";\n    /**\n     * Macintosh platform.\n     * @private\n     */\n    TtfPlatformID[TtfPlatformID[\"Macintosh\"] = 1] = \"Macintosh\";\n    /**\n     * Iso platform.\n     * @private\n     */\n    TtfPlatformID[TtfPlatformID[\"Iso\"] = 2] = \"Iso\";\n    /**\n     * Microsoft platform.\n     * @private\n     */\n    TtfPlatformID[TtfPlatformID[\"Microsoft\"] = 3] = \"Microsoft\";\n})(TtfPlatformID || (TtfPlatformID = {}));\n/**\n * Microsoft encoding ID.\n * @private\n */\nexport var TtfMicrosoftEncodingID;\n(function (TtfMicrosoftEncodingID) {\n    /**\n     * Undefined encoding.\n     * @private\n     */\n    TtfMicrosoftEncodingID[TtfMicrosoftEncodingID[\"Undefined\"] = 0] = \"Undefined\";\n    /**\n     * Unicode encoding.\n     * @private\n     */\n    TtfMicrosoftEncodingID[TtfMicrosoftEncodingID[\"Unicode\"] = 1] = \"Unicode\";\n})(TtfMicrosoftEncodingID || (TtfMicrosoftEncodingID = {}));\n/**\n * Macintosh encoding ID.\n * @private\n */\nexport var TtfMacintoshEncodingID;\n(function (TtfMacintoshEncodingID) {\n    /**\n     * Roman encoding.\n     * @private\n     */\n    TtfMacintoshEncodingID[TtfMacintoshEncodingID[\"Roman\"] = 0] = \"Roman\";\n    /**\n     * Japanese encoding.\n     * @private\n     */\n    TtfMacintoshEncodingID[TtfMacintoshEncodingID[\"Japanese\"] = 1] = \"Japanese\";\n    /**\n     * Chinese encoding.\n     * @private\n     */\n    TtfMacintoshEncodingID[TtfMacintoshEncodingID[\"Chinese\"] = 2] = \"Chinese\";\n})(TtfMacintoshEncodingID || (TtfMacintoshEncodingID = {}));\n/**\n * Enumerator that implements font descriptor flags.\n * @private\n */\nexport var FontDescriptorFlags;\n(function (FontDescriptorFlags) {\n    /**\n     * All glyphs have the same width (as opposed to proportional or variable-pitch fonts, which have different widths).\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"FixedPitch\"] = 1] = \"FixedPitch\";\n    /**\n     * Glyphs have serifs, which are short strokes drawn at an angle on the top and\n     * bottom of glyph stems (as opposed to sans serif fonts, which do not).\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"Serif\"] = 2] = \"Serif\";\n    /**\n     * Font contains glyphs outside the Adobe standard Latin character set. The\n     * flag and the nonsymbolic flag cannot both be set or both be clear.\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"Symbolic\"] = 4] = \"Symbolic\";\n    /**\n     * Glyphs resemble cursive handwriting.\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"Script\"] = 8] = \"Script\";\n    /**\n     * Font uses the Adobe standard Latin character set or a subset of it.\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"Nonsymbolic\"] = 32] = \"Nonsymbolic\";\n    /**\n     * Glyphs have dominant vertical strokes that are slanted.\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"Italic\"] = 64] = \"Italic\";\n    /**\n     * Bold font.\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"ForceBold\"] = 262144] = \"ForceBold\";\n})(FontDescriptorFlags || (FontDescriptorFlags = {}));\n/**\n * true type font composite glyph flags.\n * @private\n */\nexport var TtfCompositeGlyphFlags;\n(function (TtfCompositeGlyphFlags) {\n    /**\n     * The Arg1And2AreWords.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"Arg1And2AreWords\"] = 1] = \"Arg1And2AreWords\";\n    /**\n     * The ArgsAreXyValues.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"ArgsAreXyValues\"] = 2] = \"ArgsAreXyValues\";\n    /**\n     * The RoundXyToGrid.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"RoundXyToGrid\"] = 4] = \"RoundXyToGrid\";\n    /**\n     * The WeHaveScale.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"WeHaveScale\"] = 8] = \"WeHaveScale\";\n    /**\n     * The Reserved.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"Reserved\"] = 16] = \"Reserved\";\n    /**\n     * The MoreComponents.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"MoreComponents\"] = 32] = \"MoreComponents\";\n    /**\n     * The WeHaveAnXyScale.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"WeHaveAnXyScale\"] = 64] = \"WeHaveAnXyScale\";\n    /**\n     * The WeHaveTwoByTwo\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"WeHaveTwoByTwo\"] = 128] = \"WeHaveTwoByTwo\";\n    /**\n     * The WeHaveInstructions.\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"WeHaveInstructions\"] = 256] = \"WeHaveInstructions\";\n    /**\n     * The UseMyMetrics.\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"UseMyMetrics\"] = 512] = \"UseMyMetrics\";\n})(TtfCompositeGlyphFlags || (TtfCompositeGlyphFlags = {}));\n", "/**\n * PdfStringFormat.ts class for EJ2-PDF\n */\nimport { PdfVerticalAlignment } from './../../graphics/enum';\nimport { PdfSubSuperScript, PdfWordWrapType } from './../../graphics/fonts/enum';\n/**\n * `PdfStringFormat` class represents the text layout information on PDF.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a pages to the document\n * let page1 : PdfPage = document.pages.add();\n * // set font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // set brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * //\n * // set the format for string\n * let stringFormat : PdfStringFormat = new PdfStringFormat();\n * // set the text alignment\n * stringFormat.alignment = PdfTextAlignment.Center;\n * // set the vertical alignment\n * stringFormat.lineAlignment = PdfVerticalAlignment.Middle;\n * //\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10), stringFormat);\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfStringFormat = /** @class */ (function () {\n    function PdfStringFormat(arg1, arg2) {\n        /**\n         * The `scaling factor` of the text being drawn.\n         * @private\n         */\n        this.scalingFactor = 100.0;\n        /**\n         * Indicates text `wrapping` type.\n         * @private\n         */\n        this.wordWrapType = PdfWordWrapType.Word;\n        this.internalLineLimit = true;\n        this.wordWrapType = PdfWordWrapType.Word;\n        if ((typeof arg1 !== 'undefined') && (typeof arg1 !== 'string')) {\n            this.textAlignment = arg1;\n        }\n        if (typeof arg2 !== 'undefined') {\n            this.verticalAlignment = arg2;\n        }\n    }\n    Object.defineProperty(PdfStringFormat.prototype, \"alignment\", {\n        //Properties\n        /**\n         * Gets or sets the `horizontal` text alignment\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * //\n         * // set the format for string\n         * let stringFormat : PdfStringFormat = new PdfStringFormat();\n         * // set the text alignment\n         * stringFormat.alignment = PdfTextAlignment.Center;\n         * //\n         * // draw the text\n         * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10), stringFormat);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.textAlignment;\n        },\n        set: function (value) {\n            this.textAlignment = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"textDirection\", {\n        get: function () {\n            return this.direction;\n        },\n        set: function (value) {\n            this.direction = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"lineAlignment\", {\n        /**\n         * Gets or sets the `vertical` text alignment.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * //\n         * // set the format for string\n         * let stringFormat : PdfStringFormat = new PdfStringFormat();\n         * // set the vertical alignment\n         * stringFormat.lineAlignment = PdfVerticalAlignment.Middle;\n         * //\n         * // draw the text\n         * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10), stringFormat);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this.verticalAlignment === 'undefined' || this.verticalAlignment == null) {\n                return PdfVerticalAlignment.Top;\n            }\n            else {\n                return this.verticalAlignment;\n            }\n        },\n        set: function (value) {\n            this.verticalAlignment = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"rightToLeft\", {\n        /**\n         * Gets or sets the value that indicates text `direction` mode.\n         * @private\n         */\n        get: function () {\n            if (typeof this.isRightToLeft === 'undefined' || this.isRightToLeft == null) {\n                return false;\n            }\n            else {\n                return this.isRightToLeft;\n            }\n        },\n        set: function (value) {\n            this.isRightToLeft = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"characterSpacing\", {\n        /**\n         * Gets or sets value that indicates a `size` among the characters in the text.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * //\n         * // set the format for string\n         * let stringFormat : PdfStringFormat = new PdfStringFormat();\n         * // set character spacing\n         * stringFormat.characterSpacing = 10;\n         * //\n         * // draw the text\n         * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10), stringFormat);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this.internalCharacterSpacing === 'undefined' || this.internalCharacterSpacing == null) {\n                return 0;\n            }\n            else {\n                return this.internalCharacterSpacing;\n            }\n        },\n        set: function (value) {\n            this.internalCharacterSpacing = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"wordSpacing\", {\n        /**\n         * Gets or sets value that indicates a `size` among the words in the text.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * //\n         * // set the format for string\n         * let stringFormat : PdfStringFormat = new PdfStringFormat();\n         * // set word spacing\n         * stringFormat.wordSpacing = 10;\n         * //\n         * // draw the text\n         * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10), stringFormat);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this.internalWordSpacing === 'undefined' || this.internalWordSpacing == null) {\n                return 0;\n            }\n            else {\n                return this.internalWordSpacing;\n            }\n        },\n        set: function (value) {\n            this.internalWordSpacing = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"lineSpacing\", {\n        /**\n         * Gets or sets value that indicates the `vertical distance` between the baselines of adjacent lines of text.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * // set string\n         * let text : string = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor\n         * incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitati';\n         * // set rectangle bounds\n         * let rectangle : RectangleF = new RectangleF({x : 0, y : 0}, {width : 300, height : 100})\n         * //\n         * // set the format for string\n         * let stringFormat : PdfStringFormat = new PdfStringFormat();\n         * // set line spacing\n         * stringFormat.lineSpacing = 10;\n         * //\n         * // draw the text\n         * page1.graphics.drawString(text, font, blackBrush, rectangle, stringFormat);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this.leading === 'undefined' || this.leading == null) {\n                return 0;\n            }\n            else {\n                return this.leading;\n            }\n        },\n        set: function (value) {\n            this.leading = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"clipPath\", {\n        /**\n         * Gets or sets a value indicating whether the text is `clipped` or not.\n         * @private\n         */\n        get: function () {\n            if (typeof this.clip === 'undefined' || this.clip == null) {\n                return false;\n            }\n            else {\n                return this.clip;\n            }\n        },\n        set: function (value) {\n            this.clip = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"subSuperScript\", {\n        /**\n         * Gets or sets value indicating whether the text is in `subscript or superscript` mode.\n         * @private\n         */\n        get: function () {\n            if (typeof this.pdfSubSuperScript === 'undefined' || this.pdfSubSuperScript == null) {\n                return PdfSubSuperScript.None;\n            }\n            else {\n                return this.pdfSubSuperScript;\n            }\n        },\n        set: function (value) {\n            this.pdfSubSuperScript = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"paragraphIndent\", {\n        /**\n         * Gets or sets the `indent` of the first line in the paragraph.\n         * @private\n         */\n        get: function () {\n            if (typeof this.internalParagraphIndent === 'undefined' || this.internalParagraphIndent == null) {\n                return 0;\n            }\n            else {\n                return this.internalParagraphIndent;\n            }\n        },\n        set: function (value) {\n            this.internalParagraphIndent = value;\n            this.firstLineIndent = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"lineLimit\", {\n        /**\n         * Gets or sets a value indicating whether [`line limit`].\n         * @private\n         */\n        get: function () {\n            return this.internalLineLimit;\n        },\n        set: function (value) {\n            this.internalLineLimit = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"measureTrailingSpaces\", {\n        /**\n         * Gets or sets a value indicating whether [`measure trailing spaces`].\n         * @private\n         */\n        get: function () {\n            if (typeof this.trailingSpaces === 'undefined' || this.trailingSpaces == null) {\n                return false;\n            }\n            else {\n                return this.trailingSpaces;\n            }\n        },\n        set: function (value) {\n            this.trailingSpaces = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"noClip\", {\n        /**\n         * Gets or sets a value indicating whether [`no clip`].\n         * @private\n         */\n        get: function () {\n            if (typeof this.isNoClip === 'undefined' || this.isNoClip == null) {\n                return false;\n            }\n            else {\n                return this.isNoClip;\n            }\n        },\n        set: function (value) {\n            this.isNoClip = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"wordWrap\", {\n        /**\n         * Gets or sets value indicating type of the text `wrapping`.\n         * @private\n         */\n        get: function () {\n            // if (typeof this.wrapType === 'undefined' || this.wrapType == null) {\n            //     return PdfWordWrapType.Word;\n            // } else {\n            return this.wordWrapType;\n            // }\n        },\n        set: function (value) {\n            this.wordWrapType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"horizontalScalingFactor\", {\n        /**\n         * Gets or sets the `scaling factor`.\n         * @private\n         */\n        get: function () {\n            // if (typeof this.scalingFactor === 'undefined' || this.scalingFactor == null) {\n            //     return 100;\n            // } else {\n            return this.scalingFactor;\n            // }\n        },\n        set: function (value) {\n            if (value <= 0) {\n                throw new Error('ArgumentOutOfRangeException:The scaling factor cant be less of equal to zero, ScalingFactor');\n            }\n            this.scalingFactor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"firstLineIndent\", {\n        /**\n         * Gets or sets the `indent` of the first line in the text.\n         * @private\n         */\n        get: function () {\n            if (typeof this.initialLineIndent === 'undefined' || this.initialLineIndent == null) {\n                return 0;\n            }\n            else {\n                return this.initialLineIndent;\n            }\n        },\n        set: function (value) {\n            this.initialLineIndent = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Clones` the object.\n     * @private\n     */\n    //IClonable implementation\n    PdfStringFormat.prototype.clone = function () {\n        var format = this;\n        return format;\n    };\n    return PdfStringFormat;\n}());\nexport { PdfStringFormat };\n", "/**\n * public Enum for `PdfPageOrientation`.\n * @private\n */\nexport var PdfPageOrientation;\n(function (PdfPageOrientation) {\n    /**\n     * Specifies the type of `Portrait`.\n     * @private\n     */\n    PdfPageOrientation[PdfPageOrientation[\"Portrait\"] = 0] = \"Portrait\";\n    /**\n     * Specifies the type of `Landscape`.\n     * @private\n     */\n    PdfPageOrientation[PdfPageOrientation[\"Landscape\"] = 1] = \"Landscape\";\n})(PdfPageOrientation || (PdfPageOrientation = {}));\n/**\n * public Enum for `PdfPageRotateAngle`.\n * @private\n */\nexport var PdfPageRotateAngle;\n(function (PdfPageRotateAngle) {\n    /**\n     * Specifies the type of `RotateAngle0`.\n     * @private\n     */\n    PdfPageRotateAngle[PdfPageRotateAngle[\"RotateAngle0\"] = 0] = \"RotateAngle0\";\n    /**\n     * Specifies the type of `RotateAngle90`.\n     * @private\n     */\n    PdfPageRotateAngle[PdfPageRotateAngle[\"RotateAngle90\"] = 1] = \"RotateAngle90\";\n    /**\n     * Specifies the type of `RotateAngle180`.\n     * @private\n     */\n    PdfPageRotateAngle[PdfPageRotateAngle[\"RotateAngle180\"] = 2] = \"RotateAngle180\";\n    /**\n     * Specifies the type of `RotateAngle270`.\n     * @private\n     */\n    PdfPageRotateAngle[PdfPageRotateAngle[\"RotateAngle270\"] = 3] = \"RotateAngle270\";\n})(PdfPageRotateAngle || (PdfPageRotateAngle = {}));\n/**\n * public Enum for `PdfNumberStyle`.\n * @private\n */\nexport var PdfNumberStyle;\n(function (PdfNumberStyle) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `Numeric`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"Numeric\"] = 1] = \"Numeric\";\n    /**\n     * Specifies the type of `LowerLatin`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"LowerLatin\"] = 2] = \"LowerLatin\";\n    /**\n     * Specifies the type of `LowerRoman`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"LowerRoman\"] = 3] = \"LowerRoman\";\n    /**\n     * Specifies the type of `UpperLatin`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"UpperLatin\"] = 4] = \"UpperLatin\";\n    /**\n     * Specifies the type of `UpperRoman`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"UpperRoman\"] = 5] = \"UpperRoman\";\n})(PdfNumberStyle || (PdfNumberStyle = {}));\n/**\n * public Enum for `PdfDockStyle`.\n * @private\n */\nexport var PdfDockStyle;\n(function (PdfDockStyle) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `Bottom`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"Bottom\"] = 1] = \"Bottom\";\n    /**\n     * Specifies the type of `Top`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"Top\"] = 2] = \"Top\";\n    /**\n     * Specifies the type of `Left`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"Left\"] = 3] = \"Left\";\n    /**\n     * Specifies the type of `Right`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"Right\"] = 4] = \"Right\";\n    /**\n     * Specifies the type of `Fill`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"Fill\"] = 5] = \"Fill\";\n})(PdfDockStyle || (PdfDockStyle = {}));\n/**\n * public Enum for `PdfAlignmentStyle`.\n * @private\n */\nexport var PdfAlignmentStyle;\n(function (PdfAlignmentStyle) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `TopLeft`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"TopLeft\"] = 1] = \"TopLeft\";\n    /**\n     * Specifies the type of `TopCenter`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"TopCenter\"] = 2] = \"TopCenter\";\n    /**\n     * Specifies the type of `TopRight`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"TopRight\"] = 3] = \"TopRight\";\n    /**\n     * Specifies the type of `MiddleLeft`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"MiddleLeft\"] = 4] = \"MiddleLeft\";\n    /**\n     * Specifies the type of `MiddleCenter`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"MiddleCenter\"] = 5] = \"MiddleCenter\";\n    /**\n     * Specifies the type of `MiddleRight`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"MiddleRight\"] = 6] = \"MiddleRight\";\n    /**\n     * Specifies the type of `BottomLeft`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"BottomLeft\"] = 7] = \"BottomLeft\";\n    /**\n     * Specifies the type of `BottomCenter`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"BottomCenter\"] = 8] = \"BottomCenter\";\n    /**\n     * Specifies the type of `BottomRight`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"BottomRight\"] = 9] = \"BottomRight\";\n})(PdfAlignmentStyle || (PdfAlignmentStyle = {}));\n/**\n * public Enum for `TemplateType`.\n * @private\n */\nexport var TemplateType;\n(function (TemplateType) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    TemplateType[TemplateType[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `Top`.\n     * @private\n     */\n    TemplateType[TemplateType[\"Top\"] = 1] = \"Top\";\n    /**\n     * Specifies the type of `Bottom`.\n     * @private\n     */\n    TemplateType[TemplateType[\"Bottom\"] = 2] = \"Bottom\";\n    /**\n     * Specifies the type of `Left`.\n     * @private\n     */\n    TemplateType[TemplateType[\"Left\"] = 3] = \"Left\";\n    /**\n     * Specifies the type of `Right`.\n     * @private\n     */\n    TemplateType[TemplateType[\"Right\"] = 4] = \"Right\";\n})(TemplateType || (TemplateType = {}));\n", "/**\n * PdfPageSize.ts class for EJ2-PDF\n */\nimport { SizeF } from './../drawing/pdf-drawing';\n/**\n * Represents information about various predefined `page sizes`.\n */\nvar PdfPageSize = /** @class */ (function () {\n    //constructor\n    /**\n     * Initialize an instance for `PdfPageSize` class.\n     * @private\n     */\n    function PdfPageSize() {\n        // \n    }\n    /**\n     * Specifies the size of `letter`.\n     * @private\n     */\n    PdfPageSize.letter = new SizeF(612, 792);\n    /**\n     * Specifies the size of `note`.\n     * @private\n     */\n    PdfPageSize.note = new SizeF(540, 720);\n    /**\n     * Specifies the size of `legal`.\n     * @private\n     */\n    PdfPageSize.legal = new SizeF(612, 1008);\n    /**\n     * Specifies the size of `a0`.\n     * @private\n     */\n    PdfPageSize.a0 = new SizeF(2380, 3368);\n    /**\n     * Specifies the size of `a1`.\n     * @private\n     */\n    PdfPageSize.a1 = new SizeF(1684, 2380);\n    /**\n     * Specifies the size of `a2`.\n     * @private\n     */\n    PdfPageSize.a2 = new SizeF(1190, 1684);\n    /**\n     * Specifies the size of `a3`.\n     * @private\n     */\n    PdfPageSize.a3 = new SizeF(842, 1190);\n    /**\n     * Specifies the size of `a4`.\n     * @private\n     */\n    PdfPageSize.a4 = new SizeF(595, 842);\n    /**\n     * Specifies the size of `a5`.\n     * @private\n     */\n    PdfPageSize.a5 = new SizeF(421, 595);\n    /**\n     * Specifies the size of `a6`.\n     * @private\n     */\n    PdfPageSize.a6 = new SizeF(297, 421);\n    /**\n     * Specifies the size of `a7`.\n     * @private\n     */\n    PdfPageSize.a7 = new SizeF(210, 297);\n    /**\n     * Specifies the size of `a8`.\n     * @private\n     */\n    PdfPageSize.a8 = new SizeF(148, 210);\n    /**\n     * Specifies the size of `a9`.\n     * @private\n     */\n    PdfPageSize.a9 = new SizeF(105, 148);\n    /**\n     * Specifies the size of `a10`.\n     * @private\n     */\n    PdfPageSize.a10 = new SizeF(74, 105);\n    /**\n     * Specifies the size of `b0`.\n     * @private\n     */\n    PdfPageSize.b0 = new SizeF(2836, 4008);\n    /**\n     * Specifies the size of `b1`.\n     * @private\n     */\n    PdfPageSize.b1 = new SizeF(2004, 2836);\n    /**\n     * Specifies the size of `b2`.\n     * @private\n     */\n    PdfPageSize.b2 = new SizeF(1418, 2004);\n    /**\n     * Specifies the size of `b3`.\n     * @private\n     */\n    PdfPageSize.b3 = new SizeF(1002, 1418);\n    /**\n     * Specifies the size of `b4`.\n     * @private\n     */\n    PdfPageSize.b4 = new SizeF(709, 1002);\n    /**\n     * Specifies the size of `b5`.\n     * @private\n     */\n    PdfPageSize.b5 = new SizeF(501, 709);\n    /**\n     * Specifies the size of `archE`.\n     * @private\n     */\n    PdfPageSize.archE = new SizeF(2592, 3456);\n    /**\n     * Specifies the size of `archD`.\n     * @private\n     */\n    PdfPageSize.archD = new SizeF(1728, 2592);\n    /**\n     * Specifies the size of `archC`.\n     * @private\n     */\n    PdfPageSize.archC = new SizeF(1296, 1728);\n    /**\n     * Specifies the size of `archB`.\n     * @private\n     */\n    PdfPageSize.archB = new SizeF(864, 1296);\n    /**\n     * Specifies the size of `archA`.\n     * @private\n     */\n    PdfPageSize.archA = new SizeF(648, 864);\n    /**\n     * Specifies the size of `flsa`.\n     * @private\n     */\n    PdfPageSize.flsa = new SizeF(612, 936);\n    /**\n     * Specifies the size of `halfLetter`.\n     * @private\n     */\n    PdfPageSize.halfLetter = new SizeF(396, 612);\n    /**\n     * Specifies the size of `letter11x17`.\n     * @private\n     */\n    PdfPageSize.letter11x17 = new SizeF(792, 1224);\n    /**\n     * Specifies the size of `ledger`.\n     * @private\n     */\n    PdfPageSize.ledger = new SizeF(1224, 792);\n    return PdfPageSize;\n}());\nexport { PdfPageSize };\n", "/**\n * PdfMargins.ts class for EJ2-PDF\n * A class representing PDF page margins.\n */\nvar PdfMargins = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfMargins` class.\n     * @private\n     */\n    function PdfMargins() {\n        /**\n         * Represents the `Default Page Margin` value.\n         * @default 0.0\n         * @private\n         */\n        this.pdfMargin = 40.0;\n        this.setMargins(this.pdfMargin);\n    }\n    Object.defineProperty(PdfMargins.prototype, \"left\", {\n        //Properties\n        /**\n         * Gets or sets the `left margin` size.\n         * @private\n         */\n        get: function () {\n            return this.leftMargin;\n        },\n        set: function (value) {\n            this.leftMargin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfMargins.prototype, \"top\", {\n        /**\n         * Gets or sets the `top margin` size.\n         * @private\n         */\n        get: function () {\n            return this.topMargin;\n        },\n        set: function (value) {\n            this.topMargin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfMargins.prototype, \"right\", {\n        /**\n         * Gets or sets the `right margin` size.\n         * @private\n         */\n        get: function () {\n            return this.rightMargin;\n        },\n        set: function (value) {\n            this.rightMargin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfMargins.prototype, \"bottom\", {\n        /**\n         * Gets or sets the `bottom margin` size.\n         * @private\n         */\n        get: function () {\n            return this.bottomMargin;\n        },\n        set: function (value) {\n            this.bottomMargin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfMargins.prototype, \"all\", {\n        /**\n         * Sets the `margins`.\n         * @private\n         */\n        set: function (value) {\n            this.setMargins(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfMargins.prototype.setMargins = function (margin1, margin2, margin3, margin4) {\n        if (typeof margin2 === 'undefined') {\n            this.leftMargin = this.topMargin = this.rightMargin = this.bottomMargin = margin1;\n        }\n        else {\n            if (typeof margin3 === 'undefined') {\n                this.leftMargin = this.rightMargin = margin1;\n                this.bottomMargin = this.topMargin = margin2;\n            }\n            else {\n                this.leftMargin = margin1;\n                this.topMargin = margin2;\n                this.rightMargin = margin3;\n                this.bottomMargin = margin4;\n            }\n        }\n    };\n    /**\n     * `Clones` the object.\n     * @private\n     */\n    PdfMargins.prototype.clone = function () {\n        return this;\n    };\n    return PdfMargins;\n}());\nexport { PdfMargins };\n", "/**\n * PdfPageSettings.ts class for EJ2-PDF\n */\nimport { SizeF, PointF } from './../drawing/pdf-drawing';\nimport { PdfPageSize } from './pdf-page-size';\nimport { PdfPageRotateAngle, PdfPageOrientation } from './enum';\nimport { PdfMargins } from './../graphics/pdf-margins';\n/**\n * The class provides various `setting` related with PDF pages.\n */\nvar PdfPageSettings = /** @class */ (function () {\n    function PdfPageSettings(margins) {\n        //Fields\n        /**\n         * The page `margins`.\n         * @private\n         */\n        this.pageMargins = new PdfMargins();\n        /**\n         * The page `size`.\n         * @default a4\n         * @private\n         */\n        this.pageSize = PdfPageSize.a4;\n        /**\n         * The page `rotation angle`.\n         * @default PdfPageRotateAngle.RotateAngle0\n         * @private\n         */\n        this.rotateAngle = PdfPageRotateAngle.RotateAngle0;\n        /**\n         * The page `orientation`.\n         * @default PdfPageOrientation.Portrait\n         * @private\n         */\n        this.pageOrientation = PdfPageOrientation.Portrait;\n        /**\n         * The page `origin`.\n         * @default 0,0\n         * @private\n         */\n        this.pageOrigin = new PointF(0, 0);\n        /**\n         * Checks the Whether the `rotation` is applied or not.\n         * @default false\n         * @private\n         */\n        this.isRotation = false;\n        if (typeof margins === 'number') {\n            this.pageMargins.setMargins(margins);\n        }\n    }\n    Object.defineProperty(PdfPageSettings.prototype, \"size\", {\n        //Properties\n        /**\n         * Gets or sets the `size` of the page.\n         * @private\n         */\n        get: function () {\n            return this.pageSize;\n        },\n        set: function (value) {\n            this.setSize(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"orientation\", {\n        /**\n         * Gets or sets the page `orientation`.\n         * @private\n         */\n        get: function () {\n            return this.pageOrientation;\n        },\n        set: function (orientation) {\n            if (this.pageOrientation !== orientation) {\n                this.pageOrientation = orientation;\n                this.updateSize(orientation);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"margins\", {\n        /**\n         * Gets or sets the `margins` of the page.\n         * @private\n         */\n        get: function () {\n            return this.pageMargins;\n        },\n        set: function (value) {\n            this.pageMargins = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"width\", {\n        /**\n         * Gets or sets the `width` of the page.\n         * @private\n         */\n        get: function () {\n            return this.pageSize.width;\n        },\n        set: function (value) {\n            this.pageSize.width = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"height\", {\n        /**\n         * Gets or sets the `height` of the page.\n         * @private\n         */\n        get: function () {\n            return this.pageSize.height;\n        },\n        set: function (value) {\n            this.pageSize.height = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"origin\", {\n        /**\n         * Gets or sets the `origin` of the page.\n         * @private\n         */\n        get: function () {\n            return this.pageOrigin;\n        },\n        set: function (value) {\n            this.pageOrigin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"rotate\", {\n        /**\n         * Gets or sets the number of degrees by which the page should be `rotated` clockwise when displayed or printed.\n         * @private\n         */\n        get: function () {\n            return this.rotateAngle;\n        },\n        set: function (value) {\n            this.rotateAngle = value;\n            this.isRotation = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Methods\n    /**\n     * `Update page size` depending on orientation.\n     * @private\n     */\n    PdfPageSettings.prototype.updateSize = function (orientation) {\n        var min = Math.min(this.pageSize.width, this.pageSize.height);\n        var max = Math.max(this.pageSize.width, this.pageSize.height);\n        switch (orientation) {\n            case PdfPageOrientation.Portrait:\n                this.pageSize = new SizeF(min, max);\n                break;\n            case PdfPageOrientation.Landscape:\n                this.pageSize = new SizeF(max, min);\n                break;\n        }\n    };\n    /**\n     * Creates a `clone` of the object.\n     * @private\n     */\n    PdfPageSettings.prototype.clone = function () {\n        var settings = this;\n        settings.pageMargins = this.pageMargins.clone();\n        // if (GetTransition() != null)\n        // {\n        //     settings.Transition = (PdfPageTransition)Transition.clone();\n        // }\n        return settings;\n    };\n    /**\n     * Returns `size`, shrinked by the margins.\n     * @private\n     */\n    PdfPageSettings.prototype.getActualSize = function () {\n        var width = this.width - (this.margins.left + this.margins.right);\n        var height = this.height - (this.margins.top + this.margins.bottom);\n        var size = new SizeF(width, height);\n        return size;\n    };\n    /**\n     * Sets `size` to the page aaccording to the orientation.\n     * @private\n     */\n    PdfPageSettings.prototype.setSize = function (size) {\n        var min = Math.min(size.width, size.height);\n        var max = Math.max(size.width, size.height);\n        if (this.orientation === PdfPageOrientation.Portrait) {\n            this.pageSize = new SizeF(min, max);\n        }\n        else {\n            this.pageSize = new SizeF(max, min);\n        }\n    };\n    return PdfPageSettings;\n}());\nexport { PdfPageSettings };\n", "/**\n * PdfPen.ts class for EJ2-PDF\n */\nimport { PdfColor } from './pdf-color';\nimport { PdfSolidBrush } from './brushes/pdf-solid-brush';\nimport { PdfDashStyle, PdfColorSpace } from './enum';\nimport { PdfBrush } from './brushes/pdf-brush';\n/**\n * `PdfPen` class defining settings for drawing operations, that determines the color,\n * width, and style of the drawing elements.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // create a new page\n * let page1 : PdfPage = document.pages.add();\n * // set pen\n * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n * // draw rectangle\n * page1.graphics.drawRectangle(pen, new RectangleF({x : 0, y : 0}, {width : 100, height : 50}));\n * // save the document.\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPen = /** @class */ (function () {\n    function PdfPen(arg1, arg2) {\n        //Fields\n        /**\n         * Specifies the `color of the pen`.\n         * @default new PdfColor()\n         * @private\n         */\n        this.pdfColor = new PdfColor(0, 0, 0);\n        /**\n         * Specifies the `dash offset of the pen`.\n         * @default 0\n         * @private\n         */\n        this.dashOffsetValue = 0;\n        /**\n         * Specifies the `dash pattern of the pen`.\n         * @default [0]\n         * @private\n         */\n        this.penDashPattern = [0];\n        /**\n         * Specifies the `dash style of the pen`.\n         * @default Solid\n         * @private\n         */\n        this.pdfDashStyle = PdfDashStyle.Solid;\n        /**\n         * Specifies the `line cap of the pen`.\n         * @default 0\n         * @private\n         */\n        this.pdfLineCap = 0;\n        /**\n         * Specifies the `line join of the pen`.\n         * @default 0\n         * @private\n         */\n        this.pdfLineJoin = 0;\n        /**\n         * Specifies the `width of the pen`.\n         * @default 1.0\n         * @private\n         */\n        this.penWidth = 1.0;\n        /**\n         * Specifies the `mitter limit of the pen`.\n         * @default 0.0\n         * @private\n         */\n        this.internalMiterLimit = 0.0;\n        /**\n         * Stores the `colorspace` value.\n         * @default Rgb\n         * @private\n         */\n        this.colorSpace = PdfColorSpace.Rgb;\n        if (arg1 instanceof PdfBrush) {\n            this.setBrush(arg1);\n        }\n        else if (arg1 instanceof PdfColor) {\n            this.color = arg1;\n        }\n        if (typeof arg2 === 'number') {\n            this.width = arg2;\n        }\n    }\n    Object.defineProperty(PdfPen.prototype, \"color\", {\n        //Properties\n        /**\n         * Gets or sets the `color of the pen`.\n         * @private\n         */\n        get: function () {\n            return this.pdfColor;\n        },\n        set: function (value) {\n            this.pdfColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"dashOffset\", {\n        /**\n         * Gets or sets the `dash offset of the pen`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.dashOffsetValue === 'undefined' || this.dashOffsetValue == null) {\n                return 0;\n            }\n            else {\n                return this.dashOffsetValue;\n            }\n        },\n        set: function (value) {\n            this.dashOffsetValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"dashPattern\", {\n        /**\n         * Gets or sets the `dash pattern of the pen`.\n         * @private\n         */\n        get: function () {\n            return this.penDashPattern;\n        },\n        set: function (value) {\n            this.penDashPattern = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"dashStyle\", {\n        /**\n         * Gets or sets the `dash style of the pen`.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // create a new page\n         * let page1 : PdfPage = document.pages.add();\n         * // set pen\n         * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n         * //\n         * // set pen style\n         * pen.dashStyle = PdfDashStyle.DashDot;\n         * // get pen style\n         * let style : PdfDashStyle = pen.dashStyle;\n         * //\n         * // draw rectangle\n         * page1.graphics.drawRectangle(pen, new RectangleF({x : 0, y : 0}, {width : 100, height : 50}));\n         * // save the document.\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.pdfDashStyle;\n        },\n        set: function (value) {\n            if (this.pdfDashStyle !== value) {\n                this.pdfDashStyle = value;\n                switch (this.pdfDashStyle) {\n                    case PdfDashStyle.Custom:\n                        break;\n                    case PdfDashStyle.Dash:\n                        this.penDashPattern = [3, 1];\n                        break;\n                    case PdfDashStyle.Dot:\n                        this.penDashPattern = [1, 1];\n                        break;\n                    case PdfDashStyle.DashDot:\n                        this.penDashPattern = [3, 1, 1, 1];\n                        break;\n                    case PdfDashStyle.DashDotDot:\n                        this.penDashPattern = [3, 1, 1, 1, 1, 1];\n                        break;\n                    case PdfDashStyle.Solid:\n                        break;\n                    default:\n                        this.pdfDashStyle = PdfDashStyle.Solid;\n                        this.penDashPattern = [0];\n                        break;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"lineCap\", {\n        /**\n         * Gets or sets the `line cap of the pen`.\n         * @private\n         */\n        get: function () {\n            return this.pdfLineCap;\n        },\n        set: function (value) {\n            this.pdfLineCap = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"lineJoin\", {\n        /**\n         * Gets or sets the `line join style of the pen`.\n         * @private\n         */\n        get: function () {\n            return this.pdfLineJoin;\n        },\n        set: function (value) {\n            this.pdfLineJoin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"miterLimit\", {\n        /**\n         * Gets or sets the `miter limit`.\n         * @private\n         */\n        get: function () {\n            return this.internalMiterLimit;\n        },\n        set: function (value) {\n            this.internalMiterLimit = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"width\", {\n        /**\n         * Gets or sets the `width of the pen`.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // create a new page\n         * let page1 : PdfPage = document.pages.add();\n         * // set pen\n         * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n         * //\n         * // set pen width\n         * pen.width = 2;\n         * //\n         * // draw rectangle\n         * page1.graphics.drawRectangle(pen, new RectangleF({x : 0, y : 0}, {width : 100, height : 50}));\n         * // save the document.\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.penWidth;\n        },\n        set: function (value) {\n            this.penWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Helper\n    /**\n     * `Clones` this instance of PdfPen class.\n     * @private\n     */\n    PdfPen.prototype.clone = function () {\n        var pen = this;\n        return pen;\n    };\n    /**\n     * `Sets the brush`.\n     * @private\n     */\n    PdfPen.prototype.setBrush = function (brush) {\n        var sBrush = brush;\n        if ((sBrush != null && sBrush instanceof PdfSolidBrush)) {\n            this.color = sBrush.color;\n            this.pdfBrush = sBrush;\n        }\n        this.color = sBrush.color;\n        this.pdfBrush = sBrush;\n    };\n    /**\n     * `Monitors the changes`.\n     * @private\n     */\n    PdfPen.prototype.monitorChanges = function (currentPen, streamWriter, getResources, saveState, currentColorSpace, matrix) {\n        var diff = false;\n        saveState = true;\n        if (currentPen == null) {\n            diff = true;\n        }\n        diff = this.dashControl(currentPen, saveState, streamWriter);\n        streamWriter.setLineWidth(this.width);\n        streamWriter.setLineJoin(this.lineJoin);\n        streamWriter.setLineCap(this.lineCap);\n        var miterLimit = this.miterLimit;\n        if (miterLimit > 0) {\n            streamWriter.setMiterLimit(miterLimit);\n            diff = true;\n        }\n        var brush = this.pdfBrush;\n        streamWriter.setColorAndSpace(this.color, currentColorSpace, true);\n        diff = true;\n        return diff;\n    };\n    /**\n     * `Controls the dash style` and behaviour of each line.\n     * @private\n     */\n    PdfPen.prototype.dashControl = function (pen, saveState, streamWriter) {\n        saveState = true;\n        var lineWidth = this.width;\n        var pattern = this.getPattern();\n        streamWriter.setLineDashPattern(pattern, this.dashOffset * lineWidth);\n        return saveState;\n    };\n    /**\n     * `Gets the pattern` of PdfPen.\n     * @private\n     */\n    PdfPen.prototype.getPattern = function () {\n        var pattern = this.dashPattern;\n        for (var i = 0; i < pattern.length; ++i) {\n            pattern[i] *= this.width;\n        }\n        return pattern;\n    };\n    return PdfPen;\n}());\nexport { PdfPen };\n", "/**\n * ByteArray class\n * Used to keep information about image stream as byte array.\n * @private\n */\nvar ByteArray = /** @class */ (function () {\n    /**\n     * Initialize the new instance for `byte-array` class\n     * @hidden\n     * @private\n     */\n    function ByteArray(length) {\n        /**\n         * Current stream `position`.\n         * @default 0\n         * @private\n         */\n        this.mPosition = 0;\n        this.buffer = new Uint8Array(length);\n        this.dataView = new DataView(this.buffer.buffer);\n    }\n    Object.defineProperty(ByteArray.prototype, \"position\", {\n        /**\n         * Gets and Sets a current `position` of byte array.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mPosition;\n        },\n        set: function (value) {\n            this.mPosition = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Read` from current stream position.\n     * @default 0\n     * @hidden\n     * @private\n     */\n    ByteArray.prototype.read = function (buffer, offset, count) {\n        for (var index = offset; index < count; index++) {\n            var position = this.position;\n            buffer.buffer[index] = this.readByte(position);\n            this.position++;\n        }\n    };\n    /**\n     * @hidden\n     */\n    ByteArray.prototype.getBuffer = function (index) {\n        return this.buffer[index];\n    };\n    /**\n     * @hidden\n     */\n    ByteArray.prototype.writeFromBase64String = function (base64) {\n        var arr = this.encodedString(base64);\n        this.buffer = arr;\n    };\n    /**\n     * @hidden\n     */\n    ByteArray.prototype.encodedString = function (input) {\n        var keyStr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n        var chr1;\n        var chr2;\n        var chr3;\n        var enc1;\n        var enc2;\n        var enc3;\n        var enc4;\n        var i = 0;\n        var resultIndex = 0;\n        var dataUrlPrefix = 'data:';\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '');\n        var totalLength = input.length * 3 / 4;\n        if (input.charAt(input.length - 1) === keyStr.charAt(64)) {\n            totalLength--;\n        }\n        var output = new Uint8Array(totalLength | 0);\n        while (i < input.length) {\n            enc1 = keyStr.indexOf(input.charAt(i++));\n            enc2 = keyStr.indexOf(input.charAt(i++));\n            enc3 = keyStr.indexOf(input.charAt(i++));\n            enc4 = keyStr.indexOf(input.charAt(i++));\n            chr1 = (enc1 << 2) | (enc2 >> 4);\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n            chr3 = ((enc3 & 3) << 6) | enc4;\n            output[resultIndex++] = chr1;\n            output[resultIndex++] = chr2;\n            output[resultIndex++] = chr3;\n        }\n        return output;\n    };\n    /**\n     * @hidden\n     */\n    ByteArray.prototype.readByte = function (offset) {\n        return (this.buffer[offset]);\n    };\n    Object.defineProperty(ByteArray.prototype, \"internalBuffer\", {\n        /**\n         * @hidden\n         */\n        get: function () {\n            return this.buffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ByteArray.prototype, \"count\", {\n        /**\n         * @hidden\n         */\n        get: function () {\n            return this.buffer.byteLength;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * 'readNextTwoBytes' stream\n     * @hidden\n     * @private\n     */\n    ByteArray.prototype.readNextTwoBytes = function (stream) {\n        var data = stream.readByte(this.position);\n        this.position++;\n        data <<= 8;\n        data |= stream.readByte(this.position);\n        this.position++;\n        return data;\n    };\n    return ByteArray;\n}());\nexport { ByteArray };\n", "/**\n * `PdfName` class is used to perform name (element names) related primitive operations.\n * @private\n */\nvar PdfName = /** @class */ (function () {\n    function PdfName(value) {\n        /**\n         * `Start symbol` of the name object.\n         * @default /\n         * @private\n         */\n        this.stringStartMark = '/';\n        /**\n         * `Value` of the element.\n         * @private\n         */\n        this.internalValue = '';\n        /**\n         * Indicates if the object is currently in `saving state or not`.\n         * @default false\n         * @private\n         */\n        this.isSaving6 = false;\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position6 = -1;\n        this.internalValue = this.normalizeValue(value);\n    }\n    Object.defineProperty(PdfName.prototype, \"status\", {\n        //property\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status6;\n        },\n        set: function (value) {\n            this.status6 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfName.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving6;\n        },\n        set: function (value) {\n            this.isSaving6 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfName.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index6;\n        },\n        set: function (value) {\n            this.index6 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfName.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position6;\n        },\n        set: function (value) {\n            this.position6 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfName.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            return null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfName.prototype, \"value\", {\n        /**\n         * Gets or sets the `value` of the object.\n         * @private\n         */\n        get: function () {\n            return this.internalValue;\n        },\n        set: function (value) {\n            // if (value !== this.value) {\n            var val = value;\n            if (value !== null && value.length > 0) {\n                // val = (value.substring(0, 1) === this.stringStartMark) ? value.substring(1) : value;\n                val = value;\n                this.internalValue = this.normalizeValue(val);\n            }\n            else {\n                this.internalValue = val;\n            }\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //public methods\n    /**\n     * `Saves` the name using the specified writer.\n     * @private\n     */\n    PdfName.prototype.save = function (writer) {\n        // if (writer === null) {\n        //     throw new Error('ArgumentNullException : writer');\n        // }\n        writer.write(this.toString());\n    };\n    /**\n     * Gets `string` representation of the primitive.\n     * @private\n     */\n    PdfName.prototype.toString = function () {\n        return (this.stringStartMark + this.escapeString(this.value));\n    };\n    /**\n     * Creates a `copy of PdfName`.\n     * @private\n     */\n    PdfName.prototype.clone = function (crossTable) {\n        var newName = new PdfName();\n        newName.value = this.internalValue;\n        return newName;\n    };\n    /**\n     * Replace some characters with its `escape sequences`.\n     * @private\n     */\n    PdfName.prototype.escapeString = function (stringValue) {\n        // if (str === null) {\n        //     throw new Error('ArgumentNullException : str');\n        // }\n        // if (str === '') {\n        //     return str;\n        // }\n        var result = '';\n        var len = 0;\n        for (var i = 0, len_1 = stringValue.length; i < len_1; i++) {\n            var ch = stringValue[i];\n            var index = PdfName.delimiters.indexOf(ch);\n            // switch (ch) {\n            //     case '\\r' :\n            //         result = result + '\\\\r';\n            //         break;\n            //     case '\\n' :\n            //         result = result + '\\n';\n            //         break;\n            //     case '(' :\n            //     case ')' :\n            //     case '\\\\' :\n            //         //result.Append( '\\\\' ).Append( ch );\n            //         result = result + ch;\n            //         break;\n            //     default :\n            //         result = result + ch;\n            //         break;\n            // }\n            result = result + ch;\n        }\n        return result;\n    };\n    //methiods\n    /**\n     * Replace a symbol with its code with the precedence of the `sharp sign`.\n     * @private\n     */\n    PdfName.prototype.normalizeValue = function (value, c) {\n        // if (typeof c === undefined) {\n        //     let str : string = value;\n        //     for (let i : number = 0; i < PdfName.replacements.length; i++) {\n        //         str = this.normalizeValue(str, c);\n        //     }\n        //     return str;\n        // } else {\n        var strFormat = '#{0:X}';\n        //return value.replace(c.toString(),String.format(strFormat,c));\n        return value;\n        // }\n    };\n    /**\n     * PDF `special characters`.\n     * @private\n     */\n    PdfName.delimiters = '()<>[]{}/%}';\n    /**\n     * The symbols that are not allowed in PDF names and `should be replaced`.\n     * @private\n     */\n    PdfName.replacements = [' ', '\\t', '\\n', '\\r'];\n    return PdfName;\n}());\nexport { PdfName };\n", "/**\n * dictionaryProperties.ts class for EJ2-PDF\n * PDF dictionary properties.\n * @private\n */\nvar DictionaryProperties = /** @class */ (function () {\n    /**\n     * Initialize an instance for `PdfDictionaryProperties` class.\n     * @private\n     */\n    function DictionaryProperties() {\n        /**\n         * Specifies the value of `Pages`.\n         * @private\n         */\n        this.pages = 'Pages';\n        /**\n         * Specifies the value of `Kids`.\n         * @private\n         */\n        this.kids = 'Kids';\n        /**\n         * Specifies the value of `Count`.\n         * @private\n         */\n        this.count = 'Count';\n        /**\n         * Specifies the value of `Resources`.\n         * @private\n         */\n        this.resources = 'Resources';\n        /**\n         * Specifies the value of `Type`.\n         * @private\n         */\n        this.type = 'Type';\n        /**\n         * Specifies the value of `Size`.\n         * @private\n         */\n        this.size = 'Size';\n        /**\n         * Specifies the value of `MediaBox`.\n         * @private\n         */\n        this.mediaBox = 'MediaBox';\n        /**\n         * Specifies the value of `Parent`.\n         * @private\n         */\n        this.parent = 'Parent';\n        /**\n         * Specifies the value of `Root`.\n         * @private\n         */\n        this.root = 'Root';\n        /**\n         * Specifies the value of `DecodeParms`.\n         * @private\n         */\n        this.decodeParms = 'DecodeParms';\n        /**\n         * Specifies the value of `Filter`.\n         * @private\n         */\n        this.filter = 'Filter';\n        /**\n         * Specifies the value of `Font`.\n         * @private\n         */\n        this.font = 'Font';\n        /**\n         * Specifies the value of `Type1`.\n         * @private\n         */\n        this.type1 = 'Type1';\n        /**\n         * Specifies the value of `BaseFont`.\n         * @private\n         */\n        this.baseFont = 'BaseFont';\n        /**\n         * Specifies the value of `Encoding`.\n         * @private\n         */\n        this.encoding = 'Encoding';\n        /**\n         * Specifies the value of `Subtype`.\n         * @private\n         */\n        this.subtype = 'Subtype';\n        /**\n         * Specifies the value of `Contents`.\n         * @private\n         */\n        this.contents = 'Contents';\n        /**\n         * Specifies the value of `ProcSet`.\n         * @private\n         */\n        this.procset = 'ProcSet';\n        /**\n         * Specifies the value of `ColorSpace`.\n         * @private\n         */\n        this.colorSpace = 'ColorSpace';\n        /**\n         * Specifies the value of `ExtGState`.\n         * @private\n         */\n        this.extGState = 'ExtGState';\n        /**\n         * Specifies the value of `Pattern`.\n         * @private\n         */\n        this.pattern = 'Pattern';\n        /**\n         * Specifies the value of `XObject`.\n         * @private\n         */\n        this.xObject = 'XObject';\n        /**\n         * Specifies the value of `Length`.\n         * @private\n         */\n        this.length = 'Length';\n        /**\n         * Specifies the value of `Width`.\n         * @private\n         */\n        this.width = 'Width';\n        /**\n         * Specifies the value of `Height`.\n         * @private\n         */\n        this.height = 'Height';\n        /**\n         * Specifies the value of `BitsPerComponent`.\n         * @private\n         */\n        this.bitsPerComponent = 'BitsPerComponent';\n        /**\n         * Specifies the value of `Image`.\n         * @private\n         */\n        this.image = 'Image';\n        /**\n         * Specifies the value of `dctdecode`.\n         * @private\n         */\n        this.dctdecode = 'DCTDecode';\n        /**\n         * Specifies the value of `Columns`.\n         * @private\n         */\n        this.columns = 'Columns';\n        /**\n         * Specifies the value of `BlackIs1`.\n         * @private\n         */\n        this.blackIs1 = 'BlackIs1';\n        /**\n         * Specifies the value of `K`.\n         * @private\n         */\n        this.k = 'K';\n        /**\n         * Specifies the value of `S`.\n         * @private\n         */\n        this.s = 'S';\n        /**\n         * Specifies the value of `Predictor`.\n         * @private\n         */\n        this.predictor = 'Predictor';\n        /**\n         * Specifies the value of `DeviceRGB`.\n         * @private\n         */\n        this.deviceRgb = 'DeviceRGB';\n        /**\n         * Specifies the value of `Next`.\n         * @private\n         */\n        this.next = 'Next';\n        /**\n         * Specifies the value of `Action`.\n         * @private\n         */\n        this.action = 'Action';\n        /**\n         * Specifies the value of `Link`.\n         * @private\n         */\n        this.link = 'Link';\n        /**\n         *\n         * Specifies the value of `A`.\n         * @private\n         */\n        this.a = 'A';\n        /**\n         * Specifies the value of `Annot`.\n         * @private\n         */\n        this.annot = 'Annot';\n        /**\n         * Specifies the value of `P`.\n         * @private\n         */\n        this.p = 'P';\n        /**\n         * Specifies the value of `C`.\n         * @private\n         */\n        this.c = 'C';\n        /**\n         * Specifies the value of `Rect`.\n         * @private\n         */\n        this.rect = 'Rect';\n        /**\n         * Specifies the value of `URI`.\n         * @private\n         */\n        this.uri = 'URI';\n        /**\n         * Specifies the value of `Annots`.\n         * @private\n         */\n        this.annots = 'Annots';\n        /**\n         * Specifies the value of `ca`.\n         * @private\n         */\n        this.ca = 'ca';\n        /**\n         * Specifies the value of `CA`.\n         * @private\n         */\n        this.CA = 'CA';\n        /**\n         * Specifies the value of `XYZ`.\n         * @private\n         */\n        this.xyz = 'XYZ';\n        /**\n         * Specifies the value of `Fit`.\n         * @private\n         */\n        this.fit = 'Fit';\n        /**\n         * Specifies the value of `Dest`.\n         * @private\n         */\n        this.dest = 'Dest';\n        /**\n         * Specifies the value of `BM`.\n         * @private\n         */\n        this.BM = 'BM';\n        /**\n         * Specifies the value of `flatedecode`.\n         * @private\n         */\n        this.flatedecode = 'FlateDecode';\n        /**\n         * Specifies the value of `Rotate`.\n         * @private\n         */\n        this.rotate = 'Rotate';\n        /**\n         * Specifies the value of 'bBox'.\n         * @private\n         */\n        this.bBox = 'BBox';\n        /**\n         * Specifies the value of 'form'.\n         * @private\n         */\n        this.form = 'Form';\n        /**\n         * Specifies the value of 'w'.\n         * @private\n         */\n        this.w = 'W';\n        /**\n         * Specifies the value of 'cIDFontType2'.\n         * @private\n         */\n        this.cIDFontType2 = 'CIDFontType2';\n        /**\n         * Specifies the value of 'cIDToGIDMap'.\n         * @private\n         */\n        this.cIDToGIDMap = 'CIDToGIDMap';\n        /**\n         * Specifies the value of 'identity'.\n         * @private\n         */\n        this.identity = 'Identity';\n        /**\n         * Specifies the value of 'dw'.\n         * @private\n         */\n        this.dw = 'DW';\n        /**\n         * Specifies the value of 'fontDescriptor'.\n         * @private\n         */\n        this.fontDescriptor = 'FontDescriptor';\n        /**\n         * Specifies the value of 'cIDSystemInfo'.\n         * @private\n         */\n        this.cIDSystemInfo = 'CIDSystemInfo';\n        /**\n         * Specifies the value of 'fontName'.\n         * @private\n         */\n        this.fontName = 'FontName';\n        /**\n         * Specifies the value of 'flags'.\n         * @private\n         */\n        this.flags = 'Flags';\n        /**\n         * Specifies the value of 'fontBBox'.\n         * @private\n         */\n        this.fontBBox = 'FontBBox';\n        /**\n         * Specifies the value of 'missingWidth'.\n         * @private\n         */\n        this.missingWidth = 'MissingWidth';\n        /**\n         * Specifies the value of 'stemV'.\n         * @private\n         */\n        this.stemV = 'StemV';\n        /**\n         * Specifies the value of 'italicAngle'.\n         * @private\n         */\n        this.italicAngle = 'ItalicAngle';\n        /**\n         * Specifies the value of 'capHeight'.\n         * @private\n         */\n        this.capHeight = 'CapHeight';\n        /**\n         * Specifies the value of 'ascent'.\n         * @private\n         */\n        this.ascent = 'Ascent';\n        /**\n         * Specifies the value of 'descent'.\n         * @private\n         */\n        this.descent = 'Descent';\n        /**\n         * Specifies the value of 'leading'.\n         * @private\n         */\n        this.leading = 'Leading';\n        /**\n         * Specifies the value of 'avgWidth'.\n         * @private\n         */\n        this.avgWidth = 'AvgWidth';\n        /**\n         * Specifies the value of 'fontFile2'.\n         * @private\n         */\n        this.fontFile2 = 'FontFile2';\n        /**\n         * Specifies the value of 'maxWidth'.\n         * @private\n         */\n        this.maxWidth = 'MaxWidth';\n        /**\n         * Specifies the value of 'xHeight'.\n         * @private\n         */\n        this.xHeight = 'XHeight';\n        /**\n         * Specifies the value of 'stemH'.\n         * @private\n         */\n        this.stemH = 'StemH';\n        /**\n         * Specifies the value of 'registry'.\n         * @private\n         */\n        this.registry = 'Registry';\n        /**\n         * Specifies the value of 'ordering'.\n         * @private\n         */\n        this.ordering = 'Ordering';\n        /**\n         * Specifies the value of 'supplement'.\n         * @private\n         */\n        this.supplement = 'Supplement';\n        /**\n         * Specifies the value of 'type0'.\n         * @private\n         */\n        this.type0 = 'Type0';\n        /**\n         * Specifies the value of 'identityH'.\n         * @private\n         */\n        this.identityH = 'Identity-H';\n        /**\n         * Specifies the value of 'toUnicode'.\n         * @private\n         */\n        this.toUnicode = 'ToUnicode';\n        /**\n         * Specifies the value of 'descendantFonts'.\n         * @private\n         */\n        this.descendantFonts = 'DescendantFonts';\n        /**\n         * Specifies the value of 'background'.\n         * @private\n         */\n        this.background = 'Background';\n        /**\n         * Specifies the value of 'shading'.\n         * @private\n         */\n        this.shading = 'Shading';\n        /**\n         * Specifies the value of 'matrix'.\n         * @private\n         */\n        this.matrix = 'Matrix';\n        /**\n         * Specifies the value of 'antiAlias'.\n         * @private\n         */\n        this.antiAlias = 'AntiAlias';\n        /**\n         * Specifies the value of 'function'.\n         * @private\n         */\n        this.function = 'Function';\n        /**\n         * Specifies the value of 'extend'.\n         * @private\n         */\n        this.extend = 'Extend';\n        /**\n         * Specifies the value of 'shadingType'.\n         * @private\n         */\n        this.shadingType = 'ShadingType';\n        /**\n         * Specifies the value of 'coords'.\n         * @private\n         */\n        this.coords = 'Coords';\n        /**\n         * Specifies the value of 'domain'.\n         * @private\n         */\n        this.domain = 'Domain';\n        /**\n         * Specifies the value of 'range'.\n         * @private\n         */\n        this.range = 'Range';\n        /**\n         * Specifies the value of 'functionType'.\n         * @private\n         */\n        this.functionType = 'FunctionType';\n        /**\n         * Specifies the value of 'bitsPerSample'.\n         * @private\n         */\n        this.bitsPerSample = 'BitsPerSample';\n        /**\n         * Specifies the value of 'patternType'.\n         * @private\n         */\n        this.patternType = 'PatternType';\n        /**\n         * Specifies the value of 'paintType'.\n         * @private\n         */\n        this.paintType = 'PaintType';\n        /**\n         * Specifies the value of 'tilingType'.\n         * @private\n         */\n        this.tilingType = 'TilingType';\n        /**\n         * Specifies the value of 'xStep'.\n         * @private\n         */\n        this.xStep = 'XStep';\n        /**\n         * Specifies the value of 'yStep'.\n         * @private\n         */\n        this.yStep = 'YStep';\n        /**\n         * Specifies the value of viewer preferences.\n         * @private\n         */\n        this.viewerPreferences = 'ViewerPreferences';\n        /**\n         * Specifies the value of center window.\n         * @private\n         */\n        this.centerWindow = 'CenterWindow';\n        /**\n         * Specifies the value of display title.\n         * @private\n         */\n        this.displayTitle = 'DisplayTitle';\n        /**\n         * Specifies the value of fit window.\n         * @private\n         */\n        this.fitWindow = 'FitWindow';\n        /**\n         * Specifies the value of hide menu bar.\n         * @private\n         */\n        this.hideMenuBar = 'HideMenubar';\n        /**\n         * Specifies the value of hide tool bar.\n         * @private\n         */\n        this.hideToolBar = 'HideToolbar';\n        /**\n         * Specifies the value of hide window UI.\n         * @private\n         */\n        this.hideWindowUI = 'HideWindowUI';\n        /**\n         * Specifies the value of page mode.\n         * @private\n         */\n        this.pageMode = 'PageMode';\n        /**\n         * Specifies the value of page layout.\n         * @private\n         */\n        this.pageLayout = 'PageLayout';\n        /**\n         * Specifies the value of duplex.\n         * @private\n         */\n        this.duplex = 'Duplex';\n        /**\n         * Specifies the value of print scaling.\n         * @private\n         */\n        this.printScaling = 'PrintScaling';\n        //\n    }\n    return DictionaryProperties;\n}());\nexport { DictionaryProperties };\n", "import { Dictionary } from './../collections/dictionary';\nimport { PdfName } from './pdf-name';\nimport { Operators } from './../input-output/pdf-operators';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\n/**\n * `PdfDictionary` class is used to perform primitive operations.\n * @private\n */\nvar PdfDictionary = /** @class */ (function () {\n    function PdfDictionary(dictionary) {\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position7 = -1;\n        /**\n         * The `IPdfSavable` with the specified key.\n         * @private\n         */\n        this.primitiveItems = new Dictionary();\n        /**\n         * `Start marker` for dictionary.\n         * @private\n         */\n        this.prefix = '<<';\n        /**\n         * `End marker` for dictionary.\n         * @private\n         */\n        this.suffix = '>>';\n        /**\n         * @hidden\n         * @private\n         */\n        this.resources = [];\n        /**\n         * Internal variable to hold `cloned object`.\n         * @default null\n         * @private\n         */\n        this.object = null;\n        /**\n         * Flag for PDF file formar 1.5 is dictionary `archiving` needed.\n         * @default true\n         * @private\n         */\n        this.archive = true;\n        /**\n         * Represents the Font dictionary.\n         * @hidden\n         * @private\n         */\n        this.isResource = false;\n        if (typeof dictionary === 'undefined') {\n            this.primitiveItems = new Dictionary();\n            this.encrypt = true;\n            this.dictionaryProperties = new DictionaryProperties();\n        }\n        else {\n            this.primitiveItems = new Dictionary();\n            var keys = dictionary.items.keys();\n            var values = dictionary.items.values();\n            for (var index = 0; index < dictionary.items.size(); index++) {\n                this.primitiveItems.setValue(keys[index], values[index]);\n            }\n            this.status = dictionary.status;\n            this.freezeChanges(this);\n            this.encrypt = true;\n            this.dictionaryProperties = new DictionaryProperties();\n        }\n    }\n    Object.defineProperty(PdfDictionary.prototype, \"items\", {\n        //Properties\n        /**\n         * Gets or sets the `IPdfSavable` with the specified key.\n         * @private\n         */\n        get: function () {\n            return this.primitiveItems;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"status\", {\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status7;\n        },\n        set: function (value) {\n            this.status7 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving7;\n        },\n        set: function (value) {\n            this.isSaving7 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index7;\n        },\n        set: function (value) {\n            this.index7 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            return this.object;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position7;\n        },\n        set: function (value) {\n            this.position7 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"Count\", {\n        /**\n         * Gets the `count`.\n         * @private\n         */\n        get: function () {\n            return this.primitiveItems.size();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"Dictionary\", {\n        /**\n         * Collection of `items` in the object.\n         * @private\n         */\n        get: function () {\n            return this;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Get flag if need to `archive` dictionary.\n     * @private\n     */\n    PdfDictionary.prototype.getArchive = function () {\n        return this.archive;\n    };\n    /**\n     * Set flag if need to `archive` dictionary.\n     * @private\n     */\n    PdfDictionary.prototype.setArchive = function (value) {\n        this.archive = value;\n    };\n    /**\n     * Sets flag if `encryption` is needed.\n     * @private\n     */\n    PdfDictionary.prototype.setEncrypt = function (value) {\n        this.encrypt = value;\n        this.modify();\n    };\n    /**\n     * Gets flag if `encryption` is needed.\n     * @private\n     */\n    PdfDictionary.prototype.getEncrypt = function () {\n        return this.encrypt;\n    };\n    /**\n     * `Freezes` the changes.\n     * @private\n     */\n    PdfDictionary.prototype.freezeChanges = function (freezer) {\n        this.bChanged = false;\n    };\n    /**\n     * Creates a `copy of PdfDictionary`.\n     * @private\n     */\n    PdfDictionary.prototype.clone = function (crossTable) {\n        //Need to add more codings\n        var newDict = new PdfDictionary();\n        return newDict;\n    };\n    /**\n     * `Mark` this instance modified.\n     * @private\n     */\n    PdfDictionary.prototype.modify = function () {\n        this.bChanged = true;\n    };\n    /**\n     * `Removes` the specified key.\n     * @private\n     */\n    PdfDictionary.prototype.remove = function (key) {\n        if (typeof key !== 'string') {\n            this.primitiveItems.remove(key.value);\n            this.modify();\n        }\n        else {\n            this.remove(new PdfName(key));\n        }\n    };\n    /**\n     * `Determines` whether the dictionary contains the key.\n     * @private\n     */\n    PdfDictionary.prototype.containsKey = function (key) {\n        var returnValue = false;\n        returnValue = this.primitiveItems.containsKey(key.toString());\n        return returnValue;\n    };\n    /**\n     * Raises event `BeginSave`.\n     * @private\n     */\n    PdfDictionary.prototype.onBeginSave = function () {\n        this.beginSave.sender.beginSave();\n    };\n    /**\n     * Raises event `Font Dictionary BeginSave`.\n     * @private\n     */\n    PdfDictionary.prototype.onFontDictionaryBeginSave = function () {\n        this.fontDictionaryBeginSave.sender.fontDictionaryBeginSave();\n    };\n    /**\n     * Raises event `Descendant Font BeginSave`.\n     * @private\n     */\n    PdfDictionary.prototype.onDescendantFontBeginSave = function () {\n        this.descendantFontBeginSave.sender.descendantFontBeginSave();\n    };\n    /**\n     * Raises event 'BeginSave'.\n     * @private\n     */\n    PdfDictionary.prototype.onTemplateBeginSave = function () {\n        this.pageBeginDrawTemplate.sender.pageBeginSave();\n    };\n    /**\n     * Raises event `BeginSave`.\n     * @private\n     */\n    PdfDictionary.prototype.onBeginAnnotationSave = function () {\n        this.annotationBeginSave.sender.beginSave();\n    };\n    /**\n     * Raises event `BeginSave`.\n     * @private\n     */\n    PdfDictionary.prototype.onSectionBeginSave = function (writer) {\n        var saveEvent = this.sectionBeginSave;\n        saveEvent.sender.beginSave(saveEvent.state, writer);\n    };\n    PdfDictionary.prototype.save = function (writer, bRaiseEvent) {\n        if (typeof bRaiseEvent === 'undefined') {\n            this.save(writer, true);\n        }\n        else {\n            writer.write(this.prefix);\n            if (typeof this.beginSave !== 'undefined') {\n                this.onBeginSave();\n            }\n            if (typeof this.descendantFontBeginSave !== 'undefined') {\n                this.onDescendantFontBeginSave();\n            }\n            if (typeof this.fontDictionaryBeginSave !== 'undefined') {\n                this.onFontDictionaryBeginSave();\n            }\n            if (typeof this.annotationBeginSave !== 'undefined') {\n                this.onBeginAnnotationSave();\n            }\n            if (typeof this.sectionBeginSave !== 'undefined') {\n                this.onSectionBeginSave(writer);\n            }\n            if (typeof this.pageBeginDrawTemplate !== 'undefined') {\n                this.onTemplateBeginSave();\n            }\n            // }\n            if (this.Count > 0) {\n                this.saveItems(writer);\n            }\n            writer.write(this.suffix);\n            writer.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Save dictionary items`.\n     * @private\n     */\n    PdfDictionary.prototype.saveItems = function (writer) {\n        writer.write(Operators.newLine);\n        var keys = this.primitiveItems.keys();\n        var values = this.primitiveItems.values();\n        for (var index = 0; index < keys.length; index++) {\n            var key = keys[index];\n            var name_1 = new PdfName(key);\n            name_1.save(writer);\n            writer.write(Operators.whiteSpace);\n            var resources = values[index];\n            resources.save(writer);\n            writer.write(Operators.newLine);\n        }\n    };\n    return PdfDictionary;\n}());\nexport { PdfDictionary };\nvar SaveSectionCollectionEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save section collection event handler` class.\n     * @private\n     */\n    function SaveSectionCollectionEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveSectionCollectionEventHandler;\n}());\nexport { SaveSectionCollectionEventHandler };\nvar SaveDescendantFontEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save section collection event handler` class.\n     * @private\n     */\n    function SaveDescendantFontEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveDescendantFontEventHandler;\n}());\nexport { SaveDescendantFontEventHandler };\nvar SaveFontDictionaryEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save section collection event handler` class.\n     * @private\n     */\n    function SaveFontDictionaryEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveFontDictionaryEventHandler;\n}());\nexport { SaveFontDictionaryEventHandler };\nvar SaveAnnotationEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save annotation event handler` class.\n     * @private\n     */\n    function SaveAnnotationEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveAnnotationEventHandler;\n}());\nexport { SaveAnnotationEventHandler };\nvar SaveSectionEventHandler = /** @class */ (function () {\n    // constructors\n    /**\n     * New instance for `save section event handler` class.\n     * @private\n     */\n    function SaveSectionEventHandler(sender, state) {\n        this.sender = sender;\n        this.state = state;\n    }\n    return SaveSectionEventHandler;\n}());\nexport { SaveSectionEventHandler };\n/**\n * SaveTemplateEventHandler class used to store information about template elements.\n * @private\n * @hidden\n */\nvar SaveTemplateEventHandler = /** @class */ (function () {\n    /**\n     * New instance for save section collection event handler class.\n     * @public\n     */\n    function SaveTemplateEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveTemplateEventHandler;\n}());\nexport { SaveTemplateEventHandler };\n", "/**\n * `PdfString` class is used to perform string related primitive operations.\n * @private\n */\nexport var InternalEnum;\n(function (InternalEnum) {\n    //Internals\n    /**\n     * public Enum for `ForceEncoding`.\n     * @private\n     */\n    var ForceEncoding;\n    (function (ForceEncoding) {\n        /**\n         * Specifies the type of `None`.\n         * @private\n         */\n        ForceEncoding[ForceEncoding[\"None\"] = 0] = \"None\";\n        /**\n         * Specifies the type of `Ascii`.\n         * @private\n         */\n        ForceEncoding[ForceEncoding[\"Ascii\"] = 1] = \"Ascii\";\n        /**\n         * Specifies the type of `Unicode`.\n         * @private\n         */\n        ForceEncoding[ForceEncoding[\"Unicode\"] = 2] = \"Unicode\";\n    })(ForceEncoding = InternalEnum.ForceEncoding || (InternalEnum.ForceEncoding = {}));\n    /**\n     * public Enum for `SourceType`.\n     * @private\n     */\n    var SourceType;\n    (function (SourceType) {\n        /**\n         * Specifies the type of `StringValue`.\n         * @private\n         */\n        SourceType[SourceType[\"StringValue\"] = 0] = \"StringValue\";\n        /**\n         * Specifies the type of `ByteBuffer`.\n         * @private\n         */\n        SourceType[SourceType[\"ByteBuffer\"] = 1] = \"ByteBuffer\";\n    })(SourceType || (SourceType = {}));\n})(InternalEnum || (InternalEnum = {}));\nvar PdfString = /** @class */ (function () {\n    function PdfString(value) {\n        /**\n         * Value indicating whether the string was converted to hex.\n         * @default false\n         * @private\n         */\n        this.bHex = false;\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position1 = -1;\n        /**\n         * Internal variable to hold `cloned object`.\n         * @default null\n         * @private\n         */\n        this.clonedObject1 = null;\n        /**\n         * `Shows` if the data of the stream was decrypted.\n         * @default false\n         * @private\n         */\n        this.bDecrypted = false;\n        /**\n         * Shows if the data of the stream `was decrypted`.\n         * @default false\n         * @private\n         */\n        this.isParentDecrypted = false;\n        /**\n         * Gets a value indicating whether the object is `packed or not`.\n         * @default false\n         * @private\n         */\n        this.isPacked = false;\n        /**\n         * @hidden\n         * @private\n         */\n        this.isFormField = false;\n        /**\n         * @hidden\n         * @private\n         */\n        this.isColorSpace = false;\n        /**\n         * @hidden\n         * @private\n         */\n        this.isHexString = true;\n        if (typeof value === 'undefined') {\n            this.bHex = false;\n        }\n        else {\n            if (!(value.length > 0 && value[0] === '0xfeff')) {\n                this.stringValue = value;\n                this.data = [];\n                for (var i = 0; i < value.length; ++i) {\n                    this.data.push(value.charCodeAt(i));\n                }\n            }\n        }\n    }\n    Object.defineProperty(PdfString.prototype, \"hex\", {\n        //Property\n        /**\n         * Gets a value indicating whether string is in `hex`.\n         * @private\n         */\n        get: function () {\n            return this.bHex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"value\", {\n        /**\n         * Gets or sets string `value` of the object.\n         * @private\n         */\n        get: function () {\n            return this.stringValue;\n        },\n        set: function (value) {\n            this.stringValue = value;\n            this.data = null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"status\", {\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status1;\n        },\n        set: function (value) {\n            this.status1 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving1;\n        },\n        set: function (value) {\n            this.isSaving1 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index1;\n        },\n        set: function (value) {\n            this.index1 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            return this.clonedObject1;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position1;\n        },\n        set: function (value) {\n            this.position1 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"CrossTable\", {\n        /**\n         * Returns `PdfCrossTable` associated with the object.\n         * @private\n         */\n        get: function () {\n            return this.crossTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"converted\", {\n        /**\n         * Gets a value indicating whether to check if the value has unicode characters.\n         * @private\n         */\n        get: function () {\n            return this.bConverted;\n        },\n        /**\n         * sets a value indicating whether to check if the value has unicode characters.\n         * @private\n         */\n        set: function (value) {\n            this.bConverted = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"encode\", {\n        /**\n         * Gets value indicating whether we should convert data to Unicode.\n         */\n        get: function () {\n            return this.bForceEncoding;\n        },\n        set: function (value) {\n            this.bForceEncoding = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Methods\n    /**\n     * Converts `bytes to string using hex format` for representing string.\n     * @private\n     */\n    PdfString.bytesToHex = function (bytes) {\n        if (bytes == null) {\n            return '';\n        }\n        var builder = '';\n        return builder;\n    };\n    /**\n     * `Saves` the object using the specified writer.\n     * @private\n     */\n    PdfString.prototype.save = function (writer) {\n        if (writer === null) {\n            throw new Error('ArgumentNullException : writer');\n        }\n        if (this.encode !== undefined && this.encode === InternalEnum.ForceEncoding.Ascii) {\n            writer.write(this.pdfEncode());\n        }\n        else {\n            writer.write(PdfString.stringMark[0] + this.value + PdfString.stringMark[1]);\n        }\n    };\n    PdfString.prototype.pdfEncode = function () {\n        var result = '';\n        if (this.encode !== undefined && this.encode === InternalEnum.ForceEncoding.Ascii) {\n            var data = this.escapeSymbols(this.value);\n            for (var i = 0; i < data.length; i++) {\n                result += String.fromCharCode(data[i]);\n            }\n            result = PdfString.stringMark[0] + result + PdfString.stringMark[1];\n        }\n        else {\n            result = this.value;\n        }\n        return result;\n    };\n    PdfString.prototype.escapeSymbols = function (value) {\n        var data = [];\n        for (var i = 0; i < value.length; i++) {\n            var currentData = value.charCodeAt(i);\n            switch (currentData) {\n                case 40:\n                case 41:\n                    data.push(92);\n                    data.push(currentData);\n                    break;\n                case 13:\n                    data.push(92);\n                    data.push(114);\n                    break;\n                case 92:\n                    data.push(92);\n                    data.push(currentData);\n                    break;\n                default:\n                    data.push(currentData);\n                    break;\n            }\n        }\n        return data;\n    };\n    /**\n     * Creates a `copy of PdfString`.\n     * @private\n     */\n    PdfString.prototype.clone = function (crossTable) {\n        if (this.clonedObject1 !== null && this.clonedObject1.CrossTable === crossTable) {\n            return this.clonedObject1;\n        }\n        else {\n            this.clonedObject1 = null;\n        }\n        var newString = new PdfString(this.stringValue);\n        newString.bHex = this.bHex;\n        newString.crossTable = crossTable;\n        newString.isColorSpace = this.isColorSpace;\n        this.clonedObject1 = newString;\n        return newString;\n    };\n    /**\n     * Converts string to array of unicode symbols.\n     */\n    PdfString.toUnicodeArray = function (value, bAddPrefix) {\n        if (value == null) {\n            throw new Error('Argument Null Exception : value');\n        }\n        var startIndex = 0;\n        var output = [];\n        for (var i = 0; i < value.length; i++) {\n            var code = value.charCodeAt(i);\n            output.push(code / 256 >>> 0);\n            output.push(code & 0xff);\n        }\n        return output;\n    };\n    /**\n     * Converts byte data to string.\n     */\n    PdfString.byteToString = function (data) {\n        if (data == null) {\n            throw new Error('Argument Null Exception : stream');\n        }\n        var result = '';\n        for (var i = 0; i < data.length; ++i) {\n            result += String.fromCharCode(data[i]);\n        }\n        return result;\n    };\n    //constants = ;\n    /**\n     * `General markers` for string.\n     * @private\n     */\n    PdfString.stringMark = '()';\n    /**\n     * `Hex markers` for string.\n     * @private\n     */\n    PdfString.hexStringMark = '<>';\n    /**\n     * Format of password data.\n     * @private\n     */\n    PdfString.hexFormatPattern = '{0:X2}';\n    return PdfString;\n}());\nexport { PdfString };\n", "import { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfStream } from './../primitives/pdf-stream';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { PdfString } from './../primitives/pdf-string';\n/**\n * `PdfReference` class is used to perform reference related primitive operations.\n * @private\n */\nvar PdfReference = /** @class */ (function () {\n    function PdfReference(objNumber, genNumber) {\n        /**\n         * Holds the `index` number of the object.\n         * @default -1\n         * @private\n         */\n        this.index3 = -1;\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position3 = -1;\n        /**\n         * Holds the `object number`.\n         * @default 0\n         * @private\n         */\n        this.objNumber = 0;\n        /**\n         * Holds the `generation number` of the object.\n         * @default 0\n         * @private\n         */\n        this.genNumber = 0;\n        if (typeof objNumber === 'number' && typeof genNumber === 'number') {\n            this.objNumber = objNumber;\n            this.genNumber = genNumber;\n            // } else if (typeof objNum === 'string' && typeof genNum === 'string') {\n        }\n        else {\n            this.objNumber = Number(objNumber);\n            this.genNumber = Number(genNumber);\n        }\n    }\n    Object.defineProperty(PdfReference.prototype, \"status\", {\n        //Property\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status3;\n        },\n        set: function (value) {\n            this.status3 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReference.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving3;\n        },\n        set: function (value) {\n            this.isSaving3 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReference.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index3;\n        },\n        set: function (value) {\n            this.index3 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReference.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position3;\n        },\n        set: function (value) {\n            this.position3 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReference.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            var returnObject3 = null;\n            return returnObject3;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //IPdfPrimitives methods\n    /**\n     * `Saves` the object.\n     * @private\n     */\n    PdfReference.prototype.save = function (writer) {\n        writer.write(this.toString());\n    };\n    /**\n     * Returns a `string` representing the object.\n     * @private\n     */\n    PdfReference.prototype.toString = function () {\n        return this.objNumber.toString() + ' ' + this.genNumber.toString() + ' R';\n    };\n    /**\n     * Creates a `deep copy` of the IPdfPrimitive object.\n     * @private\n     */\n    PdfReference.prototype.clone = function (crossTable) {\n        return null;\n    };\n    return PdfReference;\n}());\nexport { PdfReference };\n/**\n * `PdfReferenceHolder` class is used to perform reference holder related primitive operations.\n * @private\n */\nvar PdfReferenceHolder = /** @class */ (function () {\n    function PdfReferenceHolder(obj1, obj2) {\n        /**\n         * Holds the `index` number of the object.\n         * @default -1\n         * @private\n         */\n        this.index4 = -1;\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position4 = -1;\n        /**\n         * The `index` of the object within the object collection.\n         * @default -1\n         * @private\n         */\n        this.objectIndex = -1;\n        /**\n         * @hidden\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        // if (typeof obj2 === 'undefined') {\n        this.initialize(obj1);\n        // }\n        // else {\n        //     if (obj2 === null) {\n        //         throw new Error('ArgumentNullException : crossTable');\n        //     }\n        //     if (obj1 === null) {\n        //         throw new Error('ArgumentNullException : reference');\n        //     }\n        //     this.crossTable = obj2;\n        //     let tempObj1 : PdfReference = <PdfReference>obj1;\n        //     this.reference = tempObj1;\n        // }\n    }\n    Object.defineProperty(PdfReferenceHolder.prototype, \"status\", {\n        //Properties\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status4;\n        },\n        set: function (value) {\n            this.status4 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving4;\n        },\n        set: function (value) {\n            this.isSaving4 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index4;\n        },\n        set: function (value) {\n            this.index4 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position4;\n        },\n        set: function (value) {\n            this.position4 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            return null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"object\", {\n        /**\n         * Gets the `object` the reference is of.\n         * @private\n         */\n        get: function () {\n            // if ((this.reference != null) || (this.object == null)) {\n            //     this.object = this.GetterObject();\n            // }\n            return this.primitiveObject;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"reference\", {\n        /**\n         * Gets the `reference`.\n         * @private\n         */\n        get: function () {\n            return this.pdfReference;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"index\", {\n        /**\n         * Gets the `index` of the object.\n         * @private\n         */\n        get: function () {\n            // let items : PdfMainObjectCollection = this.crossTable.PdfObjects;\n            // this.objectIndex = items.GetObjectIndex(this.reference);\n            // if (this.objectIndex < 0) {\n            //     let obj : IPdfPrimitive = this.crossTable.GetObject(this.reference);\n            //     this.objectIndex = items.Count - 1;\n            // }\n            return this.objectIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"element\", {\n        /**\n         * Gets the `element`.\n         * @private\n         */\n        get: function () {\n            return this.primitiveObject;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfReferenceHolder.prototype.initialize = function (obj1) {\n        if (obj1 instanceof PdfArray\n            || obj1 instanceof PdfDictionary\n            || obj1 instanceof PdfName\n            || obj1 instanceof PdfNumber\n            || obj1 instanceof PdfStream\n            || obj1 instanceof PdfReference\n            || obj1 instanceof PdfString) {\n            this.primitiveObject = obj1;\n        }\n        else {\n            var tempObj = obj1;\n            this.initialize(tempObj.element);\n        }\n    };\n    /**\n     * `Writes` a reference into a PDF document.\n     * @private\n     */\n    PdfReferenceHolder.prototype.save = function (writer) {\n        // if (writer == null) {\n        //     throw new Error('ArgumentNullException : writer');\n        // }\n        var position = writer.position;\n        var cTable = writer.document.crossTable;\n        // if (cTable.Document instanceof PdfDocument) {\n        this.object.isSaving = true;\n        // }\n        var reference = null;\n        // if (writer.Document.FileStructure.IncrementalUpdate === true && writer.Document.isStreamCopied === true) {\n        //     if (this.reference === null) {\n        //         reference = cTable.GetReference(this.Object);\n        //     } else {\n        //         reference = this.reference;\n        //     }\n        // } else {\n        //     reference = cTable.GetReference(this.Object);\n        // }\n        // if (!(writer.Document.FileStructure.IncrementalUpdate === true && writer.Document.isStreamCopied === true)) {\n        reference = cTable.getReference(this.object);\n        // }\n        // if (writer.Position !== position) {\n        //     writer.Position = position;\n        // }\n        reference.save(writer);\n    };\n    /**\n     * Creates a `copy of PdfReferenceHolder`.\n     * @private\n     */\n    PdfReferenceHolder.prototype.clone = function (crossTable) {\n        var refHolder = null;\n        var temp = null;\n        var refNum = '';\n        var reference = null;\n        // Restricts addition of same object multiple time.\n        /* if (this.Reference != null && this.crossTable != null && this.crossTable.PageCorrespondance.containsKey(this.Reference)) {\n            refHolder = new PdfReferenceHolder(this.crossTable.PageCorrespondance.getValue(this.Reference) as PdfReference, crossTable);\n            return refHolder;\n        }\n        if (Object instanceof PdfNumber) {\n            return new PdfNumber((Object as PdfNumber).IntValue);\n        }\n        */\n        // if (Object instanceof PdfDictionary) {\n        //     // Meaning the referenced page is not available for import.\n        //     let type : PdfName = new PdfName(this.dictionaryProperties.type);\n        //     let dict : PdfDictionary = Object as PdfDictionary;\n        //     if (dict.ContainsKey(type)) {\n        //         let pageName : PdfName = dict.Items.getValue(type.Value) as PdfName;\n        //         if (pageName !== null) {\n        //             if (pageName.Value === 'Page') {\n        //                 return new PdfNull();\n        //             }\n        //         }\n        //     }\n        // }\n        /* if (Object instanceof PdfName) {\n            return new PdfName ((Object as PdfName ).Value);\n        }\n        */\n        // Resolves circular references.\n        // if (crossTable.PrevReference !== null && (crossTable.PrevReference.indexOf(this.Reference) !== -1)) {\n        //     let obj : IPdfPrimitive = this.crossTable.GetObject(this.Reference).ClonedObject;\n        //     if (obj !== null) {\n        //         reference = crossTable.GetReference(obj);\n        //         return new PdfReferenceHolder(reference, crossTable);\n        //     } else {\n        //         return new PdfNull();\n        //     }\n        // }\n        /*if (this.Reference !== null) {\n            crossTable.PrevReference.push(this.Reference);\n        }\n        reference = crossTable.GetReference(temp);\n        refHolder = new PdfReferenceHolder(reference, crossTable);\n        return refHolder;\n        */\n        return null;\n    };\n    return PdfReferenceHolder;\n}());\nexport { PdfReferenceHolder };\n", "/**\n * Save class provide method to save file\n * ```typescript\n * let blob : Blob = new Blob([''], { type: 'text/plain' });\n * Save.save('fileName.txt',blob);\n */\nvar Save = /** @class */ (function () {\n    /**\n     * Initialize new instance of {save}\n     */\n    function Save() {\n        // tslint:disable\n    }\n    /**\n     * Saves the file with specified name and sends the file to client browser\n     * @param  {string} fileName- file name to save.\n     * @param  {Blob} buffer- the content to write in file\n     * @param  {boolean} isMicrosoftBrowser- specify whether microsoft browser or not\n     * @returns {void}\n     */\n    Save.save = function (fileName, buffer) {\n        if (fileName === null || fileName === undefined || fileName === '') {\n            throw new Error('ArgumentException: fileName cannot be undefined, null or empty');\n        }\n        var extension = fileName.substring(fileName.lastIndexOf('.') + 1, fileName.length);\n        var mimeType = this.getMimeType(extension);\n        if (mimeType !== '') {\n            buffer = new Blob([buffer], { type: mimeType });\n        }\n        if (this.isMicrosoftBrowser) {\n            navigator.msSaveBlob(buffer, fileName);\n        }\n        else {\n            var downloadLink = document.createElementNS('http://www.w3.org/1999/xhtml', 'a');\n            this.saveInternal(fileName, extension, buffer, downloadLink, 'download' in downloadLink);\n        }\n    };\n    Save.saveInternal = function (fileName, extension, buffer, downloadLink, hasDownloadAttribute) {\n        if (hasDownloadAttribute) {\n            downloadLink.download = fileName;\n            var dataUrl_1 = window.URL.createObjectURL(buffer);\n            downloadLink.href = dataUrl_1;\n            var event_1 = document.createEvent('MouseEvent');\n            event_1.initEvent('click', true, true);\n            downloadLink.dispatchEvent(event_1);\n            setTimeout(function () {\n                window.URL.revokeObjectURL(dataUrl_1);\n                dataUrl_1 = undefined;\n            });\n        }\n        else {\n            if (extension !== 'docx' && extension !== 'xlsx') {\n                var url = window.URL.createObjectURL(buffer);\n                var isPopupBlocked = window.open(url, '_blank');\n                if (!isPopupBlocked) {\n                    window.location.href = url;\n                }\n            }\n            else {\n                var reader_1 = new FileReader();\n                reader_1.onloadend = function () {\n                    var isPopupBlocked = window.open(reader_1.result, '_blank');\n                    if (!isPopupBlocked) {\n                        window.location.href = reader_1.result;\n                    }\n                };\n                reader_1.readAsDataURL(buffer);\n            }\n        }\n    };\n    /**\n     *\n     * @param {string} extension - get mime type of the specified extension\n     * @private\n     */\n    Save.getMimeType = function (extension) {\n        var mimeType = '';\n        switch (extension) {\n            case 'html':\n                mimeType = 'text/html';\n                break;\n            case 'pdf':\n                mimeType = 'application/pdf';\n                break;\n            case 'docx':\n                mimeType = 'application/vnd.openxmlformats-officedocument.wordprocessingml.document';\n                break;\n            case 'xlsx':\n                mimeType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet';\n                break;\n            case 'txt':\n                mimeType = 'text/plain';\n                break;\n        }\n        return mimeType;\n    };\n    return Save;\n}());\nexport { Save };\n", "import { Save } from './save';\n/**\n * XmlWriter class provide method to create XML data\n */\nvar XmlWriter = /** @class */ (function () {\n    /**\n     * Initialize new instance of {XmlWriter}\n     */\n    function XmlWriter() {\n        this.contentPos = 0;\n        this.bufferText = '';\n        this.bufferBlob = new Blob([''], { type: 'text/plain' });\n        this.currentState = 'Initial';\n        this.namespaceStack = [];\n        this.namespaceStack.push(new Namespace());\n        this.namespaceStack[0].set('xmlns', 'http://www.w3.org/2000/xmlns/', 'Special');\n        this.namespaceStack.push(new Namespace());\n        this.namespaceStack[1].set('xml', 'http://www.w3.org/XML/1998/namespace', 'Special');\n        this.namespaceStack.push(new Namespace());\n        this.namespaceStack[2].set('', '', 'Implied');\n        this.elementStack = [];\n        this.elementStack.push(new XmlElement());\n        this.elementStack[0].set('', '', '', this.namespaceStack.length - 1);\n        this.attributeStack = [];\n        Save.isMicrosoftBrowser = !(!navigator.msSaveBlob);\n    }\n    Object.defineProperty(XmlWriter.prototype, \"buffer\", {\n        /**\n         * Gets the content written to the {XmlWriter} as Blob.\n         * @returns {Blob}\n         */\n        get: function () {\n            this.flush();\n            return this.bufferBlob;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Writes processing instruction with a space between the name and text\n     * @param {string} name - name of the processing instruction\n     * @param {string} text - text to write in the processing instruction\n     * @throws ArgumentException\n     * @throws InvalidArgumentException\n     * @throws InvalidOperationException\n     */\n    XmlWriter.prototype.writeProcessingInstruction = function (name, text) {\n        if (name === undefined || name === null || name.length === 0) {\n            throw new Error('ArgumentException: name should not be undefined, null or empty');\n        }\n        this.checkName(name);\n        if (text === undefined || text === null) {\n            text = '';\n        }\n        if (name.length === 3 && name === 'xml') {\n            if (this.currentState !== 'Initial') {\n                // tslint:disable-next-line:max-line-length\n                throw new Error('InvalidArgumentException: Cannot write XML declaration.WriteStartDocument method has already written it');\n            }\n        }\n        if (this.currentState !== 'Initial' || this.bufferBlob === undefined) {\n            throw new Error('InvalidOperationException: Wrong Token');\n        }\n        else {\n            this.writeStartDocument();\n            this.writeProcessingInstructionInternal(name, text);\n        }\n    };\n    /**\n     * Writes Xml declaration with version and standalone attribute\n     * @param {boolean} standalone - if true it write standalone=yes else standalone=no\n     * @throws InvalidOperation\n     */\n    XmlWriter.prototype.writeStartDocument = function (standalone) {\n        if (this.currentState !== 'Initial' || this.bufferBlob === undefined) {\n            throw new Error('InvalidOperationException: Wrong Token');\n        }\n        this.currentState = 'StartDocument';\n        this.rawText('<?xml version=\"1.0\" encoding=\"utf-8');\n        if (standalone !== null && standalone !== undefined) {\n            this.rawText('\" standalone=\"');\n            this.rawText(standalone ? 'yes' : 'no');\n        }\n        this.rawText('\"?>');\n    };\n    /**\n     * Closes any open tag or attribute and write the state back to start\n     */\n    XmlWriter.prototype.writeEndDocument = function () {\n        while (this.elementStack.length - 1 > 0) {\n            this.writeEndElement();\n        }\n        this.currentState = 'EndDocument';\n        this.flush();\n    };\n    /**\n     * Writes the specified start tag and associates it with the given namespace and prefix.\n     * @param {string} prefix - namespace prefix of element\n     * @param {string} localName -localName of element\n     * @param {string} namespace - namespace URI associate with element\n     * @throws ArgumentException\n     * @throws InvalidOperationException\n     */\n    XmlWriter.prototype.writeStartElement = function (prefix, localName, namespace) {\n        if (this.bufferBlob === undefined) {\n            throw new Error('InvalidOperationException: Wrong Token');\n        }\n        if (localName === undefined || localName === null || localName.length === 0) {\n            throw new Error('ArgumentException: localName cannot be undefined, null or empty');\n        }\n        this.checkName(localName);\n        if (this.currentState === 'Initial') {\n            this.writeStartDocument();\n        }\n        if (this.currentState === 'StartElement') {\n            this.startElementContent();\n        }\n        this.currentState = 'StartElement';\n        if (prefix === undefined || prefix === null) {\n            if (namespace !== undefined && namespace !== null) {\n                prefix = this.lookupPrefix(namespace);\n            }\n            if (prefix === undefined || prefix === null) {\n                prefix = '';\n            }\n        }\n        else if (prefix.length > 0) {\n            if (namespace === undefined || namespace === null) {\n                namespace = this.lookupNamespace(prefix);\n            }\n            if (namespace === undefined || namespace === null || (namespace !== undefined && namespace.length === 0)) {\n                throw new Error('ArgumentException: Cannot use a prefix with an empty namespace');\n            }\n        }\n        if (namespace === undefined || namespace === null) {\n            namespace = this.lookupNamespace(prefix);\n        }\n        this.writeStartElementInternal(prefix, localName, namespace);\n    };\n    /**\n     * Closes one element and pop corresponding namespace scope\n     */\n    XmlWriter.prototype.writeEndElement = function () {\n        if (this.currentState === 'StartElement') {\n            this.startElementContent();\n            this.currentState = 'ElementContent';\n        }\n        else if (this.currentState === 'ElementContent') {\n            this.currentState = 'ElementContent';\n        }\n        this.currentState = 'EndElement';\n        var top = this.elementStack.length - 1;\n        this.writeEndElementInternal(this.elementStack[top].prefix, this.elementStack[top].localName);\n        this.namespaceStack.splice(this.elementStack[top].previousTop + 1);\n        this.elementStack.splice(top);\n        if (this.bufferText.length > 10240) {\n            this.flush();\n        }\n    };\n    /**\n     * Writes an element with the specified prefix, local name, namespace URI, and value.\n     * @param {string} prefix - namespace prefix of element\n     * @param {string} localName - localName of element\n     * @param {string} namespace - namespace URI associate with element\n     * @param {string} value - value of element\n     */\n    XmlWriter.prototype.writeElementString = function (prefix, localName, namespace, value) {\n        this.writeStartElement(prefix, localName, namespace);\n        if (value !== undefined && value !== null && value.length !== 0) {\n            this.writeString(value);\n        }\n        this.writeEndElement();\n    };\n    /**\n     * Writes out the attribute with the specified prefix, local name, namespace URI, and value\n     * @param {string} prefix - namespace prefix of element\n     * @param {string} localName - localName of element\n     * @param {string} namespace - namespace URI associate with element\n     * @param {string} value - value of element\n     */\n    XmlWriter.prototype.writeAttributeString = function (prefix, localName, namespace, value) {\n        this.writeStartAttribute(prefix, localName, namespace, value);\n        this.writeStringInternal(value, true);\n        this.writeEndAttribute();\n    };\n    /**\n     * Writes the given text content\n     * @param {string} text - text to write\n     * @throws InvalidOperationException\n     */\n    XmlWriter.prototype.writeString = function (text) {\n        this.writeInternal(text, false);\n    };\n    /**\n     * Write given text as raw data\n     * @param {string} text - text to write\n     * @throws InvalidOperationException\n     */\n    XmlWriter.prototype.writeRaw = function (text) {\n        this.writeInternal(text, true);\n    };\n    XmlWriter.prototype.writeInternal = function (text, isRawString) {\n        if (text === undefined || text === null) {\n            return;\n        }\n        else {\n            if (this.currentState !== 'StartElement' && this.currentState !== 'ElementContent') {\n                throw new Error('InvalidOperationException: Wrong Token');\n            }\n            if (this.currentState === 'StartElement') {\n                this.startElementContent();\n            }\n            this.currentState = 'ElementContent';\n            if (isRawString) {\n                this.rawText(text);\n            }\n            else {\n                this.writeStringInternal(text, false);\n            }\n        }\n    };\n    /**\n     * Saves the file with specified name and sends the file to client browser\n     * @param {string} fileName - file name\n     */\n    XmlWriter.prototype.save = function (fileName) {\n        while (this.elementStack.length - 1 > 0) {\n            this.writeEndElement();\n        }\n        if (this.bufferText !== '') {\n            this.flush();\n        }\n        Save.save(fileName, this.buffer);\n    };\n    /**\n     * Releases the resources used by XmlWriter.\n     */\n    XmlWriter.prototype.destroy = function () {\n        this.bufferBlob = undefined;\n        for (var i = 0; i < this.namespaceStack.length; i++) {\n            this.namespaceStack[i].destroy();\n        }\n        this.namespaceStack = [];\n        for (var i = 0; i < this.elementStack.length; i++) {\n            this.elementStack[i].destroy();\n        }\n        this.elementStack = [];\n        this.bufferText = '';\n        this.contentPos = 0;\n    };\n    XmlWriter.prototype.flush = function () {\n        if (this.bufferBlob === undefined) {\n            return;\n        }\n        this.bufferBlob = new Blob([this.bufferBlob, this.bufferText], { type: 'text/plain' });\n        this.bufferText = '';\n    };\n    XmlWriter.prototype.writeProcessingInstructionInternal = function (name, text) {\n        this.bufferText += '<?';\n        this.rawText(name);\n        if (text.length > 0) {\n            this.bufferText += ' ';\n            text = text.replace(/\\?\\>/g, '? >');\n            this.bufferText += text;\n        }\n        this.bufferText += '?';\n        this.bufferText += '>';\n    };\n    XmlWriter.prototype.writeStartAttribute = function (prefix, localName, namespace, value) {\n        if (localName === undefined || localName === null || localName.length === 0) {\n            if (prefix === 'xmlns') {\n                localName = 'xmlns';\n                prefix = '';\n            }\n            else {\n                throw new Error('ArgumentException: localName cannot be undefined, null or empty');\n            }\n        }\n        if (this.currentState !== 'StartElement') {\n            throw new Error('InvalidOperationException: Wrong Token');\n        }\n        this.checkName(localName);\n        this.writeStartAttributePrefixAndNameSpace(prefix, localName, namespace, value);\n    };\n    XmlWriter.prototype.writeStartAttributePrefixAndNameSpace = function (prefix, localName, namespace, value) {\n        if (prefix === undefined || prefix === null) {\n            if (namespace !== undefined && namespace !== null) {\n                if (!(localName === 'xmlns' && namespace === 'http://www.w3.org/2000/xmlns/')) {\n                    prefix = this.lookupPrefix(namespace);\n                }\n            }\n            if (prefix === undefined || prefix === null) {\n                prefix = '';\n            }\n        }\n        if (namespace === undefined || namespace === null) {\n            if (prefix !== undefined && prefix !== null && prefix.length > 0) {\n                namespace = this.lookupNamespace(prefix);\n            }\n            if (namespace === undefined || namespace === null) {\n                namespace = '';\n            }\n        }\n        this.writeStartAttributeSpecialAttribute(prefix, localName, namespace, value);\n    };\n    XmlWriter.prototype.writeStartAttributeSpecialAttribute = function (prefix, localName, namespace, value) {\n        if (prefix.length === 0) {\n            if (localName[0] === 'x' && localName === 'xmlns') {\n                this.skipPushAndWrite(prefix, localName, namespace);\n                this.pushNamespaceExplicit('', value);\n                return;\n            }\n            else if (namespace.length > 0) {\n                prefix = this.lookupPrefix(namespace);\n            }\n        }\n        else {\n            if (prefix[0] === 'x') {\n                if (prefix === 'xmlns') {\n                    this.skipPushAndWrite(prefix, localName, namespace);\n                    this.pushNamespaceExplicit(localName, value);\n                    return;\n                }\n                else if (prefix === 'xml') {\n                    if (localName === 'space' || localName === 'lang') {\n                        this.skipPushAndWrite(prefix, localName, namespace);\n                        return;\n                    }\n                }\n            }\n            if (namespace.length === 0) {\n                prefix = '';\n            }\n        }\n        if (prefix !== undefined && prefix !== null && prefix.length !== 0) {\n            this.pushNamespaceImplicit(prefix, namespace);\n        }\n        this.skipPushAndWrite(prefix, localName, namespace);\n    };\n    XmlWriter.prototype.writeEndAttribute = function () {\n        this.currentState = 'StartElement';\n        this.bufferText += '\"';\n    };\n    XmlWriter.prototype.writeStartElementInternal = function (prefix, localName, namespace) {\n        this.bufferText += '<';\n        if (prefix.length > 0) {\n            this.rawText(prefix);\n            this.bufferText += ':';\n        }\n        this.rawText(localName);\n        var top = this.elementStack.length;\n        this.elementStack.push(new XmlElement());\n        this.elementStack[top].set(prefix, localName, namespace, this.namespaceStack.length - 1);\n        this.pushNamespaceImplicit(prefix, namespace);\n        for (var i = 0; i < this.attributeStack.length; i++) {\n            this.attributeStack[i].destroy();\n        }\n        this.attributeStack = [];\n    };\n    XmlWriter.prototype.writeEndElementInternal = function (prefix, localName) {\n        if (this.contentPos !== this.bufferText.length + 1) {\n            this.bufferText += '</';\n            if (prefix !== undefined && prefix !== null && prefix.length !== 0) {\n                this.rawText(prefix);\n                this.bufferText += ':';\n            }\n            this.rawText(localName);\n            this.bufferText += '>';\n        }\n        else {\n            this.bufferText = this.bufferText.substring(0, this.bufferText.length - 1);\n            this.bufferText += ' />';\n        }\n    };\n    XmlWriter.prototype.writeStartAttributeInternal = function (prefix, localName, namespaceName) {\n        this.bufferText += ' ';\n        if (prefix !== undefined && prefix !== null && prefix.length > 0) {\n            this.rawText(prefix);\n            this.bufferText += ':';\n        }\n        this.rawText(localName);\n        this.bufferText += '=';\n        this.bufferText += '\"';\n    };\n    XmlWriter.prototype.writeNamespaceDeclaration = function (prefix, namespaceUri) {\n        this.writeStartNamespaceDeclaration(prefix);\n        this.writeStringInternal(namespaceUri, true);\n        this.bufferText += '\"';\n    };\n    XmlWriter.prototype.writeStartNamespaceDeclaration = function (prefix) {\n        if (prefix === undefined || prefix === null || prefix.length === 0) {\n            this.rawText(' xmlns=\\\"');\n        }\n        else {\n            this.rawText(' xmlns:');\n            this.rawText(prefix);\n            this.bufferText += '=';\n            this.bufferText += '\"';\n        }\n    };\n    XmlWriter.prototype.writeStringInternal = function (text, inAttributeValue) {\n        if (text === null || text === undefined) {\n            text = '';\n        }\n        var tempText = '';\n        text = text.replace(/\\&/g, '&amp;');\n        text = text.replace(/\\</g, '&lt;');\n        text = text.replace(/\\>/g, '&gt;');\n        if (inAttributeValue) {\n            text = text.replace(/\\\"/g, '&quot;');\n        }\n        this.bufferText += text;\n        if (!inAttributeValue) {\n            this.contentPos = 0;\n        }\n    };\n    XmlWriter.prototype.startElementContent = function () {\n        var start = this.elementStack[this.elementStack.length - 1].previousTop;\n        for (var i = this.namespaceStack.length - 1; i > start; i--) {\n            if (this.namespaceStack[i].kind === 'NeedToWrite') {\n                this.writeNamespaceDeclaration(this.namespaceStack[i].prefix, this.namespaceStack[i].namespaceUri);\n            }\n        }\n        this.bufferText += '>';\n        this.contentPos = this.bufferText.length + 1;\n    };\n    XmlWriter.prototype.rawText = function (text) {\n        this.bufferText += text;\n    };\n    XmlWriter.prototype.addNamespace = function (prefix, ns, kind) {\n        var top = this.namespaceStack.length;\n        this.namespaceStack.push(new Namespace());\n        this.namespaceStack[top].set(prefix, ns, kind);\n    };\n    XmlWriter.prototype.lookupPrefix = function (namespace) {\n        for (var i = this.namespaceStack.length - 1; i >= 0; i--) {\n            if (this.namespaceStack[i].namespaceUri === namespace) {\n                return this.namespaceStack[i].prefix;\n            }\n        }\n        return undefined;\n    };\n    XmlWriter.prototype.lookupNamespace = function (prefix) {\n        for (var i = this.namespaceStack.length - 1; i >= 0; i--) {\n            if (this.namespaceStack[i].prefix === prefix) {\n                return this.namespaceStack[i].namespaceUri;\n            }\n        }\n        return undefined;\n    };\n    XmlWriter.prototype.lookupNamespaceIndex = function (prefix) {\n        for (var i = this.namespaceStack.length - 1; i >= 0; i--) {\n            if (this.namespaceStack[i].prefix === prefix) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    XmlWriter.prototype.pushNamespaceImplicit = function (prefix, ns) {\n        var kind;\n        var existingNsIndex = this.lookupNamespaceIndex(prefix);\n        if (existingNsIndex !== -1) {\n            if (existingNsIndex > this.elementStack[this.elementStack.length - 1].previousTop) {\n                if (this.namespaceStack[existingNsIndex].namespaceUri !== ns) {\n                    throw new Error('XmlException namespace Uri needs to be the same as the one that is already declared');\n                }\n                return;\n            }\n            else {\n                if (this.namespaceStack[existingNsIndex].kind === 'Special') {\n                    if (prefix === 'xml') {\n                        if (ns !== this.namespaceStack[existingNsIndex].namespaceUri) {\n                            throw new Error('InvalidArgumentException: Xml String');\n                        }\n                        else {\n                            kind = 'Implied';\n                        }\n                    }\n                    else {\n                        throw new Error('InvalidArgumentException: Prefix \"xmlns\" is reserved for use by XML.');\n                    }\n                }\n                else {\n                    kind = (this.namespaceStack[existingNsIndex].namespaceUri === ns) ? 'Implied' : 'NeedToWrite';\n                }\n            }\n        }\n        else {\n            if ((ns === 'http://www.w3.org/XML/1998/namespace' && prefix !== 'xml') ||\n                (ns === 'http://www.w3.org/2000/xmlns/' && prefix !== 'xmlns')) {\n                throw new Error('InvalidArgumentException');\n            }\n            kind = 'NeedToWrite';\n        }\n        this.addNamespace(prefix, ns, kind);\n    };\n    XmlWriter.prototype.pushNamespaceExplicit = function (prefix, ns) {\n        var existingNsIndex = this.lookupNamespaceIndex(prefix);\n        if (existingNsIndex !== -1) {\n            if (existingNsIndex > this.elementStack[this.elementStack.length - 1].previousTop) {\n                this.namespaceStack[existingNsIndex].kind = 'Written';\n                return;\n            }\n        }\n        this.addNamespace(prefix, ns, 'Written');\n        return;\n    };\n    XmlWriter.prototype.addAttribute = function (prefix, localName, namespaceName) {\n        var top = this.attributeStack.length;\n        this.attributeStack.push(new XmlAttribute());\n        this.attributeStack[top].set(prefix, localName, namespaceName);\n        for (var i = 0; i < top; i++) {\n            if (this.attributeStack[i].isDuplicate(prefix, localName, namespaceName)) {\n                throw new Error('XmlException: duplicate attribute name');\n            }\n        }\n    };\n    XmlWriter.prototype.skipPushAndWrite = function (prefix, localName, namespace) {\n        this.addAttribute(prefix, localName, namespace);\n        this.writeStartAttributeInternal(prefix, localName, namespace);\n    };\n    XmlWriter.prototype.checkName = function (text) {\n        var format = /[ !@#$%^&*()+\\=\\[\\]{};':\"\\\\|,<>\\/?]/;\n        if (format.test(text)) {\n            throw new Error('InvalidArgumentException: invalid name character');\n        }\n    };\n    return XmlWriter;\n}());\nexport { XmlWriter };\n/**\n * class for managing namespace collection\n */\nvar Namespace = /** @class */ (function () {\n    function Namespace() {\n    }\n    /**\n     * set value for current namespace instance\n     * @param {string} prefix namespace's prefix\n     * @param {string} namespaceUri namespace URI\n     * @param {string} kind namespace kind\n     */\n    Namespace.prototype.set = function (prefix, namespaceUri, kind) {\n        this.prefix = prefix;\n        this.namespaceUri = namespaceUri;\n        this.kind = kind;\n    };\n    /**\n     * Releases the resources used by Namespace\n     */\n    Namespace.prototype.destroy = function () {\n        this.prefix = undefined;\n        this.namespaceUri = undefined;\n        this.kind = undefined;\n    };\n    return Namespace;\n}());\nexport { Namespace };\n/**\n * class for managing element collection\n */\nvar XmlElement = /** @class */ (function () {\n    function XmlElement() {\n    }\n    /**\n     * set value of current element\n     * @param {string} prefix - element prefix\n     * @param {string} localName - element local name\n     * @param {string} namespaceUri -namespace URI\n     * @param {string} previousTop - previous namespace top\n     */\n    XmlElement.prototype.set = function (prefix, localName, namespaceUri, previousTop) {\n        this.previousTop = previousTop;\n        this.prefix = prefix;\n        this.namespaceUri = namespaceUri;\n        this.localName = localName;\n    };\n    /**\n     * Releases the resources used by XmlElement\n     */\n    XmlElement.prototype.destroy = function () {\n        this.previousTop = undefined;\n        this.prefix = undefined;\n        this.localName = undefined;\n        this.namespaceUri = undefined;\n    };\n    return XmlElement;\n}());\nexport { XmlElement };\n/**\n * class for managing attribute collection\n */\nvar XmlAttribute = /** @class */ (function () {\n    function XmlAttribute() {\n    }\n    /**\n     * set value of current attribute\n     * @param {string} prefix - namespace's prefix\n     * @param {string} namespaceUri - namespace URI\n     * @param {string} localName - attribute localName\n     */\n    XmlAttribute.prototype.set = function (prefix, localName, namespaceUri) {\n        this.prefix = prefix;\n        this.namespaceUri = namespaceUri;\n        this.localName = localName;\n    };\n    /**\n     * get whether the attribute is duplicate or not\n     * @param {string} prefix - namespace's prefix\n     * @param {string} namespaceUri - namespace URI\n     * @param {string} localName - attribute localName\n     */\n    XmlAttribute.prototype.isDuplicate = function (prefix, localName, namespaceUri) {\n        return ((this.localName === localName) && ((this.prefix === prefix) || (this.namespaceUri === namespaceUri)));\n    };\n    /**\n     * Releases the resources used by XmlAttribute\n     */\n    XmlAttribute.prototype.destroy = function () {\n        this.prefix = undefined;\n        this.namespaceUri = undefined;\n        this.localName = undefined;\n    };\n    return XmlAttribute;\n}());\nexport { XmlAttribute };\n", "/**\n * Encoding class: Contains the details about encoding type, whether to write a Unicode byte order mark (BOM).\n * ```typescript\n * let encoding : Encoding = new Encoding();\n * encoding.type = 'Utf8';\n * encoding.getBytes('Encoding', 0, 5);\n * ```\n */\nvar Encoding = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the Encoding class. A parameter specifies whether to write a Unicode byte order mark\n     * @param  {boolean} includeBom?-true to specify that a Unicode byte order mark is written; otherwise, false.\n     */\n    function Encoding(includeBom) {\n        this.emitBOM = true;\n        this.encodingType = 'Ansi';\n        this.initBOM(includeBom);\n    }\n    Object.defineProperty(Encoding.prototype, \"includeBom\", {\n        /**\n         * Gets a value indicating whether to write a Unicode byte order mark\n         * @returns boolean- true to specify that a Unicode byte order mark is written; otherwise, false\n         */\n        get: function () {\n            return this.emitBOM;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Encoding.prototype, \"type\", {\n        /**\n         * Gets the encoding type.\n         * @returns EncodingType\n         */\n        get: function () {\n            return this.encodingType;\n        },\n        /**\n         * Sets the encoding type.\n         * @param  {EncodingType} value\n         */\n        set: function (value) {\n            this.encodingType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Initialize the includeBom to emit BOM or Not\n     * @param  {boolean} includeBom\n     */\n    Encoding.prototype.initBOM = function (includeBom) {\n        if (includeBom === undefined || includeBom === null) {\n            this.emitBOM = true;\n        }\n        else {\n            this.emitBOM = includeBom;\n        }\n    };\n    /**\n     * Calculates the number of bytes produced by encoding the characters in the specified string\n     * @param  {string} chars - The string containing the set of characters to encode\n     * @returns {number} - The number of bytes produced by encoding the specified characters\n     */\n    Encoding.prototype.getByteCount = function (chars) {\n        var byteCount = 0;\n        validateNullOrUndefined(chars, 'string');\n        if (chars === '') {\n            var byte = this.utf8Len(chars.charCodeAt(0));\n            return byte;\n        }\n        if (this.type === null || this.type === undefined) {\n            this.type = 'Ansi';\n        }\n        return this.getByteCountInternal(chars, 0, chars.length);\n    };\n    /**\n     * Return the Byte of character\n     * @param  {number} codePoint\n     * @returns {number}\n     */\n    Encoding.prototype.utf8Len = function (codePoint) {\n        var bytes = codePoint <= 0x7F ? 1 :\n            codePoint <= 0x7FF ? 2 :\n                codePoint <= 0xFFFF ? 3 :\n                    codePoint <= 0x1FFFFF ? 4 : 0;\n        return bytes;\n    };\n    /**\n     * for 4 byte character return surrogate pair true, otherwise false\n     * @param  {number} codeUnit\n     * @returns {boolean}\n     */\n    Encoding.prototype.isHighSurrogate = function (codeUnit) {\n        return codeUnit >= 0xD800 && codeUnit <= 0xDBFF;\n    };\n    /**\n     * for 4byte character generate the surrogate pair\n     * @param  {number} highCodeUnit\n     * @param  {number} lowCodeUnit\n     */\n    Encoding.prototype.toCodepoint = function (highCodeUnit, lowCodeUnit) {\n        highCodeUnit = (0x3FF & highCodeUnit) << 10;\n        var u = highCodeUnit | (0x3FF & lowCodeUnit);\n        return u + 0x10000;\n    };\n    /**\n     * private method to get the byte count for specific charindex and count\n     * @param  {string} chars\n     * @param  {number} charIndex\n     * @param  {number} charCount\n     */\n    Encoding.prototype.getByteCountInternal = function (chars, charIndex, charCount) {\n        var byteCount = 0;\n        if (this.encodingType === 'Utf8' || this.encodingType === 'Unicode') {\n            var isUtf8 = this.encodingType === 'Utf8';\n            for (var i = 0; i < charCount; i++) {\n                var charCode = chars.charCodeAt(isUtf8 ? charIndex : charIndex++);\n                if (this.isHighSurrogate(charCode)) {\n                    if (isUtf8) {\n                        var high = charCode;\n                        var low = chars.charCodeAt(++charIndex);\n                        byteCount += this.utf8Len(this.toCodepoint(high, low));\n                    }\n                    else {\n                        byteCount += 4;\n                        ++i;\n                    }\n                }\n                else {\n                    if (isUtf8) {\n                        byteCount += this.utf8Len(charCode);\n                    }\n                    else {\n                        byteCount += 2;\n                    }\n                }\n                if (isUtf8) {\n                    charIndex++;\n                }\n            }\n            return byteCount;\n        }\n        else {\n            byteCount = charCount;\n            return byteCount;\n        }\n    };\n    /**\n     * Encodes a set of characters from the specified string into the ArrayBuffer.\n     * @param  {string} s- The string containing the set of characters to encode\n     * @param  {number} charIndex-The index of the first character to encode.\n     * @param  {number} charCount- The number of characters to encode.\n     * @returns {ArrayBuffer} - The ArrayBuffer that contains the resulting sequence of bytes.\n     */\n    Encoding.prototype.getBytes = function (s, charIndex, charCount) {\n        validateNullOrUndefined(s, 'string');\n        validateNullOrUndefined(charIndex, 'charIndex');\n        validateNullOrUndefined(charCount, 'charCount');\n        if (charIndex < 0 || charCount < 0) {\n            throw new RangeError('Argument Out Of Range Exception: charIndex or charCount is less than zero');\n        }\n        if (s.length - charIndex < charCount) {\n            throw new RangeError('Argument Out Of Range Exception: charIndex and charCount do not denote a valid range in string');\n        }\n        var bytes;\n        if (s === '') {\n            bytes = new ArrayBuffer(0);\n            return bytes;\n        }\n        if (this.type === null || this.type === undefined) {\n            this.type = 'Ansi';\n        }\n        var byteCount = this.getByteCountInternal(s, charIndex, charCount);\n        switch (this.type) {\n            case 'Utf8':\n                bytes = this.getBytesOfUtf8Encoding(byteCount, s, charIndex, charCount);\n                return bytes;\n            case 'Unicode':\n                bytes = this.getBytesOfUnicodeEncoding(byteCount, s, charIndex, charCount);\n                return bytes;\n            default:\n                bytes = this.getBytesOfAnsiEncoding(byteCount, s, charIndex, charCount);\n                return bytes;\n        }\n    };\n    /**\n     * Decodes a sequence of bytes from the specified ArrayBuffer into the string.\n     * @param  {ArrayBuffer} bytes- The ArrayBuffer containing the sequence of bytes to decode.\n     * @param  {number} index- The index of the first byte to decode.\n     * @param  {number} count- The number of bytes to decode.\n     * @returns {string} - The string that contains the resulting set of characters.\n     */\n    Encoding.prototype.getString = function (bytes, index, count) {\n        validateNullOrUndefined(bytes, 'bytes');\n        validateNullOrUndefined(index, 'index');\n        validateNullOrUndefined(count, 'count');\n        if (index < 0 || count < 0) {\n            throw new RangeError('Argument Out Of Range Exception: index or count is less than zero');\n        }\n        if (bytes.byteLength - index < count) {\n            throw new RangeError('Argument Out Of Range Exception: index and count do not denote a valid range in bytes');\n        }\n        if (bytes.byteLength === 0 || count === 0) {\n            return '';\n        }\n        if (this.type === null || this.type === undefined) {\n            this.type = 'Ansi';\n        }\n        var out = '';\n        var byteCal = new Uint8Array(bytes);\n        switch (this.type) {\n            case 'Utf8':\n                var s = this.getStringOfUtf8Encoding(byteCal, index, count);\n                return s;\n            case 'Unicode':\n                var byteUnicode = new Uint16Array(bytes);\n                out = this.getStringofUnicodeEncoding(byteUnicode, index, count);\n                return out;\n            default:\n                var j = index;\n                for (var i = 0; i < count; i++) {\n                    var c = byteCal[j];\n                    out += String.fromCharCode(c); // 1 byte(ASCII) character                  \n                    j++;\n                }\n                return out;\n        }\n    };\n    Encoding.prototype.getBytesOfAnsiEncoding = function (byteCount, s, charIndex, charCount) {\n        var bytes = new ArrayBuffer(byteCount);\n        var bufview = new Uint8Array(bytes);\n        var k = 0;\n        for (var i = 0; i < charCount; i++) {\n            var charcode = s.charCodeAt(charIndex++);\n            if (charcode < 0x800) {\n                bufview[k] = charcode;\n            }\n            else {\n                bufview[k] = 63; //replacement character '?'\n            }\n            k++;\n        }\n        return bytes;\n    };\n    Encoding.prototype.getBytesOfUtf8Encoding = function (byteCount, s, charIndex, charCount) {\n        var bytes = new ArrayBuffer(byteCount);\n        var uint = new Uint8Array(bytes);\n        var index = charIndex;\n        var j = 0;\n        for (var i = 0; i < charCount; i++) {\n            var charcode = s.charCodeAt(index);\n            if (charcode <= 0x7F) { // 1 byte character 2^7\n                uint[j] = charcode;\n            }\n            else if (charcode < 0x800) { // 2 byte character 2^11\n                uint[j] = 0xc0 | (charcode >> 6);\n                uint[++j] = 0x80 | (charcode & 0x3f);\n            }\n            else if ((charcode < 0xd800 || charcode >= 0xe000)) { // 3 byte character 2^16        \n                uint[j] = 0xe0 | (charcode >> 12);\n                uint[++j] = 0x80 | ((charcode >> 6) & 0x3f);\n                uint[++j] = 0x80 | (charcode & 0x3f);\n            }\n            else {\n                uint[j] = 0xef;\n                uint[++j] = 0xbf;\n                uint[++j] = 0xbd; // U+FFFE \"replacement character\"\n            }\n            ++j;\n            ++index;\n        }\n        return bytes;\n    };\n    Encoding.prototype.getBytesOfUnicodeEncoding = function (byteCount, s, charIndex, charCount) {\n        var bytes = new ArrayBuffer(byteCount);\n        var uint16 = new Uint16Array(bytes);\n        for (var i = 0; i < charCount; i++) {\n            var charcode = s.charCodeAt(i);\n            uint16[i] = charcode;\n        }\n        return bytes;\n    };\n    Encoding.prototype.getStringOfUtf8Encoding = function (byteCal, index, count) {\n        var j = 0;\n        var i = index;\n        var s = '';\n        for (j; j < count; j++) {\n            var c = byteCal[i++];\n            while (i > byteCal.length) {\n                return s;\n            }\n            if (c > 127) {\n                if (c > 191 && c < 224 && i < count) {\n                    c = (c & 31) << 6 | byteCal[i] & 63;\n                }\n                else if (c > 223 && c < 240 && i < byteCal.byteLength) {\n                    c = (c & 15) << 12 | (byteCal[i] & 63) << 6 | byteCal[++i] & 63;\n                }\n                else if (c > 239 && c < 248 && i < byteCal.byteLength) {\n                    c = (c & 7) << 18 | (byteCal[i] & 63) << 12 | (byteCal[++i] & 63) << 6 | byteCal[++i] & 63;\n                }\n                ++i;\n            }\n            s += String.fromCharCode(c); // 1 byte(ASCII) character                          \n        }\n        return s;\n    };\n    Encoding.prototype.getStringofUnicodeEncoding = function (byteUni, index, count) {\n        if (count > byteUni.length) {\n            throw new RangeError('ArgumentOutOfRange_Count');\n        }\n        var byte16 = new Uint16Array(count);\n        var out = '';\n        for (var i = 0; i < count && i < byteUni.length; i++) {\n            byte16[i] = byteUni[index++];\n        }\n        out = String.fromCharCode.apply(null, byte16);\n        return out;\n    };\n    /**\n     * To clear the encoding instance\n     * @return {void}\n     */\n    Encoding.prototype.destroy = function () {\n        this.emitBOM = undefined;\n        this.encodingType = undefined;\n    };\n    return Encoding;\n}());\nexport { Encoding };\n/**\n * To check the object is null or undefined and throw error if it is null or undefined\n * @param {Object} value - object to check is null or undefined\n * @return {boolean}\n * @throws {ArgumentException} - if the value is null or undefined\n * @private\n */\nexport function validateNullOrUndefined(value, message) {\n    if (value === null || value === undefined) {\n        throw new Error('ArgumentException: ' + message + ' cannot be null or undefined');\n    }\n}\n", "import { Encoding, validateNullOrUndefined } from './encoding';\nimport { Save } from './save';\n/**\n * StreamWriter class contains the implementation for writing characters to a file in a particular encoding\n * ```typescript\n * let writer = new StreamWriter();\n * writer.write('Hello World');\n * writer.save('Sample.txt');\n * writer.dispose();\n * ```\n */\nvar StreamWriter = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the StreamWriter class by using the specified encoding.\n     * @param  {Encoding} encoding?- The character encoding to use.\n     */\n    function StreamWriter(encoding) {\n        this.bufferBlob = new Blob(['']);\n        this.bufferText = '';\n        this.init(encoding);\n        Save.isMicrosoftBrowser = !(!navigator.msSaveBlob);\n    }\n    Object.defineProperty(StreamWriter.prototype, \"buffer\", {\n        /**\n         * Gets the content written to the StreamWriter as Blob.\n         * @returns Blob\n         */\n        get: function () {\n            this.flush();\n            return this.bufferBlob;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StreamWriter.prototype, \"encoding\", {\n        /**\n         * Gets the encoding.\n         * @returns Encoding\n         */\n        get: function () {\n            return this.enc;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    StreamWriter.prototype.init = function (encoding) {\n        if (encoding === null || encoding === undefined) {\n            this.enc = new Encoding(false);\n            this.enc.type = 'Utf8';\n        }\n        else {\n            this.enc = encoding;\n            this.setBomByte();\n        }\n    };\n    /**\n     * Private method to set Byte Order Mark(BOM) value based on EncodingType\n     */\n    StreamWriter.prototype.setBomByte = function () {\n        if (this.encoding.includeBom) {\n            switch (this.encoding.type) {\n                case 'Unicode':\n                    var arrayUnicode = new ArrayBuffer(2);\n                    var uint8 = new Uint8Array(arrayUnicode);\n                    uint8[0] = 255;\n                    uint8[1] = 254;\n                    this.bufferBlob = new Blob([arrayUnicode]);\n                    break;\n                case 'Utf8':\n                    var arrayUtf8 = new ArrayBuffer(3);\n                    var utf8 = new Uint8Array(arrayUtf8);\n                    utf8[0] = 239;\n                    utf8[1] = 187;\n                    utf8[2] = 191;\n                    this.bufferBlob = new Blob([arrayUtf8]);\n                    break;\n                default:\n                    this.bufferBlob = new Blob(['']);\n                    break;\n            }\n        }\n    };\n    /**\n     * Saves the file with specified name and sends the file to client browser\n     * @param  {string} fileName - The file name to save\n     * @returns {void}\n     */\n    StreamWriter.prototype.save = function (fileName) {\n        if (this.bufferText !== '') {\n            this.flush();\n        }\n        Save.save(fileName, this.buffer);\n    };\n    /**\n     * Writes the specified string.\n     * @param  {string} value - The string to write. If value is null or undefined, nothing is written.\n     * @returns {void}\n     */\n    StreamWriter.prototype.write = function (value) {\n        if (this.encoding === undefined) {\n            throw new Error('Object Disposed Exception: current writer is disposed');\n        }\n        validateNullOrUndefined(value, 'string');\n        this.bufferText += value;\n        if (this.bufferText.length >= 10240) {\n            this.flush();\n        }\n    };\n    StreamWriter.prototype.flush = function () {\n        if (this.bufferText === undefined || this.bufferText === null || this.bufferText.length === 0) {\n            return;\n        }\n        var bufferArray = this.encoding.getBytes(this.bufferText, 0, this.bufferText.length);\n        this.bufferText = '';\n        this.bufferBlob = new Blob([this.bufferBlob, bufferArray]);\n    };\n    /**\n     * Writes the specified string followed by a line terminator\n     * @param  {string} value - The string to write. If value is null or undefined, nothing is written\n     * @returns {void}\n     */\n    StreamWriter.prototype.writeLine = function (value) {\n        if (this.encoding === undefined) {\n            throw new Error('Object Disposed Exception: current writer is disposed');\n        }\n        validateNullOrUndefined(value, 'string');\n        this.bufferText = this.bufferText + value + '\\r\\n';\n        if (this.bufferText.length >= 10240) {\n            this.flush();\n        }\n    };\n    /**\n     * Releases the resources used by the StreamWriter\n     * @returns {void}\n     */\n    StreamWriter.prototype.destroy = function () {\n        this.bufferBlob = undefined;\n        this.bufferText = undefined;\n        if (this.enc instanceof Encoding) {\n            this.enc.destroy();\n        }\n        this.enc = undefined;\n    };\n    return StreamWriter;\n}());\nexport { StreamWriter };\n", "/* eslint-disable */\nvar Utils = /** @class */ (function () {\n    function Utils() {\n    }\n    Utils.bitReverse = function (value) {\n        return (Utils.reverseBits[value & 15] << 12\n            | Utils.reverseBits[(value >> 4) & 15] << 8\n            | Utils.reverseBits[(value >> 8) & 15] << 4\n            | Utils.reverseBits[value >> 12]);\n    };\n    Utils.bitConverterToInt32 = function (value, index) {\n        return value[index] | value[index + 1] << 8 | value[index + 2] << 16 | value[index + 3] << 24;\n    };\n    Utils.bitConverterToInt16 = function (value, index) {\n        return value[index] | value[index + 1] << 8;\n    };\n    Utils.bitConverterToUInt32 = function (value) {\n        var uint = new Uint32Array(1);\n        uint[0] = value;\n        return uint[0];\n    };\n    Utils.bitConverterToUInt16 = function (value, index) {\n        var uint = new Uint16Array(1);\n        uint[0] = (value[index] | value[index + 1] << 8);\n        return uint[0];\n    };\n    Utils.bitConverterUintToInt32 = function (value) {\n        var uint = new Int32Array(1);\n        uint[0] = value;\n        return uint[0];\n    };\n    Utils.bitConverterInt32ToUint = function (value) {\n        var uint = new Uint32Array(1);\n        uint[0] = value;\n        return uint[0];\n    };\n    Utils.bitConverterInt32ToInt16 = function (value) {\n        var uint = new Int16Array(1);\n        uint[0] = value;\n        return uint[0];\n    };\n    Utils.byteToString = function (value) {\n        var str = '';\n        for (var i = 0; i < value.length; i++) {\n            str += String.fromCharCode(value[i]);\n        }\n        return str;\n    };\n    Utils.byteIntToString = function (value) {\n        var str = '';\n        for (var i = 0; i < value.length; i++) {\n            str += String.fromCharCode(value[i]);\n        }\n        return str;\n    };\n    Utils.arrayCopy = function (source, sourceIndex, destination, destinationIndex, dataToCopy) {\n        var temp = new Uint8Array(source.buffer, sourceIndex);\n        var data = temp.subarray(0, dataToCopy);\n        destination.set(data, destinationIndex);\n    };\n    Utils.mergeArray = function (arrayOne, arrayTwo) {\n        var mergedArray = new Uint8Array(arrayOne.length + arrayTwo.length);\n        mergedArray.set(arrayOne);\n        mergedArray.set(arrayTwo, arrayOne.length);\n        return mergedArray;\n    };\n    /**\n     * @private\n     */\n    Utils.encodedString = function (input) {\n        var keyStr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n        var chr1;\n        var chr2;\n        var chr3;\n        var encode1;\n        var encode2;\n        var encode3;\n        var encode4;\n        var count = 0;\n        var resultIndex = 0;\n        /*let dataUrlPrefix: string = 'data:';*/\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '');\n        var totalLength = input.length * 3 / 4;\n        if (input.charAt(input.length - 1) === keyStr.charAt(64)) {\n            totalLength--;\n        }\n        if (input.charAt(input.length - 2) === keyStr.charAt(64)) {\n            totalLength--;\n        }\n        if (totalLength % 1 !== 0) {\n            // totalLength is not an integer, the length does not match a valid\n            // base64 content. That can happen if:\n            // - the input is not a base64 content\n            // - the input is *almost* a base64 content, with a extra chars at the\n            // beginning or at the end\n            // - the input uses a base64 variant (base64url for example)\n            throw new Error('Invalid base64 input, bad content length.');\n        }\n        var output = new Uint8Array(totalLength | 0);\n        while (count < input.length) {\n            encode1 = keyStr.indexOf(input.charAt(count++));\n            encode2 = keyStr.indexOf(input.charAt(count++));\n            encode3 = keyStr.indexOf(input.charAt(count++));\n            encode4 = keyStr.indexOf(input.charAt(count++));\n            chr1 = (encode1 << 2) | (encode2 >> 4);\n            chr2 = ((encode2 & 15) << 4) | (encode3 >> 2);\n            chr3 = ((encode3 & 3) << 6) | encode4;\n            output[resultIndex++] = chr1;\n            if (encode3 !== 64) {\n                output[resultIndex++] = chr2;\n            }\n            if (encode4 !== 64) {\n                output[resultIndex++] = chr3;\n            }\n        }\n        return output;\n    };\n    Utils.reverseBits = [0, 8, 4, 12, 2, 10, 6, 14, 1, 9, 5, 13, 3, 11, 7, 15];\n    Utils.huffCodeLengthOrders = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];\n    return Utils;\n}());\nexport { Utils };\n/* eslint-enable */ \n", "/* eslint-disable */\nimport { CompressedStreamWriter, Stream, CompressedStreamReader } from './index';\nimport { Save } from '@syncfusion/ej2-file-utils';\nimport { Utils } from './utils';\nvar CRC32TABLE = [];\n/// <summary>\n/// Size of the int value in bytes.\n/// </summary>\nvar INT_SIZE = 4;\n/// <summary>\n/// Size of the short value in bytes.\n/// </summary>\nvar SHORT_SIZE = 2;\n/// <summary>\n/// End of central directory signature.\n/// </summary>\nvar CentralDirectoryEndSignature = 0x06054b50;\n/// <summary>\n/// Offset to the size field in the End of central directory record.\n/// </summary>\nvar CentralDirSizeOffset = 12;\n/// <summary>\n/// Central header signature.\n/// </summary>\nvar CentralHeaderSignature = 0x02014b50;\n/// <summary>\n/// Buffer size.\n/// </summary>\nvar BufferSize = 4096;\n/**\n * class provide compression library\n * ```typescript\n * let archive = new ZipArchive();\n * archive.compressionLevel = 'Normal';\n * let archiveItem = new ZipArchiveItem(archive, 'directoryName\\fileName.txt');\n * archive.addItem(archiveItem);\n * archive.save(fileName.zip);\n * ```\n */\nvar ZipArchive = /** @class */ (function () {\n    /**\n     * constructor for creating ZipArchive instance\n     */\n    function ZipArchive() {\n        if (CRC32TABLE.length === 0) {\n            ZipArchive.initCrc32Table();\n        }\n        this.files = [];\n        this.level = 'Normal';\n        Save.isMicrosoftBrowser = !(!navigator.msSaveBlob);\n    }\n    Object.defineProperty(ZipArchive.prototype, \"items\", {\n        get: function () {\n            return this.files;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ZipArchive.prototype, \"compressionLevel\", {\n        /**\n         * gets compression level\n         */\n        get: function () {\n            return this.level;\n        },\n        /**\n         * sets compression level\n         */\n        set: function (level) {\n            this.level = level;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ZipArchive.prototype, \"length\", {\n        /**\n         * gets items count\n         */\n        get: function () {\n            if (this.files === undefined) {\n                return 0;\n            }\n            return this.files.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * add new item to archive\n     * @param {ZipArchiveItem} item - item to be added\n     * @returns {void}\n     */\n    ZipArchive.prototype.addItem = function (item) {\n        if (item === null || item === undefined) {\n            throw new Error('ArgumentException: item cannot be null or undefined');\n        }\n        for (var i = 0; i < this.files.length; i++) {\n            var file = this.files[i];\n            if (file instanceof ZipArchiveItem) {\n                if (file.name === item.name) {\n                    throw new Error('item with same name already exist');\n                }\n            }\n        }\n        this.files.push(item);\n    };\n    /**\n     * add new directory to archive\n     * @param directoryName directoryName to be created\n     * @returns {void}\n     */\n    ZipArchive.prototype.addDirectory = function (directoryName) {\n        if (directoryName === null || directoryName === undefined) {\n            throw new Error('ArgumentException: string cannot be null or undefined');\n        }\n        if (directoryName.length === 0) {\n            throw new Error('ArgumentException: string cannot be empty');\n        }\n        if (directoryName.slice(-1) !== '/') {\n            directoryName += '/';\n        }\n        if (this.files.indexOf(directoryName) !== -1) {\n            throw new Error('item with same name already exist');\n        }\n        this.files.push(directoryName);\n    };\n    /**\n     * gets item at specified index\n     * @param {number} index - item index\n     * @returns {ZipArchiveItem}\n     */\n    ZipArchive.prototype.getItem = function (index) {\n        if (index >= 0 && index < this.files.length) {\n            return this.files[index];\n        }\n        return undefined;\n    };\n    /**\n     * determines whether an element is in the collection\n     * @param {string | ZipArchiveItem} item - item to search\n     * @returns {boolean}\n     */\n    ZipArchive.prototype.contains = function (item) {\n        return this.files.indexOf(item) !== -1 ? true : false;\n    };\n    ZipArchive.prototype.open = function (base64String) {\n        //return promise = new Promise((resolve: Function, reject: Function) => {\n        var zipArchive = this;\n        var zipByteArray = Utils.encodedString(base64String);\n        if (zipByteArray.length == 0)\n            throw new DOMException(\"stream\");\n        var stream = new Stream(zipByteArray);\n        //let lCentralDirEndPosition = this.findValueFromEnd( arrBuffer, Constants.CentralDirectoryEndSignature, 65557 );\n        var lCentralDirEndPosition = ZipArchive.findValueFromEnd(stream, CentralDirectoryEndSignature, 65557);\n        if (lCentralDirEndPosition < 0)\n            throw new DOMException(\"Can't locate end of central directory record. Possible wrong file format or archive is corrupt.\");\n        // Step2. Locate central directory and iterate through all items\n        stream.position = lCentralDirEndPosition + CentralDirSizeOffset;\n        var iCentralDirSize = ZipArchive.ReadInt32(stream);\n        var lCentralDirPosition = lCentralDirEndPosition - iCentralDirSize;\n        // verify that this is really central directory\n        stream.position = lCentralDirPosition;\n        this.readCentralDirectoryDataAndExtractItems(stream);\n        //});\n        // let zipArchive: ZipArchive = this;\n        //let promise: Promise<ZipArchive>;\n        // return promise = new Promise((resolve: Function, reject: Function) => {\n        //     let reader: FileReader = new FileReader();\n        //     reader.onload = (e: Event) => {\n        //         let data: Uint8Array = new Uint8Array((e.target as any).result);\n        //         let zipReader: ZipReader = new ZipReader(data);\n        //         zipReader.readEntries().then((entries: ZipEntry[]) => {\n        //             for (let i: number = 0; i < entries.length; i++) {\n        //                 let entry: ZipEntry = entries[i];\n        //                 let item: ZipArchiveItem = new ZipArchiveItem(zipArchive, entry.fileName);\n        //                 item.data = entry.data;\n        //                 item.compressionMethod = entry.compressionMethod;\n        //                 item.crc = entry.crc;\n        //                 item.lastModified = entry.lastModified;\n        //                 item.lastModifiedDate = entry.lastModifiedDate;\n        //                 item.size = entry.size;\n        //                 item.uncompressedSize = entry.uncompressedSize;\n        //                 zipArchive.addItem(item);\n        //             }\n        //             resolve(zipArchive);\n        //         });\n        //     };\n        //     reader.readAsArrayBuffer(fileName);\n        // });\n    };\n    /// <summary>\n    /// Read central directory record from the stream.\n    /// </summary>\n    /// <param name=\"stream\">Stream to read from.</param>\n    ZipArchive.prototype.readCentralDirectoryDataAndExtractItems = function (stream) {\n        if (stream == null)\n            throw new DOMException(\"stream\");\n        var itemHelper;\n        while (ZipArchive.ReadInt32(stream) == CentralHeaderSignature) {\n            itemHelper = new ZipArchiveItemHelper();\n            itemHelper.readCentralDirectoryData(stream);\n            itemHelper;\n            // let item: ZipArchiveItem = new ZipArchiveItem(this);\n            // item.ReadCentralDirectoryData(stream);\n            // m_arrItems.Add(item);\n        }\n        itemHelper.readData(stream, itemHelper.checkCrc);\n        itemHelper.decompressData();\n        this.files.push(new ZipArchiveItem(itemHelper.unCompressedStream.buffer, itemHelper.name));\n    };\n    /**\n     * save archive with specified file name\n     * @param {string} fileName save archive with specified file name\n     * @returns {Promise<ZipArchive>}\n     */\n    ZipArchive.prototype.save = function (fileName) {\n        if (fileName === null || fileName === undefined || fileName.length === 0) {\n            throw new Error('ArgumentException: fileName cannot be null or undefined');\n        }\n        if (this.files.length === 0) {\n            throw new Error('InvalidOperation');\n        }\n        var zipArchive = this;\n        var promise;\n        return promise = new Promise(function (resolve, reject) {\n            zipArchive.saveInternal(fileName, false).then(function () {\n                resolve(zipArchive);\n            });\n        });\n    };\n    /**\n     * Save archive as blob\n     * @return {Promise<Blob>}\n     */\n    ZipArchive.prototype.saveAsBlob = function () {\n        var zipArchive = this;\n        var promise;\n        return promise = new Promise(function (resolve, reject) {\n            zipArchive.saveInternal('', true).then(function (blob) {\n                resolve(blob);\n            });\n        });\n    };\n    ZipArchive.prototype.saveInternal = function (fileName, skipFileSave) {\n        var _this = this;\n        var zipArchive = this;\n        var promise;\n        return promise = new Promise(function (resolve, reject) {\n            var zipData = [];\n            var dirLength = 0;\n            for (var i = 0; i < zipArchive.files.length; i++) {\n                var compressedObject = _this.getCompressedData(_this.files[i]);\n                compressedObject.then(function (data) {\n                    dirLength = zipArchive.constructZippedObject(zipData, data, dirLength, data.isDirectory);\n                    if (zipData.length === zipArchive.files.length) {\n                        var blob = zipArchive.writeZippedContent(fileName, zipData, dirLength, skipFileSave);\n                        resolve(blob);\n                    }\n                });\n            }\n        });\n    };\n    /**\n     * release allocated un-managed resource\n     * @returns {void}\n     */\n    ZipArchive.prototype.destroy = function () {\n        if (this.files !== undefined && this.files.length > 0) {\n            for (var i = 0; i < this.files.length; i++) {\n                var file = this.files[i];\n                if (file instanceof ZipArchiveItem) {\n                    file.destroy();\n                }\n                file = undefined;\n            }\n            this.files = [];\n        }\n        this.files = undefined;\n        this.level = undefined;\n    };\n    ZipArchive.prototype.getCompressedData = function (item) {\n        var zipArchive = this;\n        var promise = new Promise(function (resolve, reject) {\n            if (item instanceof ZipArchiveItem) {\n                var reader_1 = new FileReader();\n                reader_1.onload = function () {\n                    var input = new Uint8Array(reader_1.result);\n                    var data = {\n                        fileName: item.name, crc32Value: 0, compressedData: [],\n                        compressedSize: undefined, uncompressedDataSize: input.length, compressionType: undefined,\n                        isDirectory: false\n                    };\n                    if (zipArchive.level === 'Normal') {\n                        zipArchive.compressData(input, data, CRC32TABLE);\n                        var length_1 = 0;\n                        for (var i = 0; i < data.compressedData.length; i++) {\n                            length_1 += data.compressedData[i].length;\n                        }\n                        data.compressedSize = length_1;\n                        data.compressionType = '\\x08\\x00'; //Deflated = 8\n                    }\n                    else {\n                        data.compressedSize = input.length;\n                        data.crc32Value = zipArchive.calculateCrc32Value(0, input, CRC32TABLE);\n                        data.compressionType = '\\x00\\x00'; // Stored = 0\n                        data.compressedData.push(input);\n                    }\n                    resolve(data);\n                };\n                reader_1.readAsArrayBuffer(item.data);\n            }\n            else {\n                var data = {\n                    fileName: item, crc32Value: 0, compressedData: '', compressedSize: 0, uncompressedDataSize: 0,\n                    compressionType: '\\x00\\x00', isDirectory: true\n                };\n                resolve(data);\n            }\n        });\n        return promise;\n    };\n    ZipArchive.prototype.compressData = function (input, data, crc32Table) {\n        var compressor = new CompressedStreamWriter(true);\n        var currentIndex = 0;\n        var nextIndex = 0;\n        do {\n            if (currentIndex >= input.length) {\n                compressor.close();\n                break;\n            }\n            nextIndex = Math.min(input.length, currentIndex + 16384);\n            var subArray = input.subarray(currentIndex, nextIndex);\n            data.crc32Value = this.calculateCrc32Value(data.crc32Value, subArray, crc32Table);\n            compressor.write(subArray, 0, nextIndex - currentIndex);\n            currentIndex = nextIndex;\n        } while (currentIndex <= input.length);\n        data.compressedData = compressor.compressedData;\n        compressor.destroy();\n    };\n    ZipArchive.prototype.constructZippedObject = function (zipParts, data, dirLength, isDirectory) {\n        var extFileAttr = 0;\n        var date = new Date();\n        if (isDirectory) {\n            extFileAttr = extFileAttr | 0x00010; // directory flag\n        }\n        extFileAttr = extFileAttr | (0 & 0x3F);\n        var header = this.writeHeader(data, date);\n        var localHeader = 'PK\\x03\\x04' + header + data.fileName;\n        var centralDir = this.writeCentralDirectory(data, header, dirLength, extFileAttr);\n        zipParts.push({ localHeader: localHeader, centralDir: centralDir, compressedData: data });\n        return dirLength + localHeader.length + data.compressedSize;\n    };\n    ZipArchive.prototype.writeHeader = function (data, date) {\n        var zipHeader = '';\n        zipHeader += '\\x0A\\x00' + '\\x00\\x00'; // version needed to extract & general purpose bit flag\n        zipHeader += data.compressionType; // compression method Deflate=8,Stored=0\n        zipHeader += this.getBytes(this.getModifiedTime(date), 2); // last modified Time\n        zipHeader += this.getBytes(this.getModifiedDate(date), 2); // last modified date\n        zipHeader += this.getBytes(data.crc32Value, 4); // crc-32 value\n        zipHeader += this.getBytes(data.compressedSize, 4); // compressed file size\n        zipHeader += this.getBytes(data.uncompressedDataSize, 4); // uncompressed file size\n        zipHeader += this.getBytes(data.fileName.length, 2); // file name length\n        zipHeader += this.getBytes(0, 2); // extra field length\n        return zipHeader;\n    };\n    ZipArchive.prototype.writeZippedContent = function (fileName, zipData, localDirLen, skipFileSave) {\n        var cenDirLen = 0;\n        var buffer = [];\n        for (var i = 0; i < zipData.length; i++) {\n            var item = zipData[i];\n            cenDirLen += item.centralDir.length;\n            buffer.push(this.getArrayBuffer(item.localHeader));\n            while (item.compressedData.compressedData.length) {\n                buffer.push(item.compressedData.compressedData.shift().buffer);\n            }\n        }\n        for (var i = 0; i < zipData.length; i++) {\n            buffer.push(this.getArrayBuffer(zipData[i].centralDir));\n        }\n        buffer.push(this.getArrayBuffer(this.writeFooter(zipData, cenDirLen, localDirLen)));\n        var blob = new Blob(buffer, { type: 'application/zip' });\n        if (!skipFileSave) {\n            Save.save(fileName, blob);\n        }\n        return blob;\n    };\n    ZipArchive.prototype.writeCentralDirectory = function (data, localHeader, offset, externalFileAttribute) {\n        var directoryHeader = 'PK\\x01\\x02' +\n            this.getBytes(0x0014, 2) + localHeader + // inherit from file header\n            this.getBytes(0, 2) + // comment length\n            '\\x00\\x00' + '\\x00\\x00' + // internal file attributes \n            this.getBytes(externalFileAttribute, 4) + // external file attributes\n            this.getBytes(offset, 4) + // local fileHeader relative offset\n            data.fileName;\n        return directoryHeader;\n    };\n    ZipArchive.prototype.writeFooter = function (zipData, centralLength, localLength) {\n        var dirEnd = 'PK\\x05\\x06' + '\\x00\\x00' + '\\x00\\x00' +\n            this.getBytes(zipData.length, 2) + this.getBytes(zipData.length, 2) +\n            this.getBytes(centralLength, 4) + this.getBytes(localLength, 4) +\n            this.getBytes(0, 2);\n        return dirEnd;\n    };\n    ZipArchive.prototype.getArrayBuffer = function (input) {\n        var a = new Uint8Array(input.length);\n        for (var j = 0; j < input.length; ++j) {\n            a[j] = input.charCodeAt(j) & 0xFF;\n        }\n        return a.buffer;\n    };\n    ZipArchive.prototype.getBytes = function (value, offset) {\n        var bytes = '';\n        for (var i = 0; i < offset; i++) {\n            bytes += String.fromCharCode(value & 0xff);\n            value = value >>> 8;\n        }\n        return bytes;\n    };\n    ZipArchive.prototype.getModifiedTime = function (date) {\n        var modTime = date.getHours();\n        modTime = modTime << 6;\n        modTime = modTime | date.getMinutes();\n        modTime = modTime << 5;\n        return modTime = modTime | date.getSeconds() / 2;\n    };\n    ZipArchive.prototype.getModifiedDate = function (date) {\n        var modiDate = date.getFullYear() - 1980;\n        modiDate = modiDate << 4;\n        modiDate = modiDate | (date.getMonth() + 1);\n        modiDate = modiDate << 5;\n        return modiDate = modiDate | date.getDate();\n    };\n    ZipArchive.prototype.calculateCrc32Value = function (crc32Value, input, crc32Table) {\n        crc32Value ^= -1;\n        for (var i = 0; i < input.length; i++) {\n            crc32Value = (crc32Value >>> 8) ^ crc32Table[(crc32Value ^ input[i]) & 0xFF];\n        }\n        return (crc32Value ^ (-1));\n    };\n    /**\n     * construct cyclic redundancy code table\n     * @private\n     */\n    ZipArchive.initCrc32Table = function () {\n        var i;\n        for (var j = 0; j < 256; j++) {\n            i = j;\n            for (var k = 0; k < 8; k++) {\n                i = ((i & 1) ? (0xEDB88320 ^ (i >>> 1)) : (i >>> 1));\n            }\n            CRC32TABLE[j] = i;\n        }\n    };\n    ZipArchive.findValueFromEnd = function (stream, value, maxCount) {\n        if (stream == null)\n            throw new DOMException(\"stream\");\n        //   if( !stream.CanSeek || !stream.CanRead )\n        //     throw new ArgumentOutOfRangeException( \"We need to have seekable and readable stream.\" );\n        // read last 4 bytes and compare with required value\n        var lStreamSize = stream.inputStream.buffer.byteLength;\n        if (lStreamSize < 4)\n            return -1;\n        var arrBuffer = new Uint8Array(4);\n        var lLastPos = Math.max(0, lStreamSize - maxCount);\n        var lCurrentPosition = lStreamSize - 1 - INT_SIZE;\n        stream.position = lCurrentPosition;\n        stream.read(arrBuffer, 0, INT_SIZE);\n        var uiCurValue = arrBuffer[0];\n        var bFound = (uiCurValue == value);\n        if (!bFound) {\n            while (lCurrentPosition > lLastPos) {\n                // remove unnecessary byte and replace it with new value.\n                uiCurValue <<= 8;\n                lCurrentPosition--;\n                stream.position = lCurrentPosition;\n                uiCurValue += stream.readByte();\n                if (uiCurValue == value) {\n                    bFound = true;\n                    break;\n                }\n            }\n        }\n        return bFound ? lCurrentPosition : -1;\n    };\n    /// <summary>\n    /// Extracts Int32 value from the stream.\n    /// </summary>\n    /// <param name=\"stream\">Stream to read data from.</param>\n    /// <returns>Extracted value.</returns>\n    ZipArchive.ReadInt32 = function (stream) {\n        var buffer = new Uint8Array(INT_SIZE);\n        if (stream.read(buffer, 0, INT_SIZE) != INT_SIZE) {\n            throw new DOMException(\"Unable to read value at the specified position - end of stream was reached.\");\n        }\n        return Utils.bitConverterToInt32(buffer, 0);\n    };\n    /// <summary>\n    /// Extracts Int16 value from the stream.\n    /// </summary>\n    /// <param name=\"stream\">Stream to read data from.</param>\n    /// <returns>Extracted value.</returns>\n    ZipArchive.ReadInt16 = function (stream) {\n        var buffer = new Uint8Array(SHORT_SIZE);\n        if (stream.read(buffer, 0, SHORT_SIZE) != SHORT_SIZE) {\n            throw new DOMException(\"Unable to read value at the specified position - end of stream was reached.\");\n        }\n        return Utils.bitConverterToInt16(buffer, 0);\n    };\n    /// <summary>\n    /// Extracts unsigned Int16 value from the stream.\n    /// </summary>\n    /// <param name=\"stream\">Stream to read data from.</param>\n    /// <returns>Extracted value.</returns>\n    ZipArchive.ReadUInt16 = function (stream) {\n        {\n            var buffer = new Uint8Array(SHORT_SIZE);\n            if (stream.read(buffer, 0, SHORT_SIZE) != SHORT_SIZE) {\n                throw new DOMException(\"Unable to read value at the specified position - end of stream was reached.\");\n            }\n            return Utils.bitConverterToInt16(buffer, 0);\n        }\n    };\n    return ZipArchive;\n}());\nexport { ZipArchive };\nvar ZipArchiveItemHelper = /** @class */ (function () {\n    function ZipArchiveItemHelper() {\n        /// <summary>\n        /// Zip header signature.\n        /// </summary>\n        this.headerSignature = 0x04034b50;\n        /// <summary>\n        /// Indicates whether we should check Crc value when reading item's data. Check\n        /// is performed when user gets access to decompressed data for the first time.\n        /// </summary>\n        this.checkCrc = true;\n        /// <summary>\n        /// Crc.\n        /// </summary>\n        this.crc32 = 0;\n    }\n    /// <summary>\n    /// Read data from the stream based on the central directory.\n    /// </summary>\n    /// <param name=\"stream\">Stream to read data from, stream.Position must point at just after correct file header.</param>\n    ZipArchiveItemHelper.prototype.readCentralDirectoryData = function (stream) {\n        // on the current moment we ignore \"version made by\" and \"version needed to extract\" fields.\n        stream.position += 4;\n        this.options = ZipArchive.ReadInt16(stream);\n        this.compressionMethod = ZipArchive.ReadInt16(stream);\n        this.checkCrc = (this.compressionMethod != 99); //COmpression.Defalte != SecurityConstants.AES\n        //m_bCompressed = true;\n        // on the current moment we ignore \"last mod file time\" and \"last mod file date\" fields.\n        var lastModified = ZipArchive.ReadInt32(stream);\n        //LastModified = ConvertToDateTime(lastModified);\n        this.crc32 = Utils.bitConverterToUInt32(ZipArchive.ReadInt32(stream));\n        this.compressedSize = ZipArchive.ReadInt32(stream);\n        this.originalSize = ZipArchive.ReadInt32(stream);\n        var iFileNameLength = ZipArchive.ReadInt16(stream);\n        var iExtraFieldLenth = ZipArchive.ReadInt16(stream);\n        var iCommentLength = ZipArchive.ReadInt16(stream);\n        // on the current moment we ignore and \"disk number start\" (2 bytes),\n        // \"internal file attributes\" (2 bytes).\n        stream.position += 4;\n        this.externalAttributes = ZipArchive.ReadInt32(stream);\n        this.localHeaderOffset = ZipArchive.ReadInt32(stream);\n        var arrBuffer = new Uint8Array(iFileNameLength);\n        stream.read(arrBuffer, 0, iFileNameLength);\n        var m_strItemName = Utils.byteToString(arrBuffer);\n        m_strItemName = m_strItemName.replace(\"\\\\\", \"/\");\n        this.name = m_strItemName;\n        stream.position += iExtraFieldLenth + iCommentLength;\n        if (this.options != 0)\n            this.options = 0;\n    };\n    /// <summary>\n    /// Reads zipped data from the stream.\n    /// </summary>\n    /// <param name=\"stream\">Stream to read data from.</param>\n    /// <param name=\"checkCrc\">Indicates whether we should check crc value after data decompression.</param>\n    ZipArchiveItemHelper.prototype.readData = function (stream, checkCrc) {\n        if (stream.length == 0)\n            throw new DOMException(\"stream\");\n        stream.position = this.localHeaderOffset;\n        this.checkCrc = checkCrc;\n        this.readLocalHeader(stream);\n        this.readCompressedData(stream);\n    };\n    ZipArchiveItemHelper.prototype.decompressData = function () {\n        if (this.compressionMethod == 8) {\n            if (this.originalSize > 0) {\n                this.decompressDataOld();\n            }\n        }\n    };\n    ZipArchiveItemHelper.prototype.decompressDataOld = function () {\n        var reader = new CompressedStreamReader(this.compressedStream, true);\n        var decompressedData;\n        if (this.originalSize > 0)\n            decompressedData = new Stream(new Uint8Array(this.originalSize));\n        var arrBuffer = new Uint8Array(BufferSize);\n        var iReadBytes;\n        var past = new Uint8Array(0);\n        while ((iReadBytes = reader.read(arrBuffer, 0, BufferSize)) > 0) {\n            //             past = new Uint8Array(decompressedData.length);\n            // let currentBlock: Uint8Array = arrBuffer.subarray(0, iReadBytes);\n            decompressedData.write(arrBuffer.subarray(0, iReadBytes), 0, iReadBytes);\n        }\n        this.unCompressedStream = decompressedData.toByteArray();\n        //   this.originalSize = decompressedData.Length;\n        //   m_bControlStream = true;\n        //   m_streamData = decompressedData;\n        //   decompressedData.SetLength( m_lOriginalSize );\n        //   decompressedData.Capacity = ( int )m_lOriginalSize;\n        if (this.checkCrc) {\n            //TODO: fix this\n            //CheckCrc(decompressedData.ToArray());\n        }\n        //m_streamData.Position = 0;\n    };\n    /// <summary>\n    /// Extracts local header from the stream.\n    /// </summary>\n    /// <param name=\"stream\">Stream to read data from.</param>\n    ZipArchiveItemHelper.prototype.readLocalHeader = function (stream) {\n        if (stream.length == 0)\n            throw new DOMException(\"stream\");\n        if (ZipArchive.ReadInt32(stream) != this.headerSignature)\n            throw new DOMException(\"Can't find local header signature - wrong file format or file is corrupt.\");\n        // TODO: it is good to verify data read from the central directory record,\n        // but on the current moment we simply skip it.\n        stream.position += 22;\n        var iNameLength = ZipArchive.ReadInt16(stream);\n        var iExtraLength = ZipArchive.ReadUInt16(stream);\n        if (this.compressionMethod == 99) //SecurityConstants.AES\n         {\n            // stream.Position += iNameLength + 8;\n            // m_archive.EncryptionAlgorithm = (EncryptionAlgorithm)stream.ReadByte();\n            // m_actualCompression = new byte[2];\n            // stream.Read(m_actualCompression, 0, 2);\n        }\n        else if (iExtraLength > 2) {\n            stream.position += iNameLength;\n            var headerVal = ZipArchive.ReadInt16(stream);\n            if (headerVal == 0x0017) //PKZipEncryptionHeader\n                throw new DOMException(\"UnSupported\");\n            else\n                stream.position += iExtraLength - 2;\n        }\n        else\n            stream.position += iNameLength + iExtraLength;\n    };\n    /// <summary>\n    /// Extracts compressed data from the stream.\n    /// </summary>\n    /// <param name=\"stream\">Stream to read data from.</param>\n    ZipArchiveItemHelper.prototype.readCompressedData = function (stream) {\n        var dataStream;\n        if (this.compressedSize > 0) {\n            var iBytesLeft = this.compressedSize;\n            dataStream = new Stream(new Uint8Array(iBytesLeft));\n            var arrBuffer = new Uint8Array(BufferSize);\n            while (iBytesLeft > 0) {\n                var iBytesToRead = Math.min(iBytesLeft, BufferSize);\n                if (stream.read(arrBuffer, 0, iBytesToRead) != iBytesToRead)\n                    throw new DOMException(\"End of file reached - wrong file format or file is corrupt.\");\n                dataStream.write(arrBuffer.subarray(0, iBytesToRead), 0, iBytesToRead);\n                iBytesLeft -= iBytesToRead;\n            }\n            // if(m_archive.Password != null)\n            // {\n            //     byte[] dataBuffer = new byte[dataStream.Length];\n            //     dataBuffer = dataStream.ToArray();\n            //     dataStream=new MemoryStream( Decrypt(dataBuffer));\n            // }\n            this.compressedStream = new Uint8Array(dataStream.inputStream);\n            // m_bControlStream = true;\n        }\n        else if (this.compressedSize < 0) //If compression size is negative, then read until the next header signature reached.\n         {\n            //   MemoryStream dataStream = new MemoryStream();\n            //   int bt = 0;\n            //   bool proceed=true;\n            //   while (proceed)\n            //   {\n            //       if ((bt = stream.ReadByte()) == Constants.HeaderSignatureStartByteValue)\n            //       {\n            //           stream.Position -= 1;\n            //           int headerSignature = ZipArchive.ReadInt32(stream);\n            //           if (headerSignature==Constants.CentralHeaderSignature || headerSignature==Constants.CentralHeaderSignature)\n            //           {\n            //               proceed = false;\n            //           }\n            //           stream.Position -= 3;\n            //       }\n            //       if (proceed)\n            //           dataStream.WriteByte((byte)bt);\n            //   }\n            //   m_streamData = dataStream;\n            //   m_lCompressedSize = m_streamData.Length;\n            //   m_bControlStream = true;\n        }\n        else if (this.compressedSize == 0) {\n            //  m_streamData = new MemoryStream();\n        }\n    };\n    return ZipArchiveItemHelper;\n}());\nexport { ZipArchiveItemHelper };\n/**\n * Class represent unique ZipArchive item\n * ```typescript\n * let archiveItem = new ZipArchiveItem(archive, 'directoryName\\fileName.txt');\n * ```\n */\nvar ZipArchiveItem = /** @class */ (function () {\n    /**\n     * constructor for creating {ZipArchiveItem} instance\n     * @param {Blob|ArrayBuffer} data file data\n     * @param {itemName} itemName absolute file path\n     */\n    function ZipArchiveItem(data, itemName) {\n        if (data === null || data === undefined) {\n            throw new Error('ArgumentException: data cannot be null or undefined');\n        }\n        if (itemName === null || itemName === undefined) {\n            throw new Error('ArgumentException: string cannot be null or undefined');\n        }\n        if (itemName.length === 0) {\n            throw new Error('string cannot be empty');\n        }\n        this.data = data;\n        this.name = itemName;\n    }\n    Object.defineProperty(ZipArchiveItem.prototype, \"dataStream\", {\n        get: function () {\n            return this.decompressedStream;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ZipArchiveItem.prototype, \"name\", {\n        /**\n         * Get the name of archive item\n         * @returns string\n         */\n        get: function () {\n            return this.fileName;\n        },\n        /**\n         * Set the name of archive item\n         * @param  {string} value\n         */\n        set: function (value) {\n            this.fileName = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * release allocated un-managed resource\n     * @returns {void}\n     */\n    ZipArchiveItem.prototype.destroy = function () {\n        this.fileName = undefined;\n        this.data = undefined;\n    };\n    return ZipArchiveItem;\n}());\nexport { ZipArchiveItem };\n/* eslint-enable */ \n", "/* eslint-disable */\nimport { Encoding } from '@syncfusion/ej2-file-utils';\n/**\n * array literal codes\n */\nvar ARR_LITERAL_CODES = new Int16Array(286);\nvar ARR_LITERAL_LENGTHS = new Uint8Array(286);\nvar ARR_DISTANCE_CODES = new Int16Array(30);\nvar ARR_DISTANCE_LENGTHS = new Uint8Array(30);\n/**\n * represent compression stream writer\n * ```typescript\n * let compressedWriter = new CompressedStreamWriter();\n * let text: string = 'Hello world!!!';\n * compressedWriter.write(text, 0, text.length);\n * compressedWriter.close();\n * ```\n */\nvar CompressedStreamWriter = /** @class */ (function () {\n    /**\n     * Initializes compressor and writes ZLib header if needed.\n     * @param {boolean} noWrap - optional if true, ZLib header and checksum will not be written.\n     */\n    function CompressedStreamWriter(noWrap) {\n        this.pendingBuffer = new Uint8Array(1 << 16);\n        this.pendingBufLength = 0;\n        this.pendingBufCache = 0;\n        this.pendingBufBitsInCache = 0;\n        this.bufferPosition = 0;\n        this.extraBits = 0;\n        this.currentHash = 0;\n        this.matchStart = 0;\n        this.matchLength = 0;\n        this.matchPrevAvail = false;\n        this.blockStart = 0;\n        this.stringStart = 0;\n        this.lookAhead = 0;\n        this.totalBytesIn = 0;\n        this.inputOffset = 0;\n        this.inputEnd = 0;\n        this.windowSize = 1 << 15;\n        this.windowMask = this.windowSize - 1;\n        this.hashSize = 1 << 15;\n        this.hashMask = this.hashSize - 1;\n        this.hashShift = Math.floor((15 + 3 - 1) / 3);\n        this.maxDist = this.windowSize - 262;\n        this.checkSum = 1;\n        this.noWrap = false;\n        if (!CompressedStreamWriter.isHuffmanTreeInitiated) {\n            CompressedStreamWriter.initHuffmanTree();\n            CompressedStreamWriter.isHuffmanTreeInitiated = true;\n        }\n        this.treeLiteral = new CompressorHuffmanTree(this, 286, 257, 15);\n        this.treeDistances = new CompressorHuffmanTree(this, 30, 1, 15);\n        this.treeCodeLengths = new CompressorHuffmanTree(this, 19, 4, 7);\n        this.arrDistances = new Uint16Array((1 << 14));\n        this.arrLiterals = new Uint8Array((1 << 14));\n        this.stream = [];\n        this.dataWindow = new Uint8Array(2 * this.windowSize);\n        this.hashHead = new Int16Array(this.hashSize);\n        this.hashPrevious = new Int16Array(this.windowSize);\n        this.blockStart = this.stringStart = 1;\n        this.noWrap = noWrap;\n        if (!noWrap) {\n            this.writeZLibHeader();\n        }\n    }\n    Object.defineProperty(CompressedStreamWriter.prototype, \"compressedData\", {\n        /**\n         * get compressed data\n         */\n        get: function () {\n            return this.stream;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CompressedStreamWriter.prototype, \"getCompressedString\", {\n        get: function () {\n            var compressedString = '';\n            if (this.stream !== undefined) {\n                for (var i = 0; i < this.stream.length; i++) {\n                    compressedString += String.fromCharCode.apply(null, this.stream[i]);\n                }\n            }\n            return compressedString;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Compresses data and writes it to the stream.\n     * @param {Uint8Array} data - data to compress\n     * @param {number} offset - offset in data\n     * @param {number} length - length of the data\n     * @returns {void}\n     */\n    CompressedStreamWriter.prototype.write = function (data, offset, length) {\n        if (data === undefined || data === null) {\n            throw new Error('ArgumentException: data cannot null or undefined');\n        }\n        var end = offset + length;\n        if (0 > offset || offset > end || end > data.length) {\n            throw new Error('ArgumentOutOfRangeException: Offset or length is incorrect');\n        }\n        if (typeof data === 'string') {\n            var encode = new Encoding(false);\n            encode.type = 'Utf8';\n            data = new Uint8Array(encode.getBytes(data, 0, data.length));\n            end = offset + data.length;\n        }\n        this.inputBuffer = data;\n        this.inputOffset = offset;\n        this.inputEnd = end;\n        if (!this.noWrap) {\n            this.checkSum = ChecksumCalculator.checksumUpdate(this.checkSum, this.inputBuffer, this.inputOffset, end);\n        }\n        while (!(this.inputEnd === this.inputOffset) || !(this.pendingBufLength === 0)) {\n            this.pendingBufferFlush();\n            this.compressData(false);\n        }\n    };\n    /**\n     * write ZLib header to the compressed data\n     * @return {void}\n     */\n    CompressedStreamWriter.prototype.writeZLibHeader = function () {\n        /* Initialize header.*/\n        var headerDate = (8 + (7 << 4)) << 8;\n        /* Save compression level.*/\n        headerDate |= ((5 >> 2) & 3) << 6;\n        /* Align header.*/\n        headerDate += 31 - (headerDate % 31);\n        /* Write header to stream.*/\n        this.pendingBufferWriteShortBytes(headerDate);\n    };\n    /**\n     *  Write Most Significant Bytes in to stream\n     * @param {number} s - check sum value\n     */\n    CompressedStreamWriter.prototype.pendingBufferWriteShortBytes = function (s) {\n        this.pendingBuffer[this.pendingBufLength++] = s >> 8;\n        this.pendingBuffer[this.pendingBufLength++] = s;\n    };\n    CompressedStreamWriter.prototype.compressData = function (finish) {\n        var success;\n        do {\n            this.fillWindow();\n            var canFlush = (finish && this.inputEnd === this.inputOffset);\n            success = this.compressSlow(canFlush, finish);\n        } while (this.pendingBufLength === 0 && success);\n        return success;\n    };\n    CompressedStreamWriter.prototype.compressSlow = function (flush, finish) {\n        if (this.lookAhead < 262 && !flush) {\n            return false;\n        }\n        while (this.lookAhead >= 262 || flush) {\n            if (this.lookAhead === 0) {\n                return this.lookAheadCompleted(finish);\n            }\n            if (this.stringStart >= 2 * this.windowSize - 262) {\n                this.slideWindow();\n            }\n            var prevMatch = this.matchStart;\n            var prevLen = this.matchLength;\n            if (this.lookAhead >= 3) {\n                this.discardMatch();\n            }\n            if (prevLen >= 3 && this.matchLength <= prevLen) {\n                prevLen = this.matchPreviousBest(prevMatch, prevLen);\n            }\n            else {\n                this.matchPreviousAvailable();\n            }\n            if (this.bufferPosition >= (1 << 14)) {\n                return this.huffmanIsFull(finish);\n            }\n        }\n        return true;\n    };\n    CompressedStreamWriter.prototype.discardMatch = function () {\n        var hashHead = this.insertString();\n        if (hashHead !== 0 && this.stringStart - hashHead <= this.maxDist && this.findLongestMatch(hashHead)) {\n            if (this.matchLength <= 5 && (this.matchLength === 3 && this.stringStart - this.matchStart > 4096)) {\n                this.matchLength = 3 - 1;\n            }\n        }\n    };\n    CompressedStreamWriter.prototype.matchPreviousAvailable = function () {\n        if (this.matchPrevAvail) {\n            this.huffmanTallyLit(this.dataWindow[this.stringStart - 1] & 0xff);\n        }\n        this.matchPrevAvail = true;\n        this.stringStart++;\n        this.lookAhead--;\n    };\n    CompressedStreamWriter.prototype.matchPreviousBest = function (prevMatch, prevLen) {\n        this.huffmanTallyDist(this.stringStart - 1 - prevMatch, prevLen);\n        prevLen -= 2;\n        do {\n            this.stringStart++;\n            this.lookAhead--;\n            if (this.lookAhead >= 3) {\n                this.insertString();\n            }\n        } while (--prevLen > 0);\n        this.stringStart++;\n        this.lookAhead--;\n        this.matchPrevAvail = false;\n        this.matchLength = 3 - 1;\n        return prevLen;\n    };\n    CompressedStreamWriter.prototype.lookAheadCompleted = function (finish) {\n        if (this.matchPrevAvail) {\n            this.huffmanTallyLit(this.dataWindow[this.stringStart - 1] & 0xff);\n        }\n        this.matchPrevAvail = false;\n        this.huffmanFlushBlock(this.dataWindow, this.blockStart, this.stringStart - this.blockStart, finish);\n        this.blockStart = this.stringStart;\n        return false;\n    };\n    CompressedStreamWriter.prototype.huffmanIsFull = function (finish) {\n        var len = this.stringStart - this.blockStart;\n        if (this.matchPrevAvail) {\n            len--;\n        }\n        var lastBlock = (finish && this.lookAhead === 0 && !this.matchPrevAvail);\n        this.huffmanFlushBlock(this.dataWindow, this.blockStart, len, lastBlock);\n        this.blockStart += len;\n        return !lastBlock;\n    };\n    CompressedStreamWriter.prototype.fillWindow = function () {\n        if (this.stringStart >= this.windowSize + this.maxDist) {\n            this.slideWindow();\n        }\n        while (this.lookAhead < 262 && this.inputOffset < this.inputEnd) {\n            var more = 2 * this.windowSize - this.lookAhead - this.stringStart;\n            if (more > this.inputEnd - this.inputOffset) {\n                more = this.inputEnd - this.inputOffset;\n            }\n            this.dataWindow.set(this.inputBuffer.subarray(this.inputOffset, this.inputOffset + more), this.stringStart + this.lookAhead);\n            this.inputOffset += more;\n            this.totalBytesIn += more;\n            this.lookAhead += more;\n        }\n        if (this.lookAhead >= 3) {\n            this.updateHash();\n        }\n    };\n    CompressedStreamWriter.prototype.slideWindow = function () {\n        this.dataWindow.set(this.dataWindow.subarray(this.windowSize, this.windowSize + this.windowSize), 0);\n        this.matchStart -= this.windowSize;\n        this.stringStart -= this.windowSize;\n        this.blockStart -= this.windowSize;\n        for (var i = 0; i < this.hashSize; ++i) {\n            var m = this.hashHead[i] & 0xffff;\n            this.hashHead[i] = (((m >= this.windowSize) ? (m - this.windowSize) : 0));\n        }\n        for (var i = 0; i < this.windowSize; i++) {\n            var m = this.hashPrevious[i] & 0xffff;\n            this.hashPrevious[i] = ((m >= this.windowSize) ? (m - this.windowSize) : 0);\n        }\n    };\n    CompressedStreamWriter.prototype.insertString = function () {\n        var match;\n        var hash = ((this.currentHash << this.hashShift) ^ this.dataWindow[this.stringStart + (3 - 1)]) & this.hashMask;\n        this.hashPrevious[this.stringStart & this.windowMask] = match = this.hashHead[hash];\n        this.hashHead[hash] = this.stringStart;\n        this.currentHash = hash;\n        return match & 0xffff;\n    };\n    CompressedStreamWriter.prototype.findLongestMatch = function (curMatch) {\n        var chainLen = 4096;\n        var niceLen = 258;\n        var scan = this.stringStart;\n        var match;\n        var bestEnd = this.stringStart + this.matchLength;\n        var bestLength = Math.max(this.matchLength, 3 - 1);\n        var limit = Math.max(this.stringStart - this.maxDist, 0);\n        var stringEnd = this.stringStart + 258 - 1;\n        var scanEnd1 = this.dataWindow[bestEnd - 1];\n        var scanEnd = this.dataWindow[bestEnd];\n        var data = this.dataWindow;\n        if (bestLength >= 32) {\n            chainLen >>= 2;\n        }\n        if (niceLen > this.lookAhead) {\n            niceLen = this.lookAhead;\n        }\n        do {\n            if (data[curMatch + bestLength] !== scanEnd ||\n                data[curMatch + bestLength - 1] !== scanEnd1 ||\n                data[curMatch] !== data[scan] ||\n                data[curMatch + 1] !== data[scan + 1]) {\n                continue;\n            }\n            match = curMatch + 2;\n            scan += 2;\n            /* tslint:disable */\n            while (data[++scan] === data[++match] && data[++scan] === data[++match] &&\n                data[++scan] === data[++match] && data[++scan] === data[++match] &&\n                data[++scan] === data[++match] && data[++scan] === data[++match] &&\n                data[++scan] === data[++match] && data[++scan] === data[++match] && scan < stringEnd) {\n                /* tslint:disable */\n            }\n            if (scan > bestEnd) {\n                this.matchStart = curMatch;\n                bestEnd = scan;\n                bestLength = scan - this.stringStart;\n                if (bestLength >= niceLen) {\n                    break;\n                }\n                scanEnd1 = data[bestEnd - 1];\n                scanEnd = data[bestEnd];\n            }\n            scan = this.stringStart;\n        } while ((curMatch = (this.hashPrevious[curMatch & this.windowMask] & 0xffff)) > limit && --chainLen !== 0);\n        this.matchLength = Math.min(bestLength, this.lookAhead);\n        return this.matchLength >= 3;\n    };\n    CompressedStreamWriter.prototype.updateHash = function () {\n        this.currentHash = (this.dataWindow[this.stringStart] << this.hashShift) ^ this.dataWindow[this.stringStart + 1];\n    };\n    CompressedStreamWriter.prototype.huffmanTallyLit = function (literal) {\n        this.arrDistances[this.bufferPosition] = 0;\n        this.arrLiterals[this.bufferPosition++] = literal;\n        this.treeLiteral.codeFrequencies[literal]++;\n        return this.bufferPosition >= (1 << 14);\n    };\n    CompressedStreamWriter.prototype.huffmanTallyDist = function (dist, len) {\n        this.arrDistances[this.bufferPosition] = dist;\n        this.arrLiterals[this.bufferPosition++] = (len - 3);\n        var lc = this.huffmanLengthCode(len - 3);\n        this.treeLiteral.codeFrequencies[lc]++;\n        if (lc >= 265 && lc < 285) {\n            this.extraBits += Math.floor((lc - 261) / 4);\n        }\n        var dc = this.huffmanDistanceCode(dist - 1);\n        this.treeDistances.codeFrequencies[dc]++;\n        if (dc >= 4) {\n            this.extraBits += Math.floor((dc / 2 - 1));\n        }\n        return this.bufferPosition >= (1 << 14);\n    };\n    CompressedStreamWriter.prototype.huffmanFlushBlock = function (stored, storedOffset, storedLength, lastBlock) {\n        this.treeLiteral.codeFrequencies[256]++;\n        this.treeLiteral.buildTree();\n        this.treeDistances.buildTree();\n        this.treeLiteral.calculateBLFreq(this.treeCodeLengths);\n        this.treeDistances.calculateBLFreq(this.treeCodeLengths);\n        this.treeCodeLengths.buildTree();\n        var blTreeCodes = 4;\n        for (var i = 18; i > blTreeCodes; i--) {\n            if (this.treeCodeLengths.codeLengths[CompressorHuffmanTree.huffCodeLengthOrders[i]] > 0) {\n                blTreeCodes = i + 1;\n            }\n        }\n        var opt_len = 14 + blTreeCodes * 3 + this.treeCodeLengths.getEncodedLength() +\n            this.treeLiteral.getEncodedLength() + this.treeDistances.getEncodedLength() + this.extraBits;\n        var static_len = this.extraBits;\n        for (var i = 0; i < 286; i++) {\n            static_len += this.treeLiteral.codeFrequencies[i] * ARR_LITERAL_LENGTHS[i];\n        }\n        for (var i = 0; i < 30; i++) {\n            static_len += this.treeDistances.codeFrequencies[i] * ARR_DISTANCE_LENGTHS[i];\n        }\n        if (opt_len >= static_len) {\n            // Force static trees.\n            opt_len = static_len;\n        }\n        if (storedOffset >= 0 && storedLength + 4 < opt_len >> 3) {\n            this.huffmanFlushStoredBlock(stored, storedOffset, storedLength, lastBlock);\n        }\n        else if (opt_len == static_len) {\n            // Encode with static tree.\n            this.pendingBufferWriteBits((1 << 1) + (lastBlock ? 1 : 0), 3);\n            this.treeLiteral.setStaticCodes(ARR_LITERAL_CODES, ARR_LITERAL_LENGTHS);\n            this.treeDistances.setStaticCodes(ARR_DISTANCE_CODES, ARR_DISTANCE_LENGTHS);\n            this.huffmanCompressBlock();\n            this.huffmanReset();\n        }\n        else {\n            this.pendingBufferWriteBits((2 << 1) + (lastBlock ? 1 : 0), 3);\n            this.huffmanSendAllTrees(blTreeCodes);\n            this.huffmanCompressBlock();\n            this.huffmanReset();\n        }\n    };\n    CompressedStreamWriter.prototype.huffmanFlushStoredBlock = function (stored, storedOffset, storedLength, lastBlock) {\n        this.pendingBufferWriteBits((0 << 1) + (lastBlock ? 1 : 0), 3);\n        this.pendingBufferAlignToByte();\n        this.pendingBufferWriteShort(storedLength);\n        this.pendingBufferWriteShort(~storedLength);\n        this.pendingBufferWriteByteBlock(stored, storedOffset, storedLength);\n        this.huffmanReset();\n    };\n    CompressedStreamWriter.prototype.huffmanLengthCode = function (len) {\n        if (len === 255) {\n            return 285;\n        }\n        var code = 257;\n        while (len >= 8) {\n            code += 4;\n            len >>= 1;\n        }\n        return code + len;\n    };\n    CompressedStreamWriter.prototype.huffmanDistanceCode = function (distance) {\n        var code = 0;\n        while (distance >= 4) {\n            code += 2;\n            distance >>= 1;\n        }\n        return code + distance;\n    };\n    CompressedStreamWriter.prototype.huffmanSendAllTrees = function (blTreeCodes) {\n        this.treeCodeLengths.buildCodes();\n        this.treeLiteral.buildCodes();\n        this.treeDistances.buildCodes();\n        this.pendingBufferWriteBits(this.treeLiteral.treeLength - 257, 5);\n        this.pendingBufferWriteBits(this.treeDistances.treeLength - 1, 5);\n        this.pendingBufferWriteBits(blTreeCodes - 4, 4);\n        for (var rank = 0; rank < blTreeCodes; rank++) {\n            this.pendingBufferWriteBits(this.treeCodeLengths.codeLengths[CompressorHuffmanTree.huffCodeLengthOrders[rank]], 3);\n        }\n        this.treeLiteral.writeTree(this.treeCodeLengths);\n        this.treeDistances.writeTree(this.treeCodeLengths);\n    };\n    CompressedStreamWriter.prototype.huffmanReset = function () {\n        this.bufferPosition = 0;\n        this.extraBits = 0;\n        this.treeLiteral.reset();\n        this.treeDistances.reset();\n        this.treeCodeLengths.reset();\n    };\n    CompressedStreamWriter.prototype.huffmanCompressBlock = function () {\n        for (var i = 0; i < this.bufferPosition; i++) {\n            var literalLen = this.arrLiterals[i] & 255;\n            var dist = this.arrDistances[i];\n            if (dist-- !== 0) {\n                var lc = this.huffmanLengthCode(literalLen);\n                this.treeLiteral.writeCodeToStream(lc);\n                var bits = Math.floor((lc - 261) / 4);\n                if (bits > 0 && bits <= 5) {\n                    this.pendingBufferWriteBits(literalLen & ((1 << bits) - 1), bits);\n                }\n                var dc = this.huffmanDistanceCode(dist);\n                this.treeDistances.writeCodeToStream(dc);\n                bits = Math.floor(dc / 2 - 1);\n                if (bits > 0) {\n                    this.pendingBufferWriteBits(dist & ((1 << bits) - 1), bits);\n                }\n            }\n            else {\n                this.treeLiteral.writeCodeToStream(literalLen);\n            }\n        }\n        this.treeLiteral.writeCodeToStream(256);\n    };\n    /**\n     * write bits in to internal buffer\n     * @param {number} b - source of bits\n     * @param {number} count - count of bits to write\n     */\n    CompressedStreamWriter.prototype.pendingBufferWriteBits = function (b, count) {\n        var uint = new Uint32Array(1);\n        uint[0] = this.pendingBufCache | (b << this.pendingBufBitsInCache);\n        this.pendingBufCache = uint[0];\n        this.pendingBufBitsInCache += count;\n        this.pendingBufferFlushBits();\n    };\n    CompressedStreamWriter.prototype.pendingBufferFlush = function (isClose) {\n        this.pendingBufferFlushBits();\n        if (this.pendingBufLength > 0) {\n            var array = new Uint8Array(this.pendingBufLength);\n            array.set(this.pendingBuffer.subarray(0, this.pendingBufLength), 0);\n            this.stream.push(array);\n        }\n        this.pendingBufLength = 0;\n    };\n    CompressedStreamWriter.prototype.pendingBufferFlushBits = function () {\n        var result = 0;\n        while (this.pendingBufBitsInCache >= 8 && this.pendingBufLength < (1 << 16)) {\n            this.pendingBuffer[this.pendingBufLength++] = this.pendingBufCache;\n            this.pendingBufCache >>= 8;\n            this.pendingBufBitsInCache -= 8;\n            result++;\n        }\n        return result;\n    };\n    CompressedStreamWriter.prototype.pendingBufferWriteByteBlock = function (data, offset, length) {\n        var array = data.subarray(offset, offset + length);\n        this.pendingBuffer.set(array, this.pendingBufLength);\n        this.pendingBufLength += length;\n    };\n    CompressedStreamWriter.prototype.pendingBufferWriteShort = function (s) {\n        this.pendingBuffer[this.pendingBufLength++] = s;\n        this.pendingBuffer[this.pendingBufLength++] = (s >> 8);\n    };\n    CompressedStreamWriter.prototype.pendingBufferAlignToByte = function () {\n        if (this.pendingBufBitsInCache > 0) {\n            this.pendingBuffer[this.pendingBufLength++] = this.pendingBufCache;\n        }\n        this.pendingBufCache = 0;\n        this.pendingBufBitsInCache = 0;\n    };\n    /**\n     * Huffman Tree literal calculation\n     * @private\n     */\n    CompressedStreamWriter.initHuffmanTree = function () {\n        var i = 0;\n        while (i < 144) {\n            ARR_LITERAL_CODES[i] = CompressorHuffmanTree.bitReverse((0x030 + i) << 8);\n            ARR_LITERAL_LENGTHS[i++] = 8;\n        }\n        while (i < 256) {\n            ARR_LITERAL_CODES[i] = CompressorHuffmanTree.bitReverse((0x190 - 144 + i) << 7);\n            ARR_LITERAL_LENGTHS[i++] = 9;\n        }\n        while (i < 280) {\n            ARR_LITERAL_CODES[i] = CompressorHuffmanTree.bitReverse((0x000 - 256 + i) << 9);\n            ARR_LITERAL_LENGTHS[i++] = 7;\n        }\n        while (i < 286) {\n            ARR_LITERAL_CODES[i] = CompressorHuffmanTree.bitReverse((0x0c0 - 280 + i) << 8);\n            ARR_LITERAL_LENGTHS[i++] = 8;\n        }\n        for (i = 0; i < 30; i++) {\n            ARR_DISTANCE_CODES[i] = CompressorHuffmanTree.bitReverse(i << 11);\n            ARR_DISTANCE_LENGTHS[i] = 5;\n        }\n    };\n    /**\n     * close the stream and write all pending buffer in to stream\n     * @returns {void}\n     */\n    CompressedStreamWriter.prototype.close = function () {\n        do {\n            this.pendingBufferFlush(true);\n            if (!this.compressData(true)) {\n                this.pendingBufferFlush(true);\n                this.pendingBufferAlignToByte();\n                if (!this.noWrap) {\n                    this.pendingBufferWriteShortBytes(this.checkSum >> 16);\n                    this.pendingBufferWriteShortBytes(this.checkSum & 0xffff);\n                }\n                this.pendingBufferFlush(true);\n            }\n        } while (!(this.inputEnd === this.inputOffset) ||\n            !(this.pendingBufLength === 0));\n    };\n    /**\n     * release allocated un-managed resource\n     * @returns {void}\n     */\n    CompressedStreamWriter.prototype.destroy = function () {\n        this.stream = [];\n        this.stream = undefined;\n        this.pendingBuffer = undefined;\n        this.treeLiteral = undefined;\n        this.treeDistances = undefined;\n        this.treeCodeLengths = undefined;\n        this.arrLiterals = undefined;\n        this.arrDistances = undefined;\n        this.hashHead = undefined;\n        this.hashPrevious = undefined;\n        this.dataWindow = undefined;\n        this.inputBuffer = undefined;\n        this.pendingBufLength = undefined;\n        this.pendingBufCache = undefined;\n        this.pendingBufBitsInCache = undefined;\n        this.bufferPosition = undefined;\n        this.extraBits = undefined;\n        this.currentHash = undefined;\n        this.matchStart = undefined;\n        this.matchLength = undefined;\n        this.matchPrevAvail = undefined;\n        this.blockStart = undefined;\n        this.stringStart = undefined;\n        this.lookAhead = undefined;\n        this.totalBytesIn = undefined;\n        this.inputOffset = undefined;\n        this.inputEnd = undefined;\n        this.windowSize = undefined;\n        this.windowMask = undefined;\n        this.hashSize = undefined;\n        this.hashMask = undefined;\n        this.hashShift = undefined;\n        this.maxDist = undefined;\n        this.checkSum = undefined;\n        this.noWrap = undefined;\n    };\n    CompressedStreamWriter.isHuffmanTreeInitiated = false;\n    return CompressedStreamWriter;\n}());\nexport { CompressedStreamWriter };\n/**\n * represent the Huffman Tree\n */\nvar CompressorHuffmanTree = /** @class */ (function () {\n    /**\n     * Create new Huffman Tree\n     * @param {CompressedStreamWriter} writer instance\n     * @param {number} elementCount - element count\n     * @param {number} minCodes - minimum count\n     * @param {number} maxLength - maximum count\n     */\n    function CompressorHuffmanTree(writer, elementCount, minCodes, maxLength) {\n        this.writer = writer;\n        this.codeMinCount = minCodes;\n        this.maxLength = maxLength;\n        this.codeFrequency = new Uint16Array(elementCount);\n        this.lengthCount = new Int32Array(maxLength);\n    }\n    Object.defineProperty(CompressorHuffmanTree.prototype, \"treeLength\", {\n        get: function () {\n            return this.codeCount;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CompressorHuffmanTree.prototype, \"codeLengths\", {\n        get: function () {\n            return this.codeLength;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CompressorHuffmanTree.prototype, \"codeFrequencies\", {\n        get: function () {\n            return this.codeFrequency;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CompressorHuffmanTree.prototype.setStaticCodes = function (codes, lengths) {\n        var temp = new Int16Array(codes.length);\n        temp.set(codes, 0);\n        this.codes = temp;\n        var lengthTemp = new Uint8Array(lengths.length);\n        lengthTemp.set(lengths, 0);\n        this.codeLength = lengthTemp;\n    };\n    /**\n     * reset all code data in tree\n     * @returns {void}\n     */\n    CompressorHuffmanTree.prototype.reset = function () {\n        for (var i = 0; i < this.codeFrequency.length; i++) {\n            this.codeFrequency[i] = 0;\n        }\n        this.codes = undefined;\n        this.codeLength = undefined;\n    };\n    /**\n     * write code to the compressor output stream\n     * @param {number} code - code to be written\n     * @returns {void}\n     */\n    CompressorHuffmanTree.prototype.writeCodeToStream = function (code) {\n        this.writer.pendingBufferWriteBits(this.codes[code] & 0xffff, this.codeLength[code]);\n    };\n    /**\n     * calculate code from their frequencies\n     * @returns {void}\n     */\n    CompressorHuffmanTree.prototype.buildCodes = function () {\n        var nextCode = new Int32Array(this.maxLength);\n        this.codes = new Int16Array(this.codeCount);\n        var code = 0;\n        for (var bitsCount = 0; bitsCount < this.maxLength; bitsCount++) {\n            nextCode[bitsCount] = code;\n            code += this.lengthCount[bitsCount] << (15 - bitsCount);\n        }\n        for (var i = 0; i < this.codeCount; i++) {\n            var bits = this.codeLength[i];\n            if (bits > 0) {\n                this.codes[i] = CompressorHuffmanTree.bitReverse(nextCode[bits - 1]);\n                nextCode[bits - 1] += 1 << (16 - bits);\n            }\n        }\n    };\n    CompressorHuffmanTree.bitReverse = function (value) {\n        return (CompressorHuffmanTree.reverseBits[value & 15] << 12\n            | CompressorHuffmanTree.reverseBits[(value >> 4) & 15] << 8\n            | CompressorHuffmanTree.reverseBits[(value >> 8) & 15] << 4\n            | CompressorHuffmanTree.reverseBits[value >> 12]);\n    };\n    /**\n     * calculate length of compressed data\n     * @returns {number}\n     */\n    CompressorHuffmanTree.prototype.getEncodedLength = function () {\n        var len = 0;\n        for (var i = 0; i < this.codeFrequency.length; i++) {\n            len += this.codeFrequency[i] * this.codeLength[i];\n        }\n        return len;\n    };\n    /**\n     * calculate code frequencies\n     * @param {CompressorHuffmanTree} blTree\n     * @returns {void}\n     */\n    CompressorHuffmanTree.prototype.calculateBLFreq = function (blTree) {\n        var maxCount;\n        var minCount;\n        var count;\n        var curLen = -1;\n        var i = 0;\n        while (i < this.codeCount) {\n            count = 1;\n            var nextLen = this.codeLength[i];\n            if (nextLen === 0) {\n                maxCount = 138;\n                minCount = 3;\n            }\n            else {\n                maxCount = 6;\n                minCount = 3;\n                if (curLen !== nextLen) {\n                    blTree.codeFrequency[nextLen]++;\n                    count = 0;\n                }\n            }\n            curLen = nextLen;\n            i++;\n            while (i < this.codeCount && curLen === this.codeLength[i]) {\n                i++;\n                if (++count >= maxCount) {\n                    break;\n                }\n            }\n            if (count < minCount) {\n                blTree.codeFrequency[curLen] += count;\n            }\n            else if (curLen !== 0) {\n                blTree.codeFrequency[16]++;\n            }\n            else if (count <= 10) {\n                blTree.codeFrequency[17]++;\n            }\n            else {\n                blTree.codeFrequency[18]++;\n            }\n        }\n    };\n    /**\n     * @param {CompressorHuffmanTree} blTree - write tree to output stream\n     * @returns {void}\n     */\n    CompressorHuffmanTree.prototype.writeTree = function (blTree) {\n        var maxRepeatCount;\n        var minRepeatCount;\n        var currentRepeatCount;\n        var currentCodeLength = -1;\n        var i = 0;\n        while (i < this.codeCount) {\n            currentRepeatCount = 1;\n            var nextLen = this.codeLength[i];\n            if (nextLen === 0) {\n                maxRepeatCount = 138;\n                minRepeatCount = 3;\n            }\n            else {\n                maxRepeatCount = 6;\n                minRepeatCount = 3;\n                if (currentCodeLength !== nextLen) {\n                    blTree.writeCodeToStream(nextLen);\n                    currentRepeatCount = 0;\n                }\n            }\n            currentCodeLength = nextLen;\n            i++;\n            while (i < this.codeCount && currentCodeLength === this.codeLength[i]) {\n                i++;\n                if (++currentRepeatCount >= maxRepeatCount) {\n                    break;\n                }\n            }\n            if (currentRepeatCount < minRepeatCount) {\n                while (currentRepeatCount-- > 0) {\n                    blTree.writeCodeToStream(currentCodeLength);\n                }\n            }\n            else if (currentCodeLength !== 0) {\n                blTree.writeCodeToStream(16);\n                this.writer.pendingBufferWriteBits(currentRepeatCount - 3, 2);\n            }\n            else if (currentRepeatCount <= 10) {\n                blTree.writeCodeToStream(17);\n                this.writer.pendingBufferWriteBits(currentRepeatCount - 3, 3);\n            }\n            else {\n                blTree.writeCodeToStream(18);\n                this.writer.pendingBufferWriteBits(currentRepeatCount - 11, 7);\n            }\n        }\n    };\n    /**\n     * Build huffman tree\n     * @returns {void}\n     */\n    CompressorHuffmanTree.prototype.buildTree = function () {\n        var codesCount = this.codeFrequency.length;\n        var arrTree = new Int32Array(codesCount);\n        var treeLength = 0;\n        var maxCount = 0;\n        for (var n = 0; n < codesCount; n++) {\n            var freq = this.codeFrequency[n];\n            if (freq !== 0) {\n                var pos = treeLength++;\n                var pPos = 0;\n                while (pos > 0 && this.codeFrequency[arrTree[pPos = Math.floor((pos - 1) / 2)]] > freq) {\n                    arrTree[pos] = arrTree[pPos];\n                    pos = pPos;\n                }\n                arrTree[pos] = n;\n                maxCount = n;\n            }\n        }\n        while (treeLength < 2) {\n            arrTree[treeLength++] =\n                (maxCount < 2) ? ++maxCount : 0;\n        }\n        this.codeCount = Math.max(maxCount + 1, this.codeMinCount);\n        var leafsCount = treeLength;\n        var nodesCount = leafsCount;\n        var child = new Int32Array(4 * treeLength - 2);\n        var values = new Int32Array(2 * treeLength - 1);\n        for (var i = 0; i < treeLength; i++) {\n            var node = arrTree[i];\n            var iIndex = 2 * i;\n            child[iIndex] = node;\n            child[iIndex + 1] = -1;\n            values[i] = (this.codeFrequency[node] << 8);\n            arrTree[i] = i;\n        }\n        this.constructHuffmanTree(arrTree, treeLength, values, nodesCount, child);\n        this.buildLength(child);\n    };\n    CompressorHuffmanTree.prototype.constructHuffmanTree = function (arrTree, treeLength, values, nodesCount, child) {\n        do {\n            var first = arrTree[0];\n            var last = arrTree[--treeLength];\n            var lastVal = values[last];\n            var pPos = 0;\n            var path = 1;\n            while (path < treeLength) {\n                if (path + 1 < treeLength && values[arrTree[path]] > values[arrTree[path + 1]]) {\n                    path++;\n                }\n                arrTree[pPos] = arrTree[path];\n                pPos = path;\n                path = pPos * 2 + 1;\n            }\n            while ((path = pPos) > 0 && values[arrTree[pPos = Math.floor((path - 1) / 2)]] > lastVal) {\n                arrTree[path] = arrTree[pPos];\n            }\n            arrTree[path] = last;\n            var second = arrTree[0];\n            last = nodesCount++;\n            child[2 * last] = first;\n            child[2 * last + 1] = second;\n            var minDepth = Math.min(values[first] & 0xff, values[second] & 0xff);\n            values[last] = lastVal = values[first] + values[second] - minDepth + 1;\n            pPos = 0;\n            path = 1;\n            /* tslint:disable */\n            while (path < treeLength) {\n                if (path + 1 < treeLength && values[arrTree[path]] > values[arrTree[path + 1]]) {\n                    path++;\n                }\n                arrTree[pPos] = arrTree[path];\n                pPos = path;\n                path = pPos * 2 + 1;\n            } /* tslint:disable */\n            while ((path = pPos) > 0 && values[arrTree[pPos = Math.floor((path - 1) / 2)]] > lastVal) {\n                arrTree[path] = arrTree[pPos];\n            }\n            arrTree[path] = last;\n        } while (treeLength > 1);\n    };\n    CompressorHuffmanTree.prototype.buildLength = function (child) {\n        this.codeLength = new Uint8Array(this.codeFrequency.length);\n        var numNodes = Math.floor(child.length / 2);\n        var numLeafs = Math.floor((numNodes + 1) / 2);\n        var overflow = 0;\n        for (var i = 0; i < this.maxLength; i++) {\n            this.lengthCount[i] = 0;\n        }\n        overflow = this.calculateOptimalCodeLength(child, overflow, numNodes);\n        if (overflow === 0) {\n            return;\n        }\n        var iIncreasableLength = this.maxLength - 1;\n        do {\n            while (this.lengthCount[--iIncreasableLength] === 0) {\n                /* tslint:disable */\n            }\n            do {\n                this.lengthCount[iIncreasableLength]--;\n                this.lengthCount[++iIncreasableLength]++;\n                overflow -= (1 << (this.maxLength - 1 - iIncreasableLength));\n            } while (overflow > 0 && iIncreasableLength < this.maxLength - 1);\n        } while (overflow > 0);\n        this.recreateTree(child, overflow, numLeafs);\n    };\n    CompressorHuffmanTree.prototype.recreateTree = function (child, overflow, numLeafs) {\n        this.lengthCount[this.maxLength - 1] += overflow;\n        this.lengthCount[this.maxLength - 2] -= overflow;\n        var nodePtr = 2 * numLeafs;\n        for (var bits = this.maxLength; bits !== 0; bits--) {\n            var n = this.lengthCount[bits - 1];\n            while (n > 0) {\n                var childPtr = 2 * child[nodePtr++];\n                if (child[childPtr + 1] === -1) {\n                    this.codeLength[child[childPtr]] = bits;\n                    n--;\n                }\n            }\n        }\n    };\n    CompressorHuffmanTree.prototype.calculateOptimalCodeLength = function (child, overflow, numNodes) {\n        var lengths = new Int32Array(numNodes);\n        lengths[numNodes - 1] = 0;\n        for (var i = numNodes - 1; i >= 0; i--) {\n            var childIndex = 2 * i + 1;\n            if (child[childIndex] !== -1) {\n                var bitLength = lengths[i] + 1;\n                if (bitLength > this.maxLength) {\n                    bitLength = this.maxLength;\n                    overflow++;\n                }\n                lengths[child[childIndex - 1]] = lengths[child[childIndex]] = bitLength;\n            }\n            else {\n                var bitLength = lengths[i];\n                this.lengthCount[bitLength - 1]++;\n                this.codeLength[child[childIndex - 1]] = lengths[i];\n            }\n        }\n        return overflow;\n    };\n    CompressorHuffmanTree.reverseBits = [0, 8, 4, 12, 2, 10, 6, 14, 1, 9, 5, 13, 3, 11, 7, 15];\n    CompressorHuffmanTree.huffCodeLengthOrders = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];\n    return CompressorHuffmanTree;\n}());\nexport { CompressorHuffmanTree };\n/**\n * Checksum calculator, based on Adler32 algorithm.\n */\nvar ChecksumCalculator = /** @class */ (function () {\n    function ChecksumCalculator() {\n    }\n    /**\n     * Updates checksum by calculating checksum of the\n     * given buffer and adding it to current value.\n     * @param {number} checksum - current checksum.\n     * @param {Uint8Array} buffer - data byte array.\n     * @param {number} offset - offset in the buffer.\n     * @param {number} length - length of data to be used from the stream.\n     * @returns {number}\n     */\n    ChecksumCalculator.checksumUpdate = function (checksum, buffer, offset, length) {\n        var uint = new Uint32Array(1);\n        uint[0] = checksum;\n        var checksum_uint = uint[0];\n        var s1 = uint[0] = checksum_uint & 65535;\n        var s2 = uint[0] = checksum_uint >> ChecksumCalculator.checkSumBitOffset;\n        while (length > 0) {\n            var steps = Math.min(length, ChecksumCalculator.checksumIterationCount);\n            length -= steps;\n            while (--steps >= 0) {\n                s1 = s1 + (uint[0] = (buffer[offset++] & 255));\n                s2 = s2 + s1;\n            }\n            s1 %= ChecksumCalculator.checksumBase;\n            s2 %= ChecksumCalculator.checksumBase;\n        }\n        checksum_uint = (s2 << ChecksumCalculator.checkSumBitOffset) | s1;\n        return checksum_uint;\n    };\n    ChecksumCalculator.checkSumBitOffset = 16;\n    ChecksumCalculator.checksumBase = 65521;\n    ChecksumCalculator.checksumIterationCount = 3800;\n    return ChecksumCalculator;\n}());\nexport { ChecksumCalculator };\n/* eslint-enable */ \n", "/* eslint-disable */\nimport { Utils } from './index';\nvar DecompressorHuffmanTree = /** @class */ (function () {\n    function DecompressorHuffmanTree(lengths) {\n        this.buildTree(lengths);\n    }\n    DecompressorHuffmanTree.init = function () {\n        var lengths;\n        var index;\n        // Generate huffman tree for lengths.\n        lengths = new Uint8Array(288);\n        index = 0;\n        while (index < 144) {\n            lengths[index++] = 8;\n        }\n        while (index < 256) {\n            lengths[index++] = 9;\n        }\n        while (index < 280) {\n            lengths[index++] = 7;\n        }\n        while (index < 288) {\n            lengths[index++] = 8;\n        }\n        DecompressorHuffmanTree.m_LengthTree = new DecompressorHuffmanTree(lengths);\n        // Generate huffman tree for distances.\n        lengths = new Uint8Array(32);\n        index = 0;\n        while (index < 32) {\n            lengths[index++] = 5;\n        }\n        DecompressorHuffmanTree.m_DistanceTree = new DecompressorHuffmanTree(lengths);\n    };\n    /// <summary>\n    /// Prepares data for generating huffman tree.\n    /// </summary>\n    /// <param name=\"blCount\">Array of counts of each code length.</param>\n    /// <param name=\"nextCode\">Numerical values of the smallest code for each code length.</param>\n    /// <param name=\"lengths\">Array of code lengths.</param>\n    /// <param name=\"treeSize\">Calculated tree size.</param>\n    /// <returns>Code.</returns>\n    DecompressorHuffmanTree.prototype.prepareData = function (blCount, nextCode, lengths) {\n        var code = 0;\n        var treeSize = 512;\n        // Count number of codes for each code length.\n        for (var i = 0; i < lengths.length; i++) {\n            var length_1 = lengths[i];\n            if (length_1 > 0) {\n                blCount[length_1]++;\n            }\n        }\n        for (var bits = 1; bits <= DecompressorHuffmanTree.MAX_BITLEN; bits++) {\n            nextCode[bits] = code;\n            code += blCount[bits] << (16 - bits);\n            if (bits >= 10) {\n                var start = nextCode[bits] & 0x1ff80;\n                var end = code & 0x1ff80;\n                treeSize += (end - start) >> (16 - bits);\n            }\n        }\n        /*      if( code != 65536 )\n          throw new ZipException( \"Code lengths don't add up properly.\" );*/\n        return { 'code': code, 'treeSize': treeSize };\n    };\n    /// <summary>\n    /// Generates huffman tree.\n    /// </summary>\n    /// <param name=\"blCount\">Array of counts of each code length.</param>\n    /// <param name=\"nextCode\">Numerical values of the smallest code for each code length.</param>\n    /// <param name=\"code\">Precalculated code.</param>\n    /// <param name=\"lengths\">Array of code lengths.</param>\n    /// <param name=\"treeSize\">Calculated size of the tree.</param>\n    /// <returns>Generated tree.</returns>\n    DecompressorHuffmanTree.prototype.treeFromData = function (blCount, nextCode, lengths, code, treeSize) {\n        var tree = new Int16Array(treeSize);\n        var pointer = 512;\n        var increment = 1 << 7;\n        for (var bits = DecompressorHuffmanTree.MAX_BITLEN; bits >= 10; bits--) {\n            var end = code & 0x1ff80;\n            code -= blCount[bits] << (16 - bits);\n            var start = code & 0x1ff80;\n            for (var i = start; i < end; i += increment) {\n                tree[Utils.bitReverse(i)] = Utils.bitConverterInt32ToInt16((-pointer << 4) | bits);\n                pointer += 1 << (bits - 9);\n            }\n        }\n        for (var i = 0; i < lengths.length; i++) {\n            var bits = lengths[i];\n            if (bits == 0) {\n                continue;\n            }\n            code = nextCode[bits];\n            var revcode = Utils.bitReverse(code);\n            if (bits <= 9) {\n                do {\n                    tree[revcode] = Utils.bitConverterInt32ToInt16((i << 4) | bits);\n                    revcode += 1 << bits;\n                } while (revcode < 512);\n            }\n            else {\n                var subTree = tree[revcode & 511];\n                var treeLen = 1 << (subTree & 15);\n                subTree = -(subTree >> 4);\n                do {\n                    tree[subTree | (revcode >> 9)] = Utils.bitConverterInt32ToInt16((i << 4) | bits);\n                    revcode += 1 << bits;\n                } while (revcode < treeLen);\n            }\n            nextCode[bits] = code + (1 << (16 - bits));\n        }\n        return tree;\n    };\n    /// <summary>\n    /// Builds huffman tree from array of code lengths.\n    /// </summary>\n    /// <param name=\"lengths\">Array of code lengths.</param>\n    DecompressorHuffmanTree.prototype.buildTree = function (lengths) {\n        // Count of codes for each code length.\n        var blCount = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        // Numerical value of the smallest code for each code length.\n        var nextCode = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        var prepareData = this.prepareData(blCount, nextCode, lengths);\n        this.m_Tree = this.treeFromData(blCount, nextCode, lengths, prepareData.code, prepareData.treeSize);\n    };\n    /// <summary>\n    /// Reads and decompresses one symbol.\n    /// </summary>\n    /// <param name=\"input\"></param>\n    /// <returns></returns>\n    DecompressorHuffmanTree.prototype.unpackSymbol = function (input) {\n        var lookahead;\n        var symbol;\n        if ((lookahead = input.peekBits(9)) >= 0) {\n            if ((symbol = this.m_Tree[lookahead]) >= 0) {\n                input.skipBits((symbol & 15));\n                return symbol >> 4;\n            }\n            var subtree = -(symbol >> 4);\n            var bitlen = symbol & 15;\n            if ((lookahead = input.peekBits(bitlen)) >= 0) {\n                symbol = this.m_Tree[subtree | (lookahead >> 9)];\n                input.skipBits((symbol & 15));\n                return symbol >> 4;\n            }\n            else {\n                var bits = input.availableBits;\n                lookahead = input.peekBits(bits);\n                symbol = this.m_Tree[subtree | (lookahead >> 9)];\n                if ((symbol & 15) <= bits) {\n                    input.skipBits((symbol & 15));\n                    return symbol >> 4;\n                }\n                else {\n                    return -1;\n                }\n            }\n        }\n        else {\n            var bits = input.availableBits;\n            lookahead = input.peekBits(bits);\n            symbol = this.m_Tree[lookahead];\n            if (symbol >= 0 && (symbol & 15) <= bits) {\n                input.skipBits((symbol & 15));\n                return symbol >> 4;\n            }\n            else {\n                return -1;\n            }\n        }\n    };\n    Object.defineProperty(DecompressorHuffmanTree, \"lengthTree\", {\n        /// <summary>\n        /// GET huffman tree for encoding and decoding lengths.\n        /// </summary>\n        get: function () {\n            return this.m_LengthTree;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DecompressorHuffmanTree, \"distanceTree\", {\n        /// <summary>\n        /// GET huffman tree for encoding and decoding distances.\n        /// </summary>\n        get: function () {\n            return this.m_DistanceTree;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /// <summary>\n    /// Maximum count of bits.\n    /// </summary>\n    DecompressorHuffmanTree.MAX_BITLEN = 15;\n    return DecompressorHuffmanTree;\n}());\nexport { DecompressorHuffmanTree };\n/* eslint-enable */ \n", "/* eslint-disable */\n/// <summary>\n/// Checksum calculator, based on Adler32 algorithm.\n/// </summary>\nvar ChecksumCalculator = /** @class */ (function () {\n    function ChecksumCalculator() {\n    }\n    /// <summary>\n    /// Updates checksum by calculating checksum of the\n    /// given buffer and adding it to current value.\n    /// </summary>\n    /// <param name=\"checksum\">Current checksum.</param>\n    /// <param name=\"buffer\">Data byte array.</param>\n    /// <param name=\"offset\">Offset in the buffer.</param>\n    /// <param name=\"length\">Length of data to be used from the stream.</param>\n    ChecksumCalculator.ChecksumUpdate = function (checksum, buffer, offset, length) {\n        var checkSumUInt = checksum;\n        var s1 = checkSumUInt & 65535;\n        var s2 = checkSumUInt >> this.DEF_CHECKSUM_BIT_OFFSET;\n        while (length > 0) {\n            var steps = Math.min(length, this.DEF_CHECKSUM_ITERATIONSCOUNT);\n            length -= steps;\n            while (--steps >= 0) {\n                s1 = s1 + (buffer[offset++] & 255);\n                s2 = s2 + s1;\n            }\n            s1 %= this.DEF_CHECKSUM_BASE;\n            s2 %= this.DEF_CHECKSUM_BASE;\n        }\n        checkSumUInt = (s2 << this.DEF_CHECKSUM_BIT_OFFSET) | s1;\n        checksum = checkSumUInt;\n    };\n    /// <summary>\n    /// Generates checksum by calculating checksum of the\n    /// given buffer.\n    /// </summary>\n    /// <param name=\"buffer\">Data byte array.</param>\n    /// <param name=\"offset\">Offset in the buffer.</param>\n    /// <param name=\"length\">Length of data to be used from the stream.</param>\n    ChecksumCalculator.ChecksumGenerate = function (buffer, offset, length) {\n        var result = 1;\n        ChecksumCalculator.ChecksumUpdate(result, buffer, offset, length);\n        return result;\n    };\n    /// <summary>\n    /// Bits offset, used in adler checksum calculation.\n    /// </summary>\n    ChecksumCalculator.DEF_CHECKSUM_BIT_OFFSET = 16;\n    /// <summary>\n    /// Lagrest prime, less than 65535\n    /// </summary>\n    ChecksumCalculator.DEF_CHECKSUM_BASE = 65521;\n    /// <summary>\n    /// Count of iteration used in calculated of the adler checksumm.\n    /// </summary>\n    ChecksumCalculator.DEF_CHECKSUM_ITERATIONSCOUNT = 3800;\n    return ChecksumCalculator;\n}());\nexport { ChecksumCalculator };\n/* eslint-enable */ \n", "/* eslint-disable */\nimport { DecompressorHuffmanTree } from './decompressor-huffman-tree';\nimport { Utils } from './utils';\nimport { ChecksumCalculator } from './checksum-calculator';\nvar CompressedStreamReader = /** @class */ (function () {\n    function CompressedStreamReader(stream, bNoWrap) {\n        /// <summary>\n        /// Code lengths for the code length alphabet.\n        /// </summary>\n        this.defaultHuffmanDynamicTree = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];\n        /// <summary>\n        /// Mask for compression method to be decoded from 16-bit header.\n        /// </summary>\n        this.DEF_HEADER_METHOD_MASK = 15 << 8;\n        /// <summary>\n        /// Mask for compression info to be decoded from 16-bit header.\n        /// </summary>\n        this.DEF_HEADER_INFO_MASK = 240 << 8;\n        /// <summary>\n        /// Mask for check bits to be decoded from 16-bit header.\n        /// </summary>\n        this.DEF_HEADER_FLAGS_FCHECK = 31;\n        /// <summary>\n        /// Mask for dictionary presence to be decoded from 16-bit header.\n        /// </summary>\n        this.DEF_HEADER_FLAGS_FDICT = 32;\n        /// <summary>\n        /// Mask for compression level to be decoded from 16-bit header.\n        /// </summary>\n        this.DEF_HEADER_FLAGS_FLEVEL = 192;\n        /// <summary>\n        /// Maximum size of the data window.\n        /// </summary>\n        this.DEF_MAX_WINDOW_SIZE = 65535;\n        /// <summary>\n        /// Maximum length of the repeatable block.\n        /// </summary>\n        this.DEF_HUFFMAN_REPEATE_MAX = 258;\n        /// <summary>\n        /// End of the block sign.\n        /// </summary>\n        this.DEF_HUFFMAN_END_BLOCK = 256;\n        /// <summary>\n        /// Minimal length code.\n        /// </summary>\n        this.DEF_HUFFMAN_LENGTH_MINIMUMCODE = 257;\n        /// <summary>\n        /// Maximal length code.\n        /// </summary>\n        this.DEF_HUFFMAN_LENGTH_MAXIMUMCODE = 285;\n        /// <summary>\n        /// Maximal distance code.\n        /// </summary>\n        this.DEF_HUFFMAN_DISTANCE_MAXIMUMCODE = 29;\n        /// <summary>\n        /// Currently calculated checksum,\n        /// based on Adler32 algorithm.\n        /// </summary>\n        this.mCheckSum = 1;\n        /// <summary>\n        /// Currently read 4 bytes.\n        /// </summary>\n        this.tBuffer = 0;\n        /// <summary>\n        /// Count of bits that are in buffer.\n        /// </summary>\n        this.mBufferedBits = 0;\n        /// <summary>\n        /// Temporary buffer.\n        /// </summary>\n        this.mTempBuffer = new Uint8Array(4);\n        /// <summary>\n        /// 32k buffer for unpacked data.\n        /// </summary>\n        this.mBlockBuffer = new Uint8Array(this.DEF_MAX_WINDOW_SIZE);\n        /// <summary>\n        /// No wrap mode.\n        /// </summary>\n        this.mbNoWrap = false;\n        /// <summary>\n        /// Window size, can not be larger than 32k.\n        /// </summary>\n        this.mWindowSize = 0;\n        /// <summary>\n        /// Current position in output stream.\n        /// Current in-block position can be extracted by applying Int16.MaxValue mask.\n        /// </summary>\n        this.mCurrentPosition = 0;\n        /// <summary>\n        /// Data length.\n        /// Current in-block position can be extracted by applying Int16.MaxValue mask.\n        /// </summary>\n        this.mDataLength = 0;\n        /// <summary>\n        /// Specifies wheather next block can to be read.\n        /// Reading can be denied because the header of the last block have been read.\n        /// </summary>\n        this.mbCanReadNextBlock = true;\n        /// <summary>\n        /// Specifies wheather user can read more data from stream.\n        /// </summary>\n        this.mbCanReadMoreData = true;\n        /// <summary>\n        /// Specifies wheather checksum has been read.\n        /// </summary>\n        this.mbCheckSumRead = false;\n        if (stream == null) {\n            throw new DOMException('stream');\n        }\n        if (stream.length === 0) {\n            throw new DOMException('stream - string can not be empty');\n        }\n        DecompressorHuffmanTree.init();\n        this.mInputStream = new Stream(stream);\n        this.mbNoWrap = bNoWrap;\n        if (!this.mbNoWrap) {\n            this.readZLibHeader();\n        }\n        this.decodeBlockHeader();\n    }\n    Object.defineProperty(CompressedStreamReader.prototype, \"mBuffer\", {\n        get: function () {\n            return this.tBuffer;\n        },\n        set: function (value) {\n            this.tBuffer = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Initializes compressor and writes ZLib header if needed.\n     * @param {boolean} noWrap - optional if true, ZLib header and checksum will not be written.\n     */\n    /// <summary>\n    /// Reads specified count of bits without adjusting position.\n    /// </summary>\n    /// <param name=\"count\">Count of bits to be read.</param>\n    /// <returns>Read value.</returns>\n    CompressedStreamReader.prototype.peekBits = function (count) {\n        if (count < 0) {\n            throw new DOMException('count', 'Bits count can not be less than zero.');\n        }\n        if (count > 32) {\n            throw new DOMException('count', 'Count of bits is too large.');\n        }\n        // If buffered data is not enough to give result,\n        // fill buffer.\n        if (this.mBufferedBits < count) {\n            this.fillBuffer();\n        }\n        // If you want to read 4 bytes and there is partial data in\n        // buffer, than you will fail.\n        if (this.mBufferedBits < count) {\n            return -1;\n        }\n        // Create bitmask for reading of count bits\n        var bitMask = ~(4294967295 << count);\n        var result = Utils.bitConverterUintToInt32(this.mBuffer & bitMask);\n        //Debug.WriteLine( /*new string( ' ', 32 - mBufferedBits + (int)( ( 32 - mBufferedBits ) / 8 ) ) + BitsToString( (int)mBuffer, mBufferedBits ) + \" \" + BitsToString( result, count ) +*/ \" \" + result.ToString() );\n        return result;\n    };\n    CompressedStreamReader.prototype.fillBuffer = function () {\n        var length = 4 - (this.mBufferedBits >> 3) -\n            (((this.mBufferedBits & 7) !== 0) ? 1 : 0);\n        if (length === 0) {\n            return;\n        }\n        //TODO: fix this\n        var bytesRead = this.mInputStream.read(this.mTempBuffer, 0, length);\n        for (var i = 0; i < bytesRead; i++) {\n            this.mBuffer = Utils.bitConverterInt32ToUint(this.mBuffer |\n                (Utils.bitConverterInt32ToUint(this.mTempBuffer[i] << this.mBufferedBits)));\n            this.mBufferedBits += 8;\n        }\n        //TODO: fix this\n    };\n    /// <summary>\n    /// Skips specified count of bits.\n    /// </summary>\n    /// <param name=\"count\">Count of bits to be skipped.</param>\n    CompressedStreamReader.prototype.skipBits = function (count) {\n        if (count < 0) {\n            throw new DOMException('count', 'Bits count can not be less than zero.');\n        }\n        if (count === 0) {\n            return;\n        }\n        if (count >= this.mBufferedBits) {\n            count -= this.mBufferedBits;\n            this.mBufferedBits = 0;\n            this.mBuffer = 0;\n            // if something left, skip it.\n            if (count > 0) {\n                // Skip entire bytes.\n                this.mInputStream.position += (count >> 3); //TODO: fix this\n                count &= 7;\n                // Skip bits.\n                if (count > 0) {\n                    this.fillBuffer();\n                    this.mBufferedBits -= count;\n                    this.mBuffer = Utils.bitConverterInt32ToUint(this.mBuffer >>> count);\n                }\n            }\n        }\n        else {\n            this.mBufferedBits -= count;\n            this.mBuffer = Utils.bitConverterInt32ToUint(this.mBuffer >>> count);\n        }\n    };\n    Object.defineProperty(CompressedStreamReader.prototype, \"availableBits\", {\n        get: function () {\n            return this.mBufferedBits;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /// <summary>\n    /// Reads ZLib header with compression method and flags.\n    /// </summary>\n    CompressedStreamReader.prototype.readZLibHeader = function () {\n        // first 8 bits - compression Method and flags\n        // 8 other - flags\n        var header = this.readInt16();\n        //Debug.WriteLine( BitsToString( header ) );\n        if (header === -1) {\n            throw new DOMException('Header of the stream can not be read.');\n        }\n        if (header % 31 !== 0) {\n            throw new DOMException('Header checksum illegal');\n        }\n        if ((header & this.DEF_HEADER_METHOD_MASK) !== (8 << 8)) {\n            throw new DOMException('Unsupported compression method.');\n        }\n        this.mWindowSize = Math.pow(2, ((header & this.DEF_HEADER_INFO_MASK) >> 12) + 8);\n        if (this.mWindowSize > 65535) {\n            throw new DOMException('Unsupported window size for deflate compression method.');\n        }\n        if ((header & this.DEF_HEADER_FLAGS_FDICT) >> 5 === 1) {\n            // Get dictionary.\n            throw new DOMException('Custom dictionary is not supported at the moment.');\n        }\n    };\n    /// <summary>\n    /// TODO: place correct comment here\n    /// </summary>\n    /// <returns>\n    /// TODO: place correct comment here\n    /// </returns>\n    CompressedStreamReader.prototype.readInt16 = function () {\n        var result = (this.readBits(8) << 8);\n        result |= this.readBits(8);\n        return result;\n    };\n    /// <summary>\n    /// Reads specified count of bits from stream.\n    /// </summary>\n    /// <param name=\"count\">Count of bits to be read.</param>\n    /// <returns>\n    /// TODO: place correct comment here\n    /// </returns>\n    CompressedStreamReader.prototype.readBits = function (count) {\n        var result = this.peekBits(count);\n        if (result === -1) {\n            return -1;\n        }\n        this.mBufferedBits -= count;\n        this.mBuffer = Utils.bitConverterInt32ToUint(this.mBuffer >>> count);\n        return result;\n    };\n    /// <summary>\n    /// Reads and decodes block of data.\n    /// </summary>\n    /// <returns>True if buffer was empty and new data was read, otherwise - False.</returns>\n    CompressedStreamReader.prototype.decodeBlockHeader = function () {\n        if (!this.mbCanReadNextBlock) {\n            return false;\n        }\n        var bFinalBlock = this.readBits(1);\n        if (bFinalBlock === -1) {\n            return false;\n        }\n        var blockType = this.readBits(2);\n        if (blockType === -1) {\n            return false;\n        }\n        this.mbCanReadNextBlock = (bFinalBlock === 0);\n        //      ChecksumReset();\n        switch (blockType) {\n            case 0:\n                // Uncompressed data\n                this.mbReadingUncompressed = true;\n                this.skipToBoundary();\n                var length_1 = this.readInt16Inverted();\n                var lengthComplement = this.readInt16Inverted();\n                if (length_1 !== (lengthComplement ^ 0xffff)) {\n                    throw new DOMException('Wrong block length.');\n                }\n                if (length_1 > 65535) {\n                    throw new DOMException('Uncompressed block length can not be more than 65535.');\n                }\n                this.mUncompressedDataLength = length_1;\n                this.mCurrentLengthTree = null;\n                this.mCurrentDistanceTree = null;\n                break;\n            case 1:\n                // Compressed data with fixed huffman codes.\n                this.mbReadingUncompressed = false;\n                this.mUncompressedDataLength = -1;\n                this.mCurrentLengthTree = DecompressorHuffmanTree.lengthTree;\n                this.mCurrentDistanceTree = DecompressorHuffmanTree.distanceTree;\n                break;\n            case 2:\n                // Compressed data with dynamic huffman codes.\n                this.mbReadingUncompressed = false;\n                this.mUncompressedDataLength = -1;\n                var trees = this.decodeDynamicHeader(this.mCurrentLengthTree, this.mCurrentDistanceTree);\n                this.mCurrentLengthTree = trees.lengthTree;\n                this.mCurrentDistanceTree = trees.distanceTree;\n                break;\n            default:\n                throw new DOMException('Wrong block type.');\n        }\n        return true;\n    };\n    /// <summary>\n    /// Discards left-most partially used byte.\n    /// </summary>\n    CompressedStreamReader.prototype.skipToBoundary = function () {\n        this.mBuffer = Utils.bitConverterInt32ToUint(this.mBuffer >>> (this.mBufferedBits & 7));\n        this.mBufferedBits &= ~7;\n    };\n    /// <summary>\n    /// TODO: place correct comment here\n    /// </summary>\n    /// <returns>\n    /// TODO: place correct comment here\n    /// </returns>\n    CompressedStreamReader.prototype.readInt16Inverted = function () {\n        var result = (this.readBits(8));\n        result |= this.readBits(8) << 8;\n        return result;\n    };\n    /// <summary>\n    /// Reades dynamic huffman codes from block header.\n    /// </summary>\n    /// <param name=\"lengthTree\">Literals/Lengths tree.</param>\n    /// <param name=\"distanceTree\">Distances tree.</param>\n    CompressedStreamReader.prototype.decodeDynamicHeader = function (lengthTree, distanceTree) {\n        var bLastSymbol = 0;\n        var iLengthsCount = this.readBits(5);\n        var iDistancesCount = this.readBits(5);\n        var iCodeLengthsCount = this.readBits(4);\n        if (iLengthsCount < 0 || iDistancesCount < 0 || iCodeLengthsCount < 0) {\n            throw new DOMException('Wrong dynamic huffman codes.');\n        }\n        iLengthsCount += 257;\n        iDistancesCount += 1;\n        var iResultingCodeLengthsCount = iLengthsCount + iDistancesCount;\n        var arrResultingCodeLengths = new Uint8Array(iResultingCodeLengthsCount);\n        var arrDecoderCodeLengths = new Uint8Array(19);\n        iCodeLengthsCount += 4;\n        var iCurrentCode = 0;\n        while (iCurrentCode < iCodeLengthsCount) {\n            var len = this.readBits(3);\n            if (len < 0) {\n                throw new DOMException('Wrong dynamic huffman codes.');\n            }\n            arrDecoderCodeLengths[this.defaultHuffmanDynamicTree[iCurrentCode++]] = len;\n        }\n        var treeInternalDecoder = new DecompressorHuffmanTree(arrDecoderCodeLengths);\n        iCurrentCode = 0;\n        for (;;) {\n            var symbol = void 0;\n            var bNeedBreak = false;\n            symbol = treeInternalDecoder.unpackSymbol(this);\n            while ((symbol & ~15) === 0) {\n                arrResultingCodeLengths[iCurrentCode++] = bLastSymbol = symbol;\n                if (iCurrentCode === iResultingCodeLengthsCount) {\n                    bNeedBreak = true;\n                    break;\n                }\n                symbol = treeInternalDecoder.unpackSymbol(this);\n            }\n            if (bNeedBreak) {\n                break;\n            }\n            if (symbol < 0) {\n                throw new DOMException('Wrong dynamic huffman codes.');\n            }\n            if (symbol >= 17) {\n                bLastSymbol = 0;\n            }\n            else if (iCurrentCode === 0) {\n                throw new DOMException('Wrong dynamic huffman codes.');\n            }\n            var miRepSymbol = symbol - 16;\n            var bits = CompressedStreamReader.DEF_HUFFMAN_DYNTREE_REPEAT_BITS[miRepSymbol];\n            var count = this.readBits(bits);\n            if (count < 0) {\n                throw new DOMException('Wrong dynamic huffman codes.');\n            }\n            count += CompressedStreamReader.DEF_HUFFMAN_DYNTREE_REPEAT_MINIMUMS[miRepSymbol];\n            if (iCurrentCode + count > iResultingCodeLengthsCount) {\n                throw new DOMException('Wrong dynamic huffman codes.');\n            }\n            while (count-- > 0) {\n                arrResultingCodeLengths[iCurrentCode++] = bLastSymbol;\n            }\n            if (iCurrentCode === iResultingCodeLengthsCount) {\n                break;\n            }\n        }\n        var tempArray = new Uint8Array(iLengthsCount);\n        tempArray.set(arrResultingCodeLengths.subarray(0, iLengthsCount), 0);\n        //sourceArray, sourceIndex, destinationArray, destinationIndex, length\n        //Array.copy( arrResultingCodeLengths, 0, tempArray, 0, iLengthsCount );\n        lengthTree = new DecompressorHuffmanTree(tempArray);\n        tempArray = arrResultingCodeLengths.slice(iLengthsCount, iLengthsCount + iDistancesCount);\n        //Array.copy( arrResultingCodeLengths, iLengthsCount, tempArray, 0, iDistancesCount );\n        distanceTree = new DecompressorHuffmanTree(tempArray);\n        return { 'lengthTree': lengthTree, 'distanceTree': distanceTree };\n    };\n    /// <summary>\n    /// Decodes huffman codes.\n    /// </summary>\n    /// <returns>True if some data was read.</returns>\n    CompressedStreamReader.prototype.readHuffman = function () {\n        var free = this.DEF_MAX_WINDOW_SIZE - (this.mDataLength - this.mCurrentPosition);\n        var dataRead = false;\n        //long maxdistance = DEF_MAX_WINDOW_SIZE >> 1;\n        var readdata = {};\n        // DEF_HUFFMAN_REPEATE_MAX - longest repeatable block, we should always reserve space for it because\n        // if we should not, we will have buffer overrun.\n        while (free >= this.DEF_HUFFMAN_REPEATE_MAX) {\n            var symbol = void 0;\n            symbol = this.mCurrentLengthTree.unpackSymbol(this);\n            // Only codes 0..255 are valid independent symbols.\n            while (((symbol) & ~0xff) === 0) {\n                readdata[(this.mDataLength + 1) % this.DEF_MAX_WINDOW_SIZE] = symbol;\n                this.mBlockBuffer[this.mDataLength++ % this.DEF_MAX_WINDOW_SIZE] = symbol;\n                dataRead = true;\n                if (--free < this.DEF_HUFFMAN_REPEATE_MAX) {\n                    return true;\n                }\n                //if( (mDataLength - mCurrentPosition ) < maxdistance ) return true;\n                symbol = this.mCurrentLengthTree.unpackSymbol(this);\n            }\n            if (symbol < this.DEF_HUFFMAN_LENGTH_MINIMUMCODE) {\n                if (symbol < this.DEF_HUFFMAN_END_BLOCK) {\n                    throw new DOMException('Illegal code.');\n                }\n                var numDataRead = dataRead ? 1 : 0;\n                this.mbCanReadMoreData = this.decodeBlockHeader();\n                var numReadMore = (this.mbCanReadMoreData) ? 1 : 0;\n                return (numDataRead | numReadMore) ? true : false;\n            }\n            if (symbol > this.DEF_HUFFMAN_LENGTH_MAXIMUMCODE) {\n                throw new DOMException('Illegal repeat code length.');\n            }\n            var iRepeatLength = CompressedStreamReader.DEF_HUFFMAN_REPEAT_LENGTH_BASE[symbol -\n                this.DEF_HUFFMAN_LENGTH_MINIMUMCODE];\n            var iRepeatExtraBits = CompressedStreamReader.DEF_HUFFMAN_REPEAT_LENGTH_EXTENSION[symbol -\n                this.DEF_HUFFMAN_LENGTH_MINIMUMCODE];\n            if (iRepeatExtraBits > 0) {\n                var extra = this.readBits(iRepeatExtraBits);\n                if (extra < 0) {\n                    throw new DOMException('Wrong data.');\n                }\n                iRepeatLength += extra;\n            }\n            // Unpack repeat distance.\n            symbol = this.mCurrentDistanceTree.unpackSymbol(this);\n            if (symbol < 0 || symbol > CompressedStreamReader.DEF_HUFFMAN_REPEAT_DISTANCE_BASE.length) {\n                throw new DOMException('Wrong distance code.');\n            }\n            var iRepeatDistance = CompressedStreamReader.DEF_HUFFMAN_REPEAT_DISTANCE_BASE[symbol];\n            iRepeatExtraBits = CompressedStreamReader.DEF_HUFFMAN_REPEAT_DISTANCE_EXTENSION[symbol];\n            if (iRepeatExtraBits > 0) {\n                var extra = this.readBits(iRepeatExtraBits);\n                if (extra < 0) {\n                    throw new DOMException('Wrong data.');\n                }\n                iRepeatDistance += extra;\n            }\n            // Copy data in slow repeat mode\n            for (var i = 0; i < iRepeatLength; i++) {\n                this.mBlockBuffer[this.mDataLength % this.DEF_MAX_WINDOW_SIZE] =\n                    this.mBlockBuffer[(this.mDataLength - iRepeatDistance) % this.DEF_MAX_WINDOW_SIZE];\n                this.mDataLength++;\n                free--;\n            }\n            dataRead = true;\n        }\n        return dataRead;\n    };\n    /// <summary>\n    /// Reads data to buffer.\n    /// </summary>\n    /// <param name=\"buffer\">Output buffer for data.</param>\n    /// <param name=\"offset\">Offset in output data.</param>\n    /// <param name=\"length\">Length of the data to be read.</param>\n    /// <returns>Count of bytes actually read.</returns>\n    CompressedStreamReader.prototype.read = function (buffer, offset, length) {\n        if (buffer == null) {\n            throw new DOMException('buffer');\n        }\n        if (offset < 0 || offset > buffer.length - 1) {\n            throw new DOMException('offset', 'Offset does not belong to specified buffer.');\n        }\n        if (length < 0 || length > buffer.length - offset) {\n            throw new DOMException('length', 'Length is illegal.');\n        }\n        var initialLength = length;\n        while (length > 0) {\n            // Read from internal buffer.\n            if (this.mCurrentPosition < this.mDataLength) {\n                // Position in buffer array.\n                var inBlockPosition = (this.mCurrentPosition % this.DEF_MAX_WINDOW_SIZE);\n                // We can not read more than we have in buffer at once,\n                // and we not read more than till the array end.\n                var dataToCopy = Math.min(this.DEF_MAX_WINDOW_SIZE - inBlockPosition, (this.mDataLength - this.mCurrentPosition));\n                // Reading not more, than the rest of the buffer.\n                dataToCopy = Math.min(dataToCopy, length);\n                //sourceArray, sourceIndex, destinationArray, destinationIndex, length\n                // Copy data.\n                //Array.Copy( mBlockBuffer, inBlockPosition, buffer, offset, dataToCopy );\n                //buffer.set(this.mBlockBuffer.slice(inBlockPosition, dataToCopy), offset);\n                Utils.arrayCopy(this.mBlockBuffer, inBlockPosition, buffer, offset, dataToCopy);\n                // Correct position, length,\n                this.mCurrentPosition += dataToCopy;\n                offset += dataToCopy;\n                length -= dataToCopy;\n            }\n            else {\n                if (!this.mbCanReadMoreData) {\n                    break;\n                }\n                var oldDataLength = this.mDataLength;\n                if (!this.mbReadingUncompressed) {\n                    if (!this.readHuffman()) {\n                        break;\n                    }\n                }\n                else {\n                    if (this.mUncompressedDataLength === 0) {\n                        // If there is no more data in stream, just exit.\n                        this.mbCanReadMoreData = this.decodeBlockHeader();\n                        if (!(this.mbCanReadMoreData)) {\n                            break;\n                        }\n                    }\n                    else {\n                        // Position of the data end in block buffer.\n                        var inBlockPosition = (this.mDataLength % this.DEF_MAX_WINDOW_SIZE);\n                        var dataToRead = Math.min(this.mUncompressedDataLength, this.DEF_MAX_WINDOW_SIZE - inBlockPosition);\n                        var dataRead = this.readPackedBytes(this.mBlockBuffer, inBlockPosition, dataToRead);\n                        if (dataToRead !== dataRead) {\n                            throw new DOMException('Not enough data in stream.');\n                        }\n                        this.mUncompressedDataLength -= dataRead;\n                        this.mDataLength += dataRead;\n                    }\n                }\n                if (oldDataLength < this.mDataLength) {\n                    var start = (oldDataLength % this.DEF_MAX_WINDOW_SIZE);\n                    var end = (this.mDataLength % this.DEF_MAX_WINDOW_SIZE);\n                    if (start < end) {\n                        this.checksumUpdate(this.mBlockBuffer, start, end - start);\n                    }\n                    else {\n                        this.checksumUpdate(this.mBlockBuffer, start, this.DEF_MAX_WINDOW_SIZE - start);\n                        if (end > 0) {\n                            this.checksumUpdate(this.mBlockBuffer, 0, end);\n                        }\n                    }\n                }\n            }\n        }\n        if (!this.mbCanReadMoreData && !this.mbCheckSumRead && !this.mbNoWrap) {\n            this.skipToBoundary();\n            var checkSum = this.readInt32();\n            //Debug.Assert( checkSum == mCheckSum, \"\" );\n            if (checkSum !== this.mCheckSum) {\n                throw new DOMException('Checksum check failed.');\n            }\n            this.mbCheckSumRead = true;\n        }\n        return initialLength - length;\n    };\n    /// <summary>\n    /// Reads array of bytes.\n    /// </summary>\n    /// <param name=\"buffer\">Output buffer.</param>\n    /// <param name=\"offset\">Offset in output buffer.</param>\n    /// <param name=\"length\">Length of the data to be read.</param>\n    /// <returns>Count of bytes actually read to the buffer.</returns>\n    CompressedStreamReader.prototype.readPackedBytes = function (buffer, offset, length) {\n        if (buffer == null) {\n            throw new DOMException('buffer');\n        }\n        if (offset < 0 || offset > buffer.length - 1) {\n            throw new DOMException('offset\", \"Offset can not be less than zero or greater than buffer length - 1.');\n        }\n        if (length < 0) {\n            throw new DOMException('length\", \"Length can not be less than zero.');\n        }\n        if (length > buffer.length - offset) {\n            throw new DOMException('length\", \"Length is too large.');\n        }\n        if ((this.mBufferedBits & 7) !== 0) {\n            throw new DOMException('Reading of unalligned data is not supported.');\n        }\n        if (length === 0) {\n            return 0;\n        }\n        var result = 0;\n        while (this.mBufferedBits > 0 && length > 0) {\n            buffer[offset++] = (this.mBuffer);\n            this.mBufferedBits -= 8;\n            this.mBuffer = Utils.bitConverterInt32ToUint(this.mBuffer >>> 8);\n            length--;\n            result++;\n        }\n        if (length > 0) {\n            //TODO: Fix this.\n            result += this.mInputStream.read(buffer, offset, length);\n        }\n        return result;\n    };\n    /// <summary>\n    /// TODO: place correct comment here\n    /// </summary>\n    /// <returns>\n    /// TODO: place correct comment here\n    /// </returns>\n    CompressedStreamReader.prototype.readInt32 = function () {\n        var result = this.readBits(8) << 24;\n        result |= this.readBits(8) << 16;\n        result |= this.readBits(8) << 8;\n        result |= this.readBits(8);\n        return result;\n    };\n    /// <summary>\n    /// Updates checksum by calculating checksum of the\n    /// given buffer and adding it to current value.\n    /// </summary>\n    /// <param name=\"buffer\">Data byte array.</param>\n    /// <param name=\"offset\">Offset in the buffer.</param>\n    /// <param name=\"length\">Length of data to be used from the stream.</param>\n    CompressedStreamReader.prototype.checksumUpdate = function (buffer, offset, length) {\n        ChecksumCalculator.ChecksumUpdate(this.mCheckSum, buffer, offset, length);\n    };\n    CompressedStreamReader.DEF_REVERSE_BITS = new Uint8Array([0, 8, 4, 12, 2, 10, 6, 14, 1, 9, 5, 13, 3, 11, 7, 15]);\n    /// <summary>\n    /// Minimum count of repetions.\n    /// </summary>\n    CompressedStreamReader.DEF_HUFFMAN_DYNTREE_REPEAT_MINIMUMS = [3, 3, 11];\n    /// <summary>\n    /// Bits, that responds for different repetion modes.\n    /// </summary>\n    CompressedStreamReader.DEF_HUFFMAN_DYNTREE_REPEAT_BITS = [2, 3, 7];\n    /// <summary>\n    /// Length bases.\n    /// </summary>\n    CompressedStreamReader.DEF_HUFFMAN_REPEAT_LENGTH_BASE = [\n        3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\n        35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258\n    ];\n    /// <summary>\n    /// Length extended bits count.\n    /// </summary>\n    CompressedStreamReader.DEF_HUFFMAN_REPEAT_LENGTH_EXTENSION = [\n        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2,\n        3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0\n    ];\n    /// <summary>\n    /// Distance bases.\n    /// </summary>\n    CompressedStreamReader.DEF_HUFFMAN_REPEAT_DISTANCE_BASE = [\n        1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\n        257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\n        8193, 12289, 16385, 24577\n    ];\n    /// <summary>\n    /// Distance extanded bits count.\n    /// </summary>\n    CompressedStreamReader.DEF_HUFFMAN_REPEAT_DISTANCE_EXTENSION = [\n        0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6,\n        7, 7, 8, 8, 9, 9, 10, 10, 11, 11,\n        12, 12, 13, 13\n    ];\n    return CompressedStreamReader;\n}());\nexport { CompressedStreamReader };\nvar Stream = /** @class */ (function () {\n    function Stream(input) {\n        this.position = 0;\n        this.inputStream = new Uint8Array(input.buffer);\n    }\n    Object.defineProperty(Stream.prototype, \"length\", {\n        get: function () {\n            return this.inputStream.buffer.byteLength;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Stream.prototype.read = function (buffer, start, length) {\n        var temp = new Uint8Array(this.inputStream.buffer, this.position + start);\n        var data = temp.subarray(0, length);\n        buffer.set(data, 0);\n        this.position += data.byteLength;\n        return data.byteLength;\n    };\n    Stream.prototype.readByte = function () {\n        return this.inputStream[this.position++];\n    };\n    Stream.prototype.write = function (inputBuffer, offset, count) {\n        Utils.arrayCopy(inputBuffer, 0, this.inputStream, this.position + offset, count);\n        // this.inputStream = new Uint8Array(this.inputStream.buffer, this.position + offset);\n        // this.inputStream.set(inputBuffer, offset);\n        this.position += count;\n    };\n    Stream.prototype.toByteArray = function () {\n        return new Uint8Array(this.inputStream.buffer);\n    };\n    return Stream;\n}());\nexport { Stream };\n/* eslint-enable */ \n", "var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfDictionary } from './pdf-dictionary';\nimport { PdfNumber } from './pdf-number';\nimport { Operators } from './../input-output/pdf-operators';\nimport { PdfName } from './pdf-name';\nimport { PdfArray } from './pdf-array';\nimport { PdfReferenceHolder } from './pdf-reference';\nimport { CompressedStreamWriter } from '@syncfusion/ej2-compression';\n/**\n * `PdfStream` class is used to perform stream related primitive operations.\n * @private\n */\nvar PdfStream = /** @class */ (function (_super) {\n    __extends(PdfStream, _super);\n    function PdfStream(dictionary, data) {\n        var _this = _super.call(this, dictionary) || this;\n        //Constants\n        /**\n         * @hidden\n         * @private\n         */\n        _this.dicPrefix = 'stream';\n        /**\n         * @hidden\n         * @private\n         */\n        _this.dicSuffix = 'endstream';\n        /**\n         * Internal variable to hold `cloned object`.\n         * @private\n         */\n        _this.clonedObject2 = null;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.bCompress = true;\n        if (typeof dictionary !== 'undefined' || typeof data !== 'undefined') {\n            _this.dataStream2 = [];\n            _this.dataStream2 = data;\n            _this.bCompress2 = false;\n        }\n        else {\n            _this.dataStream2 = [];\n            _this.bCompress2 = true;\n            //Pending\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfStream.prototype, \"internalStream\", {\n        /**\n         * Gets the `internal` stream.\n         * @private\n         */\n        get: function () {\n            return this.dataStream2;\n        },\n        set: function (value) {\n            this.dataStream2 = [];\n            this.dataStream2 = value;\n            this.modify();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStream.prototype, \"compress\", {\n        /**\n         * Gets or sets `compression` flag.\n         * @private\n         */\n        get: function () {\n            return this.bCompress;\n        },\n        set: function (value) {\n            this.bCompress = value;\n            this.modify();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStream.prototype, \"data\", {\n        /**\n         * Gets or sets the `data`.\n         * @private\n         */\n        get: function () {\n            return this.dataStream2;\n        },\n        set: function (value) {\n            this.dataStream2 = [];\n            this.dataStream2 = value;\n            this.modify();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Clear` the internal stream.\n     * @private\n     */\n    PdfStream.prototype.clearStream = function () {\n        this.internalStream = [];\n        if (this.items.containsKey(this.dictionaryProperties.filter)) {\n            this.remove(this.dictionaryProperties.filter);\n        }\n        this.bCompress = true;\n        this.modify();\n    };\n    /**\n     * `Writes` the specified string.\n     * @private\n     */\n    PdfStream.prototype.write = function (text) {\n        if (text == null) {\n            throw new Error('ArgumentNullException:text');\n        }\n        if (text.length <= 0) {\n            throw new Error('ArgumentException: Can not write an empty string, text');\n        }\n        this.dataStream2.push(text);\n        this.modify();\n    };\n    /**\n     * `Writes` the specified bytes.\n     * @private\n     */\n    PdfStream.prototype.writeBytes = function (data) {\n        if (data === null) {\n            throw new Error('ArgumentNullException:data');\n        }\n        if (data.length <= 0) {\n            throw new Error('ArgumentException: Can not write an empty bytes, data');\n        }\n        var text = '';\n        for (var i = 0; i < data.length; i++) {\n            text += String.fromCharCode(data[i]);\n        }\n        this.dataStream2.push(text);\n        this.modify();\n    };\n    /**\n     * Raises event `Cmap BeginSave`.\n     * @private\n     */\n    PdfStream.prototype.onCmapBeginSave = function () {\n        this.cmapBeginSave.sender.cmapBeginSave();\n    };\n    /**\n     * Raises event `Font Program BeginSave`.\n     * @private\n     */\n    PdfStream.prototype.onFontProgramBeginSave = function () {\n        this.fontProgramBeginSave.sender.fontProgramBeginSave();\n    };\n    /**\n     * `Compresses the content` if it's required.\n     * @private\n     */\n    PdfStream.prototype.compressContent = function (data, writer) {\n        if (this.bCompress) {\n            var byteArray = [];\n            for (var i = 0; i < data.length; i++) {\n                byteArray.push(data.charCodeAt(i));\n            }\n            var dataArray = new Uint8Array(byteArray);\n            var sw = new CompressedStreamWriter();\n            // data = 'Hello World!!!';\n            sw.write(dataArray, 0, dataArray.length);\n            sw.close();\n            data = sw.getCompressedString;\n            this.addFilter(this.dictionaryProperties.flatedecode);\n        }\n        return data;\n    };\n    /**\n     * `Adds a filter` to the filter array.\n     * @private\n     */\n    PdfStream.prototype.addFilter = function (filterName) {\n        var obj = this.items.getValue(this.dictionaryProperties.filter);\n        if (obj instanceof PdfReferenceHolder) {\n            var rh = obj;\n            obj = rh.object;\n        }\n        var array = obj;\n        var name = obj;\n        if (name != null) {\n            array = new PdfArray();\n            array.insert(0, name);\n            this.items.setValue(this.dictionaryProperties.filter, array);\n        }\n        name = new PdfName(filterName);\n        if (array == null) {\n            this.items.setValue(this.dictionaryProperties.filter, name);\n        }\n        else {\n            array.insert(0, name);\n        }\n    };\n    /**\n     * `Saves` the object using the specified writer.\n     * @private\n     */\n    PdfStream.prototype.save = function (writer) {\n        if (typeof this.cmapBeginSave !== 'undefined') {\n            this.onCmapBeginSave();\n        }\n        if (typeof this.fontProgramBeginSave !== 'undefined') {\n            this.onFontProgramBeginSave();\n        }\n        var data = '';\n        for (var i = 0; i < this.data.length; i++) {\n            data = data + this.data[i];\n        }\n        if (data.length > 1 && !this.isResource) {\n            data = 'q\\r\\n' + data + 'Q\\r\\n';\n        }\n        data = this.compressContent(data, writer);\n        var length = data.length;\n        this.items.setValue(this.dictionaryProperties.length, new PdfNumber(length));\n        _super.prototype.save.call(this, writer, false);\n        writer.write(this.dicPrefix);\n        writer.write(Operators.newLine);\n        if (data.length > 0) {\n            writer.write(data);\n        }\n        writer.write(Operators.newLine);\n        writer.write(this.dicSuffix);\n        writer.write(Operators.newLine);\n    };\n    /**\n     * Converts `bytes to string`.\n     * @private\n     */\n    PdfStream.bytesToString = function (byteArray) {\n        var output = '';\n        for (var i = 0; i < byteArray.length; i++) {\n            output = output + String.fromCharCode(byteArray[i]);\n        }\n        return output;\n    };\n    return PdfStream;\n}(PdfDictionary));\nexport { PdfStream };\nvar SaveCmapEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save section collection event handler` class.\n     * @private\n     */\n    function SaveCmapEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveCmapEventHandler;\n}());\nexport { SaveCmapEventHandler };\nvar SaveFontProgramEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save section collection event handler` class.\n     * @private\n     */\n    function SaveFontProgramEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveFontProgramEventHandler;\n}());\nexport { SaveFontProgramEventHandler };\n", "/**\n * `PdfBoolean` class is used to perform boolean related primitive operations.\n * @private\n */\nvar PdfBoolean = /** @class */ (function () {\n    //constructor\n    /**\n     * Initializes a new instance of the `PdfBoolean` class.\n     * @private\n     */\n    function PdfBoolean(value) {\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.currentPosition = -1;\n        this.value = value;\n    }\n    Object.defineProperty(PdfBoolean.prototype, \"status\", {\n        //Properties\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.objectStatus;\n        },\n        set: function (value) {\n            this.objectStatus = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBoolean.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.saving;\n        },\n        set: function (value) {\n            this.saving = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBoolean.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index;\n        },\n        set: function (value) {\n            this.index = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBoolean.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.currentPosition;\n        },\n        set: function (value) {\n            this.currentPosition = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBoolean.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            var rValue = null;\n            return rValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Saves` the object using the specified writer.\n     * @private\n     */\n    PdfBoolean.prototype.save = function (writer) {\n        writer.write(this.boolToStr(this.value));\n    };\n    /**\n     * Creates a `copy of PdfBoolean`.\n     * @private\n     */\n    PdfBoolean.prototype.clone = function (crossTable) {\n        var newNumber = new PdfBoolean(this.value);\n        return newNumber;\n    };\n    // Implementation\n    /**\n     * Converts `boolean to string` - 0/1 'true'/'false'.\n     * @private\n     */\n    PdfBoolean.prototype.boolToStr = function (value) {\n        return value ? 'true' : 'false';\n    };\n    return PdfBoolean;\n}());\nexport { PdfBoolean };\n", "/**\n * ImageDecoder class\n */\nimport { ByteArray } from './byte-array';\nimport { PdfStream } from './../../primitives/pdf-stream';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfName } from './../../primitives/pdf-name';\nimport { PdfNumber } from './../../primitives/pdf-number';\nimport { PdfBoolean } from './../../primitives/pdf-boolean';\nimport { PdfDictionary } from './../../primitives/pdf-dictionary';\n/**\n * Specifies the image `format`.\n * @private\n */\nexport var ImageFormat;\n(function (ImageFormat) {\n    /**\n     * Specifies the type of `Unknown`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Unknown\"] = 0] = \"Unknown\";\n    /**\n     * Specifies the type of `Bmp`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Bmp\"] = 1] = \"Bmp\";\n    /**\n     * Specifies the type of `Emf`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Emf\"] = 2] = \"Emf\";\n    /**\n     * Specifies the type of `Gif`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Gif\"] = 3] = \"Gif\";\n    /**\n     * Specifies the type of `Jpeg`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Jpeg\"] = 4] = \"Jpeg\";\n    /**\n     * Specifies the type of `Png`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Png\"] = 5] = \"Png\";\n    /**\n     * Specifies the type of `Wmf`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Wmf\"] = 6] = \"Wmf\";\n    /**\n     * Specifies the type of `Icon`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Icon\"] = 7] = \"Icon\";\n})(ImageFormat || (ImageFormat = {}));\n/**\n * `Decode the image stream`.\n * @private\n */\nvar ImageDecoder = /** @class */ (function () {\n    /**\n     * Initialize the new instance for `image-decoder` class.\n     * @private\n     */\n    function ImageDecoder(stream) {\n        /**\n         * Start of file markers.\n         * @hidden\n         * @private\n         */\n        this.sof1Marker = 0x00C1;\n        this.sof2Marker = 0x00C2;\n        this.sof3Marker = 0x00C3;\n        this.sof5Marker = 0x00C5;\n        this.sof6Marker = 0x00C6;\n        this.sof7Marker = 0x00C7;\n        this.sof9Marker = 0x00C9;\n        this.sof10Marker = 0x00CA;\n        this.sof11Marker = 0x00CB;\n        this.sof13Marker = 0x00CD;\n        this.sof14Marker = 0x00CE;\n        this.sof15Marker = 0x00CF;\n        /**\n         * Specifies `format` of image.\n         * @hidden\n         * @private\n         */\n        this.mFormat = ImageFormat.Unknown;\n        /**\n         * `Bits per component`.\n         * @default 8\n         * @hidden\n         * @private\n         */\n        this.mbitsPerComponent = 8;\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @hidden\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        this.mStream = stream;\n        this.initialize();\n    }\n    Object.defineProperty(ImageDecoder.prototype, \"height\", {\n        /**\n         * Gets the `height` of image.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mHeight;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"width\", {\n        /**\n         * Gets the `width` of image.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mWidth;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"bitsPerComponent\", {\n        /**\n         * Gets `bits per component`.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mbitsPerComponent;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"size\", {\n        /**\n         * Gets the `size` of an image data.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mImageData.count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"imageData\", {\n        /**\n         * Gets the value of an `image data`.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mImageData;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"imageDataAsNumberArray\", {\n        /**\n         * Gets the value of an `image data as number array`.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mImageData.internalBuffer.buffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Initialize` image data and image stream.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.initialize = function () {\n        if (this.mFormat === ImageFormat.Unknown && this.checkIfJpeg()) {\n            this.mFormat = ImageFormat.Jpeg;\n            this.parseJpegImage();\n        }\n        else {\n            throw new TypeError('Only the JPEG format is supported');\n        }\n        this.reset();\n        this.mImageData = new ByteArray(this.mStream.count);\n        this.mStream.read(this.mImageData, 0, this.mImageData.count);\n    };\n    /**\n     * `Reset` stream position into 0.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.reset = function () {\n        this.mStream.position = 0;\n    };\n    /**\n     * `Parse` Jpeg image.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.parseJpegImage = function () {\n        this.reset();\n        var imgData = new ByteArray(this.mStream.count);\n        this.mStream.read(imgData, 0, imgData.count);\n        var i = 4;\n        var isLengthExceed = false;\n        /* tslint:disable */\n        var length = imgData.getBuffer(i) * 256 + imgData.getBuffer(i + 1);\n        while (i < imgData.count) {\n            i += length;\n            if (i < imgData.count) {\n                if (imgData.getBuffer(i + 1) === 192) {\n                    this.mHeight = imgData.getBuffer(i + 5) * 256 + imgData.getBuffer(i + 6);\n                    this.mWidth = imgData.getBuffer(i + 7) * 256 + imgData.getBuffer(i + 8);\n                    return;\n                }\n                else {\n                    i += 2;\n                    length = imgData.getBuffer(i) * 256 + imgData.getBuffer(i + 1);\n                }\n            }\n            else {\n                isLengthExceed = true;\n                break;\n            }\n        }\n        if (isLengthExceed) {\n            this.mStream.position = 0;\n            this.skip(this.mStream, 2);\n            this.readExceededJPGImage(this.mStream);\n        }\n        /* tslint:enable */\n    };\n    Object.defineProperty(ImageDecoder.prototype, \"format\", {\n        /**\n         * Gets the image `format`.\n         * @private\n         * @hidden\n         */\n        get: function () {\n            return this.mFormat;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Checks if JPG`.\n     * @private\n     * @hidden\n     */\n    ImageDecoder.prototype.checkIfJpeg = function () {\n        this.reset();\n        for (var i = 0; i < ImageDecoder.mJpegHeader.length; i++) {\n            if (ImageDecoder.mJpegHeader[i] !== this.mStream.readByte(i)) {\n                return false;\n            }\n            this.mStream.position++;\n        }\n        return true;\n    };\n    /**\n     * Return image `dictionary`.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.getImageDictionary = function () {\n        if (this.mFormat === ImageFormat.Jpeg) {\n            var tempArrayBuffer = this.imageData.internalBuffer.length;\n            this.imageStream = new PdfStream();\n            this.imageStream.isResource = true;\n            var tempString = '';\n            var decodedString = '';\n            for (var i = 0; i < this.imageDataAsNumberArray.byteLength; i++) {\n                tempString += String.fromCharCode(null, this.mStream.readByte(i));\n            }\n            for (var i = 0; i < tempString.length; i++) {\n                if (i % 2 !== 0) {\n                    decodedString += tempString[i];\n                }\n            }\n            this.imageStream.data = [decodedString];\n            this.imageStream.compress = false;\n            this.imageStream.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.xObject));\n            this.imageStream.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.image));\n            this.imageStream.items.setValue(this.dictionaryProperties.width, new PdfNumber(this.width));\n            this.imageStream.items.setValue(this.dictionaryProperties.height, new PdfNumber(this.height));\n            this.imageStream.items.setValue(this.dictionaryProperties.bitsPerComponent, new PdfNumber(this.bitsPerComponent));\n            this.imageStream.items.setValue(this.dictionaryProperties.filter, new PdfName(this.dictionaryProperties.dctdecode));\n            this.imageStream.items.setValue(this.dictionaryProperties.colorSpace, new PdfName(this.getColorSpace()));\n            this.imageStream.items.setValue(this.dictionaryProperties.decodeParms, this.getDecodeParams());\n            return this.imageStream;\n        }\n        else {\n            return this.imageStream;\n        }\n    };\n    /**\n     * Return `colorSpace` of an image.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.getColorSpace = function () {\n        return this.dictionaryProperties.deviceRgb;\n    };\n    /**\n     * Return `decode parameters` of an image.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.getDecodeParams = function () {\n        var decodeParams = new PdfDictionary();\n        decodeParams.items.setValue(this.dictionaryProperties.columns, new PdfNumber(this.width));\n        decodeParams.items.setValue(this.dictionaryProperties.blackIs1, new PdfBoolean(true));\n        decodeParams.items.setValue(this.dictionaryProperties.k, new PdfNumber(-1));\n        decodeParams.items.setValue(this.dictionaryProperties.predictor, new PdfNumber(15));\n        decodeParams.items.setValue(this.dictionaryProperties.bitsPerComponent, new PdfNumber(this.bitsPerComponent));\n        return decodeParams;\n    };\n    /**\n     * 'readExceededJPGImage' stream\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.readExceededJPGImage = function (stream) {\n        this.mStream = stream;\n        var isContinueReading = true;\n        while (isContinueReading) {\n            var marker = this.getMarker(stream);\n            switch (marker) {\n                case this.sof1Marker:\n                case this.sof2Marker:\n                case this.sof3Marker:\n                case this.sof5Marker:\n                case this.sof6Marker:\n                case this.sof7Marker:\n                case this.sof9Marker:\n                case this.sof10Marker:\n                case this.sof11Marker:\n                case this.sof13Marker:\n                case this.sof14Marker:\n                case this.sof15Marker:\n                    stream.position += 3;\n                    this.mHeight = this.mStream.readNextTwoBytes(stream);\n                    this.mWidth = this.mStream.readNextTwoBytes(stream);\n                    isContinueReading = false;\n                    break;\n                default:\n                    this.skipStream(stream);\n                    break;\n            }\n        }\n    };\n    /**\n     * 'skip' stream\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.skip = function (stream, noOfBytes) {\n        this.mStream = stream;\n        var temp = new ByteArray(noOfBytes);\n        this.mStream.read(temp, 0, temp.count);\n    };\n    /**\n     * 'getMarker' stream\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.getMarker = function (stream) {\n        var skippedByte = 0;\n        var marker = 32;\n        marker = stream.readByte(this.mStream.position);\n        stream.position++;\n        while (marker !== 255) {\n            skippedByte++;\n            marker = stream.readByte(this.mStream.position);\n            stream.position++;\n        }\n        do {\n            marker = stream.readByte(this.mStream.position);\n            stream.position++;\n        } while (marker === 255);\n        return marker;\n    };\n    /**\n     * 'skipStream' stream\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.skipStream = function (stream) {\n        var markerLength = this.mStream.readNextTwoBytes(stream) - 2;\n        if (markerLength > 0) {\n            stream.position += markerLength;\n        }\n    };\n    /**\n     * Number array for `png header`.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.mPngHeader = [137, 80, 78, 71, 13, 10, 26, 10];\n    /**\n     * Number Array for `jpeg header`.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.mJpegHeader = [255, 216];\n    /**\n     * Number array for `gif header`.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.GIF_HEADER = 'G,I,F,8';\n    /**\n     * Number array for `bmp header.`\n     * @hidden\n     * @private\n     */\n    ImageDecoder.BMP_HEADER = 'B,M';\n    return ImageDecoder;\n}());\nexport { ImageDecoder };\n", "/**\n * Used to perform `convertion between pixels and points`.\n * @private\n */\nvar PdfUnitConverter = /** @class */ (function () {\n    //constructors\n    /**\n     * Initializes a new instance of the `UnitConvertor` class with DPI value.\n     * @private\n     */\n    function PdfUnitConverter(dpi) {\n        this.updateProportionsHelper(dpi);\n    }\n    /**\n     * `Converts` the value, from one graphics unit to another graphics unit.\n     * @private\n     */\n    PdfUnitConverter.prototype.convertUnits = function (value, from, to) {\n        return this.convertFromPixels(this.convertToPixels(value, from), to);\n    };\n    /**\n     * Converts the value `to pixel` from specified graphics unit.\n     * @private\n     */\n    PdfUnitConverter.prototype.convertToPixels = function (value, from) {\n        var index = from;\n        var result = (value * this.proportions[index]);\n        return result;\n    };\n    /**\n     * Converts value, to specified graphics unit `from Pixel`.\n     * @private\n     */\n    PdfUnitConverter.prototype.convertFromPixels = function (value, to) {\n        var index = to;\n        var result = (value / this.proportions[index]);\n        return result;\n    };\n    /**\n     * `Update proportions` matrix according to Graphics settings.\n     * @private\n     */\n    PdfUnitConverter.prototype.updateProportionsHelper = function (pixelPerInch) {\n        this.proportions = [\n            pixelPerInch / 2.54,\n            pixelPerInch / 6.0,\n            1,\n            pixelPerInch / 72.0,\n            pixelPerInch,\n            pixelPerInch / 300.0,\n            pixelPerInch / 25.4 // Millimeter\n        ];\n    };\n    //Fields\n    /**\n     * Indicates default `horizontal resolution`.\n     * @default 96\n     * @private\n     */\n    PdfUnitConverter.horizontalResolution = 96;\n    /**\n     * Indicates default `vertical resolution`.\n     * @default 96\n     * @private\n     */\n    PdfUnitConverter.verticalResolution = 96;\n    return PdfUnitConverter;\n}());\nexport { PdfUnitConverter };\n", "import { SizeF } from './../../drawing/pdf-drawing';\nimport { PdfGraphicsUnit } from './../enum';\nimport { PdfUnitConverter } from './../unit-convertor';\n/**\n * `PdfImage` class represents the base class for images and provides functionality for the 'PdfBitmap' class.\n * @private\n */\nvar PdfImage = /** @class */ (function () {\n    function PdfImage() {\n    }\n    Object.defineProperty(PdfImage.prototype, \"width\", {\n        /**\n         * Gets and Sets the `width` of an image.\n         * @private\n         */\n        get: function () {\n            return this.imageWidth;\n        },\n        set: function (value) {\n            this.imageWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfImage.prototype, \"height\", {\n        /**\n         * Gets and Sets the `height` of an image.\n         * @private\n         */\n        get: function () {\n            return this.imageHeight;\n        },\n        set: function (value) {\n            this.imageHeight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfImage.prototype, \"size\", {\n        /**\n         * Gets or sets the size of the image.\n         * @private\n         */\n        set: function (value) {\n            this.width = value.width;\n            this.height = value.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfImage.prototype, \"physicalDimension\", {\n        /**\n         * Gets the `physical dimension` of an image.\n         * @private\n         */\n        get: function () {\n            this.imagePhysicalDimension = this.getPointSize(this.width, this.height, this.horizontalResolution, this.verticalResolution);\n            return new SizeF(this.width, this.height);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfImage.prototype, \"element\", {\n        // /**\n        //  * Gets the `image stream as string`.\n        //  * @private\n        //  */\n        // public static fromString(string : string) : PdfImage {\n        //     let image : PdfImage = new PdfBitmap(string);\n        //     return image;\n        // }\n        /**\n         * Gets the `element` image stream.\n         * @private\n         */\n        get: function () {\n            return this.imageStream;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfImage.prototype.getPointSize = function (width, height, horizontalResolution, verticalResolution) {\n        if (typeof horizontalResolution === 'undefined') {\n            var dpiX = PdfUnitConverter.horizontalResolution;\n            var dpiY = PdfUnitConverter.verticalResolution;\n            var size = this.getPointSize(width, height, dpiX, dpiY);\n            return size;\n        }\n        else {\n            var ucX = new PdfUnitConverter(horizontalResolution);\n            var ucY = new PdfUnitConverter(verticalResolution);\n            var ptWidth = ucX.convertUnits(width, PdfGraphicsUnit.Pixel, PdfGraphicsUnit.Point);\n            var ptHeight = ucY.convertUnits(height, PdfGraphicsUnit.Pixel, PdfGraphicsUnit.Point);\n            var size = new SizeF(ptWidth, ptHeight);\n            return size;\n        }\n    };\n    return PdfImage;\n}());\nexport { PdfImage };\n", "var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfBitmap.ts class for EJ2-PDF\n */\nimport { ImageDecoder } from './../../graphics/images/image-decoder';\nimport { ByteArray } from './../../graphics/images/byte-array';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfImage } from './pdf-image';\n/**\n * The 'PdfBitmap' contains methods and properties to handle the Bitmap images.\n * ```typescript\n * // create a new PDF document.\n * let document : PdfDocument = new PdfDocument();\n * // add a page to the document.\n * let page1 : PdfPage = document.pages.add();\n * // base64 string of an image\n * let imageString : string = '/9j/3+2w7em7HzY/KiijFw … 1OEYRUYrQ45yc5OUtz/9k=';\n * // load the image from the base64 string of original image.\n * let image : PdfBitmap = new PdfBitmap(imageString);\n * // draw the image\n * page1.graphics.drawImage(image, new RectangleF({x : 10, y : 10}, {width : 200, height : 200}));\n * // save the document.\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfBitmap = /** @class */ (function (_super) {\n    __extends(PdfBitmap, _super);\n    /**\n     * Create an instance for `PdfBitmap` class.\n     * @param encodedString Base64 string of an image.\n     * ```typescript\n     * // create a new PDF document.\n     * let document : PdfDocument = new PdfDocument();\n     * // add a page to the document.\n     * let page1 : PdfPage = document.pages.add();\n     * // base64 string of an image\n     * let imageString : string = '/9j/3+2w7em7HzY/KiijFw … 1OEYRUYrQ45yc5OUtz/9k=';\n     * //\n     * // load the image from the base64 string of original image.\n     * let image : PdfBitmap = new PdfBitmap(imageString);\n     * //\n     * // draw the image\n     * page1.graphics.drawImage(image, new RectangleF({x : 10, y : 10}, {width : 200, height : 200}));\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     */\n    function PdfBitmap(encodedString) {\n        var _this = _super.call(this) || this;\n        //Fields\n        /**\n         * Specifies the `status` of an image.\n         * @default true.\n         * @hidden\n         * @private\n         */\n        _this.imageStatus = true;\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @hidden\n         * @private\n         */\n        _this.dictionaryProperties = new DictionaryProperties();\n        _this.loadImage(encodedString);\n        return _this;\n    }\n    /**\n     * `Load image`.\n     * @hidden\n     * @private\n     */\n    PdfBitmap.prototype.loadImage = function (encodedString) {\n        var task = this.initializeAsync(encodedString);\n    };\n    /**\n     * `Initialize` image parameters.\n     * @private\n     */\n    PdfBitmap.prototype.initializeAsync = function (encodedString) {\n        var byteArray = new ByteArray(encodedString.length);\n        byteArray.writeFromBase64String(encodedString);\n        this.decoder = new ImageDecoder(byteArray);\n        this.height = this.decoder.height;\n        this.width = this.decoder.width;\n        // FrameCount = BitmapImageDecoder.FrameCount;\n        this.bitsPerComponent = this.decoder.bitsPerComponent;\n    };\n    /**\n     * `Saves` the image into stream.\n     * @private\n     */\n    PdfBitmap.prototype.save = function () {\n        this.imageStatus = true;\n        this.imageStream = this.decoder.getImageDictionary();\n    };\n    return PdfBitmap;\n}(PdfImage));\nexport { PdfBitmap };\n", "/**\n * public Enum for `PdfLayoutType`.\n * @private\n */\nexport var PdfLayoutType;\n(function (PdfLayoutType) {\n    /**\n     * Specifies the type of `Paginate`.\n     * @private\n     */\n    PdfLayoutType[PdfLayoutType[\"Paginate\"] = 0] = \"Paginate\";\n    /**\n     * Specifies the type of `OnePage`.\n     * @private\n     */\n    PdfLayoutType[PdfLayoutType[\"OnePage\"] = 1] = \"OnePage\";\n})(PdfLayoutType || (PdfLayoutType = {}));\n/**\n * public Enum for `PdfLayoutBreakType`.\n * @private\n */\nexport var PdfLayoutBreakType;\n(function (PdfLayoutBreakType) {\n    /**\n     * Specifies the type of `FitPage`.\n     * @private\n     */\n    PdfLayoutBreakType[PdfLayoutBreakType[\"FitPage\"] = 0] = \"FitPage\";\n    /**\n     * Specifies the type of `FitElement`.\n     * @private\n     */\n    PdfLayoutBreakType[PdfLayoutBreakType[\"FitElement\"] = 1] = \"FitElement\";\n    /**\n     * Specifies the type of `FitColumnsToPage`.\n     * @private\n     */\n    PdfLayoutBreakType[PdfLayoutBreakType[\"FitColumnsToPage\"] = 2] = \"FitColumnsToPage\";\n})(PdfLayoutBreakType || (PdfLayoutBreakType = {}));\nexport var PathPointType;\n(function (PathPointType) {\n    /**\n     * Specifies the path point type of `Start`.\n     * @private\n     */\n    PathPointType[PathPointType[\"Start\"] = 0] = \"Start\";\n    /**\n     * Specifies the path point type of `Line`.\n     * @private\n     */\n    PathPointType[PathPointType[\"Line\"] = 1] = \"Line\";\n    /**\n     * Specifies the path point type of `Bezier3`.\n     * @private\n     */\n    PathPointType[PathPointType[\"Bezier3\"] = 3] = \"Bezier3\";\n    /**\n     * Specifies the path point type of `Bezier`.\n     * @private\n     */\n    PathPointType[PathPointType[\"Bezier\"] = 3] = \"Bezier\";\n    /**\n     * Specifies the path point type of `PathTypeMask`.\n     * @private\n     */\n    PathPointType[PathPointType[\"PathTypeMask\"] = 7] = \"PathTypeMask\";\n    /**\n     * Specifies the path point type of `DashMode`.\n     * @private\n     */\n    PathPointType[PathPointType[\"DashMode\"] = 16] = \"DashMode\";\n    /**\n     * Specifies the path point type of `PathMarker`.\n     * @private\n     */\n    PathPointType[PathPointType[\"PathMarker\"] = 32] = \"PathMarker\";\n    /**\n     * Specifies the path point type of `CloseSubpath`.\n     * @private\n     */\n    PathPointType[PathPointType[\"CloseSubpath\"] = 128] = \"CloseSubpath\";\n})(PathPointType || (PathPointType = {}));\n", "/**\n * Used to `write a string` into output file.\n * @private\n */\nvar PdfWriter = /** @class */ (function () {\n    /**\n     * Initialize an instance of `PdfWriter` class.\n     * @private\n     */\n    function PdfWriter(stream) {\n        this.streamWriter = stream;\n    }\n    Object.defineProperty(PdfWriter.prototype, \"document\", {\n        //properties\n        /**\n         * Gets and Sets the `document`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument;\n        },\n        set: function (value) {\n            this.pdfDocument = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWriter.prototype, \"position\", {\n        /**\n         * Gets the `position`.\n         * @private\n         */\n        get: function () {\n            return this.streamWriter.buffer.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWriter.prototype, \"length\", {\n        /**\n         * Gets  the `length` of the stream'.\n         * @private\n         */\n        get: function () {\n            return this.streamWriter.buffer.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWriter.prototype, \"stream\", {\n        /**\n         * Gets the `stream`.\n         * @private\n         */\n        get: function () {\n            var result = this.streamWriter;\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //public Methods\n    /**\n     * `Writes the specified data`.\n     * @private\n     */\n    PdfWriter.prototype.write = function (overload) {\n        var data = [];\n        var tempOverload = overload;\n        this.streamWriter.write(tempOverload);\n    };\n    return PdfWriter;\n}());\nexport { PdfWriter };\n", "/**\n * public Enum for `CompositeFontType`.\n * @private\n */\nexport var ObjectStatus;\n(function (ObjectStatus) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    ObjectStatus[ObjectStatus[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `Registered`.\n     * @private\n     */\n    ObjectStatus[ObjectStatus[\"Registered\"] = 1] = \"Registered\";\n})(ObjectStatus || (ObjectStatus = {}));\n", "/**\n * PdfMainObjectCollection.ts class for EJ2-PDF\n */\nimport { Dictionary } from './../collections/dictionary';\nimport { ObjectStatus } from './enum';\n/**\n * The collection of all `objects` within a PDF document.\n * @private\n */\nvar PdfMainObjectCollection = /** @class */ (function () {\n    function PdfMainObjectCollection() {\n        //Fields\n        /**\n         * The collection of the `indirect objects`.\n         * @default []\n         * @private\n         */\n        this.objectCollections = [];\n        /**\n         * The collection of the `Indirect objects`.\n         * @default new Dictionary<number, ObjectInfo>()\n         * @private\n         */\n        this.mainObjectCollection = new Dictionary();\n        /**\n         * The collection of `primitive objects`.\n         * @private\n         */\n        this.primitiveObjectCollection = new Dictionary();\n    }\n    Object.defineProperty(PdfMainObjectCollection.prototype, \"count\", {\n        //Properties\n        /**\n         * Gets the `count`.\n         * @private\n         */\n        get: function () {\n            return this.objectCollections.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the value of `ObjectInfo` from object collection.\n     * @private\n     */\n    PdfMainObjectCollection.prototype.items = function (index) {\n        return this.objectCollections[index];\n    };\n    Object.defineProperty(PdfMainObjectCollection.prototype, \"outIsNew\", {\n        //Methods\n        /**\n         * Specifies the value of `IsNew`.\n         * @private\n         */\n        get: function () {\n            return this.isNew;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Adds` the specified element.\n     * @private\n     */\n    PdfMainObjectCollection.prototype.add = function (element) {\n        var objInfo = new ObjectInfo(element);\n        this.objectCollections.push(objInfo);\n        if (!this.primitiveObjectCollection.containsKey(element)) {\n            this.primitiveObjectCollection.setValue(element, this.objectCollections.length - 1);\n        }\n        element.position = this.index = this.objectCollections.length - 1;\n        element.status = ObjectStatus.Registered;\n    };\n    /**\n     * `Looks` through the collection for the object specified.\n     * @private\n     */\n    PdfMainObjectCollection.prototype.lookFor = function (obj) {\n        var index = -1;\n        if (obj.position !== -1) {\n            return obj.position;\n        }\n        if (this.primitiveObjectCollection.containsKey(obj) && this.count === this.primitiveObjectCollection.size()) {\n            index = this.primitiveObjectCollection.getValue(obj);\n        }\n        else {\n            for (var i = this.count - 1; i >= 0; i--) {\n                var oi = this.objectCollections[i];\n                if (oi.object === obj) {\n                    index = i;\n                    break;\n                }\n            }\n        }\n        return index;\n    };\n    /**\n     * Gets the `reference of the object`.\n     * @private\n     */\n    PdfMainObjectCollection.prototype.getReference = function (index, isNew) {\n        this.index = this.lookFor(index);\n        var reference;\n        this.isNew = false;\n        var oi = this.objectCollections[this.index];\n        reference = oi.reference;\n        var obj = { reference: reference, wasNew: isNew };\n        return obj;\n    };\n    /**\n     * Tries to set the `reference to the object`.\n     * @private\n     */\n    PdfMainObjectCollection.prototype.trySetReference = function (obj, reference, found) {\n        var result = true;\n        found = true;\n        this.index = this.lookFor(obj);\n        var oi = this.objectCollections[this.index];\n        oi.setReference(reference);\n        return result;\n    };\n    PdfMainObjectCollection.prototype.destroy = function () {\n        for (var _i = 0, _a = this.objectCollections; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            if (obj !== undefined) {\n                obj.pdfObject.position = -1;\n                obj.pdfObject.isSaving = undefined;\n                obj.pdfObject.objectCollectionIndex = undefined;\n                obj.pdfObject.position = undefined;\n            }\n        }\n        this.objectCollections = [];\n        this.mainObjectCollection = new Dictionary();\n        this.primitiveObjectCollection = new Dictionary();\n    };\n    return PdfMainObjectCollection;\n}());\nexport { PdfMainObjectCollection };\nvar ObjectInfo = /** @class */ (function () {\n    function ObjectInfo(obj, reference) {\n        this.pdfObject = obj;\n        this.pdfReference = reference;\n    }\n    Object.defineProperty(ObjectInfo.prototype, \"object\", {\n        //Properties\n        /**\n         * Gets the `object`.\n         * @private\n         */\n        get: function () {\n            return this.pdfObject;\n        },\n        set: function (value) {\n            this.pdfObject = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ObjectInfo.prototype, \"reference\", {\n        /**\n         * Gets the `reference`.\n         * @private\n         */\n        get: function () {\n            return this.pdfReference;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets the `reference`.\n     * @private\n     */\n    ObjectInfo.prototype.setReference = function (reference) {\n        this.pdfReference = reference;\n    };\n    return ObjectInfo;\n}());\nexport { ObjectInfo };\n", "import { Encoding, StreamWriter } from '@syncfusion/ej2-file-utils';\nimport { PdfDocument } from './pdf-document';\n/**\n * `PdfDocumentBase` class represent common properties of PdfDocument classes.\n * @private\n */\nvar PdfDocumentBase = /** @class */ (function () {\n    function PdfDocumentBase(document) {\n        /**\n         * If the stream is copied,  then it specifies true.\n         * @private\n         */\n        this.isStreamCopied = false;\n        if (document instanceof PdfDocument) {\n            this.document = document;\n        }\n    }\n    Object.defineProperty(PdfDocumentBase.prototype, \"pdfObjects\", {\n        //Prpperties\n        /**\n         * Gets the `PDF objects` collection, which stores all objects and references to it..\n         * @private\n         */\n        get: function () {\n            return this.objects;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentBase.prototype, \"crossTable\", {\n        /**\n         * Gets the `cross-reference` table.\n         * @private\n         */\n        get: function () {\n            return this.pdfCrossTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentBase.prototype, \"currentSavingObj\", {\n        /**\n         * Gets or sets the current saving `object number`.\n         * @private\n         */\n        get: function () {\n            return this.currentSavingObject;\n        },\n        set: function (value) {\n            this.currentSavingObject = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentBase.prototype, \"catalog\", {\n        /**\n         * Gets the PDF document `catalog`.\n         * @private\n         */\n        get: function () {\n            return this.pdfCatalog;\n        },\n        set: function (value) {\n            this.pdfCatalog = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentBase.prototype, \"viewerPreferences\", {\n        /**\n         * Gets viewer preferences for presenting the PDF document in a viewer.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets viewer preferences\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.pdfCatalog.viewerPreferences;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Public methods\n    /**\n     * Sets the `main object collection`.\n     * @private\n     */\n    PdfDocumentBase.prototype.setMainObjectCollection = function (mainObjectCollection) {\n        this.objects = mainObjectCollection;\n    };\n    /**\n     * Sets the `cross table`.\n     * @private\n     */\n    PdfDocumentBase.prototype.setCrossTable = function (cTable) {\n        this.pdfCrossTable = cTable;\n    };\n    /**\n     * Sets the `catalog`.\n     * @private\n     */\n    PdfDocumentBase.prototype.setCatalog = function (catalog) {\n        this.pdfCatalog = catalog;\n    };\n    PdfDocumentBase.prototype.save = function (filename) {\n        var _this = this;\n        var encoding = new Encoding(true);\n        var SW = new StreamWriter(encoding);\n        if (typeof filename === 'undefined') {\n            var encoding_1 = new Encoding(true);\n            var SW_1 = new StreamWriter(encoding_1);\n            return new Promise(function (resolve, reject) {\n                /* tslint:disable-next-line:no-any */\n                var obj = {};\n                obj.blobData = new Blob([_this.document.docSave(SW_1, true)], { type: 'application/pdf' });\n                resolve(obj);\n            });\n        }\n        else {\n            this.document.docSave(SW, filename, true);\n        }\n    };\n    /**\n     * `Clone` of parent object - PdfDocument.\n     * @private\n     */\n    PdfDocumentBase.prototype.clone = function () {\n        return this.document;\n    };\n    return PdfDocumentBase;\n}());\nexport { PdfDocumentBase };\n", "/**\n * public Enum for `ObjectType`.\n * @private\n */\nexport var ObjectType;\n(function (ObjectType) {\n    /**\n     * Specifies the type of `Free`.\n     * @private\n     */\n    ObjectType[ObjectType[\"Free\"] = 0] = \"Free\";\n    /**\n     * Specifies the type of `Normal`.\n     * @private\n     */\n    ObjectType[ObjectType[\"Normal\"] = 1] = \"Normal\";\n    /**\n     * Specifies the type of `Packed`.\n     * @private\n     */\n    ObjectType[ObjectType[\"Packed\"] = 2] = \"Packed\";\n})(ObjectType || (ObjectType = {}));\n", "import { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { PdfBoolean } from './../primitives/pdf-boolean';\nimport { PdfName } from './../primitives/pdf-name';\n/**\n * Defines the way the document is to be presented on the screen or in print.\n * ```typescript\n * // Create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // Gets viewer preferences\n * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfViewerPreferences = /** @class */ (function () {\n    /**\n     * Initialize a new instance of `PdfViewerPreferences` class.\n     *\n     * @private\n     * ```\n    */\n    function PdfViewerPreferences(catalog) {\n        this._dictionaryProperties = new DictionaryProperties();\n        this._centerWindow = false;\n        this._fitWindow = false;\n        this._displayTitle = false;\n        this._splitWindow = false;\n        this._hideMenuBar = false;\n        this._hideToolBar = false;\n        this._hideWindowUI = false;\n        this._pageMode = PdfPageMode.UseNone;\n        this._pageLayout = PdfPageLayout.SinglePage;\n        this._dictionary = new PdfDictionary();\n        this._duplex = DuplexMode.None;\n        this._catalog = catalog;\n    }\n    Object.defineProperty(PdfViewerPreferences.prototype, \"centerWindow\", {\n        /**\n         * A flag specifying whether to position the document’s window in the center of the screen.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the center window\n         * let centerWindow : boolean = viewerPreferences.centerWindow;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._centerWindow;\n        },\n        /**\n         * A flag specifying whether to position the document’s window in the center of the screen.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the center window\n         * viewerPreferences.centerWindow = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._centerWindow = value;\n            this._dictionary.items.setValue(this._dictionaryProperties.centerWindow, new PdfBoolean(this._centerWindow));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"displayTitle\", {\n        /**\n         * A flag specifying whether the window’s title bar should display the document title taken\n         * from the Title entry of the document information dictionary. If false, the title bar\n         * should instead display the name of the PDF file containing the document.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the display title\n         * let displayTitle : boolean = viewerPreferences.displayTitle;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._displayTitle;\n        },\n        /**\n         * A flag specifying whether the window’s title bar should display the document title taken\n         * from the Title entry of the document information dictionary. If false, the title bar\n         * should instead display the name of the PDF file containing the document.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the display title\n         * viewerPreferences.displayTitle = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._displayTitle = value;\n            this._dictionary.items.setValue(this._dictionaryProperties.displayTitle, new PdfBoolean(this._displayTitle));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"fitWindow\", {\n        /**\n         * A flag specifying whether to resize the document’s window to fit the size of the first\n         * displayed page.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the fit window\n         * let fitWindow : boolean = viewerPreferences.fitWindow;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._fitWindow;\n        },\n        /**\n         * A flag specifying whether to resize the document’s window to fit the size of the first\n         * displayed page.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the fit window\n         * viewerPreferences.fitWindow = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._fitWindow = value;\n            this._dictionary.items.setValue(this._dictionaryProperties.fitWindow, new PdfBoolean(this._fitWindow));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"hideMenuBar\", {\n        /**\n         * A flag specifying whether to hide the viewer application’s menu bar when the\n         * document is active.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the hide menu bar\n         * let hideMenuBar: boolean = viewerPreferences.hideMenuBar;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._hideMenuBar;\n        },\n        /**\n         * A flag specifying whether to hide the viewer application’s menu bar when the\n         * document is active.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the hide menu bar\n         * viewerPreferences.hideMenuBar = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._hideMenuBar = value;\n            this._dictionary.items.setValue(this._dictionaryProperties.hideMenuBar, new PdfBoolean(this._hideMenuBar));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"hideToolBar\", {\n        /**\n         * A flag specifying whether to hide the viewer application’s tool bar when the\n         * document is active.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the hide tool bar\n         * let hideToolBar: boolean = viewerPreferences.hideToolBar;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._hideToolBar;\n        },\n        /**\n         * A flag specifying whether to hide the viewer application’s tool bar when the\n         * document is active.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the hide tool bar\n         * viewerPreferences.hideToolbar = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._hideToolBar = value;\n            this._dictionary.items.setValue(this._dictionaryProperties.hideToolBar, new PdfBoolean(this._hideToolBar));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"hideWindowUI\", {\n        /**\n         * A flag specifying whether to hide user interface elements in the document’s window\n         * (such as scroll bars and navigation controls), leaving only the document’s contents displayed.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the hide window UI\n         * let hideWindowUI: boolean = viewerPreferences.hideWindowUI;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._hideWindowUI;\n        },\n        /**\n         * A flag specifying whether to hide user interface elements in the document’s window\n         * (such as scroll bars and navigation controls), leaving only the document’s contents displayed.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the hide window UI\n         * viewerPreferences.hideWindowUI = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._hideWindowUI = value;\n            this._dictionary.items.setValue(this._dictionaryProperties.hideWindowUI, new PdfBoolean(this._hideWindowUI));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"pageMode\", {\n        /**\n         * A name object specifying how the document should be displayed when opened.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the page mode\n         * let pageMode: PdfPageMode = viewerPreferences.pageMode;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._pageMode;\n        },\n        /**\n         * A name object specifying how the document should be displayed when opened.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the page mode\n         * viewerPreferences.pageMode = PdfPageMode.UseOutlines;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._pageMode = value;\n            this._catalog.items.setValue(this._dictionaryProperties.pageMode, new PdfName(this._mapPageMode(this._pageMode)));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"duplex\", {\n        /**\n         * Gets print duplex mode handling option to use when printing the file from the print dialog.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the duplex\n         * let duplex : DuplexMode = viewerPreferences.duplex;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._duplex;\n        },\n        /**\n         * Sets print duplex mode handling option to use when printing the file from the print dialog.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the duplex\n         * viewerPreferences.duplex = DuplexMode.DuplexFlipLongEdge;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._duplex = value;\n            this._catalog.items.setValue(this._dictionaryProperties.duplex, new PdfName(this._mapDuplexMode(this._duplex)));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"pageLayout\", {\n        /**\n         * A name object specifying the page layout to be used when the document is opened.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the page layout\n         * let pageLayout : PdfPageLayout = viewerPreferences.pageLayout;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._pageLayout;\n        },\n        /**\n         * A name object specifying the page layout to be used when the document is opened.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the page layout\n         * viewerPreferences.pageLayout = PdfPageLayout.TwoColumnLeft;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._pageLayout = value;\n            this._catalog.items.setValue(this._dictionaryProperties.pageLayout, new PdfName(this._mapPageLayout(this._pageLayout)));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"pageScaling\", {\n        /**\n         * Gets the page scaling option to be selected\n         * when a print dialog is displayed for this document.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the page scaling\n         * let pageScaling : PageScalingMode = viewerPreferences.pageScaling;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._pageScaling;\n        },\n        /**\n         * Sets the page scaling option to be selected\n         * when a print dialog is displayed for this document.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the page scaling\n         * viewerPreferences.pageScaling = PageScalingMode.None;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._pageScaling = value;\n            if (this._pageScaling === PageScalingMode.AppDefault && this._dictionary.items.containsKey(this._dictionaryProperties.printScaling)) {\n                this._dictionary.items.remove(this._dictionaryProperties.printScaling);\n            }\n            else if (this._pageScaling === PageScalingMode.None) {\n                this._dictionary.items.setValue(this._dictionaryProperties.printScaling, new PdfName('None'));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"element\", {\n        /**\n         * Primivie element\n         *\n         * @private\n         */\n        get: function () {\n            return this._dictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfViewerPreferences.prototype._mapDuplexMode = function (mode) {\n        switch (mode) {\n            case DuplexMode.Simplex:\n                return 'Simplex';\n            case DuplexMode.DuplexFlipShortEdge:\n                return 'DuplexFlipShortEdge';\n            case DuplexMode.DuplexFlipLongEdge:\n                return 'DuplexFlipLongEdge';\n            case DuplexMode.None:\n                return 'None';\n        }\n    };\n    PdfViewerPreferences.prototype._mapPageMode = function (mode) {\n        switch (mode) {\n            case PdfPageMode.UseNone:\n                return 'UseNone';\n            case PdfPageMode.UseOutlines:\n                return 'UseOutlines';\n            case PdfPageMode.UseThumbs:\n                return 'UseThumbs';\n            case PdfPageMode.FullScreen:\n                return 'FullScreen';\n            case PdfPageMode.UseOC:\n                return 'UseOC';\n            case PdfPageMode.UseAttachments:\n                return 'UseAttachments';\n        }\n    };\n    PdfViewerPreferences.prototype._mapPageLayout = function (layout) {\n        switch (layout) {\n            case PdfPageLayout.SinglePage:\n                return 'SinglePage';\n            case PdfPageLayout.OneColumn:\n                return 'OneColumn';\n            case PdfPageLayout.TwoColumnLeft:\n                return 'TwoColumnLeft';\n            case PdfPageLayout.TwoColumnRight:\n                return 'TwoColumnRight';\n            case PdfPageLayout.TwoPageLeft:\n                return 'TwoPageLeft';\n            case PdfPageLayout.TwoPageRight:\n                return 'TwoPageRight';\n        }\n    };\n    return PdfViewerPreferences;\n}());\nexport { PdfViewerPreferences };\n/**\n * Represents mode of document displaying.\n * ```typescript\n * // Create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // Gets the viewer preferences of the document\n * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n * // Sets the page mode\n * viewerPreferences.pageMode = PdfPageMode.UseOutlines;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfPageMode;\n(function (PdfPageMode) {\n    /**\n     * Default value. Neither document outline nor thumbnail images visible.\n     */\n    PdfPageMode[PdfPageMode[\"UseNone\"] = 0] = \"UseNone\";\n    /**\n     * Document outline visible.\n     */\n    PdfPageMode[PdfPageMode[\"UseOutlines\"] = 1] = \"UseOutlines\";\n    /**\n     * Thumbnail images visible.\n     */\n    PdfPageMode[PdfPageMode[\"UseThumbs\"] = 2] = \"UseThumbs\";\n    /**\n     * Full-screen mode, with no menu bar, window controls, or any other window visible.\n     */\n    PdfPageMode[PdfPageMode[\"FullScreen\"] = 3] = \"FullScreen\";\n    /**\n     * Optional content group panel visible.\n     */\n    PdfPageMode[PdfPageMode[\"UseOC\"] = 4] = \"UseOC\";\n    /**\n     * Attachments are visible.\n     */\n    PdfPageMode[PdfPageMode[\"UseAttachments\"] = 5] = \"UseAttachments\";\n})(PdfPageMode || (PdfPageMode = {}));\n/**\n * A name object specifying the page layout to be used when the document is opened.\n * ```typescript\n * // Create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // Gets the viewer preferences of the document\n * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n * // Sets the page layout\n * viewerPreferences.pageLayout = PdfPageLayout.TwoColumnLeft;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfPageLayout;\n(function (PdfPageLayout) {\n    /**\n     * Default Value. Display one page at a time.\n     */\n    PdfPageLayout[PdfPageLayout[\"SinglePage\"] = 0] = \"SinglePage\";\n    /**\n     * Display the pages in one column.\n     */\n    PdfPageLayout[PdfPageLayout[\"OneColumn\"] = 1] = \"OneColumn\";\n    /**\n     * Display the pages in two columns, with odd numbered\n     * pages on the left.\n     */\n    PdfPageLayout[PdfPageLayout[\"TwoColumnLeft\"] = 2] = \"TwoColumnLeft\";\n    /**\n     * Display the pages in two columns, with odd numbered\n     * pages on the right.\n     */\n    PdfPageLayout[PdfPageLayout[\"TwoColumnRight\"] = 3] = \"TwoColumnRight\";\n    /**\n     * Display the pages two at a time, with odd-numbered pages on the left.\n     */\n    PdfPageLayout[PdfPageLayout[\"TwoPageLeft\"] = 4] = \"TwoPageLeft\";\n    /**\n     * Display the pages two at a time, with odd-numbered pages on the right.\n     */\n    PdfPageLayout[PdfPageLayout[\"TwoPageRight\"] = 5] = \"TwoPageRight\";\n})(PdfPageLayout || (PdfPageLayout = {}));\n/**\n * The paper handling option to use when printing the file from the print dialog.\n * ```typescript\n * // Create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // Gets the viewer preferences of the document\n * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n * // Sets the duplex\n * viewerPreferences.duplex = DuplexMode.DuplexFlipLongEdge;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var DuplexMode;\n(function (DuplexMode) {\n    /**\n     * Print single-sided.\n     */\n    DuplexMode[DuplexMode[\"Simplex\"] = 0] = \"Simplex\";\n    /**\n     * Duplex and flip on the short edge of the sheet.\n     */\n    DuplexMode[DuplexMode[\"DuplexFlipShortEdge\"] = 1] = \"DuplexFlipShortEdge\";\n    /**\n     * Duplex and flip on the long edge of the sheet.\n     */\n    DuplexMode[DuplexMode[\"DuplexFlipLongEdge\"] = 2] = \"DuplexFlipLongEdge\";\n    /**\n     * Default value.\n     */\n    DuplexMode[DuplexMode[\"None\"] = 3] = \"None\";\n})(DuplexMode || (DuplexMode = {}));\n/**\n * Specifies the different page scaling option that shall be selected\n * when a print dialog is displayed for this document.\n * ```typescript\n * // Create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // Gets the viewer preferences of the document\n * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n * // Sets the page scaling\n * viewerPreferences.pageScaling = PageScalingMode.None;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PageScalingMode;\n(function (PageScalingMode) {\n    /**\n     * Indicates the conforming reader’s default print scaling.\n     */\n    PageScalingMode[PageScalingMode[\"AppDefault\"] = 0] = \"AppDefault\";\n    /**\n     * Indicates no page scaling.\n     */\n    PageScalingMode[PageScalingMode[\"None\"] = 1] = \"None\";\n})(PageScalingMode || (PageScalingMode = {}));\n", "var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfCatalog.ts class for EJ2-PDF\n */\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfViewerPreferences } from './pdf-viewer-preferences';\n/**\n * `PdfCatalog` class represents internal catalog of the Pdf document.\n * @private\n */\nvar PdfCatalog = /** @class */ (function (_super) {\n    __extends(PdfCatalog, _super);\n    //constructor\n    /**\n     * Initializes a new instance of the `PdfCatalog` class.\n     * @private\n     */\n    function PdfCatalog() {\n        var _this = _super.call(this) || this;\n        //fields\n        /**\n         * Internal variable to store collection of `sections`.\n         * @default null\n         * @private\n         */\n        _this.sections = null;\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @private\n         */\n        _this.tempDictionaryProperties = new DictionaryProperties();\n        _this.items.setValue(new DictionaryProperties().type, new PdfName('Catalog'));\n        return _this;\n    }\n    Object.defineProperty(PdfCatalog.prototype, \"pages\", {\n        //Properties\n        /**\n         * Gets or sets the sections, which contain `pages`.\n         * @private\n         */\n        get: function () {\n            return this.sections;\n        },\n        set: function (value) {\n            var dictionary = value.element;\n            // if (this.sections !== value) {\n            //     this.sections = value;\n            //     this.Items.setValue(this.tempDictionaryProperties.pages, new PdfReferenceHolder(value));\n            // }\n            this.sections = value;\n            this.items.setValue(this.tempDictionaryProperties.pages, new PdfReferenceHolder(value));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCatalog.prototype, \"viewerPreferences\", {\n        /**\n         * Gets the viewer preferences of the PDF document.\n         * @private\n         */\n        get: function () {\n            if (this._viewerPreferences === null || typeof this._viewerPreferences === 'undefined') {\n                this._viewerPreferences = new PdfViewerPreferences(this);\n                this.items.setValue(this.tempDictionaryProperties.viewerPreferences, new PdfReferenceHolder(this._viewerPreferences.element));\n            }\n            return this._viewerPreferences;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfCatalog;\n}(PdfDictionary));\nexport { PdfCatalog };\n", "import { ObjectStatus } from './../input-output/enum';\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './pdf-dictionary-properties';\nimport { Operators } from './pdf-operators';\nimport { Dictionary } from './../collections/dictionary';\nimport { PdfReference } from './../primitives/pdf-reference';\nimport { ObjectType } from './cross-table';\nimport { PdfStream } from './../primitives/pdf-stream';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfCatalog } from './../document/pdf-catalog';\n/**\n * `PdfCrossTable` is responsible for intermediate level parsing\n * and savingof a PDF document.\n * @private\n */\nvar PdfCrossTable = /** @class */ (function () {\n    function PdfCrossTable() {\n        /**\n         * The modified `objects` that should be saved.\n         * @private\n         */\n        this.objects = new Dictionary();\n        /**\n         * Holds `maximal generation number` or offset to object.\n         * @default 0\n         * @private\n         */\n        this.maxGenNumIndex = 0;\n        /**\n         * The `number of the objects`.\n         * @default 0\n         * @private\n         */\n        this.objectCount = 0;\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @default new PdfDictionaryProperties()\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n    }\n    Object.defineProperty(PdfCrossTable.prototype, \"isMerging\", {\n        //Properties\n        /**\n         * Gets or sets if the document `is merged`.\n         * @private\n         */\n        get: function () {\n            return this.merging;\n        },\n        set: function (value) {\n            this.merging = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"trailer\", {\n        /**\n         * Gets the `trailer`.\n         * @private\n         */\n        get: function () {\n            if (this.internalTrailer == null) {\n                this.internalTrailer = new PdfStream();\n            }\n            return this.internalTrailer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"document\", {\n        /**\n         * Gets or sets the main `PdfDocument` class instance.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument;\n        },\n        set: function (value) {\n            this.pdfDocument = value;\n            this.items = this.pdfDocument.pdfObjects;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"pdfObjects\", {\n        /**\n         * Gets the catched `PDF object` main collection.\n         * @private\n         */\n        get: function () {\n            return this.items;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"objectCollection\", {\n        /**\n         * Gets the `object collection`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument.pdfObjects;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"count\", {\n        /**\n         * Gets or sets the `number of the objects` within the document.\n         * @private\n         */\n        get: function () {\n            return this.objectCount;\n        },\n        set: function (value) {\n            this.objectCount = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"nextObjNumber\", {\n        /**\n         * Returns `next available object number`.\n         * @private\n         */\n        get: function () {\n            this.count = this.count + 1;\n            return this.count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfCrossTable.prototype.save = function (writer, filename) {\n        this.saveHead(writer);\n        var state = false;\n        this.mappedReferences = null;\n        this.objects.clear();\n        this.markTrailerReferences();\n        this.saveObjects(writer);\n        var saveCount = this.count;\n        var xrefPos = writer.position;\n        this.registerObject(0, new PdfReference(0, -1), true);\n        var prevXRef = 0;\n        writer.write(Operators.xref);\n        writer.write(Operators.newLine);\n        this.saveSections(writer);\n        this.saveTrailer(writer, this.count, prevXRef);\n        this.saveTheEndess(writer, xrefPos);\n        this.count = saveCount;\n        for (var i = 0; i < this.objectCollection.count; ++i) {\n            var oi = this.objectCollection.items(i);\n            oi.object.isSaving = false;\n        }\n        if (typeof filename === 'undefined') {\n            return writer.stream.buffer;\n        }\n        else {\n            writer.stream.save(filename);\n        }\n    };\n    /**\n     * `Saves the endess` of the file.\n     * @private\n     */\n    PdfCrossTable.prototype.saveTheEndess = function (writer, xrefPos) {\n        writer.write(Operators.newLine + Operators.startxref + Operators.newLine);\n        writer.write(xrefPos.toString() + Operators.newLine);\n        writer.write(Operators.eof + Operators.newLine);\n    };\n    /**\n     * `Saves the new trailer` dictionary.\n     * @private\n     */\n    PdfCrossTable.prototype.saveTrailer = function (writer, count, prevXRef) {\n        writer.write(Operators.trailer + Operators.newLine);\n        // Save the dictionary.\n        var trailer = this.trailer;\n        trailer.items.setValue(this.dictionaryProperties.size, new PdfNumber(this.objectCount + 1));\n        trailer = new PdfDictionary(trailer); // Make it real dictionary.\n        trailer.setEncrypt(false);\n        trailer.save(writer);\n    };\n    /**\n     * `Saves the xref section`.\n     * @private\n     */\n    PdfCrossTable.prototype.saveSections = function (writer) {\n        var objectNum = 0;\n        var count = 0;\n        do {\n            count = this.prepareSubsection(objectNum);\n            this.saveSubsection(writer, objectNum, count);\n            objectNum += count;\n        } while (count !== 0);\n    };\n    /**\n     * `Saves a subsection`.\n     * @private\n     */\n    PdfCrossTable.prototype.saveSubsection = function (writer, objectNum, count) {\n        if (count <= 0 || objectNum >= this.count) {\n            return;\n        }\n        var subsectionHead = '{0} {1}{2}';\n        writer.write(objectNum + ' ' + (count + 1) + Operators.newLine);\n        for (var i = objectNum; i <= objectNum + count; ++i) {\n            var obj = this.objects.getValue(i);\n            var str = '';\n            if (obj.type === ObjectType.Free) {\n                str = this.getItem(obj.offset, 65535, true);\n            }\n            else {\n                str = this.getItem(obj.offset, obj.generation, false);\n            }\n            writer.write(str);\n        }\n    };\n    /**\n     * Generates string for `xref table item`.\n     * @private\n     */\n    PdfCrossTable.prototype.getItem = function (offset, genNumber, isFree) {\n        var returnString = '';\n        var addOffsetLength = 10 - offset.toString().length;\n        if (genNumber <= 0) {\n            genNumber = 0;\n        }\n        var addGenNumberLength = (5 - genNumber.toString().length) <= 0 ? 0 : (5 - genNumber.toString().length);\n        for (var index = 0; index < addOffsetLength; index++) {\n            returnString = returnString + '0';\n        }\n        returnString = returnString + offset.toString() + ' ';\n        for (var index = 0; index < addGenNumberLength; index++) {\n            returnString = returnString + '0';\n        }\n        returnString = returnString + genNumber.toString() + ' ';\n        returnString = returnString + ((isFree) ? Operators.f : Operators.n) + Operators.newLine;\n        return returnString;\n    };\n    /**\n     * `Prepares a subsection` of the current section within the cross-reference table.\n     * @private\n     */\n    PdfCrossTable.prototype.prepareSubsection = function (objectNum) {\n        var count = 0;\n        var i;\n        var total = this.count;\n        for (var k = 0; k < this.document.pdfObjects.count; k++) {\n            var reference = this.document.pdfObjects.items(k).reference;\n            var refString = reference.toString();\n            var refArray = refString.split(' ');\n        }\n        if (objectNum >= total) {\n            return count;\n        }\n        // search for first changed indirect object.\n        for (i = objectNum; i < total; ++i) {\n            break;\n        }\n        objectNum = i;\n        // look up for all indirect objects in one subsection.\n        for (; i < total; ++i) {\n            ++count;\n        }\n        return count;\n    };\n    /**\n     * `Marks the trailer references` being saved.\n     * @private\n     */\n    PdfCrossTable.prototype.markTrailerReferences = function () {\n        var tempArray;\n        var keys = this.trailer.items.keys();\n        var values = this.trailer.items.values();\n    };\n    /**\n     * `Saves the head`.\n     * @private\n     */\n    PdfCrossTable.prototype.saveHead = function (writer) {\n        var version = this.generateFileVersion(writer.document);\n        writer.write('%PDF-' + version);\n        writer.write(Operators.newLine);\n    };\n    /**\n     * Generates the `version` of the file.\n     * @private\n     */\n    PdfCrossTable.prototype.generateFileVersion = function (document) {\n        var iVersion = 4;\n        var version = '1.' + iVersion.toString();\n        return version;\n    };\n    PdfCrossTable.prototype.getReference = function (obj, bNew) {\n        if (typeof bNew === 'undefined') {\n            var wasNew = false;\n            return this.getReference(obj, wasNew);\n        }\n        else {\n            //code splitted for reducing lines of code exceeds 100.\n            return this.getSubReference(obj, bNew);\n        }\n    };\n    /**\n     * Retrieves the `reference` of the object given.\n     * @private\n     */\n    PdfCrossTable.prototype.getSubReference = function (obj, bNew) {\n        var isNew = false;\n        var wasNew;\n        var reference = null;\n        // if (obj.IsSaving) {\n        if (this.items.count > 0 && obj.objectCollectionIndex > 0 && this.items.count > obj.objectCollectionIndex - 1) {\n            var tempObj = this.document.pdfObjects.getReference(obj, wasNew);\n            reference = tempObj.reference;\n            wasNew = tempObj.wasNew;\n        }\n        if (reference == null) {\n            if (obj.status === ObjectStatus.Registered) {\n                wasNew = false;\n            }\n            else {\n                wasNew = true;\n            }\n        }\n        else {\n            wasNew = false;\n        }\n        // need to add mapped reference code\n        if (reference == null) {\n            var objnumber = this.nextObjNumber;\n            reference = new PdfReference(objnumber, 0);\n            var found = void 0;\n            if (wasNew) {\n                this.document.pdfObjects.add(obj);\n                this.document.pdfObjects.trySetReference(obj, reference, found);\n                var tempIndex = this.document.pdfObjects.count - 1;\n                var tempkey = this.document.pdfObjects.objectCollections[tempIndex].reference.objNumber;\n                var tempvalue = this.document.pdfObjects.objectCollections[this.document.pdfObjects.count - 1];\n                this.document.pdfObjects.mainObjectCollection.setValue(tempkey, tempvalue);\n                obj.position = -1;\n            }\n            else {\n                this.document.pdfObjects.trySetReference(obj, reference, found);\n            }\n            obj.objectCollectionIndex = reference.objNumber;\n            obj.status = ObjectStatus.None;\n            isNew = true;\n        }\n        bNew = isNew || this.bForceNew;\n        return reference;\n    };\n    /**\n     * `Saves all objects` in the collection.\n     * @private\n     */\n    PdfCrossTable.prototype.saveObjects = function (writer) {\n        var objectCollection = this.objectCollection;\n        for (var i = 0; i < objectCollection.count; ++i) {\n            var oi = objectCollection.items(i);\n            var obj = oi.object;\n            obj.isSaving = true;\n            this.saveIndirectObject(obj, writer);\n        }\n    };\n    /**\n     * `Saves indirect object`.\n     * @private\n     */\n    PdfCrossTable.prototype.saveIndirectObject = function (obj, writer) {\n        var reference = this.getReference(obj);\n        if (obj instanceof PdfCatalog) {\n            this.trailer.items.setValue(this.dictionaryProperties.root, reference);\n        }\n        // NOTE :  This is needed for correct string objects encryption.\n        this.pdfDocument.currentSavingObj = reference;\n        var tempArchive = false;\n        tempArchive = obj.getArchive();\n        var allowedType = !((obj instanceof PdfStream) || !tempArchive || (obj instanceof PdfCatalog));\n        var sigFlag = false;\n        this.registerObject(writer.position, reference);\n        this.doSaveObject(obj, reference, writer);\n    };\n    /**\n     * Performs `real saving` of the save object.\n     * @private\n     */\n    PdfCrossTable.prototype.doSaveObject = function (obj, reference, writer) {\n        var correctPosition = writer.length;\n        writer.write(reference.objNumber.toString());\n        writer.write(Operators.whiteSpace);\n        writer.write(reference.genNumber.toString());\n        writer.write(Operators.whiteSpace);\n        writer.write(Operators.obj);\n        writer.write(Operators.newLine);\n        obj.save(writer);\n        var stream = writer.stream;\n        writer.write(Operators.endObj);\n        writer.write(Operators.newLine);\n    };\n    PdfCrossTable.prototype.registerObject = function (offset, reference, free) {\n        if (typeof free === 'boolean') {\n            // Register the object by its number.\n            this.objects.setValue(reference.objNumber, new RegisteredObject(offset, reference, free));\n            this.maxGenNumIndex = Math.max(this.maxGenNumIndex, reference.genNumber);\n        }\n        else if (typeof free === 'undefined') {\n            // Register the object by its number.\n            this.objects.setValue(reference.objNumber, new RegisteredObject(offset, reference));\n            this.maxGenNumIndex = Math.max(this.maxGenNumIndex, reference.genNumber);\n        }\n    };\n    /**\n     * `Dereferences` the specified primitive object.\n     * @private\n     */\n    PdfCrossTable.dereference = function (obj) {\n        var rh = obj;\n        if (rh != null) {\n            obj = rh.object;\n        }\n        return obj;\n    };\n    return PdfCrossTable;\n}());\nexport { PdfCrossTable };\nvar RegisteredObject = /** @class */ (function () {\n    function RegisteredObject(offset, reference, free) {\n        var tempOffset = offset;\n        this.offsetNumber = tempOffset;\n        var tempReference = reference;\n        this.generation = tempReference.genNumber;\n        this.object = tempReference.objNumber;\n        if (typeof free === 'undefined') {\n            this.type = ObjectType.Normal;\n        }\n        else {\n            this.type = ObjectType.Free;\n        }\n    }\n    Object.defineProperty(RegisteredObject.prototype, \"objectNumber\", {\n        //Properties\n        /**\n         * Gets the `object number`.\n         * @private\n         */\n        get: function () {\n            return this.object;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RegisteredObject.prototype, \"offset\", {\n        /**\n         * Gets the `offset`.\n         * @private\n         */\n        get: function () {\n            var result;\n            result = this.offsetNumber;\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return RegisteredObject;\n}());\nexport { RegisteredObject };\n", "import { Operators } from './pdf-operators';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PointF, RectangleF } from './../drawing/pdf-drawing';\nimport { PdfString } from './../primitives/pdf-string';\nimport { PdfName } from './../primitives/pdf-name';\n/**\n * Helper class to `write PDF graphic streams` easily.\n * @private\n */\nvar PdfStreamWriter = /** @class */ (function () {\n    /**\n     * Initialize an instance of `PdfStreamWriter` class.\n     * @private\n     */\n    function PdfStreamWriter(stream) {\n        if (stream == null) {\n            throw new Error('ArgumentNullException:stream');\n        }\n        this.stream = stream;\n    }\n    //Implementation\n    /**\n     * `Clear` the stream.\n     * @public\n     */\n    PdfStreamWriter.prototype.clear = function () {\n        this.stream.clearStream();\n    };\n    PdfStreamWriter.prototype.setGraphicsState = function (dictionaryName) {\n        if (dictionaryName instanceof PdfName) {\n            this.stream.write(dictionaryName.toString());\n            this.stream.write(Operators.whiteSpace);\n            this.writeOperator(Operators.setGraphicsState);\n        }\n        else {\n            this.stream.write(Operators.slash);\n            this.stream.write(dictionaryName);\n            this.stream.write(Operators.whiteSpace);\n            this.writeOperator(Operators.setGraphicsState);\n        }\n    };\n    /**\n     * `Executes the XObject`.\n     * @private\n     */\n    PdfStreamWriter.prototype.executeObject = function (name) {\n        this.stream.write(name.toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.paintXObject);\n        this.stream.write(Operators.newLine);\n    };\n    /**\n     * `Closes path object`.\n     * @private\n     */\n    PdfStreamWriter.prototype.closePath = function () {\n        this.writeOperator(Operators.closePath);\n    };\n    /**\n     * `Clips the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.clipPath = function (useEvenOddRule) {\n        this.stream.write(Operators.clipPath);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n        }\n        this.stream.write(Operators.whiteSpace);\n        this.stream.write(Operators.endPath);\n        this.stream.write(Operators.newLine);\n    };\n    /**\n     * `Closes, then fills and strokes the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.closeFillStrokePath = function (useEvenOddRule) {\n        this.stream.write(Operators.closeFillStrokePath);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            this.stream.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Fills and strokes path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.fillStrokePath = function (useEvenOddRule) {\n        this.stream.write(Operators.fillStroke);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            this.stream.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Fills path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.fillPath = function (useEvenOddRule) {\n        this.stream.write(Operators.fill);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            this.stream.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Ends the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.endPath = function () {\n        this.writeOperator(Operators.n);\n    };\n    /**\n     * `Closes and fills the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.closeFillPath = function (useEvenOddRule) {\n        this.writeOperator(Operators.closePath);\n        this.stream.write(Operators.fill);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            this.stream.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Closes and strokes the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.closeStrokePath = function () {\n        this.writeOperator(Operators.closeStrokePath);\n    };\n    /**\n     * `Sets the text scaling`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setTextScaling = function (textScaling) {\n        this.stream.write(PdfNumber.floatToString(textScaling));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setTextScaling);\n    };\n    /**\n     * `Strokes path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.strokePath = function () {\n        this.writeOperator(Operators.stroke);\n    };\n    /**\n     * `Restores` the graphics state.\n     * @private\n     */\n    PdfStreamWriter.prototype.restoreGraphicsState = function () {\n        this.writeOperator(Operators.restoreState);\n    };\n    /**\n     * `Saves` the graphics state.\n     * @private\n     */\n    PdfStreamWriter.prototype.saveGraphicsState = function () {\n        this.writeOperator(Operators.saveState);\n    };\n    PdfStreamWriter.prototype.startNextLine = function (arg1, arg2) {\n        if (typeof arg1 === 'undefined') {\n            this.writeOperator(Operators.goToNextLine);\n        }\n        else if (arg1 instanceof PointF) {\n            this.writePoint(arg1);\n            this.writeOperator(Operators.setCoords);\n        }\n        else {\n            this.writePoint(arg1, arg2);\n            this.writeOperator(Operators.setCoords);\n        }\n    };\n    /**\n     * Shows the `text`.\n     * @private\n     */\n    PdfStreamWriter.prototype.showText = function (text) {\n        this.checkTextParam(text);\n        this.writeText(text);\n        this.writeOperator(Operators.setText);\n    };\n    /**\n     * Sets `text leading`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLeading = function (leading) {\n        this.stream.write(PdfNumber.floatToString(leading));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setTextLeading);\n    };\n    /**\n     * `Begins the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.beginPath = function (x, y) {\n        this.writePoint(x, y);\n        this.writeOperator(Operators.beginPath);\n    };\n    /**\n     * `Begins text`.\n     * @private\n     */\n    PdfStreamWriter.prototype.beginText = function () {\n        this.writeOperator(Operators.beginText);\n    };\n    /**\n     * `Ends text`.\n     * @private\n     */\n    PdfStreamWriter.prototype.endText = function () {\n        this.writeOperator(Operators.endText);\n    };\n    PdfStreamWriter.prototype.appendRectangle = function (arg1, arg2, arg3, arg4) {\n        if (arg1 instanceof RectangleF) {\n            this.appendRectangle(arg1.x, arg1.y, arg1.width, arg1.height);\n        }\n        else {\n            this.writePoint(arg1, arg2);\n            this.writePoint(arg3, arg4);\n            this.writeOperator(Operators.appendRectangle);\n        }\n    };\n    PdfStreamWriter.prototype.appendLineSegment = function (arg1, arg2) {\n        if (arg1 instanceof PointF) {\n            this.appendLineSegment(arg1.x, arg1.y);\n        }\n        else {\n            this.writePoint(arg1, arg2);\n            this.writeOperator(Operators.appendLineSegment);\n        }\n    };\n    /**\n     * Sets the `text rendering mode`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setTextRenderingMode = function (renderingMode) {\n        this.stream.write(renderingMode.toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setRenderingMode);\n    };\n    /**\n     * Sets the `character spacing`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setCharacterSpacing = function (charSpacing) {\n        this.stream.write(PdfNumber.floatToString(charSpacing));\n        this.stream.write(Operators.whiteSpace);\n        this.stream.write(Operators.setCharacterSpace);\n        this.stream.write(Operators.newLine);\n    };\n    /**\n     * Sets the `word spacing`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setWordSpacing = function (wordSpacing) {\n        this.stream.write(PdfNumber.floatToString(wordSpacing));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setWordSpace);\n    };\n    PdfStreamWriter.prototype.showNextLineText = function (arg1, arg2) {\n        if (arg1 instanceof PdfString) {\n            this.checkTextParam(arg1);\n            this.writeText(arg1);\n            this.writeOperator(Operators.setTextOnNewLine);\n        }\n        else {\n            this.checkTextParam(arg1);\n            this.writeText(arg1, arg2);\n            this.writeOperator(Operators.setTextOnNewLine);\n        }\n    };\n    PdfStreamWriter.prototype.setColorSpace = function (arg1, arg2) {\n        if (arg1 instanceof PdfName && typeof arg2 === 'boolean') {\n            var temparg1 = arg1;\n            var temparg2 = arg2;\n            // if (temparg1 == null) {\n            //     throw new Error('ArgumentNullException:name');\n            // }\n            var op = (temparg2) ? Operators.selectcolorspaceforstroking : Operators.selectcolorspacefornonstroking;\n            this.stream.write(temparg1.toString());\n            this.stream.write(Operators.whiteSpace);\n            this.stream.write(op);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            var temparg1 = arg1;\n            var temparg2 = arg2;\n            this.setColorSpace(new PdfName(temparg1), temparg2);\n        }\n    };\n    /**\n     * Modifies current `transformation matrix`.\n     * @private\n     */\n    PdfStreamWriter.prototype.modifyCtm = function (matrix) {\n        if (matrix == null) {\n            throw new Error('ArgumentNullException:matrix');\n        }\n        this.stream.write(matrix.toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.modifyCtm);\n    };\n    PdfStreamWriter.prototype.setFont = function (font, name, size) {\n        if (typeof name === 'string') {\n            this.setFont(font, new PdfName(name), size);\n        }\n        else {\n            if (font == null) {\n                throw new Error('ArgumentNullException:font');\n            }\n            this.stream.write(name.toString());\n            this.stream.write(Operators.whiteSpace);\n            this.stream.write(PdfNumber.floatToString(size));\n            this.stream.write(Operators.whiteSpace);\n            this.writeOperator(Operators.setFont);\n        }\n    };\n    /**\n     * `Writes the operator`.\n     * @private\n     */\n    PdfStreamWriter.prototype.writeOperator = function (opcode) {\n        this.stream.write(opcode);\n        this.stream.write(Operators.newLine);\n    };\n    PdfStreamWriter.prototype.checkTextParam = function (text) {\n        if (text == null) {\n            throw new Error('ArgumentNullException:text');\n        }\n        if (typeof text === 'string' && text === '') {\n            throw new Error('ArgumentException:The text can not be an empty string, text');\n        }\n    };\n    PdfStreamWriter.prototype.writeText = function (arg1, arg2) {\n        if ((arg1 instanceof PdfString) && (typeof arg2 === 'undefined')) {\n            this.stream.write(arg1.pdfEncode());\n        }\n        else {\n            var start = void 0;\n            var end = void 0;\n            if (arg2) {\n                start = PdfString.hexStringMark[0];\n                end = PdfString.hexStringMark[1];\n            }\n            else {\n                start = PdfString.stringMark[0];\n                end = PdfString.stringMark[1];\n            }\n            this.stream.write(start);\n            this.stream.write(arg1);\n            this.stream.write(end);\n        }\n    };\n    PdfStreamWriter.prototype.writePoint = function (arg1, arg2) {\n        if ((arg1 instanceof PointF) && (typeof arg2 === 'undefined')) {\n            this.writePoint(arg1.x, arg1.y);\n        }\n        else {\n            var temparg1 = arg1;\n            this.stream.write(PdfNumber.floatToString(temparg1));\n            this.stream.write(Operators.whiteSpace);\n            // NOTE: Change Y co-ordinate because we shifted co-ordinate system only.\n            arg2 = this.updateY(arg2);\n            this.stream.write(PdfNumber.floatToString(arg2));\n            this.stream.write(Operators.whiteSpace);\n        }\n    };\n    /**\n     * `Updates y` co-ordinate.\n     * @private\n     */\n    PdfStreamWriter.prototype.updateY = function (arg) {\n        return -arg;\n    };\n    /**\n     * `Writes string` to the file.\n     * @private\n     */\n    PdfStreamWriter.prototype.write = function (string) {\n        var builder = '';\n        builder += string;\n        builder += Operators.newLine;\n        this.writeOperator(builder);\n    };\n    /**\n     * `Writes comment` to the file.\n     * @private\n     */\n    PdfStreamWriter.prototype.writeComment = function (comment) {\n        if (comment != null && comment.length > 0) {\n            var builder = '';\n            builder += Operators.comment;\n            builder += Operators.whiteSpace;\n            builder += comment;\n            //builder.Append( Operators.NewLine );\n            this.writeOperator(builder);\n        }\n        else {\n            throw new Error('Invalid comment');\n        }\n    };\n    /**\n     * Sets the `color and space`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setColorAndSpace = function (color, colorSpace, forStroking) {\n        if (!color.isEmpty) {\n            // bool test = color is PdfExtendedColor;\n            this.stream.write(color.toString(colorSpace, forStroking));\n            this.stream.write(Operators.newLine);\n        }\n    };\n    // public setLineDashPattern(pattern : number[], patternOffset : number) : void\n    // {\n    //     let pat : PdfArray = new PdfArray(pattern);\n    //     let off : PdfNumber = new PdfNumber(patternOffset);\n    //     this.setLineDashPatternHelper(pat, off);\n    // }\n    // private setLineDashPatternHelper(pattern : PdfArray, patternOffset : PdfNumber) : void\n    // {\n    //     pattern.Save(this);\n    //     this.m_stream.write(Operators.whiteSpace);\n    //     patternOffset.Save(this);\n    //     this.m_stream.write(Operators.whiteSpace);\n    //     this.writeOperator(Operators.setDashPattern);\n    // }\n    /**\n     * Sets the `line dash pattern`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineDashPattern = function (pattern, patternOffset) {\n        // let pat : PdfArray = new PdfArray(pattern);\n        // let off : PdfNumber = new PdfNumber(patternOffset);\n        // this.setLineDashPatternHelper(pat, off);\n        this.setLineDashPatternHelper(pattern, patternOffset);\n    };\n    /**\n     * Sets the `line dash pattern`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineDashPatternHelper = function (pattern, patternOffset) {\n        var tempPattern = '[';\n        if (pattern.length > 1) {\n            for (var index = 0; index < pattern.length; index++) {\n                if (index === pattern.length - 1) {\n                    tempPattern += pattern[index].toString();\n                }\n                else {\n                    tempPattern += pattern[index].toString() + ' ';\n                }\n            }\n        }\n        tempPattern += '] ';\n        tempPattern += patternOffset.toString();\n        tempPattern += ' ' + Operators.setDashPattern;\n        this.stream.write(tempPattern);\n        this.stream.write(Operators.newLine);\n    };\n    /**\n     * Sets the `miter limit`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setMiterLimit = function (miterLimit) {\n        this.stream.write(PdfNumber.floatToString(miterLimit));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setMiterLimit);\n    };\n    /**\n     * Sets the `width of the line`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineWidth = function (width) {\n        this.stream.write(PdfNumber.floatToString(width));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setLineWidth);\n    };\n    /**\n     * Sets the `line cap`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineCap = function (lineCapStyle) {\n        this.stream.write((lineCapStyle).toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setLineCapStyle);\n    };\n    /**\n     * Sets the `line join`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineJoin = function (lineJoinStyle) {\n        this.stream.write((lineJoinStyle).toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setLineJoinStyle);\n    };\n    Object.defineProperty(PdfStreamWriter.prototype, \"position\", {\n        //IPdfWriter members\n        /**\n         * Gets or sets the current `position` within the stream.\n         * @private\n         */\n        get: function () {\n            return this.stream.position;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStreamWriter.prototype, \"length\", {\n        /**\n         * Gets `stream length`.\n         * @private\n         */\n        get: function () {\n            var returnValue = 0;\n            if (this.stream.data.length !== 0 && this.stream.data.length !== -1) {\n                for (var index = 0; index < this.stream.data.length; index++) {\n                    returnValue += this.stream.data[index].length;\n                }\n            }\n            return returnValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStreamWriter.prototype, \"document\", {\n        /**\n         * Gets and Sets the `current document`.\n         * @private\n         */\n        get: function () {\n            return null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /* tslint:disable-next-line:max-line-length */\n    PdfStreamWriter.prototype.appendBezierSegment = function (arg1, arg2, arg3, arg4, arg5, arg6) {\n        if (arg1 instanceof PointF && arg2 instanceof PointF && arg3 instanceof PointF) {\n            this.writePoint(arg1.x, arg1.y);\n            this.writePoint(arg2.x, arg2.y);\n            this.writePoint(arg3.x, arg3.y);\n        }\n        else {\n            this.writePoint(arg1, arg2);\n            this.writePoint(arg3, arg4);\n            this.writePoint(arg5, arg6);\n        }\n        this.writeOperator(Operators.appendbeziercurve);\n    };\n    PdfStreamWriter.prototype.setColourWithPattern = function (colours, patternName, forStroking) {\n        if ((colours != null)) {\n            var count = colours.length;\n            var i = 0;\n            for (i = 0; i < count; ++i) {\n                this.stream.write(colours[i].toString());\n                this.stream.write(Operators.whiteSpace);\n            }\n        }\n        if ((patternName != null)) {\n            this.stream.write(patternName.toString());\n            this.stream.write(Operators.whiteSpace);\n        }\n        if (forStroking) {\n            this.writeOperator(Operators.setColorAndPatternStroking);\n        }\n        else {\n            this.writeOperator(Operators.setColorAndPattern);\n        }\n    };\n    return PdfStreamWriter;\n}());\nexport { PdfStreamWriter };\n", "/**\n * StringTokenizer.ts class for EJ2-PDF\n * Utility class for working with strings.\n * @private\n */\nvar StringTokenizer = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `StringTokenizer` class.\n     * @private\n     */\n    function StringTokenizer(textValue) {\n        /**\n         * Current `position`.\n         * @private\n         */\n        this.currentPosition = 0;\n        if (textValue == null) {\n            throw new Error('ArgumentNullException:text');\n        }\n        this.text = textValue;\n    }\n    Object.defineProperty(StringTokenizer.prototype, \"length\", {\n        // Properties\n        /**\n         * Gets text `length`.\n         * @private\n         */\n        get: function () {\n            return this.text.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StringTokenizer.prototype, \"end\", {\n        get: function () {\n            return (this.currentPosition === this.text.length);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StringTokenizer.prototype, \"position\", {\n        /**\n         * Gets or sets the position.\n         * @private\n         */\n        get: function () {\n            return this.currentPosition;\n        },\n        set: function (value) {\n            this.currentPosition = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    StringTokenizer.getCharsCount = function (text, symbols) {\n        if (typeof symbols === 'string') {\n            if (text == null) {\n                throw new Error('ArgumentNullException:wholeText');\n            }\n            var numSymbols = 0;\n            var curIndex = 0;\n            for (;;) {\n                curIndex = text.indexOf(symbols, curIndex);\n                if (curIndex === -1) {\n                    break;\n                }\n                else {\n                    numSymbols++;\n                    curIndex++;\n                }\n            }\n            return numSymbols;\n        }\n        else {\n            if (text == null) {\n                throw new Error('ArgumentNullException:text');\n            }\n            if (symbols == null) {\n                throw new Error('ArgumentNullException:symbols');\n            }\n            var count = 0;\n            for (var i = 0, len = text.length; i < len; i++) {\n                var ch = text[i];\n                if (this.contains(symbols, ch)) {\n                    count++;\n                }\n            }\n            return count;\n        }\n    };\n    /**\n     * Reads line of the text.\n     * @private\n     */\n    StringTokenizer.prototype.readLine = function () {\n        var pos = this.currentPosition;\n        while (pos < this.length) {\n            var ch = this.text[pos];\n            switch (ch) {\n                case '\\r':\n                case '\\n': {\n                    var text = this.text.substr(this.currentPosition, pos - this.currentPosition);\n                    this.currentPosition = pos + 1;\n                    if (((ch === '\\r') && (this.currentPosition < this.length)) && (this.text[this.currentPosition] === '\\n')) {\n                        this.currentPosition++;\n                    }\n                    return text;\n                }\n            }\n            pos++;\n        }\n        // The remaining text.\n        if (pos > this.currentPosition) {\n            var text2 = this.text.substr(this.currentPosition, pos - this.currentPosition);\n            this.currentPosition = pos;\n            return text2;\n        }\n        return null;\n    };\n    /**\n     * Reads line of the text.\n     * @private\n     */\n    StringTokenizer.prototype.peekLine = function () {\n        var pos = this.currentPosition;\n        var line = this.readLine();\n        this.currentPosition = pos;\n        return line;\n    };\n    /**\n     * Reads a word from the text.\n     * @private\n     */\n    StringTokenizer.prototype.readWord = function () {\n        var pos = this.currentPosition;\n        while (pos < this.length) {\n            var ch = this.text[pos];\n            switch (ch) {\n                case '\\r':\n                case '\\n':\n                    var textValue = this.text.substr(this.currentPosition, pos - this.currentPosition);\n                    this.currentPosition = pos + 1;\n                    if (((ch === '\\r') && (this.currentPosition < this.length)) && (this.text[this.currentPosition] === '\\n')) {\n                        this.currentPosition++;\n                    }\n                    return textValue;\n                case ' ':\n                case '\\t': {\n                    if (pos === this.currentPosition) {\n                        pos++;\n                    }\n                    var text = this.text.substr(this.currentPosition, pos - this.currentPosition);\n                    this.currentPosition = pos;\n                    return text;\n                }\n            }\n            pos++;\n        }\n        // The remaining text.\n        if (pos > this.currentPosition) {\n            var text2 = this.text.substr(this.currentPosition, pos - this.currentPosition);\n            this.currentPosition = pos;\n            return text2;\n        }\n        return null;\n    };\n    /**\n     * Peeks a word from the text.\n     * @private\n     */\n    StringTokenizer.prototype.peekWord = function () {\n        var pos = this.currentPosition;\n        var word = this.readWord();\n        this.currentPosition = pos;\n        return word;\n    };\n    StringTokenizer.prototype.read = function (count) {\n        if (typeof count === 'undefined') {\n            var ch = '0';\n            if (!this.end) {\n                ch = this.text[this.currentPosition];\n                this.currentPosition++;\n            }\n            return ch;\n        }\n        else {\n            var num = 0;\n            var builder = '';\n            while (!this.end && num < count) {\n                var ch = this.read();\n                builder = builder + ch;\n                num++;\n            }\n            return builder;\n        }\n    };\n    /**\n     * Peeks char form the data.\n     * @private\n     */\n    StringTokenizer.prototype.peek = function () {\n        var ch = '0';\n        if (!this.end) {\n            ch = this.text[this.currentPosition];\n        }\n        return ch;\n    };\n    /**\n     * Closes a reader.\n     * @private\n     */\n    StringTokenizer.prototype.close = function () {\n        this.text = null;\n    };\n    StringTokenizer.prototype.readToEnd = function () {\n        var text;\n        if (this.currentPosition === 0) {\n            text = this.text;\n        }\n        else {\n            text = this.text.substr(this.currentPosition, this.length - this.currentPosition);\n        }\n        this.currentPosition = this.length;\n        return text;\n    };\n    //Implementation\n    /**\n     * Checks whether array contains a symbol.\n     * @private\n     */\n    StringTokenizer.contains = function (array, symbol) {\n        var contains = false;\n        for (var i = 0; i < array.length; i++) {\n            if (array[i] === symbol) {\n                contains = true;\n                break;\n            }\n        }\n        return contains;\n    };\n    // Constants\n    /**\n     * `Whitespace` symbol.\n     * @private\n     */\n    StringTokenizer.whiteSpace = ' ';\n    /**\n     * `tab` symbol.\n     * @private\n     */\n    StringTokenizer.tab = '\\t';\n    /**\n     * Array of `spaces`.\n     * @private\n     */\n    StringTokenizer.spaces = [StringTokenizer.whiteSpace, StringTokenizer.tab];\n    /**\n     * `Pattern` for WhiteSpace.\n     * @private\n     */\n    StringTokenizer.whiteSpacePattern = '^[ \\t]+$';\n    return StringTokenizer;\n}());\nexport { StringTokenizer };\n", "import { SizeF, RectangleF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfWordWrapType } from './enum';\nimport { StringTokenizer } from './string-tokenizer';\n/**\n * Class `lay outing the text`.\n */\nvar PdfStringLayouter = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `StringLayouter` class.\n     * @private\n     */\n    function PdfStringLayouter() {\n        /**\n         * Checks whether the x co-ordinate is need to set as client size or not.\n         * @hidden\n         * @private\n         */\n        this.isOverloadWithPosition = false;\n        //\n    }\n    PdfStringLayouter.prototype.layout = function (arg1, arg2, arg3, arg4, arg5, arg6, arg7) {\n        if (arg4 instanceof RectangleF) {\n            this.initialize(arg1, arg2, arg3, arg4, arg5);\n            this.isOverloadWithPosition = arg6;\n            this.clientSize = arg7;\n            var result = this.doLayout();\n            this.clear();\n            return result;\n        }\n        else {\n            this.initialize(arg1, arg2, arg3, arg4);\n            this.isOverloadWithPosition = arg5;\n            this.clientSize = arg6;\n            var result = this.doLayout();\n            this.clear();\n            return result;\n        }\n    };\n    PdfStringLayouter.prototype.initialize = function (text, font, format, rectSize, pageHeight) {\n        if (typeof pageHeight === 'number') {\n            if (text == null) {\n                throw new Error('ArgumentNullException:text');\n            }\n            if (font == null) {\n                throw new Error('ArgumentNullException:font');\n            }\n            this.text = text;\n            this.font = font;\n            this.format = format;\n            this.size = new SizeF(rectSize.width, rectSize.height);\n            this.rectangle = rectSize;\n            this.pageHeight = pageHeight;\n            this.reader = new StringTokenizer(text);\n        }\n        else {\n            this.initialize(text, font, format, new RectangleF(new PointF(0, 0), rectSize), 0);\n        }\n    };\n    /**\n     * `Clear` all resources.\n     * @private\n     */\n    PdfStringLayouter.prototype.clear = function () {\n        this.font = null;\n        this.format = null;\n        this.reader.close();\n        this.reader = null;\n        this.text = null;\n    };\n    /**\n     * `Layouts` the text.\n     * @private\n     */\n    PdfStringLayouter.prototype.doLayout = function () {\n        var result = new PdfStringLayoutResult();\n        var lineResult = new PdfStringLayoutResult();\n        var lines = [];\n        var line = this.reader.peekLine();\n        var lineIndent = this.getLineIndent(true);\n        while (line != null) {\n            lineResult = this.layoutLine(line, lineIndent);\n            if (lineResult !== null || typeof lineResult !== 'undefined') {\n                var numSymbolsInserted = 0;\n                /* tslint:disable */\n                var returnedValue = this.copyToResult(result, lineResult, lines, /*out*/ numSymbolsInserted);\n                /* tslint:enable */\n                var success = returnedValue.success;\n                numSymbolsInserted = returnedValue.numInserted;\n                if (!success) {\n                    this.reader.read(numSymbolsInserted);\n                    break;\n                }\n            }\n            // if (lineResult.textRemainder != null && lineResult.textRemainder.length > 0 ) {\n            //     break;\n            // }\n            this.reader.readLine();\n            line = this.reader.peekLine();\n            lineIndent = this.getLineIndent(false);\n        }\n        this.finalizeResult(result, lines);\n        return result;\n    };\n    /**\n     * Returns `line indent` for the line.\n     * @private\n     */\n    PdfStringLayouter.prototype.getLineIndent = function (firstLine) {\n        var lineIndent = 0;\n        if (this.format != null) {\n            lineIndent = (firstLine) ? this.format.firstLineIndent : this.format.paragraphIndent;\n            lineIndent = (this.size.width > 0) ? Math.min(this.size.width, lineIndent) : lineIndent;\n        }\n        return lineIndent;\n    };\n    /**\n     * Calculates `height` of the line.\n     * @private\n     */\n    PdfStringLayouter.prototype.getLineHeight = function () {\n        var height = this.font.height;\n        if (this.format != null && this.format.lineSpacing !== 0) {\n            height = this.format.lineSpacing + this.font.height;\n        }\n        return height;\n    };\n    /**\n     * Calculates `width` of the line.\n     * @private\n     */\n    PdfStringLayouter.prototype.getLineWidth = function (line) {\n        var width = this.font.getLineWidth(line, this.format);\n        return width;\n    };\n    // tslint:disable\n    /**\n     * `Layouts` line.\n     * @private\n     */\n    PdfStringLayouter.prototype.layoutLine = function (line, lineIndent) {\n        var lineResult = new PdfStringLayoutResult();\n        lineResult.layoutLineHeight = this.getLineHeight();\n        var lines = [];\n        var maxWidth = this.size.width;\n        var lineWidth = this.getLineWidth(line) + lineIndent;\n        var lineType = LineType.FirstParagraphLine;\n        var readWord = true;\n        // line is in bounds.\n        if (maxWidth <= 0 || Math.round(lineWidth) <= Math.round(maxWidth)) {\n            this.addToLineResult(lineResult, lines, line, lineWidth, LineType.NewLineBreak | lineType);\n        }\n        else {\n            var builder = '';\n            var curLine = '';\n            lineWidth = lineIndent;\n            var curIndent = lineIndent;\n            var reader = new StringTokenizer(line);\n            var word = reader.peekWord();\n            var isSingleWord = false;\n            if (word.length !== reader.length) {\n                if (word === ' ') {\n                    curLine = curLine + word;\n                    builder = builder + word;\n                    reader.position += 1;\n                    word = reader.peekWord();\n                }\n            }\n            while (word != null) {\n                curLine = curLine + word;\n                var curLineWidth = this.getLineWidth(curLine.toString()) + curIndent /*)*/;\n                if (curLine.toString() === ' ') {\n                    curLine = '';\n                    curLineWidth = 0;\n                }\n                if (curLineWidth > maxWidth) {\n                    if (this.getWrapType() === PdfWordWrapType.None) {\n                        break;\n                    }\n                    if (curLine.length === word.length) {\n                        //  Character wrap is disabled or one symbol is greater than bounds.\n                        if (this.getWrapType() === PdfWordWrapType.WordOnly) {\n                            lineResult.textRemainder = line.substring(reader.position);\n                            break;\n                        }\n                        else if (curLine.length === 1) {\n                            builder = builder + word;\n                            break;\n                        }\n                        else {\n                            readWord = false;\n                            curLine = '';\n                            word = reader.peek().toString();\n                            continue;\n                        }\n                    }\n                    else {\n                        if (this.getLineWidth(word.toString()) > maxWidth) {\n                            this.format.wordWrap = PdfWordWrapType.Character;\n                        }\n                        else {\n                            if (typeof this.format !== 'undefined' && this.format !== null) {\n                                this.format.wordWrap = PdfWordWrapType.Word;\n                            }\n                        }\n                        if (this.getWrapType() !== PdfWordWrapType.Character || !readWord) {\n                            var ln = builder.toString();\n                            // if (ln.indexOf(' ') === -1) {\n                            //     isSingleWord = true;\n                            //     this.addToLineResult(lineResult, lines, curLine, lineWidth, LineType.LayoutBreak | lineType);\n                            // } else {\n                            //     this.addToLineResult(lineResult, lines, ln, lineWidth, LineType.LayoutBreak | lineType);\n                            // }                          \n                            if (ln !== ' ') {\n                                this.addToLineResult(lineResult, lines, ln, lineWidth, LineType.LayoutBreak | lineType);\n                            }\n                            if (this.isOverloadWithPosition) {\n                                maxWidth = this.clientSize.width;\n                            }\n                            curLine = '';\n                            builder = '';\n                            lineWidth = 0;\n                            curIndent = 0;\n                            curLineWidth = 0;\n                            lineType = LineType.None;\n                            // if (isSingleWord) {\n                            //     reader.readWord();\n                            //     readWord = false;\n                            // }\n                            word = (readWord) ? word : reader.peekWord();\n                            //isSingleWord = false;\n                            readWord = true;\n                        }\n                        else {\n                            readWord = false;\n                            curLine = '';\n                            curLine = curLine + builder.toString();\n                            word = reader.peek().toString();\n                        }\n                        continue;\n                    }\n                }\n                /*tslint:disable:max-func-body-length */\n                builder = builder + word;\n                lineWidth = curLineWidth;\n                if (readWord) {\n                    reader.readWord();\n                    word = reader.peekWord();\n                    //isSingleWord = false;\n                }\n                else {\n                    reader.read();\n                    word = reader.peek().toString();\n                }\n            }\n            if (builder.length > 0) {\n                var ln = builder.toString();\n                this.addToLineResult(lineResult, lines, ln, lineWidth, LineType.NewLineBreak | LineType.LastParagraphLine);\n            }\n            reader.close();\n        }\n        lineResult.layoutLines = [];\n        for (var index = 0; index < lines.length; index++) {\n            lineResult.layoutLines.push(lines[index]);\n        }\n        lines = [];\n        return lineResult;\n    };\n    /**\n     * `Adds` line to line result.\n     * @private\n     */\n    PdfStringLayouter.prototype.addToLineResult = function (lineResult, lines, line, lineWidth, breakType) {\n        var info = new LineInfo();\n        info.text = line;\n        info.width = lineWidth;\n        info.lineType = breakType;\n        lines.push(info);\n        var size = lineResult.actualSize;\n        size.height += this.getLineHeight();\n        size.width = Math.max(size.width, lineWidth);\n        lineResult.size = size;\n    };\n    /**\n     * `Copies` layout result from line result to entire result. Checks whether we can proceed lay outing or not.\n     * @private\n     */\n    PdfStringLayouter.prototype.copyToResult = function (result, lineResult, lines, \n    /*out*/ numInserted) {\n        var success = true;\n        var allowPartialLines = (this.format != null && !this.format.lineLimit);\n        var height = result.actualSize.height;\n        var maxHeight = this.size.height;\n        if ((this.pageHeight > 0) && (maxHeight + this.rectangle.y > this.pageHeight)) {\n            maxHeight = this.rectangle.y - this.pageHeight;\n            maxHeight = Math.max(maxHeight, -maxHeight);\n        }\n        numInserted = 0;\n        if (lineResult.lines != null) {\n            for (var i = 0, len = lineResult.lines.length; i < len; i++) {\n                var expHeight = height + lineResult.lineHeight;\n                if (expHeight <= maxHeight || maxHeight <= 0 || allowPartialLines) {\n                    var info = lineResult.lines[i];\n                    numInserted += info.text.length;\n                    info = this.trimLine(info, (lines.length === 0));\n                    lines.push(info);\n                    // Update width.\n                    var size = result.actualSize;\n                    size.width = Math.max(size.width, info.width);\n                    result.size = size;\n                    // The part of the line fits only and it's allowed to use partial lines.\n                    // if (expHeight >= maxHeight && maxHeight > 0 && allowPartialLines)\n                    // {\n                    //     let shouldClip : boolean = (this.format == null || !this.format.noClip);\n                    //     if (shouldClip)\n                    //     {\n                    //         let exceededHeight : number = expHeight - maxHeight;\n                    //         let fitHeight : number  = /*Utils.Round(*/ lineResult.lineHeight - exceededHeight /*)*/;\n                    //         height = /*Utils.Round(*/ height + fitHeight /*)*/;\n                    //     }\n                    //     else\n                    //     {\n                    //         height = expHeight;\n                    //     }\n                    //     success = false;\n                    //     break;\n                    // } else {\n                    height = expHeight;\n                    // }\n                }\n                else {\n                    success = false;\n                    break;\n                }\n            }\n        }\n        if (height != result.size.height) {\n            var size1 = result.actualSize;\n            size1.height = height;\n            result.size = size1;\n        }\n        return { success: success, numInserted: numInserted };\n    };\n    /**\n     * `Finalizes` final result.\n     * @private\n     */\n    PdfStringLayouter.prototype.finalizeResult = function (result, lines) {\n        result.layoutLines = [];\n        for (var index = 0; index < lines.length; index++) {\n            result.layoutLines.push(lines[index]);\n        }\n        result.layoutLineHeight = this.getLineHeight();\n        if (!this.reader.end) {\n            result.textRemainder = this.reader.readToEnd();\n        }\n        lines = [];\n    };\n    /**\n     * `Trims` whitespaces at the line.\n     * @private\n     */\n    PdfStringLayouter.prototype.trimLine = function (info, firstLine) {\n        var line = info.text;\n        var lineWidth = info.width;\n        // Trim start whitespaces if the line is not a start of the paragraph only.\n        var trimStartSpaces = ((info.lineType & LineType.FirstParagraphLine) === 0);\n        var start = (this.format == null || !this.format.rightToLeft);\n        var spaces = StringTokenizer.spaces;\n        line = (start) ? line.trim() : line.trim();\n        // Recalculate line width.\n        if (line.length !== info.text.length) {\n            lineWidth = this.getLineWidth(line);\n            if ((info.lineType & LineType.FirstParagraphLine) > 0) {\n                lineWidth += this.getLineIndent(firstLine);\n            }\n        }\n        info.text = line;\n        info.width = lineWidth;\n        return info;\n    };\n    /**\n     * Returns `wrap` type.\n     * @private\n     */\n    PdfStringLayouter.prototype.getWrapType = function () {\n        var wrapType = (this.format != null) ? this.format.wordWrap : PdfWordWrapType.Word;\n        return wrapType;\n    };\n    return PdfStringLayouter;\n}());\nexport { PdfStringLayouter };\n//Internal declaration\nvar PdfStringLayoutResult = /** @class */ (function () {\n    function PdfStringLayoutResult() {\n    }\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"remainder\", {\n        // Properties\n        /**\n         * Gets the `text` which is not lay outed.\n         * @private\n         */\n        get: function () {\n            return this.textRemainder;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"actualSize\", {\n        /**\n         * Gets the actual layout text `bounds`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.size === 'undefined') {\n                this.size = new SizeF(0, 0);\n            }\n            return this.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"lines\", {\n        /**\n         * Gets layout `lines` information.\n         * @private\n         */\n        get: function () {\n            return this.layoutLines;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"lineHeight\", {\n        /**\n         * Gets the `height` of the line.\n         * @private\n         */\n        get: function () {\n            return this.layoutLineHeight;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"empty\", {\n        /**\n         * Gets value that indicates whether any layout text [`empty`].\n         * @private\n         */\n        get: function () {\n            return (this.layoutLines == null || this.layoutLines.length === 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"lineCount\", {\n        /**\n         * Gets `number of` the layout lines.\n         * @private\n         */\n        get: function () {\n            var count = (!this.empty) ? this.layoutLines.length : 0;\n            return count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfStringLayoutResult;\n}());\nexport { PdfStringLayoutResult };\nvar LineInfo = /** @class */ (function () {\n    function LineInfo() {\n    }\n    Object.defineProperty(LineInfo.prototype, \"lineType\", {\n        //Properties\n        /**\n         * Gets the `type` of the line text.\n         * @private\n         */\n        get: function () {\n            return this.type;\n        },\n        set: function (value) {\n            this.type = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LineInfo.prototype, \"text\", {\n        /**\n         * Gets the line `text`.\n         * @private\n         */\n        get: function () {\n            return this.content;\n        },\n        set: function (value) {\n            this.content = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LineInfo.prototype, \"width\", {\n        /**\n         * Gets `width` of the line text.\n         * @private\n         */\n        get: function () {\n            return this.lineWidth;\n        },\n        set: function (value) {\n            this.lineWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return LineInfo;\n}());\nexport { LineInfo };\n/**\n* Break type of the `line`.\n* @private\n*/\nexport var LineType;\n(function (LineType) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    LineType[LineType[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `NewLineBreak`.\n     * @private\n     */\n    LineType[LineType[\"NewLineBreak\"] = 1] = \"NewLineBreak\";\n    /**\n     * Specifies the type of `LayoutBreak`.\n     * @private\n     */\n    LineType[LineType[\"LayoutBreak\"] = 2] = \"LayoutBreak\";\n    /**\n     * Specifies the type of `FirstParagraphLine`.\n     * @private\n     */\n    LineType[LineType[\"FirstParagraphLine\"] = 4] = \"FirstParagraphLine\";\n    /**\n     * Specifies the type of `LastParagraphLine`.\n     * @private\n     */\n    LineType[LineType[\"LastParagraphLine\"] = 8] = \"LastParagraphLine\";\n})(LineType || (LineType = {}));\n", "/**\n * PdfFont.ts class for EJ2-PDF\n */\nimport { PdfFontStyle } from './enum';\nimport { SizeF } from './../../drawing/pdf-drawing';\nimport { PdfStringFormat } from './pdf-string-format';\nimport { PdfStringLayouter } from './string-layouter';\nimport { StringTokenizer } from './string-tokenizer';\n/**\n * Defines a particular format for text, including font face, size, and style attributes.\n * @private\n */\nvar PdfFont = /** @class */ (function () {\n    function PdfFont(size, style) {\n        /**\n         * `Style` of the font.\n         * @private\n         */\n        this.fontStyle = PdfFontStyle.Regular;\n        if (typeof size === 'number' && typeof style === 'undefined') {\n            this.fontSize = size;\n        }\n        else {\n            this.fontSize = size;\n            this.setStyle(style);\n        }\n    }\n    Object.defineProperty(PdfFont.prototype, \"name\", {\n        //Properties\n        /**\n         * Gets the face name of this Font.\n         * @private\n         */\n        get: function () {\n            return this.metrics.name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"size\", {\n        /**\n         * Gets the size of this font.\n         * @private\n         */\n        get: function () {\n            return this.fontSize;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"height\", {\n        /**\n         * Gets the height of the font in points.\n         * @private\n         */\n        get: function () {\n            return this.metrics.getHeight(null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"style\", {\n        /**\n         * Gets the style information for this font.\n         * @private\n         */\n        get: function () {\n            return this.fontStyle;\n        },\n        set: function (value) {\n            this.fontStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"bold\", {\n        /**\n         * Gets a value indicating whether this `PdfFont` is `bold`.\n         * @private\n         */\n        get: function () {\n            return ((this.style & PdfFontStyle.Bold) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"italic\", {\n        /**\n         * Gets a value indicating whether this `PdfFont` has the `italic` style applied.\n         * @private\n         */\n        get: function () {\n            return ((this.style & PdfFontStyle.Italic) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"strikeout\", {\n        /**\n         * Gets a value indicating whether this `PdfFont` is `strikeout`.\n         * @private\n         */\n        get: function () {\n            return ((this.style & PdfFontStyle.Strikeout) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"underline\", {\n        /**\n         * Gets a value indicating whether this `PdfFont` is `underline`.\n         * @private\n         */\n        get: function () {\n            return ((this.style & PdfFontStyle.Underline) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"metrics\", {\n        /**\n         * Gets or sets the `metrics` for this font.\n         * @private\n         */\n        get: function () {\n            return this.fontMetrics;\n        },\n        set: function (value) {\n            this.fontMetrics = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"element\", {\n        // /**\n        //  * Gets and Sets the font `internals`.\n        //  * @private\n        //  */\n        // public get fontInternal() : IPdfPrimitive {\n        //     return this.pdfFontInternals;\n        // }\n        // public set fontInternal(value : IPdfPrimitive) {\n        //     this.pdfFontInternals = value;\n        // }\n        //IPdfWrapper Members\n        /**\n         * Gets the `element` representing the font.\n         * @private\n         */\n        get: function () {\n            return this.pdfFontInternals;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfFont.prototype.measureString = function (text, arg2, arg3, arg4, arg5) {\n        if (typeof text === 'string' && typeof arg2 === 'undefined') {\n            return this.measureString(text, null);\n        }\n        else if (typeof text === 'string' && (arg2 instanceof PdfStringFormat || arg2 == null) && typeof arg3 === 'undefined' && typeof arg4 === 'undefined') {\n            var temparg2 = arg2;\n            var charactersFitted = 0;\n            var linesFilled = 0;\n            return this.measureString(text, temparg2, charactersFitted, linesFilled);\n        }\n        else if (typeof text === 'string' && (arg2 instanceof PdfStringFormat || arg2 == null) && typeof arg3 === 'number' && typeof arg4 === 'number') {\n            var temparg2 = arg2;\n            return this.measureString(text, 0, temparg2, arg3, arg4);\n            // } else if (typeof text === 'string' && typeof arg2 === 'number' && typeof arg3 === 'undefined') {\n            //     return this.measureString(text, arg2, null);\n            // } else if (typeof text === 'string' && typeof arg2 === 'number' && (arg3 instanceof PdfStringFormat || arg3 == null) && typeof arg4 === 'undefined' && typeof arg5 === 'undefined') {\n            //     let temparg3 : PdfStringFormat = arg3 as PdfStringFormat;\n            //     let charactersFitted : number = 0;\n            //     let linesFilled : number = 0;\n            //     return this.measureString(text, arg2, temparg3, charactersFitted, linesFilled);\n        }\n        else if (typeof text === 'string' && typeof arg2 === 'number' && (arg3 instanceof PdfStringFormat || arg3 == null) && typeof arg4 === 'number' && typeof arg5 === 'number') {\n            var layoutArea = new SizeF(arg2, 0);\n            var temparg3 = arg3;\n            return this.measureString(text, layoutArea, temparg3, arg4, arg5);\n            // } else if (typeof text === 'string' && arg2 instanceof SizeF && typeof arg3 === 'undefined') {\n            //     return this.measureString(text, arg2, null);\n            // } else if (typeof text === 'string' && arg2 instanceof SizeF && (arg3 instanceof PdfStringFormat || arg3 == null) && typeof arg4 === 'undefined' && typeof arg5 === 'undefined') {\n            //     let temparg3 : PdfStringFormat = arg3 as PdfStringFormat;\n            //     let charactersFitted : number = 0;\n            //     let linesFilled : number = 0;\n            //     return this.measureString(text, arg2, temparg3, charactersFitted, linesFilled);\n        }\n        else {\n            if (text == null) {\n                throw Error(\"ArgumentNullException(\\\"text\\\")\");\n            }\n            var temparg2 = arg2;\n            var temparg3 = arg3;\n            var layouter = new PdfStringLayouter();\n            var result = layouter.layout(text, this, temparg3, temparg2, false, new SizeF(0, 0));\n            // arg4 = (result.Remainder == null) ? text.length : text.length - result.Remainder.length;\n            arg4 = text.length;\n            arg5 = (result.empty) ? 0 : result.lines.length;\n            return result.actualSize;\n        }\n    };\n    /* tslint:enable */\n    //IPdfCache Members\n    /**\n     * `Checks` whether the object is similar to another object.\n     * @private\n     */\n    PdfFont.prototype.equalsTo = function (obj) {\n        var result = this.equalsToFont(obj);\n        return result;\n    };\n    /**\n     * Returns `internals` of the object.\n     * @private\n     */\n    PdfFont.prototype.getInternals = function () {\n        return this.pdfFontInternals;\n    };\n    /**\n     * Sets `internals` to the object.\n     * @private\n     */\n    PdfFont.prototype.setInternals = function (internals) {\n        if (internals == null) {\n            throw new Error('ArgumentNullException:internals');\n        }\n        this.pdfFontInternals = internals;\n    };\n    /**\n     * Sets the `style` of the font.\n     * @private\n     */\n    PdfFont.prototype.setStyle = function (style) {\n        this.fontStyle = style;\n    };\n    /**\n     * Applies `settings` to the default line width.\n     * @private\n     */\n    PdfFont.prototype.applyFormatSettings = function (line, format, width) {\n        // if (line == null) {\n        //     throw new Error(`ArgumentNullException:line`);\n        // }\n        var realWidth = width;\n        if (format != null && width > 0) {\n            // Space among characters is not default.\n            if (format.characterSpacing !== 0) {\n                realWidth += (line.length - 1) * format.characterSpacing;\n            }\n            // Space among words is not default.\n            if (format.wordSpacing !== 0) {\n                var symbols = StringTokenizer.spaces;\n                var whitespacesCount = StringTokenizer.getCharsCount(line, symbols);\n                realWidth += whitespacesCount * format.wordSpacing;\n            }\n        }\n        return realWidth;\n    };\n    //Constants\n    /**\n     * `Multiplier` of the symbol width.\n     * @default 0.001\n     * @private\n     */\n    PdfFont.charSizeMultiplier = 0.001;\n    /**\n     * `Synchronization` object.\n     * @private\n     */\n    PdfFont.syncObject = new Object();\n    return PdfFont;\n}());\nexport { PdfFont };\n", "/**\n * PdfTransformationMatrix.ts class for EJ2-PDF\n */\nimport { PointF } from './../drawing/pdf-drawing';\nimport { PdfNumber } from './../primitives/pdf-number';\n/**\n * Class for representing Root `transformation matrix`.\n */\nvar PdfTransformationMatrix = /** @class */ (function () {\n    function PdfTransformationMatrix(value) {\n        /**\n         * Value for `angle converting`.\n         * @default 180.0 / Math.PI\n         * @private\n         */\n        this.radDegFactor = 180.0 / Math.PI;\n        if (typeof value === 'undefined') {\n            this.transformationMatrix = new Matrix(1.00, 0.00, 0.00, 1.00, 0.00, 0.00);\n        }\n        else {\n            this.transformationMatrix = new Matrix(1.00, 0.00, 0.00, -1.00, 0.00, 0.00);\n        }\n    }\n    Object.defineProperty(PdfTransformationMatrix.prototype, \"matrix\", {\n        // Properties\n        /**\n         * Gets or sets the `internal matrix object`.\n         * @private\n         */\n        get: function () {\n            return this.transformationMatrix;\n        },\n        set: function (value) {\n            this.transformationMatrix = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Public methods\n    /**\n     * `Translates` coordinates by specified coordinates.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.translate = function (offsetX, offsetY) {\n        this.transformationMatrix.translate(offsetX, offsetY);\n    };\n    /**\n     * `Scales` coordinates by specified coordinates.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.scale = function (scaleX, scaleY) {\n        this.transformationMatrix.elements[0] = scaleX;\n        this.transformationMatrix.elements[3] = scaleY;\n    };\n    /**\n     * `Rotates` coordinate system in counterclockwise direction.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.rotate = function (angle) {\n        //Convert from degree to radian \n        angle = (angle * Math.PI) / 180;\n        //Rotation \n        this.transformationMatrix.elements[0] = Math.cos(angle);\n        this.transformationMatrix.elements[1] = Math.sin(angle);\n        this.transformationMatrix.elements[2] = -Math.sin(angle);\n        this.transformationMatrix.elements[3] = Math.cos(angle);\n    };\n    // Overrides\n    /**\n     * Gets `PDF representation`.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.toString = function () {\n        var builder = '';\n        var whitespace = ' ';\n        for (var i = 0, len = this.transformationMatrix.elements.length; i < len; i++) {\n            var temp = this.matrix.elements[i];\n            builder += PdfNumber.floatToString(this.transformationMatrix.elements[i]);\n            builder += whitespace;\n        }\n        return builder;\n    };\n    // Implementation\n    /**\n     * `Multiplies` matrices (changes coordinate system.)\n     * @private\n     */\n    PdfTransformationMatrix.prototype.multiply = function (matrix) {\n        this.transformationMatrix.multiply(matrix.matrix);\n    };\n    /**\n     * Converts `degrees to radians`.\n     * @private\n     */\n    PdfTransformationMatrix.degreesToRadians = function (degreesX) {\n        return this.degRadFactor * degreesX;\n    };\n    /**\n     * Converts `radians to degrees`.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.radiansToDegrees = function (radians) {\n        return this.radDegFactor * radians;\n    };\n    /**\n     * `Clones` this instance of PdfTransformationMatrix.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.clone = function () {\n        return this;\n    };\n    // Constants\n    /**\n     * Value for `angle converting`.\n     * @default Math.PI / 180.0\n     * @private\n     */\n    PdfTransformationMatrix.degRadFactor = Math.PI / 180.0;\n    return PdfTransformationMatrix;\n}());\nexport { PdfTransformationMatrix };\nvar Matrix = /** @class */ (function () {\n    function Matrix(arg1, arg2, arg3, arg4, arg5, arg6) {\n        if (typeof arg1 === 'undefined') {\n            this.metrixElements = [];\n        }\n        else if (typeof arg1 === 'number') {\n            this.metrixElements = [];\n            this.metrixElements.push(arg1);\n            this.metrixElements.push(arg2);\n            this.metrixElements.push(arg3);\n            this.metrixElements.push(arg4);\n            this.metrixElements.push(arg5);\n            this.metrixElements.push(arg6);\n        }\n        else {\n            this.metrixElements = arg1;\n        }\n    }\n    Object.defineProperty(Matrix.prototype, \"elements\", {\n        // Properties\n        /**\n         * Gets the `elements`.\n         * @private\n         */\n        get: function () {\n            return this.metrixElements;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Matrix.prototype, \"offsetX\", {\n        /**\n         * Gets the off set `X`.\n         * @private\n         */\n        get: function () {\n            return this.metrixElements[4];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Matrix.prototype, \"offsetY\", {\n        /**\n         * Gets the off set `Y`.\n         * @private\n         */\n        get: function () {\n            return this.metrixElements[5];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Translates` coordinates by specified coordinates.\n     * @private\n     */\n    Matrix.prototype.translate = function (offsetX, offsetY) {\n        this.metrixElements[4] = offsetX;\n        this.metrixElements[5] = offsetY;\n    };\n    /**\n     * `Translates` the specified offset X.\n     * @private\n     */\n    Matrix.prototype.transform = function (point) {\n        var x = point.x;\n        var y = point.y;\n        var x2 = x * this.elements[0] + y * this.elements[2] + this.offsetX;\n        var y2 = x * this.elements[1] + y * this.elements[3] + this.offsetY;\n        return new PointF(x2, y2);\n    };\n    /**\n     * `Multiplies matrices` (changes coordinate system.)\n     * @private\n     */\n    Matrix.prototype.multiply = function (matrix) {\n        var tempMatrix = [];\n        tempMatrix.push(this.elements[0] * matrix.elements[0] + this.elements[1] * matrix.elements[2]);\n        tempMatrix[1] = (this.elements[0] * matrix.elements[1] + this.elements[1] * matrix.elements[3]);\n        tempMatrix[2] = (this.elements[2] * matrix.elements[0] + this.elements[3] * matrix.elements[2]);\n        tempMatrix[3] = (this.elements[2] * matrix.elements[1] + this.elements[3] * matrix.elements[3]);\n        tempMatrix[4] = (this.offsetX * matrix.elements[0] + this.offsetY * matrix.elements[2] + matrix.offsetX);\n        tempMatrix[5] = (this.offsetX * matrix.elements[1] + this.offsetY * matrix.elements[3] + matrix.offsetY);\n        for (var i = 0; i < tempMatrix.length; i++) {\n            this.elements[i] = tempMatrix[i];\n        }\n    };\n    // IDisposable Members\n    /**\n     * `Dispose` this instance of PdfTransformationMatrix class.\n     * @private\n     */\n    Matrix.prototype.dispose = function () {\n        this.metrixElements = null;\n    };\n    // ICloneable Members\n    /**\n     * `Clones` this instance of PdfTransformationMatrix class.\n     * @private\n     */\n    Matrix.prototype.clone = function () {\n        var m = new Matrix(this.metrixElements);\n        return m;\n    };\n    return Matrix;\n}());\nexport { Matrix };\n", "/**\n * `constants.ts` class for EJ2-PDF\n * @private\n */\nvar ProcedureSets = /** @class */ (function () {\n    function ProcedureSets() {\n        /**\n         * Specifies the `PDF` procedure set.\n         * @private\n         */\n        this.pdf = 'PDF';\n        /**\n         * Specifies the `Text` procedure set.\n         * @private\n         */\n        this.text = 'Text';\n        /**\n         * Specifies the `ImageB` procedure set.\n         * @private\n         */\n        this.imageB = 'ImageB';\n        /**\n         * Specifies the `ImageC` procedure set.\n         * @private\n         */\n        this.imageC = 'ImageC';\n        /**\n         * Specifies the `ImageI` procedure set.\n         * @private\n         */\n        this.imageI = 'ImageI';\n    }\n    return ProcedureSets;\n}());\nexport { ProcedureSets };\n", "/**\n * Dictionary class\n * @private\n * @hidden\n */\nvar TemporaryDictionary = /** @class */ (function () {\n    function TemporaryDictionary() {\n        /**\n         * @hidden\n         * @private\n         */\n        this.mKeys = [];\n        /**\n         * @hidden\n         * @private\n         */\n        this.mValues = [];\n    }\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.size = function () {\n        return this.mKeys.length;\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.add = function (key, value) {\n        if (key === undefined || key === null || value === undefined || value === null) {\n            throw new ReferenceError('Provided key or value is not valid.');\n        }\n        var index = this.mKeys.indexOf(key);\n        if (index < 0) {\n            this.mKeys.push(key);\n            this.mValues.push(value);\n            return 1;\n        }\n        else {\n            throw new RangeError('An item with the same key has already been added.');\n        }\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.keys = function () {\n        return this.mKeys;\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.values = function () {\n        return this.mValues;\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.getValue = function (key) {\n        if (key === undefined || key === null) {\n            throw new ReferenceError('Provided key is not valid.');\n        }\n        var index = this.mKeys.indexOf(key);\n        if (index < 0) {\n            throw new RangeError('No item with the specified key has been added.');\n        }\n        else {\n            return this.mValues[index];\n        }\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.setValue = function (key, value) {\n        if (key === undefined || key === null) {\n            throw new ReferenceError('Provided key is not valid.');\n        }\n        var index = this.mKeys.indexOf(key);\n        if (index < 0) {\n            this.mKeys.push(key);\n            this.mValues.push(value);\n        }\n        else {\n            this.mValues[index] = value;\n        }\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.remove = function (key) {\n        if (key === undefined || key === null) {\n            throw new ReferenceError('Provided key is not valid.');\n        }\n        var index = this.mKeys.indexOf(key);\n        if (index < 0) {\n            throw new RangeError('No item with the specified key has been added.');\n        }\n        else {\n            this.mKeys.splice(index, 1);\n            this.mValues.splice(index, 1);\n            return true;\n        }\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.containsKey = function (key) {\n        if (key === undefined || key === null) {\n            throw new ReferenceError('Provided key is not valid.');\n        }\n        var index = this.mKeys.indexOf(key);\n        if (index < 0) {\n            return false;\n        }\n        return true;\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.clear = function () {\n        this.mKeys = [];\n        this.mValues = [];\n    };\n    return TemporaryDictionary;\n}());\nexport { TemporaryDictionary };\n", "import { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfName } from './../primitives/pdf-name';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\n/**\n * Represents a simple `transparency`.\n * @private\n */\nvar PdfTransparency = /** @class */ (function () {\n    // Properties\n    // /**\n    //  * Gets the `stroke` operation alpha value.\n    //  * @private\n    //  */\n    // public get stroke() : number {\n    //     let result : number = this.getNumber(this.dictionaryProperties.CA);\n    //     return result;\n    // }\n    // /**\n    //  * Gets the `fill` operation alpha value.\n    //  * @private\n    //  */\n    // public get fill() : number {\n    //     let result : number = this.getNumber(this.dictionaryProperties.ca);\n    //     return result;\n    // }\n    // /**\n    //  * Gets the `blend mode`.\n    //  * @private\n    //  */\n    // public get mode() : PdfBlendMode {\n    //     let result : string = this.getName(this.dictionaryProperties.ca);\n    //     return PdfBlendMode.Normal;\n    // }\n    // Constructors\n    /**\n     * Initializes a new instance of the `Transparency` class.\n     * @private\n     */\n    function PdfTransparency(stroke, fill, mode) {\n        // Fields\n        /**\n         * Internal variable to store `dictionary`.\n         * @default new PdfDictionary()\n         * @private\n         */\n        this.dictionary = new PdfDictionary();\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @default new DictionaryProperties()\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        this.dictionary.items.setValue(this.dictionaryProperties.CA, new PdfNumber(stroke));\n        this.dictionary.items.setValue(this.dictionaryProperties.ca, new PdfNumber(fill));\n        this.dictionary.items.setValue(this.dictionaryProperties.BM, new PdfName(mode.toString()));\n    }\n    Object.defineProperty(PdfTransparency.prototype, \"element\", {\n        // // Implementation\n        // /**\n        //  * Gets the `number value`.\n        //  * @private\n        //  */\n        // private getNumber(keyName : string) : number {\n        //     let result : number = 0.0;\n        //     let numb : PdfNumber = this.dictionary.items.getValue(keyName) as PdfNumber;\n        //     result = numb.intValue;\n        //     return result;\n        // }\n        // /**\n        //  * Gets the `name value`.\n        //  * @private\n        //  */\n        // private getName(keyName : string) : string {\n        //     let result : string = null;\n        //     let name : PdfName = this.dictionary.items.getValue(keyName) as PdfName;\n        //     result = name.value;\n        //     return result;\n        // }\n        // IPdfWrapper Members\n        /**\n         * Gets the `element`.\n         * @private\n         */\n        get: function () {\n            return this.dictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfTransparency;\n}());\nexport { PdfTransparency };\n", "/**\n * Represent a `collection of automatic fields information`.\n * @private\n */\nvar PdfAutomaticFieldInfoCollection = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the 'PdfPageNumberFieldInfoCollection' class.\n     * @private\n     */\n    function PdfAutomaticFieldInfoCollection() {\n        /**\n         * Internal variable to store instance of `pageNumberFields` class.\n         * @private\n         */\n        this.automaticFieldsInformation = [];\n        //\n    }\n    Object.defineProperty(PdfAutomaticFieldInfoCollection.prototype, \"automaticFields\", {\n        /**\n         * Gets the `page number fields collection`.\n         * @private\n         */\n        get: function () {\n            return this.automaticFieldsInformation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Public methods\n    /// Adds the specified field info.\n    /**\n     * Add page number field into collection.\n     * @private\n     */\n    PdfAutomaticFieldInfoCollection.prototype.add = function (fieldInfo) {\n        return this.automaticFields.push(fieldInfo);\n    };\n    return PdfAutomaticFieldInfoCollection;\n}());\nexport { PdfAutomaticFieldInfoCollection };\n", "/**\n * Represents a base class for all page graphics elements.\n */\nvar PdfGraphicsElement = /** @class */ (function () {\n    // Constructors\n    function PdfGraphicsElement() {\n        //\n    }\n    /**\n     * `Draws` the page number field.\n     * @public\n     */\n    PdfGraphicsElement.prototype.drawHelper = function (graphics, x, y) {\n        var bNeedSave = (x !== 0 || y !== 0);\n        var gState = null;\n        // Translate co-ordinates.\n        if (bNeedSave) {\n            // Save state.\n            gState = graphics.save();\n            graphics.translateTransform(x, y);\n        }\n        this.drawInternal(graphics);\n        if (bNeedSave) {\n            // Restore state.\n            graphics.restore(gState);\n        }\n    };\n    return PdfGraphicsElement;\n}());\nexport { PdfGraphicsElement };\n", "var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfAutomaticField.ts class for EJ2-PDF\n */\nimport { RectangleF, SizeF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfSolidBrush } from './../../graphics/brushes/pdf-solid-brush';\nimport { PdfColor } from './../../graphics/pdf-color';\nimport { PdfDocument } from './../pdf-document';\nimport { PdfGraphicsElement } from './../../graphics/figures/base/graphics-element';\nimport { PdfAutomaticFieldInfo } from './automatic-field-info';\n/**\n * Represents a fields which is calculated before the document saves.\n */\nvar PdfAutomaticField = /** @class */ (function (_super) {\n    __extends(PdfAutomaticField, _super);\n    // Constructors\n    function PdfAutomaticField() {\n        var _this = _super.call(this) || this;\n        // Fields\n        _this.internalBounds = new RectangleF(0, 0, 0, 0);\n        _this.internalTemplateSize = new SizeF(0, 0);\n        return _this;\n    }\n    Object.defineProperty(PdfAutomaticField.prototype, \"bounds\", {\n        // Properties\n        get: function () {\n            return this.internalBounds;\n        },\n        set: function (value) {\n            this.internalBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"size\", {\n        get: function () {\n            return new SizeF(this.bounds.width, this.bounds.height);\n        },\n        set: function (value) {\n            this.bounds.width = value.width;\n            this.bounds.height = value.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"location\", {\n        get: function () {\n            return new PointF(this.bounds.x, this.bounds.y);\n        },\n        set: function (value) {\n            this.bounds.x = value.x;\n            this.bounds.y = value.y;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"font\", {\n        get: function () {\n            return this.internalFont;\n        },\n        set: function (value) {\n            this.internalFont = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"brush\", {\n        get: function () {\n            return this.internalBrush;\n        },\n        set: function (value) {\n            this.internalBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"pen\", {\n        get: function () {\n            return this.internalPen;\n        },\n        set: function (value) {\n            this.internalPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"stringFormat\", {\n        get: function () {\n            return this.internalStringFormat;\n        },\n        set: function (value) {\n            this.internalStringFormat = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfAutomaticField.prototype.performDrawHelper = function (graphics, location, scalingX, scalingY) {\n        if (this.bounds.height === 0 || this.bounds.width === 0) {\n            var text = this.getValue(graphics);\n            this.internalTemplateSize = this.getFont().measureString(text, this.size, this.stringFormat);\n        }\n    };\n    PdfAutomaticField.prototype.draw = function (arg1, arg2, arg3) {\n        if (typeof arg2 === 'undefined') {\n            var location_1 = new PointF(0, 0);\n            this.draw(arg1, location_1);\n        }\n        else if (arg2 instanceof PointF) {\n            this.draw(arg1, arg2.x, arg2.y);\n        }\n        else {\n            this.drawHelper(arg1, arg2, arg3);\n            var info = new PdfAutomaticFieldInfo(this, new PointF(arg2, arg3));\n            arg1.automaticFields.add(info);\n        }\n    };\n    PdfAutomaticField.prototype.getSize = function () {\n        if (this.bounds.height === 0 || this.bounds.width === 0) {\n            return this.internalTemplateSize;\n        }\n        else {\n            return this.size;\n        }\n    };\n    PdfAutomaticField.prototype.drawInternal = function (graphics) {\n        //\n    };\n    /* tslint:disable */\n    PdfAutomaticField.prototype.getBrush = function () {\n        return (typeof this.internalBrush === 'undefined' || this.internalBrush == null) ? new PdfSolidBrush(new PdfColor(0, 0, 0)) : this.internalBrush;\n    };\n    PdfAutomaticField.prototype.getFont = function () {\n        return (typeof this.internalFont === 'undefined' || this.internalFont == null) ? PdfDocument.defaultFont : this.internalFont;\n    };\n    /* tslint:enable */\n    PdfAutomaticField.prototype.getPageFromGraphics = function (graphics) {\n        if (typeof graphics.page !== 'undefined' && graphics.page !== null) {\n            var page = graphics.page;\n            return page;\n        }\n        else {\n            var page = graphics.currentPage;\n            return page;\n        }\n    };\n    return PdfAutomaticField;\n}(PdfGraphicsElement));\nexport { PdfAutomaticField };\n", "/**\n * PdfAutomaticFieldInfo.ts class for EJ2-PDF\n * @private\n */\nimport { PointF } from './../../drawing/pdf-drawing';\nimport { PdfAutomaticField } from './automatic-field';\n/**\n * Represents information about the automatic field.\n * @private\n */\nvar PdfAutomaticFieldInfo = /** @class */ (function () {\n    function PdfAutomaticFieldInfo(field, location, scaleX, scaleY) {\n        // Fields\n        /**\n         * Internal variable to store location of the field.\n         * @private\n         */\n        this.pageNumberFieldLocation = new PointF();\n        /**\n         * Internal variable to store field.\n         * @private\n         */\n        this.pageNumberField = null;\n        /**\n         * Internal variable to store x scaling factor.\n         * @private\n         */\n        this.scaleX = 1;\n        /**\n         * Internal variable to store y scaling factor.\n         * @private\n         */\n        this.scaleY = 1;\n        if (typeof location === 'undefined' && field instanceof PdfAutomaticFieldInfo) {\n            this.pageNumberField = field.field;\n            this.pageNumberFieldLocation = field.location;\n            this.scaleX = field.scalingX;\n            this.scaleY = field.scalingY;\n        }\n        else if (typeof scaleX === 'undefined' && location instanceof PointF && field instanceof PdfAutomaticField) {\n            this.pageNumberField = field;\n            this.pageNumberFieldLocation = location;\n        }\n        else {\n            this.pageNumberField = field;\n            this.pageNumberFieldLocation = location;\n            this.scaleX = scaleX;\n            this.scaleY = scaleY;\n        }\n    }\n    Object.defineProperty(PdfAutomaticFieldInfo.prototype, \"location\", {\n        /* tslint:enable */\n        // Properties\n        /**\n         * Gets or sets the location.\n         * @private\n         */\n        get: function () {\n            return this.pageNumberFieldLocation;\n        },\n        set: function (value) {\n            this.pageNumberFieldLocation = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticFieldInfo.prototype, \"field\", {\n        /**\n         * Gets or sets the field.\n         * @private\n         */\n        get: function () {\n            return this.pageNumberField;\n        },\n        set: function (value) {\n            this.pageNumberField = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticFieldInfo.prototype, \"scalingX\", {\n        /**\n         * Gets or sets the scaling X factor.\n         * @private\n         */\n        get: function () {\n            return this.scaleX;\n        },\n        set: function (value) {\n            this.scaleX = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticFieldInfo.prototype, \"scalingY\", {\n        /**\n         * Gets or sets the scaling Y factor.\n         * @private\n         */\n        get: function () {\n            return this.scaleY;\n        },\n        set: function (value) {\n            this.scaleY = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAutomaticFieldInfo;\n}());\nexport { PdfAutomaticFieldInfo };\n", "/**\n * TtfTableInfo.ts class for EJ2-PDF\n */\nvar TtfTableInfo = /** @class */ (function () {\n    function TtfTableInfo() {\n    }\n    Object.defineProperty(TtfTableInfo.prototype, \"empty\", {\n        //Properties\n        /**\n         * Gets a value indicating whether this table is empty.\n         * @private\n         */\n        get: function () {\n            var empty = (this.offset === this.length && this.length === this.checksum && this.checksum === 0);\n            return empty;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return TtfTableInfo;\n}());\nexport { TtfTableInfo };\n", "var TtfNameTable = /** @class */ (function () {\n    function TtfNameTable() {\n    }\n    return TtfNameTable;\n}());\nexport { TtfNameTable };\n", "/**\n * TtfNameRecord.ts class for EJ2-PDF\n */\nvar TtfNameRecord = /** @class */ (function () {\n    function TtfNameRecord() {\n    }\n    return TtfNameRecord;\n}());\nexport { TtfNameRecord };\n", "/**\n * TtfHeadTable.ts class for EJ2-PDF\n */\nvar TtfHeadTable = /** @class */ (function () {\n    function TtfHeadTable() {\n    }\n    return TtfHeadTable;\n}());\nexport { TtfHeadTable };\n", "var TtfMetrics = /** @class */ (function () {\n    function TtfMetrics() {\n    }\n    Object.defineProperty(TtfMetrics.prototype, \"isItalic\", {\n        //Properties\n        /**\n         * Gets a value indicating whether this instance is italic.\n         */\n        get: function () {\n            return ((this.macStyle & 2) !== 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TtfMetrics.prototype, \"isBold\", {\n        /**\n         * Gets a value indicating whether this instance is bold.\n         */\n        get: function () {\n            return ((this.macStyle & 1) !== 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return TtfMetrics;\n}());\nexport { TtfMetrics };\n", "/**\n * TtfHorizontalHeaderTable.ts class for EJ2-PDF\n */\nvar TtfHorizontalHeaderTable = /** @class */ (function () {\n    function TtfHorizontalHeaderTable() {\n    }\n    return TtfHorizontalHeaderTable;\n}());\nexport { TtfHorizontalHeaderTable };\n", "/**\n * TtfOS2Table.ts class for EJ2-PDF\n * The OS/2 table consists of a set of metrics that are required by Windows and OS/2.\n */\nvar TtfOS2Table = /** @class */ (function () {\n    function TtfOS2Table() {\n    }\n    return TtfOS2Table;\n}());\nexport { TtfOS2Table };\n", "/**\n * TtfPostTable.ts class for EJ2-PDF\n */\nvar TtfPostTable = /** @class */ (function () {\n    function TtfPostTable() {\n    }\n    return TtfPostTable;\n}());\nexport { TtfPostTable };\n", "/**\n * TtfLongHorMetric.ts class for EJ2-PDF\n */\nvar TtfLongHorMetric = /** @class */ (function () {\n    function TtfLongHorMetric() {\n    }\n    return TtfLongHorMetric;\n}());\nexport { TtfLongHorMetric };\n", "/**\n * TtfCmapSubTable.ts class for EJ2-PDF\n */\nvar TtfCmapSubTable = /** @class */ (function () {\n    function TtfCmapSubTable() {\n    }\n    return TtfCmapSubTable;\n}());\nexport { TtfCmapSubTable };\n", "/**\n * TtfCmapTable.ts class for EJ2-PDF\n */\nvar TtfCmapTable = /** @class */ (function () {\n    function TtfCmapTable() {\n    }\n    return TtfCmapTable;\n}());\nexport { TtfCmapTable };\n", "/**\n * TtfGlyphInfo.ts class for EJ2-PDF\n */\nvar TtfGlyphInfo = /** @class */ (function () {\n    function TtfGlyphInfo() {\n    }\n    Object.defineProperty(TtfGlyphInfo.prototype, \"empty\", {\n        //Properties\n        /**\n         * Gets a value indicating whether this TtfGlyphInfo is empty.\n         */\n        get: function () {\n            var empty = (this.index === this.width && this.width === this.charCode && this.charCode === 0);\n            return empty;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //IComparable implementation\n    /**\n     * Compares two WidthDescriptor objects.\n     */\n    TtfGlyphInfo.prototype.compareTo = function (obj) {\n        var glyph = obj;\n        return this.index - glyph.index;\n    };\n    return TtfGlyphInfo;\n}());\nexport { TtfGlyphInfo };\n", "/**\n * TtfLocaTable.ts class for EJ2-PDF\n */\nvar TtfLocaTable = /** @class */ (function () {\n    function TtfLocaTable() {\n    }\n    return TtfLocaTable;\n}());\nexport { TtfLocaTable };\n", "/**\n * TtfAppleCmapSubTable.ts class for EJ2-PDF\n */\nvar TtfAppleCmapSubTable = /** @class */ (function () {\n    function TtfAppleCmapSubTable() {\n    }\n    return TtfAppleCmapSubTable;\n}());\nexport { TtfAppleCmapSubTable };\n", "/**\n * TtfMicrosoftCmapSubTable.ts class for EJ2-PDF\n */\nvar TtfMicrosoftCmapSubTable = /** @class */ (function () {\n    function TtfMicrosoftCmapSubTable() {\n    }\n    return TtfMicrosoftCmapSubTable;\n}());\nexport { TtfMicrosoftCmapSubTable };\n", "/**\n * TtfTrimmedCmapSubTable.ts class for EJ2-PDF\n */\nvar TtfTrimmedCmapSubTable = /** @class */ (function () {\n    function TtfTrimmedCmapSubTable() {\n    }\n    return TtfTrimmedCmapSubTable;\n}());\nexport { TtfTrimmedCmapSubTable };\n", "/**\n * TtfLocaTable.ts class for EJ2-PDF\n */\nvar TtfGlyphHeader = /** @class */ (function () {\n    function TtfGlyphHeader() {\n    }\n    return TtfGlyphHeader;\n}());\nexport { TtfGlyphHeader };\n", "/**\n * Writes data in BigEndian order.\n */\nvar BigEndianWriter = /** @class */ (function () {\n    //Constructors\n    /**\n     * Creates a new writer.\n     */\n    function BigEndianWriter(capacity) {\n        //Constants\n        /**\n         * Size of Int32 type.\n         */\n        this.int32Size = 4;\n        /**\n         * Size of Int16 type.\n         */\n        this.int16Size = 2;\n        /**\n         * Size of long type.\n         */\n        this.int64Size = 8;\n        this.bufferLength = capacity;\n        this.buffer = [];\n    }\n    Object.defineProperty(BigEndianWriter.prototype, \"data\", {\n        //Properties\n        /**\n         * Gets data written to the writer.\n         */\n        get: function () {\n            if (this.buffer.length < this.bufferLength) {\n                var length_1 = this.bufferLength - this.buffer.length;\n                for (var i = 0; i < length_1; i++) {\n                    this.buffer.push(0);\n                }\n            }\n            return this.buffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BigEndianWriter.prototype, \"position\", {\n        /// <summary>\n        /// Gets position of the internal buffer.\n        /// </summary>\n        get: function () {\n            if (this.internalPosition === undefined || this.internalPosition === null) {\n                this.internalPosition = 0;\n            }\n            return this.internalPosition;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Writes short value.\n     */\n    BigEndianWriter.prototype.writeShort = function (value) {\n        var bytes = [((value & 0x0000ff00) >> 8), value & 0x000000ff];\n        this.flush(bytes);\n    };\n    /**\n     * Writes int value.\n     */\n    BigEndianWriter.prototype.writeInt = function (value) {\n        var i1 = (value & 0xff000000) >> 24;\n        i1 = i1 < 0 ? 256 + i1 : i1;\n        var i2 = (value & 0x00ff0000) >> 16;\n        i2 = i2 < 0 ? 256 + i2 : i2;\n        var i3 = (value & 0x0000ff00) >> 8;\n        i3 = i3 < 0 ? 256 + i3 : i3;\n        var i4 = value & 0x000000ff;\n        i4 = i4 < 0 ? 256 + i4 : i4;\n        var bytes = [(value & 0xff000000) >> 24, (value & 0x00ff0000) >> 16, (value & 0x0000ff00) >> 8, value & 0x000000ff];\n        this.flush(bytes);\n    };\n    /**\n     * Writes u int value.\n     */\n    BigEndianWriter.prototype.writeUInt = function (value) {\n        var buff = [(value & 0xff000000) >> 24, (value & 0x00ff0000) >> 16, (value & 0x0000ff00) >> 8, value & 0x000000ff];\n        this.flush(buff);\n    };\n    /**\n     * Writes string value.\n     */\n    BigEndianWriter.prototype.writeString = function (value) {\n        if (value == null) {\n            throw new Error('Argument Null Exception : value');\n        }\n        var bytes = [];\n        for (var i = 0; i < value.length; i++) {\n            bytes.push(value.charCodeAt(i));\n        }\n        this.flush(bytes);\n    };\n    /**\n     * Writes byte[] value.\n     */\n    BigEndianWriter.prototype.writeBytes = function (value) {\n        this.flush(value);\n    };\n    // //Implementation\n    BigEndianWriter.prototype.flush = function (buff) {\n        if (buff === null) {\n            throw new Error('Argument Null Exception : buff');\n        }\n        var position = this.position;\n        for (var i = 0; i < buff.length; i++) {\n            this.buffer[position] = buff[i];\n            position++;\n        }\n        this.internalPosition += buff.length;\n    };\n    return BigEndianWriter;\n}());\nexport { BigEndianWriter };\n", "/**\n * TtfReader.ts class for EJ2-PDF\n */\nimport { TtfTableInfo } from './ttf-table-info';\nimport { Dictionary } from './../../collections/dictionary';\nimport { TtfNameTable } from './ttf-name-table';\nimport { TtfNameRecord } from './ttf-name-record';\nimport { TtfHeadTable } from './ttf-head-table';\nimport { TtfMetrics } from './ttf-metrics';\nimport { TtfHorizontalHeaderTable } from './ttf-horizontal-header-table';\nimport { TtfOS2Table } from './ttf-OS2-Table';\nimport { TtfPostTable } from './ttf-post-table';\nimport { TtfLongHorMetric } from './ttf-long-hor-metric';\nimport { TtfCmapSubTable } from './ttf-cmap-sub-table';\nimport { TtfCmapTable } from './ttf-cmap-table';\nimport { TtfGlyphInfo } from './ttf-glyph-info';\nimport { TtfLocaTable } from './ttf-loca-table';\nimport { TtfAppleCmapSubTable } from './ttf-apple-cmap-sub-table';\nimport { TtfMicrosoftCmapSubTable } from './ttf-microsoft-cmap-sub-table';\nimport { TtfTrimmedCmapSubTable } from './ttf-trimmed-cmap-sub-table';\nimport { TtfGlyphHeader } from './ttf-glyph-header';\nimport { Rectangle } from './../../drawing/pdf-drawing';\nimport { StringTokenizer } from './string-tokenizer';\nimport { TtfCmapFormat, TtfCmapEncoding, TtfPlatformID } from './enum';\nimport { TtfMicrosoftEncodingID, TtfMacintoshEncodingID, TtfCompositeGlyphFlags } from './enum';\nimport { BigEndianWriter } from './../../input-output/big-endian-writer';\nvar TtfReader = /** @class */ (function () {\n    //Constructors\n    function TtfReader(fontData) {\n        this.int32Size = 4;\n        this.isTtcFont = false;\n        this.isMacTtf = false;\n        this.metricsName = '';\n        this.isMacTTF = false;\n        this.missedGlyphs = 0;\n        this.tableNames = ['cvt ', 'fpgm', 'glyf', 'head', 'hhea', 'hmtx', 'loca', 'maxp', 'prep'];\n        this.entrySelectors = [0, 0, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4];\n        this.fontData = fontData;\n        this.initialize();\n    }\n    Object.defineProperty(TtfReader.prototype, \"macintosh\", {\n        //Properties\n        /**\n         * Gets glyphs for Macintosh or Symbol fonts (char - key, glyph - value).\n         */\n        get: function () {\n            if (this.macintoshDictionary === null || this.macintoshDictionary === undefined) {\n                this.macintoshDictionary = new Dictionary();\n            }\n            return this.macintoshDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TtfReader.prototype, \"microsoft\", {\n        /**\n         * Gets glyphs for Microsoft or Symbol fonts (char - key, glyph - value).\n         */\n        get: function () {\n            if (this.microsoftDictionary === null || this.microsoftDictionary === undefined) {\n                this.microsoftDictionary = new Dictionary();\n            }\n            return this.microsoftDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TtfReader.prototype, \"macintoshGlyphs\", {\n        /**\n         * Gets glyphs for Macintosh or Symbol fonts (glyph index - key, glyph - value).\n         */\n        get: function () {\n            if (this.internalMacintoshGlyphs === null || this.internalMacintoshGlyphs === undefined) {\n                this.internalMacintoshGlyphs = new Dictionary();\n            }\n            return this.internalMacintoshGlyphs;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TtfReader.prototype, \"microsoftGlyphs\", {\n        /**\n         * Gets glyphs for Microsoft Unicode fonts (glyph index - key, glyph - value).\n         */\n        get: function () {\n            if (this.internalMicrosoftGlyphs === null || this.internalMicrosoftGlyphs === undefined) {\n                this.internalMicrosoftGlyphs = new Dictionary();\n            }\n            return this.internalMicrosoftGlyphs;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    TtfReader.prototype.initialize = function () {\n        if (this.metrics === undefined) {\n            this.metrics = new TtfMetrics();\n        }\n        this.readFontDictionary();\n        var nameTable = this.readNameTable();\n        var headTable = this.readHeadTable();\n        this.initializeFontName(nameTable);\n        this.metrics.macStyle = headTable.macStyle;\n    };\n    TtfReader.prototype.readFontDictionary = function () {\n        this.offset = 0;\n        var version = this.checkPreambula();\n        //this.offset += 4;\n        var numTables = this.readInt16(this.offset);\n        var searchRange = this.readInt16(this.offset);\n        var entrySelector = this.readInt16(this.offset);\n        var rangeShift = this.readInt16(this.offset);\n        if (this.tableDirectory === undefined) {\n            this.tableDirectory = new Dictionary();\n        }\n        for (var i = 0; i < numTables; ++i) {\n            var table = new TtfTableInfo();\n            var tableKey = this.readString(this.int32Size);\n            table.checksum = this.readInt32(this.offset);\n            table.offset = this.readInt32(this.offset);\n            table.length = this.readInt32(this.offset);\n            this.tableDirectory.setValue(tableKey, table);\n        }\n        this.lowestPosition = this.offset;\n        if (!this.isTtcFont) {\n            this.fixOffsets();\n        }\n    };\n    TtfReader.prototype.fixOffsets = function () {\n        var minOffset = Number.MAX_VALUE;\n        // Search for a smallest offset and compare it with the lowest position found.\n        var tableKeys = this.tableDirectory.keys();\n        for (var i = 0; i < tableKeys.length; i++) {\n            var value = this.tableDirectory.getValue(tableKeys[i]);\n            var offset = value.offset;\n            if (minOffset > offset) {\n                minOffset = offset;\n                if (minOffset <= this.lowestPosition) {\n                    break;\n                }\n            }\n        }\n        var shift = minOffset - this.lowestPosition;\n        if (shift !== 0) {\n            var table = new Dictionary();\n            for (var i = 0; i < tableKeys.length; i++) {\n                var value = this.tableDirectory.getValue(tableKeys[i]);\n                value.offset -= shift;\n                table.setValue(tableKeys[i], value);\n            }\n            this.tableDirectory = table;\n        }\n    };\n    TtfReader.prototype.checkPreambula = function () {\n        var version = this.readInt32(this.offset);\n        this.isMacTtf = (version === 0x74727565) ? true : false;\n        if (version !== 0x10000 && version !== 0x74727565 && version !== 0x4f54544f) {\n            this.isTtcFont = true;\n            this.offset = 0;\n            var fontTag = this.readString(4);\n            if (fontTag !== 'ttcf') {\n                throw new Error('Can not read TTF font data');\n            }\n            //skip 4\n            this.offset += 4;\n            var ttcIdentificationNumber = this.readInt32(this.offset);\n            if (ttcIdentificationNumber < 0) {\n                throw new Error('Can not read TTF font data');\n            }\n            this.offset = this.readInt32(this.offset);\n            version = this.readInt32(this.offset);\n        }\n        return version;\n    };\n    TtfReader.prototype.readNameTable = function () {\n        var tableInfo = this.getTable('name');\n        this.offset = tableInfo.offset;\n        var table = new TtfNameTable();\n        table.formatSelector = this.readUInt16(this.offset);\n        table.recordsCount = this.readUInt16(this.offset);\n        table.offset = this.readUInt16(this.offset);\n        table.nameRecords = [];\n        var recordSize = 12;\n        var position = this.offset;\n        for (var i = 0; i < table.recordsCount; i++) {\n            this.offset = position;\n            var record = new TtfNameRecord();\n            record.platformID = this.readUInt16(this.offset);\n            record.encodingID = this.readUInt16(this.offset);\n            record.languageID = this.readUInt16(this.offset);\n            record.nameID = this.readUInt16(this.offset);\n            record.length = this.readUInt16(this.offset);\n            record.offset = this.readUInt16(this.offset);\n            this.offset = tableInfo.offset + table.offset + record.offset;\n            var unicode = (record.platformID === 0 || record.platformID === 3);\n            record.name = this.readString(record.length, unicode);\n            table.nameRecords[i] = record;\n            position += recordSize;\n        }\n        return table;\n    };\n    TtfReader.prototype.readHeadTable = function () {\n        var tableInfo = this.getTable('head');\n        this.offset = tableInfo.offset;\n        var table = new TtfHeadTable();\n        table.version = this.readFixed(this.offset);\n        table.fontRevision = this.readFixed(this.offset);\n        table.checkSumAdjustment = this.readUInt32(this.offset);\n        table.magicNumber = this.readUInt32(this.offset);\n        table.flags = this.readUInt16(this.offset);\n        table.unitsPerEm = this.readUInt16(this.offset);\n        table.created = this.readInt64(this.offset);\n        table.modified = this.readInt64(this.offset);\n        table.xMin = this.readInt16(this.offset);\n        table.yMin = this.readInt16(this.offset);\n        table.xMax = this.readInt16(this.offset);\n        table.yMax = this.readInt16(this.offset);\n        table.macStyle = this.readUInt16(this.offset);\n        table.lowestReadableSize = this.readUInt16(this.offset);\n        table.fontDirectionHint = this.readInt16(this.offset);\n        table.indexToLocalFormat = this.readInt16(this.offset);\n        table.glyphDataFormat = this.readInt16(this.offset);\n        return table;\n    };\n    TtfReader.prototype.readHorizontalHeaderTable = function () {\n        var tableInfo = this.getTable('hhea');\n        this.offset = tableInfo.offset;\n        var table = new TtfHorizontalHeaderTable();\n        table.version = this.readFixed(this.offset);\n        table.ascender = this.readInt16(this.offset);\n        table.descender = this.readInt16(this.offset);\n        table.lineGap = this.readInt16(this.offset);\n        table.advanceWidthMax = this.readUInt16(this.offset);\n        table.minLeftSideBearing = this.readInt16(this.offset);\n        table.minRightSideBearing = this.readInt16(this.offset);\n        table.xMaxExtent = this.readInt16(this.offset);\n        table.caretSlopeRise = this.readInt16(this.offset);\n        table.caretSlopeRun = this.readInt16(this.offset);\n        //skip 2 * 5\n        this.offset += 10;\n        table.metricDataFormat = this.readInt16(this.offset);\n        table.numberOfHMetrics = this.readUInt16(this.offset);\n        return table;\n    };\n    TtfReader.prototype.readOS2Table = function () {\n        var tableInfo = this.getTable('OS/2');\n        this.offset = tableInfo.offset;\n        var table = new TtfOS2Table();\n        table.version = this.readUInt16(this.offset);\n        table.xAvgCharWidth = this.readInt16(this.offset);\n        table.usWeightClass = this.readUInt16(this.offset);\n        table.usWidthClass = this.readUInt16(this.offset);\n        table.fsType = this.readInt16(this.offset);\n        table.ySubscriptXSize = this.readInt16(this.offset);\n        table.ySubscriptYSize = this.readInt16(this.offset);\n        table.ySubscriptXOffset = this.readInt16(this.offset);\n        table.ySubscriptYOffset = this.readInt16(this.offset);\n        table.ySuperscriptXSize = this.readInt16(this.offset);\n        table.ySuperscriptYSize = this.readInt16(this.offset);\n        table.ySuperscriptXOffset = this.readInt16(this.offset);\n        table.ySuperscriptYOffset = this.readInt16(this.offset);\n        table.yStrikeoutSize = this.readInt16(this.offset);\n        table.yStrikeoutPosition = this.readInt16(this.offset);\n        table.sFamilyClass = this.readInt16(this.offset);\n        table.panose = this.readBytes(10);\n        table.ulUnicodeRange1 = this.readUInt32(this.offset);\n        table.ulUnicodeRange2 = this.readUInt32(this.offset);\n        table.ulUnicodeRange3 = this.readUInt32(this.offset);\n        table.ulUnicodeRange4 = this.readUInt32(this.offset);\n        table.vendorIdentifier = this.readBytes(4);\n        table.fsSelection = this.readUInt16(this.offset);\n        table.usFirstCharIndex = this.readUInt16(this.offset);\n        table.usLastCharIndex = this.readUInt16(this.offset);\n        table.sTypoAscender = this.readInt16(this.offset);\n        table.sTypoDescender = this.readInt16(this.offset);\n        table.sTypoLineGap = this.readInt16(this.offset);\n        table.usWinAscent = this.readUInt16(this.offset);\n        table.usWinDescent = this.readUInt16(this.offset);\n        table.ulCodePageRange1 = this.readUInt32(this.offset);\n        table.ulCodePageRange2 = this.readUInt32(this.offset);\n        if (table.version > 1) {\n            table.sxHeight = this.readInt16(this.offset);\n            table.sCapHeight = this.readInt16(this.offset);\n            table.usDefaultChar = this.readUInt16(this.offset);\n            table.usBreakChar = this.readUInt16(this.offset);\n            table.usMaxContext = this.readUInt16(this.offset);\n        }\n        else {\n            table.sxHeight = 0;\n            table.sCapHeight = 0;\n            table.usDefaultChar = 0;\n            table.usBreakChar = 0;\n            table.usMaxContext = 0;\n        }\n        return table;\n    };\n    TtfReader.prototype.readPostTable = function () {\n        var tableInfo = this.getTable('post');\n        this.offset = tableInfo.offset;\n        var table = new TtfPostTable();\n        table.formatType = this.readFixed(this.offset);\n        table.italicAngle = this.readFixed(this.offset);\n        table.underlinePosition = this.readInt16(this.offset);\n        table.underlineThickness = this.readInt16(this.offset);\n        table.isFixedPitch = this.readUInt32(this.offset);\n        table.minType42 = this.readUInt32(this.offset);\n        table.maxType42 = this.readUInt32(this.offset);\n        table.minType1 = this.readUInt32(this.offset);\n        table.maxType1 = this.readUInt32(this.offset);\n        return table;\n    };\n    /**\n     * Reads Width of the glyphs.\n     */\n    TtfReader.prototype.readWidthTable = function (glyphCount, unitsPerEm) {\n        var tableInfo = this.getTable('hmtx');\n        this.offset = tableInfo.offset;\n        var width = [];\n        for (var i = 0; i < glyphCount; i++) {\n            var glyph = new TtfLongHorMetric();\n            glyph.advanceWidth = this.readUInt16(this.offset);\n            glyph.lsb = this.readInt16(this.offset);\n            var glyphWidth = glyph.advanceWidth * 1000 / unitsPerEm;\n            width.push(Math.floor(glyphWidth));\n        }\n        return width;\n    };\n    /**\n     * Reads the cmap table.\n     */\n    TtfReader.prototype.readCmapTable = function () {\n        var tableInfo = this.getTable('cmap');\n        this.offset = tableInfo.offset;\n        var table = new TtfCmapTable();\n        table.version = this.readUInt16(this.offset);\n        table.tablesCount = this.readUInt16(this.offset);\n        var position = this.offset;\n        var subTables = [];\n        for (var i = 0; i < table.tablesCount; i++) {\n            this.offset = position;\n            var subTable = new TtfCmapSubTable();\n            subTable.platformID = this.readUInt16(this.offset);\n            subTable.encodingID = this.readUInt16(this.offset);\n            subTable.offset = this.readUInt32(this.offset);\n            position = this.offset;\n            this.readCmapSubTable(subTable);\n            subTables[i] = subTable;\n        }\n        return subTables;\n    };\n    /**\n     * Reads the cmap sub table.\n     */\n    TtfReader.prototype.readCmapSubTable = function (subTable) {\n        var tableInfo = this.getTable('cmap');\n        this.offset = tableInfo.offset + subTable.offset;\n        var format = this.readUInt16(this.offset);\n        var encoding = this.getCmapEncoding(subTable.platformID, subTable.encodingID);\n        var platform = (encoding === TtfCmapEncoding.Macintosh) ? TtfPlatformID.Macintosh : TtfPlatformID.Microsoft;\n        if (encoding !== TtfCmapEncoding.Unknown) {\n            switch (format) {\n                case TtfCmapFormat.Apple:\n                    this.readAppleCmapTable(subTable, encoding);\n                    break;\n                case TtfCmapFormat.Microsoft:\n                    this.readMicrosoftCmapTable(subTable, encoding);\n                    break;\n                case TtfCmapFormat.Trimmed:\n                    this.readTrimmedCmapTable(subTable, encoding);\n                    break;\n            }\n        }\n    };\n    /**\n     * Reads Symbol cmap table.\n     */\n    TtfReader.prototype.readAppleCmapTable = function (subTable, encoding) {\n        var tableInfo = this.getTable('cmap');\n        this.offset = tableInfo.offset + subTable.offset;\n        var table = new TtfAppleCmapSubTable();\n        table.format = this.readUInt16(this.offset);\n        table.length = this.readUInt16(this.offset);\n        table.version = this.readUInt16(this.offset);\n        if (this.maxMacIndex === null || this.maxMacIndex === undefined) {\n            this.maxMacIndex = 0;\n        }\n        for (var i = 0; i < 256; ++i) {\n            var glyphInfo = new TtfGlyphInfo();\n            glyphInfo.index = this.readByte(this.offset);\n            glyphInfo.width = this.getWidth(glyphInfo.index);\n            glyphInfo.charCode = i;\n            this.macintosh.setValue(i, glyphInfo);\n            this.addGlyph(glyphInfo, encoding);\n            // NOTE: this code fixes char codes that extends 0x100. However, it might corrupt something.\n            this.maxMacIndex = Math.max(i, this.maxMacIndex);\n        }\n    };\n    /**\n     * Reads Symbol cmap table.\n     */\n    TtfReader.prototype.readMicrosoftCmapTable = function (subTable, encoding) {\n        var tableInfo = this.getTable('cmap');\n        this.offset = tableInfo.offset + subTable.offset;\n        var collection = (encoding === TtfCmapEncoding.Unicode) ? this.microsoft : this.macintosh;\n        var table = new TtfMicrosoftCmapSubTable();\n        table.format = this.readUInt16(this.offset);\n        table.length = this.readUInt16(this.offset);\n        table.version = this.readUInt16(this.offset);\n        table.segCountX2 = this.readUInt16(this.offset);\n        table.searchRange = this.readUInt16(this.offset);\n        table.entrySelector = this.readUInt16(this.offset);\n        table.rangeShift = this.readUInt16(this.offset);\n        var segCount = table.segCountX2 / 2;\n        table.endCount = this.readUshortArray(segCount);\n        table.reservedPad = this.readUInt16(this.offset);\n        table.startCount = this.readUshortArray(segCount);\n        table.idDelta = this.readUshortArray(segCount);\n        table.idRangeOffset = this.readUshortArray(segCount);\n        var length = (table.length / 2 - 8) - (segCount * 4);\n        table.glyphID = this.readUshortArray(length);\n        // Process glyphIdArray array.\n        var codeOffset = 0;\n        var index = 0;\n        for (var j = 0; j < segCount; j++) {\n            for (var k = table.startCount[j]; k <= table.endCount[j] && k !== 65535; k++) {\n                if (table.idRangeOffset[j] === 0) {\n                    codeOffset = (k + table.idDelta[j]) & 65535;\n                }\n                else {\n                    index = j + table.idRangeOffset[j] / 2 - segCount + k - table.startCount[j];\n                    if (index >= table.glyphID.length) {\n                        continue;\n                    }\n                    codeOffset = (table.glyphID[index] + table.idDelta[j]) & 65535;\n                }\n                var glyph = new TtfGlyphInfo();\n                glyph.index = codeOffset;\n                glyph.width = this.getWidth(glyph.index);\n                var id = (encoding === TtfCmapEncoding.Symbol) ? ((k & 0xff00) === 0xf000 ? k & 0xff : k) : k;\n                glyph.charCode = id;\n                collection.setValue(id, glyph);\n                this.addGlyph(glyph, encoding);\n            }\n        }\n    };\n    /**\n     * Reads Trimed cmap table.\n     */\n    TtfReader.prototype.readTrimmedCmapTable = function (subTable, encoding) {\n        var tableInfo = this.getTable('cmap');\n        this.offset = tableInfo.offset + subTable.offset;\n        var table = new TtfTrimmedCmapSubTable();\n        table.format = this.readUInt16(this.offset);\n        table.length = this.readUInt16(this.offset);\n        table.version = this.readUInt16(this.offset);\n        table.firstCode = this.readUInt16(this.offset);\n        table.entryCount = this.readUInt16(this.offset);\n        for (var i = 0; i < table.entryCount; ++i) {\n            var glyphInfo = new TtfGlyphInfo();\n            glyphInfo.index = this.readUInt16(this.offset);\n            glyphInfo.width = this.getWidth(glyphInfo.index);\n            glyphInfo.charCode = i + table.firstCode;\n            this.macintosh.setValue(i, glyphInfo);\n            this.addGlyph(glyphInfo, encoding);\n            // NOTE: this code fixes char codes that extends 0x100. However, it might corrupt something.\n            this.maxMacIndex = Math.max(i, this.maxMacIndex);\n        }\n    };\n    TtfReader.prototype.initializeFontName = function (nameTable) {\n        for (var i = 0; i < nameTable.recordsCount; i++) {\n            var record = nameTable.nameRecords[i];\n            if (record.nameID === 1) {\n                //font family\n                this.metrics.fontFamily = record.name;\n            }\n            else if (record.nameID === 6) {\n                //post script name\n                this.metrics.postScriptName = record.name;\n            }\n            /* tslint:disable */\n            if (this.metrics.fontFamily !== null && this.metrics.fontFamily !== undefined && this.metrics.postScriptName !== null && this.metrics.postScriptName !== undefined) {\n                break;\n            }\n            /* tslint:disable */\n        }\n    };\n    TtfReader.prototype.getTable = function (name) {\n        // if (name === null) {\n        //     throw new Error('Argument Null Exception : name');\n        // }\n        var table = new TtfTableInfo();\n        var obj;\n        if (this.tableDirectory.containsKey(name)) {\n            obj = this.tableDirectory.getValue(name);\n        }\n        if (obj !== null && obj !== undefined) {\n            table = obj;\n        }\n        return table;\n    };\n    /**\n     * Returns width of the glyph.\n     */\n    TtfReader.prototype.getWidth = function (glyphCode) {\n        glyphCode = (glyphCode < this.width.length) ? glyphCode : this.width.length - 1;\n        return this.width[glyphCode];\n    };\n    /**\n     * Gets CMAP encoding based on platform ID and encoding ID.\n     */\n    /* tslint:disable */\n    TtfReader.prototype.getCmapEncoding = function (platformID, encodingID) {\n        var format = TtfCmapEncoding.Unknown;\n        if (platformID == TtfPlatformID.Microsoft && encodingID == TtfMicrosoftEncodingID.Undefined) {\n            // When building a symbol font for Windows,\n            // the platform ID should be 3 and the encoding ID should be 0.\n            format = TtfCmapEncoding.Symbol;\n        }\n        else if (platformID == TtfPlatformID.Microsoft && encodingID == TtfMicrosoftEncodingID.Unicode) {\n            // When building a Unicode font for Windows,\n            // the platform ID should be 3 and the encoding ID should be 1.\n            format = TtfCmapEncoding.Unicode;\n        }\n        else if (platformID == TtfPlatformID.Macintosh && encodingID == TtfMacintoshEncodingID.Roman) {\n            // When building a font that will be used on the Macintosh,\n            // the platform ID should be 1 and the encoding ID should be 0.\n            format = TtfCmapEncoding.Macintosh;\n        }\n        return format;\n    };\n    /* tslint:enable */\n    /**\n     * Adds glyph to the collection.\n     */\n    TtfReader.prototype.addGlyph = function (glyph, encoding) {\n        var collection = null;\n        switch (encoding) {\n            case TtfCmapEncoding.Unicode:\n                collection = this.microsoftGlyphs;\n                break;\n            case TtfCmapEncoding.Macintosh:\n            case TtfCmapEncoding.Symbol:\n                collection = this.macintoshGlyphs;\n                break;\n        }\n        collection.setValue(glyph.index, glyph);\n    };\n    /**\n     * Initializes metrics.\n     */\n    /* tslint:disable */\n    TtfReader.prototype.initializeMetrics = function (nameTable, headTable, horizontalHeadTable, os2Table, postTable, cmapTables) {\n        /* tslint:enable */\n        // if (cmapTables === null) {\n        //     throw new Error('ArgumentNullException : cmapTables');\n        // }\n        this.initializeFontName(nameTable);\n        // Get font encoding.\n        var bSymbol = false;\n        for (var i = 0; i < cmapTables.length; i++) {\n            var subTable = cmapTables[i];\n            var encoding = this.getCmapEncoding(subTable.platformID, subTable.encodingID);\n            if (encoding === TtfCmapEncoding.Symbol) {\n                bSymbol = true;\n                break;\n            }\n        }\n        this.metrics.isSymbol = bSymbol;\n        this.metrics.macStyle = headTable.macStyle;\n        this.metrics.isFixedPitch = (postTable.isFixedPitch !== 0);\n        this.metrics.italicAngle = postTable.italicAngle;\n        var factor = 1000 / headTable.unitsPerEm;\n        this.metrics.winAscent = os2Table.sTypoAscender * factor;\n        this.metrics.macAscent = horizontalHeadTable.ascender * factor;\n        //m_metrics.MacAscent = os2Table.UsWinAscent * factor;\n        // NOTE: This is stange workaround. The value is good if os2Table.SCapHeight != 0, otherwise it should be properly computed.\n        this.metrics.capHeight = (os2Table.sCapHeight !== 0) ? os2Table.sCapHeight : 0.7 * headTable.unitsPerEm * factor;\n        this.metrics.winDescent = os2Table.sTypoDescender * factor;\n        this.metrics.macDescent = horizontalHeadTable.descender * factor;\n        //m_metrics.MacDescent = -os2Table.UsWinDescent * factor;\n        this.metrics.leading = (os2Table.sTypoAscender - os2Table.sTypoDescender + os2Table.sTypoLineGap) * factor;\n        this.metrics.lineGap = Math.ceil(horizontalHeadTable.lineGap * factor);\n        var left = headTable.xMin * factor;\n        var top = Math.ceil(this.metrics.macAscent + this.metrics.lineGap);\n        var right = headTable.xMax * factor;\n        var bottom = this.metrics.macDescent;\n        this.metrics.fontBox = new Rectangle(left, top, right, bottom);\n        // NOTE: Strange!\n        this.metrics.stemV = 80;\n        this.metrics.widthTable = this.updateWidth();\n        this.metrics.contains = this.tableDirectory.containsKey('CFF');\n        this.metrics.subScriptSizeFactor = headTable.unitsPerEm / os2Table.ySubscriptYSize;\n        this.metrics.superscriptSizeFactor = headTable.unitsPerEm / os2Table.ySuperscriptYSize;\n    };\n    /**\n     * Updates chars structure which is used in the case of ansi encoding (256 bytes).\n     */\n    TtfReader.prototype.updateWidth = function () {\n        var count = 256;\n        var bytes = [];\n        if (this.metrics.isSymbol) {\n            for (var i = 0; i < count; i++) {\n                var glyphInfo = this.getGlyph(String.fromCharCode(i));\n                bytes[i] = (glyphInfo.empty) ? 0 : glyphInfo.width;\n            }\n        }\n        else {\n            var byteToProcess = [];\n            var unknown = '?';\n            var space = String.fromCharCode(32);\n            for (var i = 0; i < count; i++) {\n                byteToProcess[0] = i;\n                var text = this.getString(byteToProcess, 0, byteToProcess.length);\n                var ch = (text.length > 0) ? text[0] : unknown;\n                var glyphInfo = this.getGlyph(ch);\n                if (!glyphInfo.empty) {\n                    bytes[i] = glyphInfo.width;\n                }\n                else {\n                    glyphInfo = this.getGlyph(space);\n                    bytes[i] = (glyphInfo.empty) ? 0 : glyphInfo.width;\n                }\n            }\n        }\n        return bytes;\n    };\n    /**\n     * Returns default glyph.\n     */\n    TtfReader.prototype.getDefaultGlyph = function () {\n        var glyph = this.getGlyph(StringTokenizer.whiteSpace);\n        return glyph;\n    };\n    /**\n     * Reads unicode string from byte array.\n     */\n    TtfReader.prototype.getString = function (byteToProcess, start, length) {\n        var result = '';\n        for (var index = 0; index < length; index++) {\n            result += String.fromCharCode(byteToProcess[index + start]);\n        }\n        return result;\n    };\n    /**\n     * Reads loca table.\n     */\n    TtfReader.prototype.readLocaTable = function (bShort) {\n        var tableInfo = this.getTable('loca');\n        this.offset = tableInfo.offset;\n        var table = new TtfLocaTable();\n        var buffer = null;\n        if (bShort) {\n            var len = tableInfo.length / 2;\n            buffer = [];\n            for (var i = 0; i < len; i++) {\n                buffer[i] = this.readUInt16(this.offset) * 2;\n            }\n        }\n        else {\n            var len = tableInfo.length / 4;\n            buffer = [];\n            for (var i = 0; i < len; i++) {\n                buffer[i] = this.readUInt32(this.offset);\n            }\n        }\n        table.offsets = buffer;\n        return table;\n    };\n    /**\n     * Updates hash table of used glyphs.\n     */\n    TtfReader.prototype.updateGlyphChars = function (glyphChars, locaTable) {\n        // if (glyphChars === null) {\n        //     throw new Error('Argument Null Exception : glyphChars');\n        // }\n        // Add zero key.\n        if (!glyphChars.containsKey(0)) {\n            glyphChars.setValue(0, 0);\n        }\n        var clone = new Dictionary();\n        var glyphCharKeys = glyphChars.keys();\n        for (var i = 0; i < glyphCharKeys.length; i++) {\n            clone.setValue(glyphCharKeys[i], glyphChars.getValue(glyphCharKeys[i]));\n        }\n        for (var i = 0; i < glyphCharKeys.length; i++) {\n            var nextKey = glyphCharKeys[i];\n            this.processCompositeGlyph(glyphChars, nextKey, locaTable);\n        }\n    };\n    /**\n     * Checks if glyph is composite or not.\n     */\n    TtfReader.prototype.processCompositeGlyph = function (glyphChars, glyph, locaTable) {\n        // if (glyphChars === null) {\n        //     throw new Error('Argument Null Exception : glyphChars');\n        // }\n        // Is in range.\n        if (glyph < locaTable.offsets.length - 1) {\n            var glyphOffset = locaTable.offsets[glyph];\n            if (glyphOffset !== locaTable.offsets[glyph + 1]) {\n                var tableInfo = this.getTable('glyf');\n                this.offset = tableInfo.offset + glyphOffset;\n                var glyphHeader = new TtfGlyphHeader();\n                glyphHeader.numberOfContours = this.readInt16(this.offset);\n                glyphHeader.xMin = this.readInt16(this.offset);\n                glyphHeader.yMin = this.readInt16(this.offset);\n                glyphHeader.xMax = this.readInt16(this.offset);\n                glyphHeader.yMax = this.readInt16(this.offset);\n                // Glyph is composite.\n                if (glyphHeader.numberOfContours < 0) {\n                    var skipBytes = 0;\n                    var entry = true;\n                    while (entry) {\n                        var flags = this.readUInt16(this.offset);\n                        var glyphIndex = this.readUInt16(this.offset);\n                        if (!glyphChars.containsKey(glyphIndex)) {\n                            glyphChars.setValue(glyphIndex, 0);\n                        }\n                        if ((flags & TtfCompositeGlyphFlags.MoreComponents) === 0) {\n                            break;\n                        }\n                        skipBytes = ((flags & TtfCompositeGlyphFlags.Arg1And2AreWords) !== 0) ? 4 : 2;\n                        if ((flags & TtfCompositeGlyphFlags.WeHaveScale) !== 0) {\n                            skipBytes += 2;\n                        }\n                        else if ((flags & TtfCompositeGlyphFlags.WeHaveAnXyScale) !== 0) {\n                            skipBytes += 4;\n                        }\n                        else if ((flags & TtfCompositeGlyphFlags.WeHaveTwoByTwo) !== 0) {\n                            skipBytes += 2 * 4;\n                        }\n                        this.offset += skipBytes;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Creates new glyph tables based on chars that are used for output.\n     */\n    /* tslint:disable */\n    TtfReader.prototype.generateGlyphTable = function (glyphChars, locaTable, newLocaTable, newGlyphTable) {\n        /* tslint:enable */\n        // if (glyphChars === null) {\n        //     throw new Error('Argument Null Exception : glyphChars');\n        // }\n        newLocaTable = [];\n        // Sorting used glyphs keys.\n        var activeGlyphs = glyphChars.keys();\n        activeGlyphs.sort(function (a, b) { return a - b; });\n        var glyphSize = 0;\n        for (var i = 0; i < activeGlyphs.length; i++) {\n            var glyphIndex = activeGlyphs[i];\n            if (locaTable.offsets.length > 0) {\n                glyphSize += locaTable.offsets[glyphIndex + 1] - locaTable.offsets[glyphIndex];\n            }\n        }\n        var glyphSizeAligned = this.align(glyphSize);\n        newGlyphTable = [];\n        for (var i = 0; i < glyphSizeAligned; i++) {\n            newGlyphTable.push(0);\n        }\n        var nextGlyphOffset = 0;\n        var nextGlyphIndex = 0;\n        var table = this.getTable('glyf');\n        // Creating NewLocaTable - that would hold offsets for filtered glyphs.\n        for (var i = 0; i < locaTable.offsets.length; i++) {\n            newLocaTable.push(nextGlyphOffset);\n            if (nextGlyphIndex < activeGlyphs.length && activeGlyphs[nextGlyphIndex] === i) {\n                ++nextGlyphIndex;\n                newLocaTable[i] = nextGlyphOffset;\n                var oldGlyphOffset = locaTable.offsets[i];\n                var oldNextGlyphOffset = locaTable.offsets[i + 1] - oldGlyphOffset;\n                if (oldNextGlyphOffset > 0) {\n                    this.offset = table.offset + oldGlyphOffset;\n                    var result = this.read(newGlyphTable, nextGlyphOffset, oldNextGlyphOffset);\n                    newGlyphTable = result.buffer;\n                    nextGlyphOffset += oldNextGlyphOffset;\n                }\n            }\n        }\n        return { glyphTableSize: glyphSize, newLocaTable: newLocaTable, newGlyphTable: newGlyphTable };\n    };\n    /**\n     * Updates new Loca table.\n     */\n    /* tslint:disable */\n    TtfReader.prototype.updateLocaTable = function (newLocaTable, bLocaIsShort, newLocaTableOut) {\n        /* tslint:enable */\n        if (newLocaTable === null) {\n            throw new Error('Argument Null Exception : newLocaTable');\n        }\n        var size = (bLocaIsShort) ? newLocaTable.length * 2 : newLocaTable.length * 4;\n        var count = this.align(size);\n        //BigEndianWiter\n        var writer = new BigEndianWriter(count);\n        for (var i = 0; i < newLocaTable.length; i++) {\n            var value = newLocaTable[i];\n            if (bLocaIsShort) {\n                value /= 2;\n                writer.writeShort(value);\n            }\n            else {\n                writer.writeInt(value);\n            }\n        }\n        return { newLocaUpdated: writer.data, newLocaSize: size };\n    };\n    /**\n     * Aligns number to be divisible on 4.\n     */\n    TtfReader.prototype.align = function (value) {\n        return (value + 3) & (~3);\n    };\n    /**\n     * Returns font program data.\n     */\n    /* tslint:disable */\n    TtfReader.prototype.getFontProgram = function (newLocaTableOut, newGlyphTable, glyphTableSize, locaTableSize) {\n        /* tslint:enable */\n        if (newLocaTableOut === null) {\n            throw new Error('Argument Null Exception : newLocaTableOut');\n        }\n        if (newGlyphTable === null) {\n            throw new Error('Argument Null Exception : newGlyphTable');\n        }\n        var tableNames = this.tableNames;\n        var result = this.getFontProgramLength(newLocaTableOut, newGlyphTable, 0);\n        var fontProgramLength = result.fontProgramLength;\n        var numTables = result.numTables;\n        var writer = new BigEndianWriter(fontProgramLength);\n        writer.writeInt(0x10000);\n        writer.writeShort(numTables);\n        var entrySelector = this.entrySelectors[numTables];\n        writer.writeShort((1 << (entrySelector & 31)) * 16);\n        writer.writeShort(entrySelector);\n        writer.writeShort((numTables - (1 << (entrySelector & 31))) * 16);\n        // Writing to destination buffer - checksums && sizes of used tables.\n        this.writeCheckSums(writer, numTables, newLocaTableOut, newGlyphTable, glyphTableSize, locaTableSize);\n        // // Writing to destination buffer - used glyphs.\n        this.writeGlyphs(writer, newLocaTableOut, newGlyphTable);\n        return writer.data;\n    };\n    /* tslint:disable */\n    TtfReader.prototype.getFontProgramLength = function (newLocaTableOut, newGlyphTable, numTables) {\n        /* tslint:enable */\n        if (newLocaTableOut === null) {\n            throw new Error('Argument Null Exception : newLocaTableOut');\n        }\n        if (newGlyphTable === null) {\n            throw new Error('Argument Null Exception : newGlyphTable');\n        }\n        // glyf and loca are used by default;\n        numTables = 2;\n        var tableNames = this.tableNames;\n        var fontProgramLength = 0;\n        for (var i = 0; i < tableNames.length; i++) {\n            var tableName = tableNames[i];\n            if (tableName !== 'glyf' && tableName !== 'loca') {\n                var table = this.getTable(tableName);\n                if (!table.empty) {\n                    ++numTables;\n                    fontProgramLength += this.align(table.length);\n                }\n            }\n        }\n        fontProgramLength += newLocaTableOut.length;\n        fontProgramLength += newGlyphTable.length;\n        var usedTablesSize = numTables * 16 + (3 * 4);\n        fontProgramLength += usedTablesSize;\n        return { fontProgramLength: fontProgramLength, numTables: numTables };\n    };\n    /**\n     * Writing to destination buffer - checksums and sizes of used tables.\n     */\n    /* tslint:disable */\n    TtfReader.prototype.writeCheckSums = function (writer, numTables, newLocaTableOut, newGlyphTable, glyphTableSize, locaTableSize) {\n        /* tslint:enable */\n        if (writer === null) {\n            throw new Error('Argument Null Exception : writer');\n        }\n        if (newLocaTableOut === null) {\n            throw new Error('Argument Null Exception : newLocaTableOut');\n        }\n        if (newGlyphTable === null) {\n            throw new Error('Argument Null Exception : newGlyphTable');\n        }\n        var tableNames = this.tableNames;\n        var usedTablesSize = numTables * 16 + (3 * 4);\n        var nextTableSize = 0;\n        for (var i = 0; i < tableNames.length; i++) {\n            var tableName = tableNames[i];\n            var tableInfo = this.getTable(tableName);\n            if (tableInfo.empty) {\n                continue;\n            }\n            writer.writeString(tableName);\n            if (tableName === 'glyf') {\n                var checksum = this.calculateCheckSum(newGlyphTable);\n                writer.writeInt(checksum);\n                nextTableSize = glyphTableSize;\n            }\n            else if (tableName === 'loca') {\n                var checksum = this.calculateCheckSum(newLocaTableOut);\n                writer.writeInt(checksum);\n                nextTableSize = locaTableSize;\n            }\n            else {\n                writer.writeInt(tableInfo.checksum);\n                nextTableSize = tableInfo.length;\n            }\n            writer.writeUInt(usedTablesSize);\n            writer.writeUInt(nextTableSize);\n            usedTablesSize += this.align(nextTableSize);\n        }\n    };\n    /**\n     * Gets checksum from source buffer.\n     */\n    TtfReader.prototype.calculateCheckSum = function (bytes) {\n        if (bytes === null) {\n            throw new Error('Argument Null Exception : bytes');\n        }\n        var pos = 0;\n        var byte1 = 0;\n        var byte2 = 0;\n        var byte3 = 0;\n        var byte4 = 0;\n        for (var i = 0; i < (bytes.length + 1) / 4; i++) {\n            byte4 += (bytes[pos++] & 255);\n            byte3 += (bytes[pos++] & 255);\n            byte2 += (bytes[pos++] & 255);\n            byte1 += (bytes[pos++] & 255);\n        }\n        var result = byte1;\n        result += (byte2 << 8);\n        result += (byte3 << 16);\n        result += (byte4 << 24);\n        return result;\n    };\n    /**\n     * Writing to destination buffer - used glyphs.\n     */\n    TtfReader.prototype.writeGlyphs = function (writer, newLocaTable, newGlyphTable) {\n        if (writer === null) {\n            throw new Error('Argument Null Exception : writer');\n        }\n        if (newLocaTable === null) {\n            throw new Error('Argument Null Exception : newLocaTableOut');\n        }\n        if (newGlyphTable === null) {\n            throw new Error('Argument Null Exception : newGlyphTable');\n        }\n        var tableNames = this.tableNames;\n        for (var i = 0; i < tableNames.length; i++) {\n            var tableName = tableNames[i];\n            var tableInfo = this.getTable(tableName);\n            if (tableInfo.empty) {\n                continue;\n            }\n            if (tableName === 'glyf') {\n                writer.writeBytes(newGlyphTable);\n            }\n            else if (tableName === 'loca') {\n                writer.writeBytes(newLocaTable);\n            }\n            else {\n                var count = this.align(tableInfo.length);\n                var buff = [];\n                for (var i_1 = 0; i_1 < count; i_1++) {\n                    buff.push(0);\n                }\n                this.offset = tableInfo.offset;\n                var result = this.read(buff, 0, tableInfo.length);\n                writer.writeBytes(result.buffer);\n            }\n        }\n    };\n    //public methods\n    /**\n     * Sets position value of font data.\n     */\n    TtfReader.prototype.setOffset = function (offset) {\n        this.offset = offset;\n    };\n    /**\n     * Creates font Internals\n     * @private\n     */\n    TtfReader.prototype.createInternals = function () {\n        this.metrics = new TtfMetrics();\n        var nameTable = this.readNameTable();\n        var headTable = this.readHeadTable();\n        this.bIsLocaShort = (headTable.indexToLocalFormat === 0);\n        var horizontalHeadTable = this.readHorizontalHeaderTable();\n        var os2Table = this.readOS2Table();\n        var postTable = this.readPostTable();\n        this.width = this.readWidthTable(horizontalHeadTable.numberOfHMetrics, headTable.unitsPerEm);\n        var subTables = this.readCmapTable();\n        this.initializeMetrics(nameTable, headTable, horizontalHeadTable, os2Table, postTable, subTables);\n    };\n    TtfReader.prototype.getGlyph = function (charCode) {\n        if (typeof charCode === 'number') {\n            var obj1 = null;\n            if (!this.metrics.isSymbol && this.microsoftGlyphs != null) {\n                if (this.microsoftGlyphs.containsKey(charCode)) {\n                    obj1 = this.microsoftGlyphs.getValue(charCode);\n                }\n            }\n            else if (this.metrics.isSymbol && this.macintoshGlyphs != null) {\n                if (this.macintoshGlyphs.containsKey(charCode)) {\n                    obj1 = this.macintoshGlyphs.getValue(charCode);\n                }\n            }\n            var glyph = (obj1 != null) ? obj1 : this.getDefaultGlyph();\n            return glyph;\n        }\n        else {\n            var obj = null;\n            var code = charCode.charCodeAt(0);\n            if (!this.metrics.isSymbol && this.microsoft !== null) {\n                if (this.microsoft.containsKey(code)) {\n                    obj = this.microsoft.getValue(code);\n                    if (code !== StringTokenizer.whiteSpace.charCodeAt(0)) {\n                        this.isFontPresent = true;\n                    }\n                }\n                else if (code !== StringTokenizer.whiteSpace.charCodeAt(0)) {\n                    this.isFontPresent = false;\n                }\n            }\n            else if (this.metrics.isSymbol && this.macintosh !== null || this.isMacTTF) {\n                // NOTE: this code fixes char codes that extends 0x100. However, it might corrupt something.\n                if (this.maxMacIndex !== 0) {\n                    code %= this.maxMacIndex + 1;\n                }\n                else {\n                    code = ((code & 0xff00) === 0xf000 ? code & 0xff : code);\n                }\n                if (this.macintosh.containsKey(code)) {\n                    obj = this.macintosh.getValue(code);\n                    this.isFontPresent = true;\n                }\n            }\n            // Fix for StackOverFlow exception in XPS to PDF converter\n            if (charCode === StringTokenizer.whiteSpace && obj === null) {\n                obj = new TtfGlyphInfo();\n            }\n            var glyph = (obj !== null) ? obj : this.getDefaultGlyph();\n            return glyph;\n        }\n    };\n    /**\n     * Gets hash table with chars indexed by glyph index.\n     */\n    TtfReader.prototype.getGlyphChars = function (chars) {\n        if (chars === null || chars === undefined) {\n            throw new Error('Argument Null Exception : chars');\n        }\n        var dictionary = new Dictionary();\n        var charKeys = chars.keys();\n        for (var i = 0; i < charKeys.length; i++) {\n            var ch = charKeys[i];\n            var glyph = this.getGlyph(ch);\n            if (!glyph.empty) {\n                dictionary.setValue(glyph.index, ch.charCodeAt(0));\n            }\n        }\n        return dictionary;\n    };\n    /**\n     * Gets all glyphs.\n     */\n    TtfReader.prototype.getAllGlyphs = function () {\n        var allGlyphInfo = [];\n        var info = new TtfGlyphInfo();\n        var index = 0;\n        for (var i = 0; i < this.width.length; i++) {\n            var width = this.width[i];\n            info.index = index;\n            info.width = width;\n            allGlyphInfo.push(info);\n            index++;\n        }\n        return allGlyphInfo;\n    };\n    /**\n     * Reads a font's program.\n     * @private\n     */\n    TtfReader.prototype.readFontProgram = function (chars) {\n        var glyphChars = this.getGlyphChars(chars);\n        var locaTable = this.readLocaTable(this.bIsLocaShort);\n        if (glyphChars.size() < chars.size()) {\n            this.missedGlyphs = chars.size() - glyphChars.size();\n        }\n        this.updateGlyphChars(glyphChars, locaTable);\n        /* tslint:disable */\n        var result1 = this.generateGlyphTable(glyphChars, locaTable, null, null);\n        /* tslint:enable */\n        var glyphTableSize = result1.glyphTableSize;\n        var newLocaTable = result1.newLocaTable;\n        var newGlyphTable = result1.newGlyphTable;\n        var result2 = this.updateLocaTable(newLocaTable, this.bIsLocaShort, null);\n        var newLocaSize = result2.newLocaSize;\n        var newLocaUpdated = result2.newLocaUpdated;\n        var fontProgram = this.getFontProgram(newLocaUpdated, newGlyphTable, glyphTableSize, newLocaSize);\n        return fontProgram;\n    };\n    /**\n     * Reconverts string to be in proper format saved into PDF file.\n     */\n    TtfReader.prototype.convertString = function (text) {\n        if (text === null) {\n            throw new Error('Argument Null Exception : text');\n        }\n        var glyph = '';\n        var i = 0;\n        for (var k = 0; k < text.length; k++) {\n            var ch = text[k];\n            var glyphInfo = this.getGlyph(ch);\n            if (!glyphInfo.empty) {\n                glyph += String.fromCharCode(glyphInfo.index);\n                i++;\n            }\n        }\n        return glyph;\n    };\n    /**\n     * Gets char width.\n     */\n    TtfReader.prototype.getCharWidth = function (code) {\n        var glyphInfo = this.getGlyph(code);\n        glyphInfo = (!glyphInfo.empty) ? glyphInfo : this.getDefaultGlyph();\n        var codeWidth = (!glyphInfo.empty) ? glyphInfo.width : 0;\n        return codeWidth;\n    };\n    TtfReader.prototype.readString = function (length, isUnicode) {\n        if (isUnicode === undefined) {\n            return this.readString(length, false);\n        }\n        else {\n            //let buffer : number[] = this.readBytes(length);\n            var result = '';\n            if (isUnicode) {\n                for (var i = 0; i < length; i++) {\n                    if (i % 2 !== 0) {\n                        result += String.fromCharCode(this.fontData[this.offset]);\n                    }\n                    this.offset += 1;\n                }\n            }\n            else {\n                for (var i = 0; i < length; i++) {\n                    result += String.fromCharCode(this.fontData[this.offset]);\n                    this.offset += 1;\n                }\n            }\n            return result;\n        }\n    };\n    TtfReader.prototype.readFixed = function (offset) {\n        var integer = this.readInt16(offset);\n        var sFraction = this.readInt16(offset + 2);\n        var fraction = sFraction / 16384;\n        return integer + fraction;\n    };\n    TtfReader.prototype.readInt32 = function (offset) {\n        var i1 = this.fontData[offset + 3];\n        var i2 = this.fontData[offset + 2];\n        var i3 = this.fontData[offset + 1];\n        var i4 = this.fontData[offset];\n        this.offset += 4;\n        return i1 + (i2 << 8) + (i3 << 16) + (i4 << 24);\n    };\n    TtfReader.prototype.readUInt32 = function (offset) {\n        var i1 = this.fontData[offset + 3];\n        var i2 = this.fontData[offset + 2];\n        var i3 = this.fontData[offset + 1];\n        var i4 = this.fontData[offset];\n        this.offset += 4;\n        return (i1 | i2 << 8 | i3 << 16 | i4 << 24);\n    };\n    // private readInt16(offset : number) : number {\n    //     let result : number = (this.fontData[offset] << 8) + this.fontData[offset + 1];\n    //     this.offset += 2;\n    //     return result;\n    // }\n    TtfReader.prototype.readInt16 = function (offset) {\n        var result = (this.fontData[offset] << 8) + this.fontData[offset + 1];\n        result = result & (1 << 15) ? result - 0x10000 : result;\n        this.offset += 2;\n        return result;\n    };\n    TtfReader.prototype.readInt64 = function (offset) {\n        var low = this.readInt32(offset + 4);\n        var n = this.readInt32(offset) * 4294967296.0 + low;\n        if (low < 0) {\n            n += 4294967296;\n        }\n        return n;\n    };\n    TtfReader.prototype.readUInt16 = function (offset) {\n        var result = (this.fontData[offset] << 8) | this.fontData[offset + 1];\n        this.offset += 2;\n        return result;\n    };\n    /**\n     * Reads ushort array.\n     */\n    TtfReader.prototype.readUshortArray = function (length) {\n        var buffer = [];\n        for (var i = 0; i < length; i++) {\n            buffer[i] = this.readUInt16(this.offset);\n        }\n        return buffer;\n    };\n    TtfReader.prototype.readBytes = function (length) {\n        var result = [];\n        for (var i = 0; i < length; i++) {\n            result.push(this.fontData[this.offset]);\n            this.offset += 1;\n        }\n        return result;\n    };\n    TtfReader.prototype.readByte = function (offset) {\n        var result = this.fontData[offset];\n        this.offset += 1;\n        return result;\n    };\n    /**\n     * Reads bytes to array in BigEndian order.\n     * @private\n     */\n    TtfReader.prototype.read = function (buffer, index, count) {\n        if (buffer === null) {\n            throw new Error('Argument Null Exception : buffer');\n        }\n        var written = 0;\n        var read = 0;\n        do {\n            for (var i = 0; (i < count - written) && (this.offset + i < this.fontData.length); i++) {\n                buffer[index + i] = this.fontData[this.offset + i];\n            }\n            read = count - written;\n            this.offset += read;\n            written += read;\n        } while (written < count);\n        return { buffer: buffer, written: written };\n    };\n    return TtfReader;\n}());\nexport { TtfReader };\n", "var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfFont } from './pdf-font';\nimport { PdfSubSuperScript } from './enum';\nimport { PdfArray } from './../../primitives/pdf-array';\n/**\n * `Metrics` of the font.\n * @private\n */\nvar PdfFontMetrics = /** @class */ (function () {\n    function PdfFontMetrics() {\n        /**\n         * `Line gap`.\n         * @private\n         */\n        this.lineGap = 0;\n    }\n    //  Public methods\n    /**\n     * Returns `ascent` taking into consideration font`s size.\n     * @private\n     */\n    PdfFontMetrics.prototype.getAscent = function (format) {\n        var returnValue = this.ascent * PdfFont.charSizeMultiplier * this.getSize(format);\n        return returnValue;\n    };\n    /**\n     * Returns `descent` taking into consideration font`s size.\n     * @private\n     */\n    PdfFontMetrics.prototype.getDescent = function (format) {\n        var returnValue = this.descent * PdfFont.charSizeMultiplier * this.getSize(format);\n        return returnValue;\n    };\n    /**\n     * Returns `Line gap` taking into consideration font`s size.\n     * @private\n     */\n    PdfFontMetrics.prototype.getLineGap = function (format) {\n        var returnValue = this.lineGap * PdfFont.charSizeMultiplier * this.getSize(format);\n        return returnValue;\n    };\n    /**\n     * Returns `height` taking into consideration font`s size.\n     * @private\n     */\n    PdfFontMetrics.prototype.getHeight = function (format) {\n        var height;\n        var clearTypeFonts = ['cambria', 'candara', 'constantia', 'corbel', 'cariadings'];\n        var clearTypeFontCollection = [];\n        for (var index = 0; index < clearTypeFonts.length; index++) {\n            var font = clearTypeFonts[index];\n            clearTypeFontCollection.push(font);\n        }\n        if (this.getDescent(format) < 0) {\n            // if ((clearTypeFontCollection.indexOf(this.name.toLowerCase()) !== -1) && !this.isUnicodeFont) {\n            //     height = (this.GetAscent(format) - this.GetDescent(format) - this.GetLineGap(format));\n            // } else {\n            height = (this.getAscent(format) - this.getDescent(format) + this.getLineGap(format));\n            // }\n        }\n        else {\n            height = (this.getAscent(format) + this.getDescent(format) + this.getLineGap(format));\n        }\n        return height;\n    };\n    /**\n     * Calculates `size` of the font depending on the subscript/superscript value.\n     * @private\n     */\n    PdfFontMetrics.prototype.getSize = function (format) {\n        var size = this.size;\n        if (format != null) {\n            switch (format.subSuperScript) {\n                case PdfSubSuperScript.SubScript:\n                    size /= this.subScriptSizeFactor;\n                    break;\n                case PdfSubSuperScript.SuperScript:\n                    size /= this.superscriptSizeFactor;\n                    break;\n            }\n        }\n        return size;\n    };\n    /**\n     * `Clones` the metrics.\n     * @private\n     */\n    PdfFontMetrics.prototype.clone = function () {\n        var metrics = this;\n        metrics.widthTable = WidthTable.clone();\n        return metrics;\n    };\n    Object.defineProperty(PdfFontMetrics.prototype, \"widthTable\", {\n        //  Properies\n        /**\n         * Gets or sets the `width table`.\n         * @private\n         */\n        get: function () {\n            return this.internalWidthTable;\n        },\n        set: function (value) {\n            this.internalWidthTable = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfFontMetrics;\n}());\nexport { PdfFontMetrics };\nvar WidthTable = /** @class */ (function () {\n    function WidthTable() {\n    }\n    /**\n     * Static `clones` this instance of the WidthTable class.\n     * @private\n     */\n    WidthTable.clone = function () {\n        return null;\n    };\n    return WidthTable;\n}());\nexport { WidthTable };\nvar StandardWidthTable = /** @class */ (function (_super) {\n    __extends(StandardWidthTable, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `StandardWidthTable` class.\n     * @private\n     */\n    function StandardWidthTable(widths) {\n        var _this = _super.call(this) || this;\n        if (widths == null) {\n            throw new Error('ArgumentNullException:widths');\n        }\n        _this.widths = widths;\n        return _this;\n    }\n    //Properties\n    /**\n     * Gets the `32 bit number` at the specified index.\n     * @private\n     */\n    StandardWidthTable.prototype.items = function (index) {\n        if (index < 0 || index >= this.widths.length) {\n            throw new Error('ArgumentOutOfRangeException:index, The character is not supported by the font.');\n        }\n        var result = this.widths[index];\n        return result;\n    };\n    Object.defineProperty(StandardWidthTable.prototype, \"length\", {\n        /**\n         * Gets the `length` of the internal array.\n         * @private\n         */\n        get: function () {\n            return this.widths.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Overrides\n    /**\n     * `Clones` this instance of the WidthTable class.\n     * @private\n     */\n    StandardWidthTable.prototype.clone = function () {\n        var swt = this;\n        swt.widths = this.widths;\n        return swt;\n    };\n    /**\n     * Converts width table to a `PDF array`.\n     * @private\n     */\n    StandardWidthTable.prototype.toArray = function () {\n        var arr = new PdfArray(this.widths);\n        return arr;\n    };\n    return StandardWidthTable;\n}(WidthTable));\nexport { StandardWidthTable };\n", "/**\n * TrueTypeFont.ts class for EJ2-PDF\n */\nimport { ByteArray } from './../../graphics/images/index';\nimport { TtfReader } from './ttf-reader';\nimport { PdfDictionary, SaveDescendantFontEventHandler, SaveFontDictionaryEventHandler } from './../../primitives/pdf-dictionary';\nimport { SaveFontProgramEventHandler, SaveCmapEventHandler } from './../../primitives/pdf-stream';\nimport { PdfStream } from './../../primitives/pdf-stream';\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfName } from './../../primitives/pdf-name';\nimport { PdfNumber } from './../../primitives/pdf-number';\nimport { PdfString } from './../../primitives/pdf-string';\nimport { PdfReferenceHolder } from './../../primitives/pdf-reference';\nimport { PdfFontMetrics } from './pdf-font-metrics';\nimport { StandardWidthTable } from './pdf-font-metrics';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { Dictionary } from './../../collections/dictionary';\nimport { FontDescriptorFlags } from './enum';\nimport { RectangleF } from './../../drawing/pdf-drawing';\nimport { Operators } from './../../input-output/pdf-operators';\nvar UnicodeTrueTypeFont = /** @class */ (function () {\n    /* tslint:enable */\n    //Constructors\n    /**\n     * Initializes a new instance of the `PdfTrueTypeFont` class.\n     * @private\n     */\n    function UnicodeTrueTypeFont(base64String, size) {\n        // Fields\n        this.nameString = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n        /**\n         * Specifies the Internal variable to store fields of `PdfDictionaryProperties`.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Indicates whether the font program is compressed or not.\n         * @private\n         */\n        this.isCompress = false;\n        /**\n         * Indicates whether the font is embedded or not.\n         */\n        this.isEmbedFont = false;\n        /**\n         * Cmap table's start prefix.\n         */\n        /* tslint:disable */\n        this.cmapPrefix = '/CIDInit /ProcSet findresource begin\\n12 dict begin\\nbegincmap' + Operators.newLine + '/CIDSystemInfo << /Registry (Adobe)/Ordering (UCS)/Supplement 0>> def\\n/CMapName ' + '/Adobe-Identity-UCS def\\n/CMapType 2 def\\n1 begincodespacerange' + Operators.newLine;\n        /* tslint:enable */\n        /**\n         * Cmap table's start suffix.\n         */\n        this.cmapEndCodespaceRange = 'endcodespacerange' + Operators.newLine;\n        /**\n         * Cmap's begin range marker.\n         */\n        this.cmapBeginRange = 'beginbfrange' + Operators.newLine;\n        /**\n         * Cmap's end range marker.\n         */\n        this.cmapEndRange = 'endbfrange' + Operators.newLine;\n        /**\n         * Cmap table's end\n         */\n        /* tslint:disable */\n        this.cmapSuffix = 'endbfrange\\nendcmap\\nCMapName currentdict ' + '/CMap defineresource pop\\nend end' + Operators.newLine;\n        if (base64String === null || base64String === undefined) {\n            throw new Error('ArgumentNullException:base64String');\n        }\n        this.fontSize = size;\n        this.fontString = base64String;\n        this.Initialize();\n    }\n    //Implementation\n    /**\n     * Returns width of the char symbol.\n     */\n    UnicodeTrueTypeFont.prototype.getCharWidth = function (charCode) {\n        var codeWidth = this.ttfReader.getCharWidth(charCode);\n        return codeWidth;\n    };\n    /**\n     * Returns width of the text line.\n     */\n    UnicodeTrueTypeFont.prototype.getLineWidth = function (line) {\n        // if (line == null) {\n        //     throw new Error('ArgumentNullException : line');\n        // }\n        var width = 0;\n        for (var i = 0, len = line.length; i < len; i++) {\n            var ch = line[i];\n            var charWidth = this.getCharWidth(ch);\n            width += charWidth;\n        }\n        return width;\n    };\n    /**\n     * Initializes a new instance of the `PdfTrueTypeFont` class.\n     * @private\n     */\n    UnicodeTrueTypeFont.prototype.Initialize = function () {\n        var byteArray = new ByteArray(this.fontString.length);\n        byteArray.writeFromBase64String(this.fontString);\n        this.fontData = byteArray.internalBuffer;\n        this.ttfReader = new TtfReader(this.fontData);\n        this.ttfMetrics = this.ttfReader.metrics;\n    };\n    UnicodeTrueTypeFont.prototype.createInternals = function () {\n        this.fontDictionary = new PdfDictionary();\n        this.fontProgram = new PdfStream();\n        this.cmap = new PdfStream();\n        this.descendantFont = new PdfDictionary();\n        this.metrics = new PdfFontMetrics();\n        this.ttfReader.createInternals();\n        this.ttfMetrics = this.ttfReader.metrics;\n        this.initializeMetrics();\n        // Create all the dictionaries of the font.\n        this.subsetName = this.getFontName();\n        this.createDescendantFont();\n        this.createCmap();\n        this.createFontDictionary();\n        this.createFontProgram();\n    };\n    UnicodeTrueTypeFont.prototype.getInternals = function () {\n        return this.fontDictionary;\n    };\n    /**\n     * Initializes metrics.\n     */\n    UnicodeTrueTypeFont.prototype.initializeMetrics = function () {\n        var ttfMetrics = this.ttfReader.metrics;\n        this.metrics.ascent = ttfMetrics.macAscent;\n        this.metrics.descent = ttfMetrics.macDescent;\n        this.metrics.height = ttfMetrics.macAscent - ttfMetrics.macDescent + ttfMetrics.lineGap;\n        this.metrics.name = ttfMetrics.fontFamily;\n        this.metrics.postScriptName = ttfMetrics.postScriptName;\n        this.metrics.size = this.fontSize;\n        this.metrics.widthTable = new StandardWidthTable(ttfMetrics.widthTable);\n        this.metrics.lineGap = ttfMetrics.lineGap;\n        this.metrics.subScriptSizeFactor = ttfMetrics.subScriptSizeFactor;\n        this.metrics.superscriptSizeFactor = ttfMetrics.superscriptSizeFactor;\n        this.metrics.isBold = ttfMetrics.isBold;\n    };\n    /**\n     * Gets random string.\n     */\n    UnicodeTrueTypeFont.prototype.getFontName = function () {\n        var builder = '';\n        var name;\n        // if (this.isEmbed === false) {\n        for (var i = 0; i < 6; i++) {\n            var index = Math.floor(Math.random() * (25 - 0 + 1)) + 0;\n            builder += this.nameString[index];\n        }\n        builder += '+';\n        // }\n        builder += this.ttfReader.metrics.postScriptName;\n        name = builder.toString();\n        // if (name === '') {\n        //     name = this.ttfReader.metrics.fontFamily;\n        // }\n        name = this.formatName(name);\n        return name;\n    };\n    /**\n     * Generates name of the font.\n     */\n    UnicodeTrueTypeFont.prototype.formatName = function (fontName) {\n        // if (fontName === null) {\n        //     throw new Error('ArgumentNullException : fontName');\n        // }\n        // if (fontName === '') {\n        //     throw new Error('ArgumentOutOfRangeException : fontName, Parameter can not be empty');\n        // }\n        var ret = fontName.replace('(', '#28');\n        ret = ret.replace(')', '#29');\n        ret = ret.replace('[', '#5B');\n        ret = ret.replace(']', '#5D');\n        ret = ret.replace('<', '#3C');\n        ret = ret.replace('>', '#3E');\n        ret = ret.replace('{', '#7B');\n        ret = ret.replace('}', '#7D');\n        ret = ret.replace('/', '#2F');\n        ret = ret.replace('%', '#25');\n        return ret.replace(' ', '#20');\n    };\n    /**\n     * Creates descendant font.\n     */\n    UnicodeTrueTypeFont.prototype.createDescendantFont = function () {\n        // Set property used to clone Font every time\n        this.descendantFont.isResource = true;\n        this.descendantFont.descendantFontBeginSave = new SaveDescendantFontEventHandler(this);\n        this.descendantFont.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.font));\n        this.descendantFont.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.cIDFontType2));\n        this.descendantFont.items.setValue(this.dictionaryProperties.baseFont, new PdfName(this.subsetName));\n        this.descendantFont.items.setValue(this.dictionaryProperties.cIDToGIDMap, new PdfName(this.dictionaryProperties.identity));\n        this.descendantFont.items.setValue(this.dictionaryProperties.dw, new PdfNumber(1000));\n        this.fontDescriptor = this.createFontDescriptor();\n        this.descendantFont.items.setValue(this.dictionaryProperties.fontDescriptor, new PdfReferenceHolder(this.fontDescriptor));\n        var systemInfo = this.createSystemInfo();\n        this.descendantFont.items.setValue(this.dictionaryProperties.cIDSystemInfo, systemInfo);\n    };\n    /**\n     * Creates font descriptor.\n     */\n    UnicodeTrueTypeFont.prototype.createFontDescriptor = function () {\n        var descriptor = new PdfDictionary();\n        var metrics = this.ttfReader.metrics;\n        // Set property used to clone Font every time\n        descriptor.isResource = true;\n        descriptor.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.fontDescriptor));\n        descriptor.items.setValue(this.dictionaryProperties.fontName, new PdfName(this.subsetName));\n        descriptor.items.setValue(this.dictionaryProperties.flags, new PdfNumber(this.getDescriptorFlags()));\n        descriptor.items.setValue(this.dictionaryProperties.fontBBox, PdfArray.fromRectangle(this.getBoundBox()));\n        descriptor.items.setValue(this.dictionaryProperties.missingWidth, new PdfNumber(metrics.widthTable[32]));\n        descriptor.items.setValue(this.dictionaryProperties.stemV, new PdfNumber(metrics.stemV));\n        descriptor.items.setValue(this.dictionaryProperties.italicAngle, new PdfNumber(metrics.italicAngle));\n        descriptor.items.setValue(this.dictionaryProperties.capHeight, new PdfNumber(metrics.capHeight));\n        descriptor.items.setValue(this.dictionaryProperties.ascent, new PdfNumber(metrics.winAscent));\n        descriptor.items.setValue(this.dictionaryProperties.descent, new PdfNumber(metrics.winDescent));\n        descriptor.items.setValue(this.dictionaryProperties.leading, new PdfNumber(metrics.leading));\n        descriptor.items.setValue(this.dictionaryProperties.avgWidth, new PdfNumber(metrics.widthTable[32]));\n        descriptor.items.setValue(this.dictionaryProperties.fontFile2, new PdfReferenceHolder(this.fontProgram));\n        descriptor.items.setValue(this.dictionaryProperties.maxWidth, new PdfNumber(metrics.widthTable[32]));\n        descriptor.items.setValue(this.dictionaryProperties.xHeight, new PdfNumber(0));\n        descriptor.items.setValue(this.dictionaryProperties.stemH, new PdfNumber(0));\n        return descriptor;\n    };\n    /**\n     * Generates cmap.\n     * @private\n     */\n    UnicodeTrueTypeFont.prototype.createCmap = function () {\n        this.cmap.cmapBeginSave = new SaveCmapEventHandler(this);\n    };\n    /**\n     * Generates font dictionary.\n     */\n    UnicodeTrueTypeFont.prototype.createFontDictionary = function () {\n        // Set property used to clone Font every time\n        this.fontDictionary.isResource = true;\n        this.fontDictionary.fontDictionaryBeginSave = new SaveFontDictionaryEventHandler(this);\n        this.fontDictionary.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.font));\n        this.fontDictionary.items.setValue(this.dictionaryProperties.baseFont, new PdfName(this.subsetName));\n        this.fontDictionary.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.type0));\n        this.fontDictionary.items.setValue(this.dictionaryProperties.encoding, new PdfName(this.dictionaryProperties.identityH));\n        var descFonts = new PdfArray();\n        var reference = new PdfReferenceHolder(this.descendantFont);\n        // Set property used to clone Font every time\n        descFonts.isFont = true;\n        descFonts.add(reference);\n        this.fontDictionary.items.setValue(this.dictionaryProperties.descendantFonts, descFonts);\n    };\n    /**\n     * Creates font program.\n     */\n    UnicodeTrueTypeFont.prototype.createFontProgram = function () {\n        this.fontProgram.fontProgramBeginSave = new SaveFontProgramEventHandler(this);\n    };\n    /**\n     * Creates system info dictionary for CID font.\n     * @private\n     */\n    UnicodeTrueTypeFont.prototype.createSystemInfo = function () {\n        var systemInfo = new PdfDictionary();\n        systemInfo.items.setValue(this.dictionaryProperties.registry, new PdfString('Adobe'));\n        systemInfo.items.setValue(this.dictionaryProperties.ordering, new PdfString(this.dictionaryProperties.identity));\n        systemInfo.items.setValue(this.dictionaryProperties.supplement, new PdfNumber(0));\n        return systemInfo;\n    };\n    /**\n     * Runs before font Dictionary will be saved.\n     */\n    UnicodeTrueTypeFont.prototype.descendantFontBeginSave = function () {\n        if (this.usedChars !== null && this.usedChars !== undefined && this.usedChars.size() > 0) {\n            var width = this.getDescendantWidth();\n            if (width !== null) {\n                this.descendantFont.items.setValue(this.dictionaryProperties.w, width);\n            }\n        }\n    };\n    /**\n     * Runs before font Dictionary will be saved.\n     */\n    UnicodeTrueTypeFont.prototype.cmapBeginSave = function () {\n        this.generateCmap();\n    };\n    /**\n     * Runs before font Dictionary will be saved.\n     */\n    /* tslint:disable */\n    UnicodeTrueTypeFont.prototype.fontDictionaryBeginSave = function () {\n        if (this.usedChars !== null && this.usedChars !== undefined && this.usedChars.size() > 0 && !this.fontDictionary.containsKey(this.dictionaryProperties.toUnicode)) {\n            this.fontDictionary.items.setValue(this.dictionaryProperties.toUnicode, new PdfReferenceHolder(this.cmap));\n        }\n    };\n    /* tslint:enable */\n    /**\n     * Runs before font program stream save.\n     */\n    UnicodeTrueTypeFont.prototype.fontProgramBeginSave = function () {\n        this.isCompress = true;\n        this.generateFontProgram();\n    };\n    /**\n     * Gets width description pad array for c i d font.\n     */\n    UnicodeTrueTypeFont.prototype.getDescendantWidth = function () {\n        var array = new PdfArray();\n        if (this.usedChars !== null && this.usedChars !== undefined && this.usedChars.size() > 0) {\n            var glyphInfo = [];\n            // if (!this.isEmbedFont) {\n            var keys = this.usedChars.keys();\n            for (var i = 0; i < keys.length; i++) {\n                var chLen = keys[i];\n                var glyph = this.ttfReader.getGlyph(chLen);\n                if (glyph.empty) {\n                    continue;\n                }\n                glyphInfo.push(glyph);\n            }\n            // } else {\n            //     glyphInfo = this.ttfReader.getAllGlyphs();\n            // }\n            glyphInfo.sort(function (a, b) { return a.index - b.index; });\n            var firstGlyphIndex = 0;\n            var lastGlyphIndex = 0;\n            var firstGlyphIndexWasSet = false;\n            var widthDetails = new PdfArray();\n            // if (!this.isEmbedFont) {\n            for (var i = 0; i < glyphInfo.length; i++) {\n                var glyph = glyphInfo[i];\n                if (!firstGlyphIndexWasSet) {\n                    firstGlyphIndexWasSet = true;\n                    firstGlyphIndex = glyph.index;\n                    lastGlyphIndex = glyph.index - 1;\n                }\n                if ((lastGlyphIndex + 1 !== glyph.index || (i + 1 === glyphInfo.length)) && glyphInfo.length > 1) {\n                    // Add glyph index / width.\n                    array.add(new PdfNumber(firstGlyphIndex));\n                    if (i !== 0) {\n                        array.add(widthDetails);\n                    }\n                    firstGlyphIndex = glyph.index;\n                    widthDetails = new PdfArray();\n                }\n                widthDetails.add(new PdfNumber(glyph.width));\n                if (i + 1 === glyphInfo.length) {\n                    array.add(new PdfNumber(firstGlyphIndex));\n                    array.add(widthDetails);\n                }\n                lastGlyphIndex = glyph.index;\n            }\n            // } else {\n            //     for (let i : number = 0; i < glyphInfo.length; i++) {\n            //         let glyph : TtfGlyphInfo = glyphInfo[i];\n            //         if (!firstGlyphIndexWasSet) {\n            //             firstGlyphIndexWasSet = true;\n            //             lastGlyphIndex = glyph.index - 1;\n            //         }\n            //         firstGlyphIndex = glyph.index;\n            //         if ((lastGlyphIndex + 1 === glyph.index || (i + 1 === glyphInfo.length)) && glyphInfo.length > 1) {\n            //             // Add glyph index / width.\n            //             widthDetails.add(new PdfNumber(glyph.width));\n            //             array.add(new PdfNumber(firstGlyphIndex));\n            //             array.add(widthDetails);\n            //             widthDetails = new PdfArray();\n            //         }\n            //         lastGlyphIndex = glyph.index;\n            //     }\n            // }\n        }\n        return array;\n    };\n    /**\n     * Creates cmap.\n     */\n    UnicodeTrueTypeFont.prototype.generateCmap = function () {\n        if (this.usedChars !== null && this.usedChars !== undefined && this.usedChars.size() > 0) {\n            var glyphChars = this.ttfReader.getGlyphChars(this.usedChars);\n            if (glyphChars.size() > 0) {\n                var keys = glyphChars.keys().sort();\n                // add first and last glyph indexes\n                var first = keys[0];\n                var last = keys[keys.length - 1];\n                var middlePart = this.toHexString(first, false) + this.toHexString(last, false) + Operators.newLine;\n                var builder = '';\n                builder += this.cmapPrefix;\n                builder += middlePart;\n                builder += this.cmapEndCodespaceRange;\n                var nextRange = 0;\n                for (var i = 0; i < keys.length; i++) {\n                    if (nextRange === 0) {\n                        if (i !== 0) {\n                            builder += this.cmapEndRange;\n                        }\n                        nextRange = Math.min(100, keys.length - i);\n                        builder += nextRange;\n                        builder += Operators.whiteSpace;\n                        builder += this.cmapBeginRange;\n                    }\n                    nextRange -= 1;\n                    var key = keys[i];\n                    /* tslint:disable */\n                    builder += this.toHexString(key, true) + this.toHexString(key, true) + this.toHexString(glyphChars.getValue(key), true) + '\\n';\n                    /* tslint:enable */\n                }\n                builder += this.cmapSuffix;\n                this.cmap.clearStream();\n                this.cmap.isResource = true;\n                this.cmap.write(builder);\n            }\n        }\n    };\n    /**\n     * Generates font program.\n     */\n    UnicodeTrueTypeFont.prototype.generateFontProgram = function () {\n        var fontProgram = null;\n        this.usedChars = (this.usedChars === null || this.usedChars === undefined) ? new Dictionary() : this.usedChars;\n        this.ttfReader.setOffset(0);\n        fontProgram = this.ttfReader.readFontProgram(this.usedChars);\n        this.fontProgram.clearStream();\n        this.fontProgram.isResource = true;\n        this.fontProgram.writeBytes(fontProgram);\n    };\n    /**\n     * Calculates flags for the font descriptor.\n     * @private\n     */\n    UnicodeTrueTypeFont.prototype.getDescriptorFlags = function () {\n        var flags = 0;\n        var metrics = this.ttfReader.metrics;\n        if (metrics.isFixedPitch) {\n            flags |= FontDescriptorFlags.FixedPitch;\n        }\n        if (metrics.isSymbol) {\n            flags |= FontDescriptorFlags.Symbolic;\n        }\n        else {\n            flags |= FontDescriptorFlags.Nonsymbolic;\n        }\n        if (metrics.isItalic) {\n            flags |= FontDescriptorFlags.Italic;\n        }\n        if (metrics.isBold) {\n            flags |= FontDescriptorFlags.ForceBold;\n        }\n        return flags;\n    };\n    /**\n     * Calculates BoundBox of the descriptor.\n     * @private\n     */\n    UnicodeTrueTypeFont.prototype.getBoundBox = function () {\n        var rect = this.ttfReader.metrics.fontBox;\n        var width = Math.abs(rect.right - rect.left);\n        var height = Math.abs(rect.top - rect.bottom);\n        var rectangle = new RectangleF(rect.left, rect.bottom, width, height);\n        return rectangle;\n    };\n    /**\n     * Converts integer of decimal system to hex integer.\n     */\n    UnicodeTrueTypeFont.prototype.toHexString = function (n, isCaseChange) {\n        var s = n.toString(16);\n        if (isCaseChange) {\n            s = s.toUpperCase();\n        }\n        return '<0000'.substring(0, 5 - s.length) + s + '>';\n    };\n    /**\n     * Stores used symbols.\n     */\n    UnicodeTrueTypeFont.prototype.setSymbols = function (text) {\n        if (text === null) {\n            throw new Error('Argument Null Exception : text');\n        }\n        if (this.usedChars === null || this.usedChars === undefined) {\n            this.usedChars = new Dictionary();\n        }\n        for (var i = 0; i < text.length; i++) {\n            var ch = text[i];\n            this.usedChars.setValue(ch, String.fromCharCode(0));\n        }\n        // else {\n        //     if (text === null) {\n        //         throw new Error('Argument Null Exception : glyphs');\n        //     }\n        //     if (this.usedChars === null || this.usedChars === undefined) {\n        //             this.usedChars = new Dictionary<string, string>();\n        //     }\n        //     for (let i : number = 0; i < text.length; i++) {\n        //         let glyphIndex : number = text[i];\n        //         let glyph : TtfGlyphInfo =  this.ttfReader.getGlyph(glyphIndex);\n        //         if (!glyph == null) {\n        //             let c : string = glyph.charCode.toLocaleString();\n        //             this.usedChars.setValue(c, String.fromCharCode(0));\n        //         }\n        //     }\n        // }\n        if (this.isEmbedFont === false) {\n            this.getDescendantWidth();\n        }\n    };\n    return UnicodeTrueTypeFont;\n}());\nexport { UnicodeTrueTypeFont };\n", "/**\n * ArabicShapeRenderer.ts class for EJ2-PDF\n */\nimport { Dictionary } from './../../../collections/dictionary';\nvar ArabicShapeRenderer = /** @class */ (function () {\n    //#endregion\n    //#region Constructor\n    function ArabicShapeRenderer() {\n        //#region Constants\n        this.arabicCharTable = [['\\u0621', '\\uFE80'], ['\\u0622', '\\uFE81', '\\uFE82'],\n            ['\\u0623', '\\uFE83', '\\uFE84'],\n            ['\\u0624', '\\uFE85', '\\uFE86'],\n            ['\\u0625', '\\uFE87', '\\uFE88'],\n            ['\\u0626', '\\uFE89', '\\uFE8A', '\\uFE8B', '\\uFE8C'],\n            ['\\u0627', '\\uFE8D', '\\uFE8E'],\n            ['\\u0628', '\\uFE8F', '\\uFE90', '\\uFE91', '\\uFE92'],\n            ['\\u0629', '\\uFE93', '\\uFE94'],\n            ['\\u062A', '\\uFE95', '\\uFE96', '\\uFE97', '\\uFE98'],\n            ['\\u062B', '\\uFE99', '\\uFE9A', '\\uFE9B', '\\uFE9C'],\n            ['\\u062C', '\\uFE9D', '\\uFE9E', '\\uFE9F', '\\uFEA0'],\n            ['\\u062D', '\\uFEA1', '\\uFEA2', '\\uFEA3', '\\uFEA4'],\n            ['\\u062E', '\\uFEA5', '\\uFEA6', '\\uFEA7', '\\uFEA8'],\n            ['\\u062F', '\\uFEA9', '\\uFEAA'],\n            ['\\u0630', '\\uFEAB', '\\uFEAC'],\n            ['\\u0631', '\\uFEAD', '\\uFEAE'],\n            ['\\u0632', '\\uFEAF', '\\uFEB0'],\n            ['\\u0633', '\\uFEB1', '\\uFEB2', '\\uFEB3', '\\uFEB4'],\n            ['\\u0634', '\\uFEB5', '\\uFEB6', '\\uFEB7', '\\uFEB8'],\n            ['\\u0635', '\\uFEB9', '\\uFEBA', '\\uFEBB', '\\uFEBC'],\n            ['\\u0636', '\\uFEBD', '\\uFEBE', '\\uFEBF', '\\uFEC0'],\n            ['\\u0637', '\\uFEC1', '\\uFEC2', '\\uFEC3', '\\uFEC4'],\n            ['\\u0638', '\\uFEC5', '\\uFEC6', '\\uFEC7', '\\uFEC8'],\n            ['\\u0639', '\\uFEC9', '\\uFECA', '\\uFECB', '\\uFECC'],\n            ['\\u063A', '\\uFECD', '\\uFECE', '\\uFECF', '\\uFED0'],\n            ['\\u0640', '\\u0640', '\\u0640', '\\u0640', '\\u0640'],\n            ['\\u0641', '\\uFED1', '\\uFED2', '\\uFED3', '\\uFED4'],\n            ['\\u0642', '\\uFED5', '\\uFED6', '\\uFED7', '\\uFED8'],\n            ['\\u0643', '\\uFED9', '\\uFEDA', '\\uFEDB', '\\uFEDC'],\n            ['\\u0644', '\\uFEDD', '\\uFEDE', '\\uFEDF', '\\uFEE0'],\n            ['\\u0645', '\\uFEE1', '\\uFEE2', '\\uFEE3', '\\uFEE4'],\n            ['\\u0646', '\\uFEE5', '\\uFEE6', '\\uFEE7', '\\uFEE8'],\n            ['\\u0647', '\\uFEE9', '\\uFEEA', '\\uFEEB', '\\uFEEC'],\n            ['\\u0648', '\\uFEED', '\\uFEEE'],\n            ['\\u0649', '\\uFEEF', '\\uFEF0', '\\uFBE8', '\\uFBE9'],\n            ['\\u064A', '\\uFEF1', '\\uFEF2', '\\uFEF3', '\\uFEF4'],\n            ['\\u0671', '\\uFB50', '\\uFB51'],\n            ['\\u0679', '\\uFB66', '\\uFB67', '\\uFB68', '\\uFB69'],\n            ['\\u067A', '\\uFB5E', '\\uFB5F', '\\uFB60', '\\uFB61'],\n            ['\\u067B', '\\uFB52', '\\uFB53', '\\uFB54', '\\uFB55'],\n            ['\\u067E', '\\uFB56', '\\uFB57', '\\uFB58', '\\uFB59'],\n            ['\\u067F', '\\uFB62', '\\uFB63', '\\uFB64', '\\uFB65'],\n            ['\\u0680', '\\uFB5A', '\\uFB5B', '\\uFB5C', '\\uFB5D'],\n            ['\\u0683', '\\uFB76', '\\uFB77', '\\uFB78', '\\uFB79'],\n            ['\\u0684', '\\uFB72', '\\uFB73', '\\uFB74', '\\uFB75'],\n            ['\\u0686', '\\uFB7A', '\\uFB7B', '\\uFB7C', '\\uFB7D'],\n            ['\\u0687', '\\uFB7E', '\\uFB7F', '\\uFB80', '\\uFB81'],\n            ['\\u0688', '\\uFB88', '\\uFB89'],\n            ['\\u068C', '\\uFB84', '\\uFB85'],\n            ['\\u068D', '\\uFB82', '\\uFB83'],\n            ['\\u068E', '\\uFB86', '\\uFB87'],\n            ['\\u0691', '\\uFB8C', '\\uFB8D'],\n            ['\\u0698', '\\uFB8A', '\\uFB8B'],\n            ['\\u06A4', '\\uFB6A', '\\uFB6B', '\\uFB6C', '\\uFB6D'],\n            ['\\u06A6', '\\uFB6E', '\\uFB6F', '\\uFB70', '\\uFB71'],\n            ['\\u06A9', '\\uFB8E', '\\uFB8F', '\\uFB90', '\\uFB91'],\n            ['\\u06AD', '\\uFBD3', '\\uFBD4', '\\uFBD5', '\\uFBD6'],\n            ['\\u06AF', '\\uFB92', '\\uFB93', '\\uFB94', '\\uFB95'],\n            ['\\u06B1', '\\uFB9A', '\\uFB9B', '\\uFB9C', '\\uFB9D'],\n            ['\\u06B3', '\\uFB96', '\\uFB97', '\\uFB98', '\\uFB99'],\n            ['\\u06BA', '\\uFB9E', '\\uFB9F'],\n            ['\\u06BB', '\\uFBA0', '\\uFBA1', '\\uFBA2', '\\uFBA3'],\n            ['\\u06BE', '\\uFBAA', '\\uFBAB', '\\uFBAC', '\\uFBAD'],\n            ['\\u06C0', '\\uFBA4', '\\uFBA5'],\n            ['\\u06C1', '\\uFBA6', '\\uFBA7', '\\uFBA8', '\\uFBA9'],\n            ['\\u06C5', '\\uFBE0', '\\uFBE1'],\n            ['\\u06C6', '\\uFBD9', '\\uFBDA'],\n            ['\\u06C7', '\\uFBD7', '\\uFBD8'],\n            ['\\u06C8', '\\uFBDB', '\\uFBDC'],\n            ['\\u06C9', '\\uFBE2', '\\uFBE3'],\n            ['\\u06CB', '\\uFBDE', '\\uFBDF'],\n            ['\\u06CC', '\\uFBFC', '\\uFBFD', '\\uFBFE', '\\uFBFF'],\n            ['\\u06D0', '\\uFBE4', '\\uFBE5', '\\uFBE6', '\\uFBE7'],\n            ['\\u06D2', '\\uFBAE', '\\uFBAF'],\n            ['\\u06D3', '\\uFBB0', '\\uFBB1']\n        ];\n        this.alef = '\\u0627';\n        this.alefHamza = '\\u0623';\n        this.alefHamzaBelow = '\\u0625';\n        this.alefMadda = '\\u0622';\n        this.lam = '\\u0644';\n        this.hamza = '\\u0621';\n        this.zeroWidthJoiner = '\\u200D';\n        this.hamzaAbove = '\\u0654';\n        this.hamzaBelow = '\\u0655';\n        this.wawHamza = '\\u0624';\n        this.yehHamza = '\\u0626';\n        this.waw = '\\u0648';\n        this.alefMaksura = '\\u0649';\n        this.yeh = '\\u064A';\n        this.farsiYeh = '\\u06CC';\n        this.shadda = '\\u0651';\n        this.madda = '\\u0653';\n        this.lwa = '\\uFEFB';\n        this.lwawh = '\\uFEF7';\n        this.lwawhb = '\\uFEF9';\n        this.lwawm = '\\uFEF5';\n        this.bwhb = '\\u06D3';\n        this.fathatan = '\\u064B';\n        this.superScriptalef = '\\u0670';\n        this.vowel = 0x1;\n        // #endregion\n        //#region Fields\n        this.arabicMapTable = new Dictionary();\n        for (var i = 0; i < this.arabicCharTable.length; i++) {\n            this.arabicMapTable.setValue(this.arabicCharTable[i][0], this.arabicCharTable[i]);\n        }\n    }\n    //#endregion\n    //#region implementation\n    ArabicShapeRenderer.prototype.getCharacterShape = function (input, index) {\n        if ((input >= this.hamza) && (input <= this.bwhb)) {\n            var value = [];\n            if (this.arabicMapTable.getValue(input)) {\n                value = this.arabicMapTable.getValue(input);\n                return value[index + 1];\n            }\n        }\n        else if (input >= this.lwawm && input <= this.lwa) {\n            return (input);\n        }\n        return input;\n    };\n    ArabicShapeRenderer.prototype.shape = function (text, level) {\n        var builder = '';\n        var str2 = '';\n        for (var i = 0; i < text.length; i++) {\n            var c = text[i];\n            if (c >= '؀' && c <= 'ۿ') {\n                //if(c>= 0x0600.toString() && c<= 0x06FF.toString()) {\n                str2 = str2 + c;\n            }\n            else {\n                if (str2.length > 0) {\n                    var st = this.doShape(str2.toString(), 0);\n                    builder = builder + st;\n                    str2 = '';\n                }\n                builder = builder + c;\n            }\n        }\n        if (str2.length > 0) {\n            var st = this.doShape(str2.toString(), 0);\n            builder = builder + st;\n        }\n        return builder.toString();\n    };\n    ArabicShapeRenderer.prototype.doShape = function (input, level) {\n        var str = '';\n        var ligature = 0;\n        var len = 0;\n        var i = 0;\n        var next = '';\n        var previous = new ArabicShape();\n        var present = new ArabicShape();\n        while (i < input.length) {\n            next = input[i++];\n            ligature = this.ligature(next, present);\n            if (ligature === 0) {\n                var shapeCount = this.getShapeCount(next);\n                len = (shapeCount === 1) ? 0 : 2;\n                if (previous.Shapes > 2) {\n                    len += 1;\n                }\n                len = len % (present.Shapes);\n                present.Value = this.getCharacterShape(present.Value, len);\n                str = this.append(str, previous, level);\n                previous = present;\n                present = new ArabicShape();\n                present.Value = next;\n                present.Shapes = shapeCount;\n                present.Ligature++;\n            }\n        }\n        len = (previous.Shapes > 2) ? 1 : 0;\n        len = len % (present.Shapes);\n        present.Value = this.getCharacterShape(present.Value, len);\n        str = this.append(str, previous, level);\n        str = this.append(str, present, level);\n        return str.toString();\n    };\n    ArabicShapeRenderer.prototype.append = function (builder, shape, level) {\n        if (shape.Value !== '') {\n            builder = builder + shape.Value;\n            shape.Ligature -= 1;\n            if (shape.Type !== '') {\n                if ((level & this.vowel) === 0) {\n                    builder = builder + shape.Type;\n                    shape.Ligature -= 1;\n                }\n                else {\n                    shape.Ligature -= 1;\n                }\n            }\n            if (shape.vowel !== '') {\n                if ((level & this.vowel) === 0) {\n                    builder = builder + shape.vowel;\n                    shape.Ligature -= 1;\n                }\n                else {\n                    shape.Ligature -= 1;\n                }\n            }\n        }\n        return builder;\n    };\n    ArabicShapeRenderer.prototype.ligature = function (value, shape) {\n        if (shape.Value !== '') {\n            var result = 0;\n            if ((value >= this.fathatan && value <= this.hamzaBelow) || value === this.superScriptalef) {\n                result = 1;\n                if ((shape.vowel !== '') && (value !== this.shadda)) {\n                    result = 2;\n                }\n                if (value === this.shadda) {\n                    if (shape.Type == null) {\n                        shape.Type = this.shadda;\n                    }\n                    else {\n                        return 0;\n                    }\n                }\n                else if (value === this.hamzaBelow) {\n                    if (shape.Value === this.alef) {\n                        shape.Value = this.alefHamzaBelow;\n                        result = 2;\n                    }\n                    else if (value === this.lwa) {\n                        shape.Value = this.lwawhb;\n                        result = 2;\n                    }\n                    else {\n                        shape.Type = this.hamzaBelow;\n                    }\n                }\n                else if (value === this.hamzaAbove) {\n                    if (shape.Value === this.alef) {\n                        shape.Value = this.alefHamza;\n                        result = 2;\n                    }\n                    else if (shape.Value === this.lwa) {\n                        shape.Value = this.lwawh;\n                        result = 2;\n                    }\n                    else if (shape.Value === this.waw) {\n                        shape.Value = this.wawHamza;\n                        result = 2;\n                    }\n                    else if (shape.Value === this.yeh || shape.Value === this.alefMaksura || shape.Value === this.farsiYeh) {\n                        shape.Value = this.yehHamza;\n                        result = 2;\n                    }\n                    else {\n                        shape.Type = this.hamzaAbove;\n                    }\n                }\n                else if (value === this.madda) {\n                    if (shape.Value === this.alef) {\n                        shape.Value = this.alefMadda;\n                        result = 2;\n                    }\n                }\n                else {\n                    shape.vowel = value;\n                }\n                if (result === 1) {\n                    shape.Ligature++;\n                }\n                return result;\n            }\n            if (shape.vowel !== '') {\n                return 0;\n            }\n            if (shape.Value === this.lam) {\n                if (value === this.alef) {\n                    shape.Value = this.lwa;\n                    shape.Shapes = 2;\n                    result = 3;\n                }\n                else if (value === this.alefHamza) {\n                    shape.Value = this.lwawh;\n                    shape.Shapes = 2;\n                    result = 3;\n                }\n                else if (value === this.alefHamzaBelow) {\n                    shape.Value = this.lwawhb;\n                    shape.Shapes = 2;\n                    result = 3;\n                }\n                else if (value === this.alefMadda) {\n                    shape.Value = this.lwawm;\n                    shape.Shapes = 2;\n                    result = 3;\n                }\n            }\n            // else if (shape.Value === '') {\n            //     shape.Value = value;\n            //     shape.Shapes = this.getShapeCount(value);\n            //     result = 1;\n            // }\n            return result;\n        }\n        else {\n            return 0;\n        }\n    };\n    ArabicShapeRenderer.prototype.getShapeCount = function (shape) {\n        if ((shape >= this.hamza) && (shape <= this.bwhb) && !((shape >= this.fathatan && shape <= this.hamzaBelow)\n            || shape === this.superScriptalef)) {\n            var c = [];\n            if (this.arabicMapTable.getValue(shape)) {\n                c = this.arabicMapTable.getValue(shape);\n                return c.length - 1;\n            }\n        }\n        else if (shape === this.zeroWidthJoiner) {\n            return 4;\n        }\n        return 1;\n    };\n    return ArabicShapeRenderer;\n}());\nexport { ArabicShapeRenderer };\n//#endregion\n//#region Internals\nvar ArabicShape = /** @class */ (function () {\n    function ArabicShape() {\n        //#region Fields\n        this.shapeValue = '';\n        this.shapeType = '';\n        this.shapeVowel = '';\n        this.shapeLigature = 0;\n        this.shapeShapes = 1;\n        //#endregion\n    }\n    Object.defineProperty(ArabicShape.prototype, \"Value\", {\n        //#endregion\n        //#region Properties \n        /**\n         * Gets or sets the values.\n         * @private\n         */\n        get: function () {\n            return this.shapeValue;\n        },\n        set: function (value) {\n            this.shapeValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArabicShape.prototype, \"Type\", {\n        /**\n         * Gets or sets the values.\n         * @private\n         */\n        get: function () {\n            return this.shapeType;\n        },\n        set: function (value) {\n            this.shapeType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArabicShape.prototype, \"vowel\", {\n        /**\n         * Gets or sets the values.\n         * @private\n         */\n        get: function () {\n            return this.shapeVowel;\n        },\n        set: function (value) {\n            this.shapeVowel = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArabicShape.prototype, \"Ligature\", {\n        /**\n         * Gets or sets the values.\n         * @private\n         */\n        get: function () {\n            return this.shapeLigature;\n        },\n        set: function (value) {\n            this.shapeLigature = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArabicShape.prototype, \"Shapes\", {\n        /**\n         * Gets or sets the values.\n         * @private\n         */\n        get: function () {\n            return this.shapeShapes;\n        },\n        set: function (value) {\n            this.shapeShapes = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ArabicShape;\n}());\nexport { ArabicShape };\n//#endregion\n", "/**\n * Bidi.ts class for EJ2-PDF\n */\nimport { Dictionary } from './../../../collections/dictionary';\n/**\n * `Metrics` of the font.\n * @private\n */\nvar Bidi = /** @class */ (function () {\n    //#endregion\n    //#region Constructor\n    function Bidi() {\n        //#region Fields\n        this.indexes = [];\n        this.indexLevels = [];\n        this.mirroringShapeCharacters = new Dictionary();\n        this.update();\n    }\n    //#endregion\n    //#region implementation\n    Bidi.prototype.doMirrorShaping = function (text) {\n        var result = [];\n        for (var i = 0; i < text.length; i++) {\n            if (((this.indexLevels[i] & 1) === 1) && this.mirroringShapeCharacters.containsKey(text[i].charCodeAt(0))) {\n                result[i] = String.fromCharCode(this.mirroringShapeCharacters.getValue(text[i].charCodeAt(0)));\n            }\n            else {\n                result[i] = text[i].toString();\n            }\n        }\n        var res = '';\n        for (var j = 0; j < result.length; j++) {\n            res = res + result[j];\n        }\n        return res;\n    };\n    Bidi.prototype.getLogicalToVisualString = function (inputText, isRtl) {\n        var rtlCharacters = new RtlCharacters();\n        this.indexLevels = rtlCharacters.getVisualOrder(inputText, isRtl);\n        this.setDefaultIndexLevel();\n        this.doOrder(0, this.indexLevels.length - 1);\n        var text = this.doMirrorShaping(inputText);\n        //let text : string = inputText;\n        var resultBuilder = '';\n        for (var i = 0; i < this.indexes.length; i++) {\n            var index = this.indexes[i];\n            resultBuilder += text[index];\n        }\n        return resultBuilder.toString();\n    };\n    Bidi.prototype.setDefaultIndexLevel = function () {\n        for (var i = 0; i < this.indexLevels.length; i++) {\n            this.indexes[i] = i;\n        }\n    };\n    Bidi.prototype.doOrder = function (sIndex, eIndex) {\n        var max = this.indexLevels[sIndex];\n        var min = max;\n        var odd = max;\n        var even = max;\n        for (var i = sIndex + 1; i <= eIndex; ++i) {\n            var data = this.indexLevels[i];\n            if (data > max) {\n                max = data;\n            }\n            else if (data < min) {\n                min = data;\n            }\n            odd &= data;\n            even |= data;\n        }\n        if ((even & 1) === 0) {\n            return;\n        }\n        if ((odd & 1) === 1) {\n            this.reArrange(sIndex, eIndex + 1);\n            return;\n        }\n        min |= 1;\n        while (max >= min) {\n            var pstart = sIndex;\n            /*tslint:disable:no-constant-condition */\n            while (true) {\n                while (pstart <= eIndex) {\n                    if (this.indexLevels[pstart] >= max) {\n                        break;\n                    }\n                    pstart += 1;\n                }\n                if (pstart > eIndex) {\n                    break;\n                }\n                var pend = pstart + 1;\n                while (pend <= eIndex) {\n                    if (this.indexLevels[pend] < max) {\n                        break;\n                    }\n                    pend += 1;\n                }\n                this.reArrange(pstart, pend);\n                pstart = pend + 1;\n            }\n            max -= 1;\n        }\n    };\n    Bidi.prototype.reArrange = function (i, j) {\n        var length = (i + j) / 2;\n        --j;\n        for (; i < length; ++i, --j) {\n            var temp = this.indexes[i];\n            this.indexes[i] = this.indexes[j];\n            this.indexes[j] = temp;\n        }\n    };\n    Bidi.prototype.update = function () {\n        this.mirroringShapeCharacters.setValue(40, 41);\n        this.mirroringShapeCharacters.setValue(41, 40);\n        this.mirroringShapeCharacters.setValue(60, 62);\n        this.mirroringShapeCharacters.setValue(62, 60);\n        this.mirroringShapeCharacters.setValue(91, 93);\n        this.mirroringShapeCharacters.setValue(93, 91);\n        this.mirroringShapeCharacters.setValue(123, 125);\n        this.mirroringShapeCharacters.setValue(125, 123);\n        this.mirroringShapeCharacters.setValue(171, 187);\n        this.mirroringShapeCharacters.setValue(187, 171);\n        this.mirroringShapeCharacters.setValue(8249, 8250);\n        this.mirroringShapeCharacters.setValue(8250, 8249);\n        this.mirroringShapeCharacters.setValue(8261, 8262);\n        this.mirroringShapeCharacters.setValue(8262, 8261);\n        this.mirroringShapeCharacters.setValue(8317, 8318);\n        this.mirroringShapeCharacters.setValue(8318, 8317);\n        this.mirroringShapeCharacters.setValue(8333, 8334);\n        this.mirroringShapeCharacters.setValue(8334, 8333);\n        this.mirroringShapeCharacters.setValue(8712, 8715);\n        this.mirroringShapeCharacters.setValue(8713, 8716);\n        this.mirroringShapeCharacters.setValue(8714, 8717);\n        this.mirroringShapeCharacters.setValue(8715, 8712);\n        this.mirroringShapeCharacters.setValue(8716, 8713);\n        this.mirroringShapeCharacters.setValue(8717, 8714);\n        this.mirroringShapeCharacters.setValue(8725, 10741);\n        this.mirroringShapeCharacters.setValue(8764, 8765);\n        this.mirroringShapeCharacters.setValue(8765, 8764);\n        this.mirroringShapeCharacters.setValue(8771, 8909);\n        this.mirroringShapeCharacters.setValue(8786, 8787);\n        this.mirroringShapeCharacters.setValue(8787, 8786);\n        this.mirroringShapeCharacters.setValue(8788, 8789);\n        this.mirroringShapeCharacters.setValue(8789, 8788);\n        this.mirroringShapeCharacters.setValue(8804, 8805);\n        this.mirroringShapeCharacters.setValue(8805, 8804);\n        this.mirroringShapeCharacters.setValue(8806, 8807);\n        this.mirroringShapeCharacters.setValue(8807, 8806);\n        this.mirroringShapeCharacters.setValue(8808, 8809);\n        this.mirroringShapeCharacters.setValue(8809, 8808);\n        this.mirroringShapeCharacters.setValue(8810, 8811);\n        this.mirroringShapeCharacters.setValue(8811, 8810);\n        this.mirroringShapeCharacters.setValue(8814, 8815);\n        this.mirroringShapeCharacters.setValue(8815, 8814);\n        this.mirroringShapeCharacters.setValue(8816, 8817);\n        this.mirroringShapeCharacters.setValue(8817, 8816);\n        this.mirroringShapeCharacters.setValue(8818, 8819);\n        this.mirroringShapeCharacters.setValue(8819, 8818);\n        this.mirroringShapeCharacters.setValue(8820, 8821);\n        this.mirroringShapeCharacters.setValue(8821, 8820);\n        this.mirroringShapeCharacters.setValue(8822, 8823);\n        this.mirroringShapeCharacters.setValue(8823, 8822);\n        this.mirroringShapeCharacters.setValue(8824, 8825);\n        this.mirroringShapeCharacters.setValue(8825, 8824);\n        this.mirroringShapeCharacters.setValue(8826, 8827);\n        this.mirroringShapeCharacters.setValue(8827, 8826);\n        this.mirroringShapeCharacters.setValue(8828, 8829);\n        this.mirroringShapeCharacters.setValue(8829, 8828);\n        this.mirroringShapeCharacters.setValue(8830, 8831);\n        this.mirroringShapeCharacters.setValue(8831, 8830);\n        this.mirroringShapeCharacters.setValue(8832, 8833);\n        this.mirroringShapeCharacters.setValue(8833, 8832);\n        this.mirroringShapeCharacters.setValue(8834, 8835);\n        this.mirroringShapeCharacters.setValue(8835, 8834);\n        this.mirroringShapeCharacters.setValue(8836, 8837);\n        this.mirroringShapeCharacters.setValue(8837, 8836);\n        this.mirroringShapeCharacters.setValue(8838, 8839);\n        this.mirroringShapeCharacters.setValue(8839, 8838);\n        this.mirroringShapeCharacters.setValue(8840, 8841);\n        this.mirroringShapeCharacters.setValue(8841, 8840);\n        this.mirroringShapeCharacters.setValue(8842, 8843);\n        this.mirroringShapeCharacters.setValue(8843, 8842);\n        this.mirroringShapeCharacters.setValue(8847, 8848);\n        this.mirroringShapeCharacters.setValue(8848, 8847);\n        this.mirroringShapeCharacters.setValue(8849, 8850);\n        this.mirroringShapeCharacters.setValue(8850, 8849);\n        this.mirroringShapeCharacters.setValue(8856, 10680);\n        this.mirroringShapeCharacters.setValue(8866, 8867);\n        this.mirroringShapeCharacters.setValue(8867, 8866);\n        this.mirroringShapeCharacters.setValue(8870, 10974);\n        this.mirroringShapeCharacters.setValue(8872, 10980);\n        this.mirroringShapeCharacters.setValue(8873, 10979);\n        this.mirroringShapeCharacters.setValue(8875, 10981);\n        this.mirroringShapeCharacters.setValue(8880, 8881);\n        this.mirroringShapeCharacters.setValue(8881, 8880);\n        this.mirroringShapeCharacters.setValue(8882, 8883);\n        this.mirroringShapeCharacters.setValue(8883, 8882);\n        this.mirroringShapeCharacters.setValue(8884, 8885);\n        this.mirroringShapeCharacters.setValue(8885, 8884);\n        /*tslint:disable:max-func-body-length */\n        this.mirroringShapeCharacters.setValue(8886, 8887);\n        this.mirroringShapeCharacters.setValue(8887, 8886);\n        this.mirroringShapeCharacters.setValue(8905, 8906);\n        this.mirroringShapeCharacters.setValue(8906, 8905);\n        this.mirroringShapeCharacters.setValue(8907, 8908);\n        this.mirroringShapeCharacters.setValue(8908, 8907);\n        this.mirroringShapeCharacters.setValue(8909, 8771);\n        this.mirroringShapeCharacters.setValue(8912, 8913);\n        this.mirroringShapeCharacters.setValue(8913, 8912);\n        this.mirroringShapeCharacters.setValue(8918, 8919);\n        this.mirroringShapeCharacters.setValue(8919, 8918);\n        this.mirroringShapeCharacters.setValue(8920, 8921);\n        this.mirroringShapeCharacters.setValue(8921, 8920);\n        this.mirroringShapeCharacters.setValue(8922, 8923);\n        this.mirroringShapeCharacters.setValue(8923, 8922);\n        this.mirroringShapeCharacters.setValue(8924, 8925);\n        this.mirroringShapeCharacters.setValue(8925, 8924);\n        this.mirroringShapeCharacters.setValue(8926, 8927);\n        this.mirroringShapeCharacters.setValue(8927, 8926);\n        this.mirroringShapeCharacters.setValue(8928, 8929);\n        this.mirroringShapeCharacters.setValue(8929, 8928);\n        this.mirroringShapeCharacters.setValue(8930, 8931);\n        this.mirroringShapeCharacters.setValue(8931, 8930);\n        this.mirroringShapeCharacters.setValue(8932, 8933);\n        this.mirroringShapeCharacters.setValue(8933, 8932);\n        this.mirroringShapeCharacters.setValue(8934, 8935);\n        this.mirroringShapeCharacters.setValue(8935, 8934);\n        this.mirroringShapeCharacters.setValue(8936, 8937);\n        this.mirroringShapeCharacters.setValue(8937, 8936);\n        this.mirroringShapeCharacters.setValue(8938, 8939);\n        this.mirroringShapeCharacters.setValue(8939, 8938);\n        this.mirroringShapeCharacters.setValue(8940, 8941);\n        this.mirroringShapeCharacters.setValue(8941, 8940);\n        this.mirroringShapeCharacters.setValue(8944, 8945);\n        this.mirroringShapeCharacters.setValue(8945, 8944);\n        this.mirroringShapeCharacters.setValue(8946, 8954);\n        this.mirroringShapeCharacters.setValue(8947, 8955);\n        this.mirroringShapeCharacters.setValue(8948, 8956);\n        this.mirroringShapeCharacters.setValue(8950, 8957);\n        this.mirroringShapeCharacters.setValue(8951, 8958);\n        this.mirroringShapeCharacters.setValue(8954, 8946);\n        this.mirroringShapeCharacters.setValue(8955, 8947);\n        this.mirroringShapeCharacters.setValue(8956, 8948);\n        this.mirroringShapeCharacters.setValue(8957, 8950);\n        this.mirroringShapeCharacters.setValue(8958, 8951);\n        this.mirroringShapeCharacters.setValue(8968, 8969);\n        this.mirroringShapeCharacters.setValue(8969, 8968);\n        this.mirroringShapeCharacters.setValue(8970, 8971);\n        this.mirroringShapeCharacters.setValue(8971, 8970);\n        this.mirroringShapeCharacters.setValue(9001, 9002);\n        this.mirroringShapeCharacters.setValue(9002, 9001);\n        this.mirroringShapeCharacters.setValue(10088, 10089);\n        this.mirroringShapeCharacters.setValue(10089, 10088);\n        this.mirroringShapeCharacters.setValue(10090, 10091);\n        this.mirroringShapeCharacters.setValue(10091, 10090);\n        this.mirroringShapeCharacters.setValue(10092, 10093);\n        this.mirroringShapeCharacters.setValue(10093, 10092);\n        this.mirroringShapeCharacters.setValue(10094, 10095);\n        this.mirroringShapeCharacters.setValue(10095, 10094);\n        this.mirroringShapeCharacters.setValue(10096, 10097);\n        this.mirroringShapeCharacters.setValue(10097, 10096);\n        this.mirroringShapeCharacters.setValue(10098, 10099);\n        this.mirroringShapeCharacters.setValue(10099, 10098);\n        this.mirroringShapeCharacters.setValue(10100, 10101);\n        this.mirroringShapeCharacters.setValue(10101, 10100);\n        this.mirroringShapeCharacters.setValue(10197, 10198);\n        this.mirroringShapeCharacters.setValue(10198, 10197);\n        this.mirroringShapeCharacters.setValue(10205, 10206);\n        this.mirroringShapeCharacters.setValue(10206, 10205);\n        this.mirroringShapeCharacters.setValue(10210, 10211);\n        this.mirroringShapeCharacters.setValue(10211, 10210);\n        this.mirroringShapeCharacters.setValue(10212, 10213);\n        this.mirroringShapeCharacters.setValue(10213, 10212);\n        this.mirroringShapeCharacters.setValue(10214, 10215);\n        this.mirroringShapeCharacters.setValue(10215, 10214);\n        this.mirroringShapeCharacters.setValue(10216, 10217);\n        this.mirroringShapeCharacters.setValue(10217, 10216);\n        this.mirroringShapeCharacters.setValue(10218, 10219);\n        this.mirroringShapeCharacters.setValue(10219, 10218);\n        this.mirroringShapeCharacters.setValue(10627, 10628);\n        this.mirroringShapeCharacters.setValue(10628, 10627);\n        this.mirroringShapeCharacters.setValue(10629, 10630);\n        this.mirroringShapeCharacters.setValue(10630, 10629);\n        this.mirroringShapeCharacters.setValue(10631, 10632);\n        this.mirroringShapeCharacters.setValue(10632, 10631);\n        this.mirroringShapeCharacters.setValue(10633, 10634);\n        this.mirroringShapeCharacters.setValue(10634, 10633);\n        this.mirroringShapeCharacters.setValue(10635, 10636);\n        this.mirroringShapeCharacters.setValue(10636, 10635);\n        this.mirroringShapeCharacters.setValue(10637, 10640);\n        this.mirroringShapeCharacters.setValue(10638, 10639);\n        this.mirroringShapeCharacters.setValue(10639, 10638);\n        this.mirroringShapeCharacters.setValue(10640, 10637);\n        this.mirroringShapeCharacters.setValue(10641, 10642);\n        this.mirroringShapeCharacters.setValue(10642, 10641);\n        this.mirroringShapeCharacters.setValue(10643, 10644);\n        this.mirroringShapeCharacters.setValue(10644, 10643);\n        this.mirroringShapeCharacters.setValue(10645, 10646);\n        this.mirroringShapeCharacters.setValue(10646, 10645);\n        this.mirroringShapeCharacters.setValue(10647, 10648);\n        this.mirroringShapeCharacters.setValue(10648, 10647);\n        this.mirroringShapeCharacters.setValue(10680, 8856);\n        this.mirroringShapeCharacters.setValue(10688, 10689);\n        this.mirroringShapeCharacters.setValue(10689, 10688);\n        this.mirroringShapeCharacters.setValue(10692, 10693);\n        this.mirroringShapeCharacters.setValue(10693, 10692);\n        this.mirroringShapeCharacters.setValue(10703, 10704);\n        this.mirroringShapeCharacters.setValue(10704, 10703);\n        this.mirroringShapeCharacters.setValue(10705, 10706);\n        this.mirroringShapeCharacters.setValue(10706, 10705);\n        this.mirroringShapeCharacters.setValue(10708, 10709);\n        this.mirroringShapeCharacters.setValue(10709, 10708);\n        this.mirroringShapeCharacters.setValue(10712, 10713);\n        this.mirroringShapeCharacters.setValue(10713, 10712);\n        this.mirroringShapeCharacters.setValue(10714, 10715);\n        this.mirroringShapeCharacters.setValue(10715, 10714);\n        this.mirroringShapeCharacters.setValue(10741, 8725);\n        this.mirroringShapeCharacters.setValue(10744, 10745);\n        this.mirroringShapeCharacters.setValue(10745, 10744);\n        this.mirroringShapeCharacters.setValue(10748, 10749);\n        this.mirroringShapeCharacters.setValue(10749, 10748);\n        this.mirroringShapeCharacters.setValue(10795, 10796);\n        this.mirroringShapeCharacters.setValue(10796, 10795);\n        this.mirroringShapeCharacters.setValue(10797, 10796);\n        this.mirroringShapeCharacters.setValue(10798, 10797);\n        this.mirroringShapeCharacters.setValue(10804, 10805);\n        this.mirroringShapeCharacters.setValue(10805, 10804);\n        this.mirroringShapeCharacters.setValue(10812, 10813);\n        this.mirroringShapeCharacters.setValue(10813, 10812);\n        this.mirroringShapeCharacters.setValue(10852, 10853);\n        this.mirroringShapeCharacters.setValue(10853, 10852);\n        this.mirroringShapeCharacters.setValue(10873, 10874);\n        this.mirroringShapeCharacters.setValue(10874, 10873);\n        this.mirroringShapeCharacters.setValue(10877, 10878);\n        this.mirroringShapeCharacters.setValue(10878, 10877);\n        this.mirroringShapeCharacters.setValue(10879, 10880);\n        this.mirroringShapeCharacters.setValue(10880, 10879);\n        this.mirroringShapeCharacters.setValue(10881, 10882);\n        this.mirroringShapeCharacters.setValue(10882, 10881);\n        this.mirroringShapeCharacters.setValue(10883, 10884);\n        this.mirroringShapeCharacters.setValue(10884, 10883);\n        this.mirroringShapeCharacters.setValue(10891, 10892);\n        this.mirroringShapeCharacters.setValue(10892, 10891);\n        this.mirroringShapeCharacters.setValue(10897, 10898);\n        this.mirroringShapeCharacters.setValue(10898, 10897);\n        this.mirroringShapeCharacters.setValue(10899, 10900);\n        this.mirroringShapeCharacters.setValue(10900, 10899);\n        this.mirroringShapeCharacters.setValue(10901, 10902);\n        this.mirroringShapeCharacters.setValue(10902, 10901);\n        this.mirroringShapeCharacters.setValue(10903, 10904);\n        this.mirroringShapeCharacters.setValue(10904, 10903);\n        this.mirroringShapeCharacters.setValue(10905, 10906);\n        this.mirroringShapeCharacters.setValue(10906, 10905);\n        this.mirroringShapeCharacters.setValue(10907, 10908);\n        this.mirroringShapeCharacters.setValue(10908, 10907);\n        this.mirroringShapeCharacters.setValue(10913, 10914);\n        this.mirroringShapeCharacters.setValue(10914, 10913);\n        this.mirroringShapeCharacters.setValue(10918, 10919);\n        this.mirroringShapeCharacters.setValue(10919, 10918);\n        this.mirroringShapeCharacters.setValue(10920, 10921);\n        this.mirroringShapeCharacters.setValue(10921, 10920);\n        this.mirroringShapeCharacters.setValue(10922, 10923);\n        this.mirroringShapeCharacters.setValue(10923, 10922);\n        this.mirroringShapeCharacters.setValue(10924, 10925);\n        this.mirroringShapeCharacters.setValue(10925, 10924);\n        this.mirroringShapeCharacters.setValue(10927, 10928);\n        this.mirroringShapeCharacters.setValue(10928, 10927);\n        this.mirroringShapeCharacters.setValue(10931, 10932);\n        this.mirroringShapeCharacters.setValue(10932, 10931);\n        this.mirroringShapeCharacters.setValue(10939, 10940);\n        this.mirroringShapeCharacters.setValue(10940, 10939);\n        this.mirroringShapeCharacters.setValue(10941, 10942);\n        this.mirroringShapeCharacters.setValue(10942, 10941);\n        this.mirroringShapeCharacters.setValue(10943, 10944);\n        this.mirroringShapeCharacters.setValue(10944, 10943);\n        this.mirroringShapeCharacters.setValue(10945, 10946);\n        this.mirroringShapeCharacters.setValue(10946, 10945);\n        this.mirroringShapeCharacters.setValue(10947, 10948);\n        this.mirroringShapeCharacters.setValue(10948, 10947);\n        this.mirroringShapeCharacters.setValue(10949, 10950);\n        this.mirroringShapeCharacters.setValue(10950, 10949);\n        this.mirroringShapeCharacters.setValue(10957, 10958);\n        this.mirroringShapeCharacters.setValue(10958, 10957);\n        this.mirroringShapeCharacters.setValue(10959, 10960);\n        this.mirroringShapeCharacters.setValue(10960, 10959);\n        this.mirroringShapeCharacters.setValue(10961, 10962);\n        this.mirroringShapeCharacters.setValue(10962, 10961);\n        this.mirroringShapeCharacters.setValue(10963, 10964);\n        this.mirroringShapeCharacters.setValue(10964, 10963);\n        this.mirroringShapeCharacters.setValue(10965, 10966);\n        this.mirroringShapeCharacters.setValue(10966, 10965);\n        this.mirroringShapeCharacters.setValue(10974, 8870);\n        this.mirroringShapeCharacters.setValue(10979, 8873);\n        this.mirroringShapeCharacters.setValue(10980, 8872);\n        this.mirroringShapeCharacters.setValue(10981, 8875);\n        this.mirroringShapeCharacters.setValue(10988, 10989);\n        this.mirroringShapeCharacters.setValue(10989, 10988);\n        this.mirroringShapeCharacters.setValue(10999, 11000);\n        this.mirroringShapeCharacters.setValue(11000, 10999);\n        this.mirroringShapeCharacters.setValue(11001, 11002);\n        this.mirroringShapeCharacters.setValue(11002, 11001);\n        this.mirroringShapeCharacters.setValue(12296, 12297);\n        this.mirroringShapeCharacters.setValue(12297, 12296);\n        this.mirroringShapeCharacters.setValue(12298, 12299);\n        this.mirroringShapeCharacters.setValue(12299, 12298);\n        this.mirroringShapeCharacters.setValue(12300, 12301);\n        this.mirroringShapeCharacters.setValue(12301, 12300);\n        this.mirroringShapeCharacters.setValue(12302, 12303);\n        this.mirroringShapeCharacters.setValue(12303, 12302);\n        this.mirroringShapeCharacters.setValue(12304, 12305);\n        this.mirroringShapeCharacters.setValue(12305, 12304);\n        this.mirroringShapeCharacters.setValue(12308, 12309);\n        this.mirroringShapeCharacters.setValue(12309, 12308);\n        this.mirroringShapeCharacters.setValue(12310, 12311);\n        this.mirroringShapeCharacters.setValue(12311, 12310);\n        this.mirroringShapeCharacters.setValue(12312, 12313);\n        this.mirroringShapeCharacters.setValue(12313, 12312);\n        this.mirroringShapeCharacters.setValue(12314, 12315);\n        this.mirroringShapeCharacters.setValue(12315, 12314);\n        this.mirroringShapeCharacters.setValue(65288, 65289);\n        this.mirroringShapeCharacters.setValue(65289, 65288);\n        this.mirroringShapeCharacters.setValue(65308, 65310);\n        this.mirroringShapeCharacters.setValue(65310, 65308);\n        this.mirroringShapeCharacters.setValue(65339, 65341);\n        this.mirroringShapeCharacters.setValue(65341, 65339);\n        this.mirroringShapeCharacters.setValue(65371, 65373);\n        this.mirroringShapeCharacters.setValue(65373, 65371);\n        this.mirroringShapeCharacters.setValue(65375, 65376);\n        this.mirroringShapeCharacters.setValue(65376, 65375);\n        this.mirroringShapeCharacters.setValue(65378, 65379);\n        this.mirroringShapeCharacters.setValue(65379, 65378);\n    };\n    return Bidi;\n}());\nexport { Bidi };\nvar RtlCharacters = /** @class */ (function () {\n    //#endregion\n    //#region constructors\n    function RtlCharacters() {\n        //#region fields\n        /// <summary>\n        /// Specifies the character types.\n        /// </summary>\n        this.types = [];\n        /// <summary>\n        /// Specifies the text order (RTL or LTR).\n        /// </summary>\n        this.textOrder = -1;\n        /// <summary>\n        /// Specifies the RTL character types.\n        /// </summary>\n        /* tslint:disable-next-line:prefer-array-literal */\n        this.rtlCharacterTypes = new Array(65536);\n        //#endregion\n        //#region constants\n        /// <summary>\n        /// Left-to-Right (Non-European or non-Arabic digits).\n        /// </summary>\n        this.L = 0;\n        /// <summary>\n        /// Left-to-Right Embedding\n        /// </summary>\n        this.LRE = 1;\n        /// <summary>\n        /// Left-to-Right Override\n        /// </summary>\n        this.LRO = 2;\n        /// <summary>\n        /// Right-to-Left (Hebrew alphabet, and related punctuation).\n        /// </summary>\n        this.R = 3;\n        /// <summary>\n        /// Right-to-Left Arabic \n        /// </summary>\n        this.AL = 4;\n        /// <summary>\n        /// Right-to-Left Embedding.\n        /// </summary>\n        this.RLE = 5;\n        /// <summary>\n        /// Right-to-Left Override\n        /// </summary>\n        this.RLO = 6;\n        /// <summary>\n        /// Pop Directional Format\n        /// </summary>\n        this.PDF = 7;\n        /// <summary>\n        /// European Number (European digits, Eastern Arabic-Indic digits).\n        /// </summary>\n        this.EN = 8;\n        /// <summary>\n        /// European Number Separator (Plus sign, Minus sign).\n        /// </summary>\n        this.ES = 9;\n        /// <summary>\n        /// European Number Terminator (Degree sign, currency symbols).\n        /// </summary>\n        this.ET = 10;\n        /// <summary>\n        /// Arabic Number (Arabic-Indic digits, Arabic decimal and thousands separators).\n        /// </summary>\n        this.AN = 11;\n        /// <summary>\n        /// Common Number Separator (Colon, Comma, Full Stop, No-Break Space.\n        /// </summary>\n        this.CS = 12;\n        /// <summary>\n        /// Nonspacing Mark (Characters with the General_Category values).\n        /// </summary>\n        this.NSM = 13;\n        /// <summary>\n        /// Boundary Neutral (Default ignorables, non-characters, and control characters, other than those explicitly given other types.)\n        /// </summary>\n        this.BN = 14;\n        /// <summary>\n        /// Paragraph Separator (Paragraph separator, appropriate Newline Functions, higher-level protocol paragraph determination).\n        /// </summary>\n        this.B = 15;\n        /// <summary>\n        /// \tSegment Separator (tab).\n        /// </summary>\n        this.S = 16;\n        /// <summary>\n        /// Whitespace (Space, Figure space, Line separator, Form feed, General Punctuation spaces).\n        /// </summary>\n        this.WS = 17;\n        /// <summary>\n        /// Other Neutrals (All other characters, including object replacement character).\n        /// </summary>\n        this.ON = 18;\n        /// <summary>\n        /// RTL character types.\n        /// </summary>\n        this.charTypes = [\n            this.L, this.EN, this.BN, this.ES, this.ES, this.S, this.ET, this.ET, this.B, this.AN, this.AN, this.S, this.CS, this.CS,\n            this.WS, this.NSM, this.NSM, this.B, this.BN, 27, this.BN, 28, 30, this.B, 31, 31, this.S, 32, 32, this.WS, 33, 34,\n            this.ON, 35, 37, this.ET, 38, 42, this.ON, 43, 43, this.ET, 44, 44, this.CS, 45, 45, this.ET, 46, 46, this.CS,\n            47, 47, this.CS, 48, 57, this.EN, 58, 58, this.CS, 59, 64, this.ON, 65, 90, this.L, 91, 96, this.ON, 97, 122, this.L,\n            123, 126, this.ON, 127, 132, this.BN, 133, 133, this.B, 134, 159, this.BN, 160, 160, this.CS,\n            161, 161, this.ON, 162, 165, this.ET, 166, 169, this.ON, 170, 170, this.L, 171, 175, this.ON,\n            176, 177, this.ET, 178, 179, this.EN, 180, 180, this.ON, 181, 181, this.L, 182, 184, this.ON,\n            185, 185, this.EN, 186, 186, this.L, 187, 191, this.ON, 192, 214, this.L, 215, 215, this.ON,\n            216, 246, this.L, 247, 247, this.ON, 248, 696, this.L, 697, 698, this.ON, 699, 705, this.L,\n            706, 719, this.ON, 720, 721, this.L, 722, 735, this.ON, 736, 740, this.L, 741, 749, this.ON,\n            750, 750, this.L, 751, 767, this.ON, 768, 855, this.NSM, 856, 860, this.L, 861, 879, this.NSM,\n            880, 883, this.L, 884, 885, this.ON, 886, 893, this.L, 894, 894, this.ON, 895, 899, this.L,\n            900, 901, this.ON, 902, 902, this.L, 903, 903, this.ON, 904, 1013, this.L, 1014, 1014, this.ON,\n            1015, 1154, this.L, 1155, 1158, this.NSM, 1159, 1159, this.L, 1160, 1161, this.NSM,\n            1162, 1417, this.L, 1418, 1418, this.ON, 1419, 1424, this.L, 1425, 1441, this.NSM,\n            1442, 1442, this.L, 1443, 1465, this.NSM, 1466, 1466, this.L, 1467, 1469, this.NSM,\n            1470, 1470, this.R, 1471, 1471, this.NSM, 1472, 1472, this.R, 1473, 1474, this.NSM,\n            1475, 1475, this.R, 1476, 1476, this.NSM, 1477, 1487, this.L, 1488, 1514, this.R,\n            1515, 1519, this.L, 1520, 1524, this.R, 1525, 1535, this.L, 1536, 1539, this.AL,\n            1540, 1547, this.L, 1548, 1548, this.CS, 1549, 1549, this.AL, 1550, 1551, this.ON,\n            1552, 1557, this.NSM, 1558, 1562, this.L, 1563, 1563, this.AL, 1564, 1566, this.L,\n            1567, 1567, this.AL, 1568, 1568, this.L, 1569, 1594, this.AL, 1595, 1599, this.L,\n            1600, 1610, this.AL, 1611, 1624, this.NSM, 1625, 1631, this.L, 1632, 1641, this.AN,\n            1642, 1642, this.ET, 1643, 1644, this.AN, 1645, 1647, this.AL, 1648, 1648, this.NSM,\n            1649, 1749, this.AL, 1750, 1756, this.NSM, 1757, 1757, this.AL, 1758, 1764, this.NSM,\n            1765, 1766, this.AL, 1767, 1768, this.NSM, 1769, 1769, this.ON, 1770, 1773, this.NSM,\n            1774, 1775, this.AL, 1776, 1785, this.EN, 1786, 1805, this.AL, 1806, 1806, this.L,\n            1807, 1807, this.BN, 1808, 1808, this.AL, 1809, 1809, this.NSM, 1810, 1839, this.AL,\n            1840, 1866, this.NSM, 1867, 1868, this.L, 1869, 1871, this.AL, 1872, 1919, this.L,\n            1920, 1957, this.AL, 1958, 1968, this.NSM, 1969, 1969, this.AL, 1970, 2304, this.L,\n            2305, 2306, this.NSM, 2307, 2363, this.L, 2364, 2364, this.NSM, 2365, 2368, this.L,\n            2369, 2376, this.NSM, 2377, 2380, this.L, 2381, 2381, this.NSM, 2382, 2384, this.L,\n            2385, 2388, this.NSM, 2389, 2401, this.L, 2402, 2403, this.NSM, 2404, 2432, this.L,\n            2433, 2433, this.NSM, 2434, 2491, this.L, 2492, 2492, this.NSM, 2493, 2496, this.L,\n            2497, 2500, this.NSM, 2501, 2508, this.L, 2509, 2509, this.NSM, 2510, 2529, this.L,\n            2530, 2531, this.NSM, 2532, 2545, this.L, 2546, 2547, this.ET, 2548, 2560, this.L,\n            2561, 2562, this.NSM, 2563, 2619, this.L, 2620, 2620, this.NSM, 2621, 2624, this.L,\n            2625, 2626, this.NSM, 2627, 2630, this.L, 2631, 2632, this.NSM, 2633, 2634, this.L,\n            2635, 2637, this.NSM, 2638, 2671, this.L, 2672, 2673, this.NSM, 2674, 2688, this.L,\n            2689, 2690, this.NSM, 2691, 2747, this.L, 2748, 2748, this.NSM, 2749, 2752, this.L,\n            2753, 2757, this.NSM, 2758, 2758, this.L, 2759, 2760, this.NSM, 2761, 2764, this.L,\n            2765, 2765, this.NSM, 2766, 2785, this.L, 2786, 2787, this.NSM, 2788, 2800, this.L,\n            2801, 2801, this.ET, 2802, 2816, this.L, 2817, 2817, this.NSM, 2818, 2875, this.L,\n            2876, 2876, this.NSM, 2877, 2878, this.L, 2879, 2879, this.NSM, 2880, 2880, this.L,\n            2881, 2883, this.NSM, 2884, 2892, this.L, 2893, 2893, this.NSM, 2894, 2901, this.L,\n            2902, 2902, this.NSM, 2903, 2945, this.L, 2946, 2946, this.NSM, 2947, 3007, this.L,\n            3008, 3008, this.NSM, 3009, 3020, this.L, 3021, 3021, this.NSM, 3022, 3058, this.L,\n            3059, 3064, this.ON, 3065, 3065, this.ET, 3066, 3066, this.ON, 3067, 3133, this.L,\n            3134, 3136, this.NSM, 3137, 3141, this.L, 3142, 3144, this.NSM, 3145, 3145, this.L,\n            3146, 3149, this.NSM, 3150, 3156, this.L, 3157, 3158, this.NSM, 3159, 3259, this.L,\n            3260, 3260, this.NSM, 3261, 3275, this.L, 3276, 3277, this.NSM, 3278, 3392, this.L,\n            3393, 3395, this.NSM, 3396, 3404, this.L, 3405, 3405, this.NSM, 3406, 3529, this.L,\n            3530, 3530, this.NSM, 3531, 3537, this.L, 3538, 3540, this.NSM, 3541, 3541, this.L,\n            3542, 3542, this.NSM, 3543, 3632, this.L, 3633, 3633, this.NSM, 3634, 3635, this.L,\n            3636, 3642, this.NSM, 3643, 3646, this.L, 3647, 3647, this.ET, 3648, 3654, this.L,\n            3655, 3662, this.NSM, 3663, 3760, this.L, 3761, 3761, this.NSM, 3762, 3763, this.L,\n            3764, 3769, this.NSM, 3770, 3770, this.L, 3771, 3772, this.NSM, 3773, 3783, this.L,\n            3784, 3789, this.NSM, 3790, 3863, this.L, 3864, 3865, this.NSM, 3866, 3892, this.L,\n            3893, 3893, this.NSM, 3894, 3894, this.L, 3895, 3895, this.NSM, 3896, 3896, this.L,\n            3897, 3897, this.NSM, 3898, 3901, this.ON, 3902, 3952, this.L, 3953, 3966, this.NSM,\n            3967, 3967, this.L, 3968, 3972, this.NSM, 3973, 3973, this.L, 3974, 3975, this.NSM,\n            3976, 3983, this.L, 3984, 3991, this.NSM, 3992, 3992, this.L, 3993, 4028, this.NSM,\n            4029, 4037, this.L, 4038, 4038, this.NSM, 4039, 4140, this.L, 4141, 4144, this.NSM,\n            4145, 4145, this.L, 4146, 4146, this.NSM, 4147, 4149, this.L, 4150, 4151, this.NSM,\n            4152, 4152, this.L, 4153, 4153, this.NSM, 4154, 4183, this.L, 4184, 4185, this.NSM,\n            4186, 5759, this.L, 5760, 5760, this.WS, 5761, 5786, this.L, 5787, 5788, this.ON,\n            5789, 5905, this.L, 5906, 5908, this.NSM, 5909, 5937, this.L, 5938, 5940, this.NSM,\n            5941, 5969, this.L, 5970, 5971, this.NSM, 5972, 6001, this.L, 6002, 6003, this.NSM,\n            6004, 6070, this.L, 6071, 6077, this.NSM, 6078, 6085, this.L, 6086, 6086, this.NSM,\n            6087, 6088, this.L, 6089, 6099, this.NSM, 6100, 6106, this.L, 6107, 6107, this.ET,\n            6108, 6108, this.L, 6109, 6109, this.NSM, 6110, 6127, this.L, 6128, 6137, this.ON,\n            6138, 6143, this.L, 6144, 6154, this.ON, 6155, 6157, this.NSM, 6158, 6158, this.WS,\n            6159, 6312, this.L, 6313, 6313, this.NSM, 6314, 6431, this.L, 6432, 6434, this.NSM,\n            6435, 6438, this.L, 6439, 6443, this.NSM, 6444, 6449, this.L, 6450, 6450, this.NSM,\n            6451, 6456, this.L, 6457, 6459, this.NSM, 6460, 6463, this.L, 6464, 6464, this.ON,\n            6465, 6467, this.L, 6468, 6469, this.ON, 6470, 6623, this.L, 6624, 6655, this.ON,\n            6656, 8124, this.L, 8125, 8125, this.ON, 8126, 8126, this.L, 8127, 8129, this.ON,\n            8130, 8140, this.L, 8141, 8143, this.ON, 8144, 8156, this.L, 8157, 8159, this.ON,\n            8160, 8172, this.L, 8173, 8175, this.ON, 8176, 8188, this.L, 8189, 8190, this.ON,\n            8191, 8191, this.L, 8192, 8202, this.WS, 8203, 8205, this.BN, 8206, 8206, this.L,\n            8207, 8207, this.R, 8208, 8231, this.ON, 8232, 8232, this.WS, 8233, 8233, this.B,\n            8234, 8234, this.LRE, 8235, 8235, this.RLE, 8236, 8236, this.PDF, 8237, 8237, this.LRO,\n            8238, 8238, this.RLO, 8239, 8239, this.WS, 8240, 8244, this.ET, 8245, 8276, this.ON,\n            8277, 8278, this.L, 8279, 8279, this.ON, 8280, 8286, this.L, 8287, 8287, this.WS,\n            8288, 8291, this.BN, 8292, 8297, this.L, 8298, 8303, this.BN, 8304, 8304, this.EN,\n            8305, 8307, this.L, 8308, 8313, this.EN, 8314, 8315, this.ET, 8316, 8318, this.ON,\n            8319, 8319, this.L, 8320, 8329, this.EN, 8330, 8331, this.ET, 8332, 8334, this.ON,\n            8335, 8351, this.L, 8352, 8369, this.ET, 8370, 8399, this.L, 8400, 8426, this.NSM,\n            8427, 8447, this.L, 8448, 8449, this.ON, 8450, 8450, this.L, 8451, 8454, this.ON,\n            8455, 8455, this.L, 8456, 8457, this.ON, 8458, 8467, this.L, 8468, 8468, this.ON,\n            8469, 8469, this.L, 8470, 8472, this.ON, 8473, 8477, this.L, 8478, 8483, this.ON,\n            8484, 8484, this.L, 8485, 8485, this.ON, 8486, 8486, this.L, 8487, 8487, this.ON,\n            8488, 8488, this.L, 8489, 8489, this.ON, 8490, 8493, this.L, 8494, 8494, this.ET,\n            8495, 8497, this.L, 8498, 8498, this.ON, 8499, 8505, this.L, 8506, 8507, this.ON,\n            8508, 8511, this.L, 8512, 8516, this.ON, 8517, 8521, this.L, 8522, 8523, this.ON,\n            8524, 8530, this.L, 8531, 8543, this.ON, 8544, 8591, this.L, 8592, 8721, this.ON,\n            8722, 8723, this.ET, 8724, 9013, this.ON, 9014, 9082, this.L, 9083, 9108, this.ON,\n            9109, 9109, this.L, 9110, 9168, this.ON, 9169, 9215, this.L, 9216, 9254, this.ON,\n            9255, 9279, this.L, 9280, 9290, this.ON, 9291, 9311, this.L, 9312, 9371, this.EN,\n            9372, 9449, this.L, 9450, 9450, this.EN, 9451, 9751, this.ON, 9752, 9752, this.L,\n            9753, 9853, this.ON, 9854, 9855, this.L, 9856, 9873, this.ON, 9874, 9887, this.L,\n            9888, 9889, this.ON, 9890, 9984, this.L, 9985, 9988, this.ON, 9989, 9989, this.L,\n            9990, 9993, this.ON, 9994, 9995, this.L, 9996, 10023, this.ON, 10024, 10024, this.L,\n            10025, 10059, this.ON, 10060, 10060, this.L, 10061, 10061, this.ON, 10062, 10062, this.L,\n            10063, 10066, this.ON, 10067, 10069, this.L, 10070, 10070, this.ON, 10071, 10071, this.L,\n            10072, 10078, this.ON, 10079, 10080, this.L, 10081, 10132, this.ON, 10133, 10135, this.L,\n            10136, 10159, this.ON, 10160, 10160, this.L, 10161, 10174, this.ON, 10175, 10191, this.L,\n            10192, 10219, this.ON, 10220, 10223, this.L, 10224, 11021, this.ON, 11022, 11903, this.L,\n            11904, 11929, this.ON, 11930, 11930, this.L, 11931, 12019, this.ON, 12020, 12031, this.L,\n            12032, 12245, this.ON, 12246, 12271, this.L, 12272, 12283, this.ON, 12284, 12287, this.L,\n            12288, 12288, this.WS, 12289, 12292, this.ON, 12293, 12295, this.L, 12296, 12320, this.ON,\n            12321, 12329, this.L, 12330, 12335, this.NSM, 12336, 12336, this.ON, 12337, 12341, this.L,\n            12342, 12343, this.ON, 12344, 12348, this.L, 12349, 12351, this.ON, 12352, 12440, this.L,\n            12441, 12442, this.NSM, 12443, 12444, this.ON, 12445, 12447, this.L, 12448, 12448, this.ON,\n            12449, 12538, this.L, 12539, 12539, this.ON, 12540, 12828, this.L, 12829, 12830, this.ON,\n            12831, 12879, this.L, 12880, 12895, this.ON, 12896, 12923, this.L, 12924, 12925, this.ON,\n            12926, 12976, this.L, 12977, 12991, this.ON, 12992, 13003, this.L, 13004, 13007, this.ON,\n            13008, 13174, this.L, 13175, 13178, this.ON, 13179, 13277, this.L, 13278, 13279, this.ON,\n            13280, 13310, this.L, 13311, 13311, this.ON, 13312, 19903, this.L, 19904, 19967, this.ON,\n            19968, 42127, this.L, 42128, 42182, this.ON, 42183, 64284, this.L, 64285, 64285, this.R,\n            64286, 64286, this.NSM, 64287, 64296, this.R, 64297, 64297, this.ET, 64298, 64310, this.R,\n            64311, 64311, this.L, 64312, 64316, this.R, 64317, 64317, this.L, 64318, 64318, this.R,\n            64319, 64319, this.L, 64320, 64321, this.R, 64322, 64322, this.L, 64323, 64324, this.R,\n            64325, 64325, this.L, 64326, 64335, this.R, 64336, 64433, this.AL, 64434, 64466, this.L,\n            64467, 64829, this.AL, 64830, 64831, this.ON, 64832, 64847, this.L, 64848, 64911, this.AL,\n            64912, 64913, this.L, 64914, 64967, this.AL, 64968, 65007, this.L, 65008, 65020, this.AL,\n            65021, 65021, this.ON, 65022, 65023, this.L, 65024, 65039, this.NSM, 65040, 65055, this.L,\n            65056, 65059, this.NSM, 65060, 65071, this.L, 65072, 65103, this.ON, 65104, 65104, this.CS,\n            65105, 65105, this.ON, 65106, 65106, this.CS, 65107, 65107, this.L, 65108, 65108, this.ON,\n            65109, 65109, this.CS, 65110, 65118, this.ON, 65119, 65119, this.ET, 65120, 65121, this.ON,\n            65122, 65123, this.ET, 65124, 65126, this.ON, 65127, 65127, this.L, 65128, 65128, this.ON,\n            65129, 65130, this.ET, 65131, 65131, this.ON, 65132, 65135, this.L, 65136, 65140, this.AL,\n            65141, 65141, this.L, 65142, 65276, this.AL, 65277, 65278, this.L, 65279, 65279, this.BN,\n            65280, 65280, this.L, 65281, 65282, this.ON, 65283, 65285, this.ET, 65286, 65290, this.ON,\n            65291, 65291, this.ET, 65292, 65292, this.CS, 65293, 65293, this.ET, 65294, 65294, this.CS,\n            65295, 65295, this.ES, 65296, 65305, this.EN, 65306, 65306, this.CS, 65307, 65312, this.ON,\n            65313, 65338, this.L, 65339, 65344, this.ON, 65345, 65370, this.L, 65371, 65381, this.ON,\n            65382, 65503, this.L, 65504, 65505, this.ET, 65506, 65508, this.ON, 65509, 65510, this.ET,\n            65511, 65511, this.L, 65512, 65518, this.ON, 65519, 65528, this.L, 65529, 65531, this.BN,\n            65532, 65533, this.ON, 65534, 65535, this.L\n        ];\n        for (var i = 0; i < this.charTypes.length; ++i) {\n            var start = this.charTypes[i];\n            var end = this.charTypes[++i];\n            var b = this.charTypes[++i];\n            while (start <= end) {\n                this.rtlCharacterTypes[start++] = b;\n            }\n        }\n    }\n    //#endregion\n    //#region implementation\n    RtlCharacters.prototype.getVisualOrder = function (inputText, isRtl) {\n        this.types = this.getCharacterCode(inputText);\n        this.textOrder = isRtl ? this.LRE : this.L;\n        this.doVisualOrder();\n        var result = [];\n        for (var i = 0; i < this.levels.length; i++) {\n            result[i] = this.levels[i];\n        }\n        return result;\n    };\n    RtlCharacters.prototype.getCharacterCode = function (text) {\n        var characterCodes = [];\n        for (var i = 0; i < text.length; i++) {\n            characterCodes[i] = this.rtlCharacterTypes[text[i].charCodeAt(0)];\n        }\n        return characterCodes;\n    };\n    RtlCharacters.prototype.setDefaultLevels = function () {\n        for (var i = 0; i < this.length; i++) {\n            this.levels[i] = this.textOrder;\n        }\n    };\n    RtlCharacters.prototype.setLevels = function () {\n        this.setDefaultLevels();\n        for (var n = 0; n < this.length; ++n) {\n            var level = this.levels[n];\n            if ((level & 0x80) !== 0) {\n                level &= 0x7f;\n                this.result[n] = ((level & 0x1) === 0) ? this.L : this.R;\n            }\n            this.levels[n] = level;\n        }\n    };\n    RtlCharacters.prototype.updateLevels = function (index, level, length) {\n        if ((level & 1) === 0) {\n            for (var i = index; i < length; ++i) {\n                if (this.result[i] === this.R) {\n                    this.levels[i] += 1;\n                }\n                else if (this.result[i] !== this.L) {\n                    this.levels[i] += 2;\n                }\n            }\n        }\n        else {\n            for (var i = index; i < length; ++i) {\n                if (this.result[i] !== this.R) {\n                    this.levels[i] += 1;\n                }\n            }\n        }\n    };\n    RtlCharacters.prototype.doVisualOrder = function () {\n        this.length = this.types.length;\n        this.result = this.types;\n        this.levels = [];\n        this.setLevels();\n        this.length = this.getEmbeddedCharactersLength();\n        var preview = this.textOrder;\n        var i = 0;\n        while (i < this.length) {\n            var level = this.levels[i];\n            var preType = ((Math.max(preview, level) & 0x1) === 0) ? this.L : this.R;\n            var length_1 = i + 1;\n            while (length_1 < this.length && this.levels[length_1] === level) {\n                ++length_1;\n            }\n            var success = length_1 < this.length ? this.levels[length_1] : this.textOrder;\n            var type = ((Math.max(success, level) & 0x1) === 0) ? this.L : this.R;\n            this.checkNSM(i, length_1, level, preType, type);\n            this.updateLevels(i, level, length_1);\n            preview = level;\n            i = length_1;\n        }\n        this.checkEmbeddedCharacters(this.length);\n    };\n    RtlCharacters.prototype.getEmbeddedCharactersLength = function () {\n        var index = 0;\n        for (var i = 0; i < this.length; ++i) {\n            if (!(this.types[i] === this.LRE || this.types[i] === this.RLE || this.types[i] === this.LRO ||\n                this.types[i] === this.RLO || this.types[i] === this.PDF || this.types[i] === this.BN)) {\n                this.result[index] = this.result[i];\n                this.levels[index] = this.levels[i];\n                index++;\n            }\n        }\n        return index;\n    };\n    RtlCharacters.prototype.checkEmbeddedCharacters = function (length) {\n        for (var i = this.types.length - 1; i >= 0; --i) {\n            if (this.types[i] === this.LRE || this.types[i] === this.RLE || this.types[i] === this.LRO ||\n                this.types[i] === this.RLO || this.types[i] === this.PDF || this.types[i] === this.BN) {\n                this.result[i] = this.types[i];\n                this.levels[i] = -1;\n            }\n            else {\n                length -= 1;\n                this.result[i] = this.result[length];\n                this.levels[i] = this.levels[length];\n            }\n        }\n        for (var i = 0; i < this.types.length; i++) {\n            if (this.levels[i] === -1) {\n                if (i === 0) {\n                    this.levels[i] = this.textOrder;\n                }\n                else {\n                    this.levels[i] = this.levels[i - 1];\n                }\n            }\n        }\n    };\n    RtlCharacters.prototype.checkNSM = function (index, length, level, startType, endType) {\n        var charType = startType;\n        for (var i = index; i < length; ++i) {\n            if (this.result[i] === this.NSM) {\n                this.result[i] = charType;\n            }\n            else {\n                charType = this.result[i];\n            }\n        }\n        this.checkEuropeanDigits(index, length, level, startType, endType);\n    };\n    RtlCharacters.prototype.checkEuropeanDigits = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this.result[i] === this.EN) {\n                for (var j = i - 1; j >= index; --j) {\n                    if (this.result[j] === this.L || this.result[j] === this.R || this.result[j] === this.AL) {\n                        if (this.result[j] === this.AL) {\n                            this.result[i] = this.AN;\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n        this.checkArabicCharacters(index, length, level, startType, endType);\n    };\n    RtlCharacters.prototype.checkArabicCharacters = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this.result[i] === this.AL) {\n                this.result[i] = this.R;\n            }\n        }\n        this.checkEuropeanNumberSeparator(index, length, level, startType, endType);\n    };\n    RtlCharacters.prototype.checkEuropeanNumberSeparator = function (index, length, level, startType, endType) {\n        for (var i = index + 1; i < length - 1; ++i) {\n            if (this.result[i] === this.ES || this.result[i] === this.CS) {\n                var preview = this.result[i - 1];\n                var success = this.result[i + 1];\n                if (preview === this.EN && success === this.EN) {\n                    this.result[i] = this.EN;\n                }\n                else if (this.result[i] === this.CS && preview === this.AN && success === this.AN) {\n                    this.result[i] = this.AN;\n                }\n            }\n        }\n        this.checkEuropeanNumberTerminator(index, length, level, startType, endType);\n    };\n    RtlCharacters.prototype.checkEuropeanNumberTerminator = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this.result[i] === this.ET) {\n                var s = i;\n                var b = [];\n                b.push(this.ET);\n                var l = this.getLength(s, length, b);\n                var data = s === index ? startType : this.result[s - 1];\n                if (data !== this.EN) {\n                    data = (l === length) ? endType : this.result[l];\n                }\n                if (data === this.EN) {\n                    for (var j = s; j < l; ++j) {\n                        this.result[j] = this.EN;\n                    }\n                }\n                i = l;\n            }\n        }\n        this.checkOtherNeutrals(index, length, level, startType, endType);\n    };\n    RtlCharacters.prototype.checkOtherNeutrals = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this.result[i] === this.ES || this.result[i] === this.ET || this.result[i] === this.CS) {\n                this.result[i] = this.ON;\n            }\n        }\n        this.checkOtherCharacters(index, length, level, startType, endType);\n    };\n    RtlCharacters.prototype.checkOtherCharacters = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this.result[i] === this.EN) {\n                var pst = startType;\n                for (var j = i - 1; j >= index; --j) {\n                    if (this.result[j] === this.L || this.result[j] === this.R) {\n                        pst = this.result[j];\n                        break;\n                    }\n                }\n                if (pst === this.L) {\n                    this.result[i] = this.L;\n                }\n            }\n        }\n        this.checkCommanCharacters(index, length, level, startType, endType);\n    };\n    RtlCharacters.prototype.getLength = function (index, length, validSet) {\n        --index;\n        while (++index < length) {\n            var t = this.result[index];\n            for (var i = 0; i < validSet.length; ++i) {\n                if (t === validSet[i]) {\n                    index = this.getLength(++index, length, validSet);\n                }\n            }\n            return index;\n        }\n        return length;\n    };\n    RtlCharacters.prototype.checkCommanCharacters = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this.result[i] === this.WS || this.result[i] === this.ON || this.result[i] === this.B ||\n                this.result[i] === this.S) {\n                var s = i;\n                var byte = [this.B, this.S, this.WS, this.ON];\n                var l = this.getLength(s, length, byte);\n                var lt = 0;\n                var tt = 0;\n                var rt = 0;\n                if (s === index) {\n                    lt = startType;\n                }\n                else {\n                    lt = this.result[s - 1];\n                    if (lt === this.AN) {\n                        lt = this.R;\n                    }\n                    else if (lt === this.EN) {\n                        lt = this.R;\n                    }\n                }\n                if (l === length) {\n                    tt = endType;\n                }\n                else {\n                    tt = this.result[l];\n                    if (tt === this.AN) {\n                        tt = this.R;\n                    }\n                    else if (tt === this.EN) {\n                        tt = this.R;\n                    }\n                }\n                if (lt === tt) {\n                    rt = lt;\n                }\n                else {\n                    rt = ((level & 0x1) === 0) ? this.L : this.R;\n                }\n                for (var j = s; j < l; ++j) {\n                    this.result[j] = rt;\n                }\n                i = l;\n            }\n        }\n    };\n    return RtlCharacters;\n}());\nexport { RtlCharacters };\n", "import { PdfString } from './../../primitives/pdf-string';\nimport { ArabicShapeRenderer } from './rtl/rtl-text-shape';\nimport { PdfTextDirection } from './../enum';\nimport { Bidi } from './rtl/rtl-bidirectional';\n/**\n * `Metrics` of the font.\n * @private\n */\nvar RtlRenderer = /** @class */ (function () {\n    function RtlRenderer() {\n        //region Constants\n        /// Open bracket symbol.\n        /// </summary>\n        this.openBracket = '(';\n        /// <summary>\n        /// Close bracket symbol.\n        /// </summary>\n        this.closeBracket = ')';\n        //#endregion\n    }\n    //#region Constructors\n    /// <summary>\n    /// Initializes a new instance of the <see cref=\"RtlRenderer\"/> class.\n    /// </summary>\n    // public constructor() {\n    // }\n    //#region Public Methods\n    /// <summary>\n    /// Layouts text. Changes blocks position in the RTL text.\n    /// Ligates the text if needed.\n    /// </summary>\n    /// <param name=\"line\">Line of the text.</param>\n    /// <param name=\"font\">Font to be used for string printing.</param>\n    /// <param name=\"rtl\">Font alignment.</param>\n    /// <param name=\"wordSpace\">Indicates whether Word Spacing used or not.</param>\n    /// <returns>Layout string.</returns>\n    RtlRenderer.prototype.layout = function (line, font, rtl, wordSpace, format) {\n        if (line == null) {\n            throw new Error('ArgumentNullException : line');\n        }\n        if (font == null) {\n            throw new Error('ArgumentNullException : font');\n        }\n        var result = [];\n        if (font.Unicode) {\n            result = this.customLayout(line, rtl, format, font, wordSpace);\n        }\n        else {\n            result = [];\n            result[0] = line;\n        }\n        return result;\n    };\n    /// <summary>\n    /// Layouts a string and splits it by the words and using correct lay outing.\n    /// </summary>\n    /// <param name=\"line\">Text line.</param>\n    /// <param name=\"font\">Font object.</param>\n    /// <param name=\"rtl\">Indicates whether RTL should be applied.</param>\n    /// <param name=\"wordSpace\">Indicates whether word spacing is used.</param>\n    /// <returns>Array of words if converted, null otherwise.</returns>\n    RtlRenderer.prototype.splitLayout = function (line, font, rtl, wordSpace, format) {\n        if (line == null) {\n            throw new Error('ArgumentNullException : line');\n        }\n        if (font == null) {\n            throw new Error('ArgumentNullException : font');\n        }\n        var words = [];\n        var system = false;\n        if (!system || words == null) {\n            words = this.customSplitLayout(line, font, rtl, wordSpace, format);\n        }\n        return words;\n    };\n    //#endregion\n    //#region Implementation\n    // private isEnglish( word : string) : boolean\n    // {\n    //     let c : string = (word.length > 0) ? word[0] : '';\n    //     return (c >= '0' && c < 'ÿ');\n    // }\n    // private keepOrder( words : string, startIndex : number, count: number, result : string[], resultIndex : number) : void\n    // {\n    //     for (let i : number = 0, ri = resultIndex - count + 1; i < count; ++i, ++ri) {\n    //         result[ri] = words[i + startIndex];\n    //     }\n    // }\n    /// <summary>\n    /// Uses system API to layout the text.\n    /// </summary>\n    /// <param name=\"line\">Line of the text to be layouted.</param>\n    /// <param name=\"font\">Font which is used for text printing.</param>\n    /// <param name=\"rtl\">Indicates whether we use RTL or RTL lay outing of the text container.</param>\n    /// <returns>Layout string.</returns>\n    /* tslint:disable-next-line:max-line-length */\n    RtlRenderer.prototype.getGlyphIndex = function (line, font, rtl, /*out*/ glyphs, custom) {\n        var success = true;\n        var fail = false;\n        if (line == null) {\n            throw new Error('ArgumentNullException : line');\n        }\n        if (font == null) {\n            throw new Error('ArgumentNullException : font');\n        }\n        glyphs = null;\n        if (line.length === 0) {\n            return { success: fail, glyphs: glyphs };\n        }\n        var renderer = new ArabicShapeRenderer();\n        var text = renderer.shape(line, 0);\n        var internalFont = font.fontInternal;\n        var ttfReader = internalFont.ttfReader;\n        glyphs = new Uint16Array(text.length);\n        var i = 0;\n        for (var k = 0, len = text.length; k < len; k++) {\n            var ch = text[k];\n            var glyphInfo = ttfReader.getGlyph(ch);\n            if (glyphInfo !== null && typeof glyphInfo !== 'undefined') {\n                glyphs[i++] = (glyphInfo).index;\n            }\n        }\n        return { success: success, glyphs: glyphs };\n    };\n    /* tslint:disable-next-line:max-line-length */\n    RtlRenderer.prototype.customLayout = function (line, rtl, format, font, wordSpace) {\n        if (wordSpace === null || typeof wordSpace === 'undefined') {\n            if (line == null) {\n                throw new Error('ArgumentNullException : line');\n            }\n            var result = null;\n            //bidirectional order.\n            if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.None) {\n                var bidi = new Bidi();\n                result = bidi.getLogicalToVisualString(line, rtl);\n            }\n            return result;\n        }\n        else {\n            if (line == null) {\n                throw new Error('ArgumentNullException : line');\n            }\n            if (font == null) {\n                throw new Error('ArgumentNullException : font');\n            }\n            var layouted = null;\n            if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.None) {\n                var renderer = new ArabicShapeRenderer();\n                var txt = renderer.shape(line, 0);\n                layouted = this.customLayout(txt, rtl, format);\n            }\n            // else {\n            //     layouted = this.customLayout(line, rtl, format);\n            // }\n            // We have unicode font, but from the file.        \n            var result = [];\n            // Split the text by words if word spacing is not default.\n            if (wordSpace) {\n                var words = layouted.split('');\n                var count = words.length;\n                for (var i = 0; i < count; i++) {\n                    words[i] = this.addChars(font, words[i]);\n                }\n                result = words;\n            }\n            else {\n                result = [];\n                result[0] = this.addChars(font, layouted);\n            }\n            return result;\n        }\n    };\n    /// <summary>\n    /// Add information about used glyphs to the font.\n    /// </summary>\n    /// <param name=\"font\">Font used for text rendering.</param>\n    /// <param name=\"glyphs\">Array of used glyphs.</param>\n    /// <returns>String in the form to be written to the file.</returns>\n    RtlRenderer.prototype.addChars = function (font, glyphs) {\n        var line = glyphs;\n        if (font == null) {\n            throw new Error('ArgumentNullException : font');\n        }\n        if (line == null) {\n            throw new Error('ArgumentNullException : line');\n        }\n        var text = line;\n        var internalFont = font.fontInternal;\n        var ttfReader = internalFont.ttfReader;\n        font.setSymbols(text);\n        // Reconvert string according to unicode standard.\n        text = ttfReader.convertString(text);\n        var bytes = PdfString.toUnicodeArray(text, false);\n        text = PdfString.byteToString(bytes);\n        return text;\n        // else {\n        //     if (font == null) {\n        //         throw new Error('ArgumentNullException : font');\n        //     }\n        //     if (glyphs == null) {\n        //         throw new Error('ArgumentNullException : glyphs');\n        //     }\n        //     // Mark the chars as used.\n        //     let text : string = '';\n        //     font.setSymbols(glyphs);\n        //     // Create string from the glyphs.\n        //     \n        //     let chars : string[] = [];\n        //     for (let i : number = 0; i < glyphs.length; i++) {\n        //         chars[i] = glyphs[i].toString();\n        //     }\n        //     for (let j : number = 0 ; j < chars.length; j++) {\n        //         text = text + chars[j];\n        //     }\n        //     let bytes : number[] = PdfString.toUnicodeArray(text, false);\n        //     text = PdfString.byteToString(bytes);\n        //     return text;\n        // }\n    };\n    /// <summary>\n    /// Layouts a string and splits it by the words by using custom lay outing.\n    /// </summary>\n    /// <param name=\"line\">Text line.</param>\n    /// <param name=\"font\">Font object.</param>\n    /// <param name=\"rtl\">Indicates whether RTL should be applied.</param>\n    /// <param name=\"wordSpace\">Indicates whether word spacing is used.</param>\n    /// <returns>Array of words if converted, null otherwise.</returns>\n    /* tslint:disable-next-line:max-line-length */\n    RtlRenderer.prototype.customSplitLayout = function (line, font, rtl, wordSpace, format) {\n        if (line == null) {\n            throw new Error('ArgumentNullException : line');\n        }\n        if (font == null) {\n            throw new Error('ArgumentNullException : font');\n        }\n        var reversedLine = this.customLayout(line, rtl, format);\n        var words = reversedLine.split('');\n        return words;\n    };\n    return RtlRenderer;\n}());\nexport { RtlRenderer };\n", "var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfColorSpace } from './../enum';\nimport { PdfColor } from './../pdf-color';\nimport { PdfBrush } from './pdf-brush';\nimport { PdfDictionary } from '../../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfBoolean } from './../../primitives/pdf-boolean';\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfName } from '../../primitives/pdf-name';\nimport { PdfNumber } from '../../primitives/pdf-number';\nimport { PdfReferenceHolder } from '../../primitives/pdf-reference';\n/**\n * `PdfGradientBrush` class provides objects used to fill the interiors of graphical shapes such as rectangles,\n * ellipses, pies, polygons, and paths.\n * @private\n */\nvar PdfGradientBrush = /** @class */ (function (_super) {\n    __extends(PdfGradientBrush, _super);\n    //Constructor\n    /**\n     * Initializes a new instance of the `PdfGradientBrush` class.\n     * @public\n     */\n    /* tslint:disable-next-line:max-line-length */\n    function PdfGradientBrush(shading) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Local variable to store the background color.\n         * @private\n         */\n        _this.mbackground = new PdfColor(255, 255, 255);\n        /**\n         * Local variable to store the stroking color.\n         * @private\n         */\n        _this.mbStroking = false;\n        /**\n         * Local variable to store the function.\n         * @private\n         */\n        _this.mfunction = null;\n        /**\n         * Local variable to store the DictionaryProperties.\n         * @private\n         */\n        _this.dictionaryProperties = new DictionaryProperties();\n        _this.mpatternDictionary = new PdfDictionary();\n        _this.mpatternDictionary.items.setValue(_this.dictionaryProperties.type, new PdfName(_this.dictionaryProperties.pattern));\n        _this.mpatternDictionary.items.setValue(_this.dictionaryProperties.patternType, new PdfNumber(2));\n        _this.shading = shading;\n        _this.colorSpace = PdfColorSpace.Rgb;\n        return _this;\n    }\n    Object.defineProperty(PdfGradientBrush.prototype, \"background\", {\n        //Properties\n        /**\n         * Gets or sets the background color of the brush.\n         * @public\n         */\n        get: function () {\n            return this.mbackground;\n        },\n        set: function (value) {\n            this.mbackground = value;\n            var sh = this.shading;\n            if (value.isEmpty) {\n                sh.remove(this.dictionaryProperties.background);\n            }\n            else {\n                sh.items.setValue(this.dictionaryProperties.background, value.toArray(this.colorSpace));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGradientBrush.prototype, \"antiAlias\", {\n        /**\n         * Gets or sets a value indicating whether use anti aliasing algorithm.\n         * @public\n         */\n        get: function () {\n            var sh = this.shading;\n            var aa = (sh.items.getValue(this.dictionaryProperties.antiAlias));\n            return aa.value;\n        },\n        set: function (value) {\n            var sh = this.shading;\n            var aa = (sh.items.getValue(this.dictionaryProperties.antiAlias));\n            if ((aa == null && typeof aa === 'undefined')) {\n                aa = new PdfBoolean(value);\n                sh.items.setValue(this.dictionaryProperties.antiAlias, aa);\n            }\n            else {\n                aa.value = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGradientBrush.prototype, \"function\", {\n        /**\n         * Gets or sets the function of the brush.\n         * @protected\n         */\n        get: function () {\n            return this.mfunction;\n        },\n        set: function (value) {\n            this.mfunction = value;\n            if (value != null && typeof value !== 'undefined') {\n                this.shading.items.setValue(this.dictionaryProperties.function, new PdfReferenceHolder(this.mfunction));\n            }\n            else {\n                this.shading.remove(this.dictionaryProperties.function);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGradientBrush.prototype, \"bBox\", {\n        /**\n         * Gets or sets the boundary box of the brush.\n         * @protected\n         */\n        get: function () {\n            var sh = this.shading;\n            var box = (sh.items.getValue(this.dictionaryProperties.bBox));\n            return box;\n        },\n        set: function (value) {\n            var sh = this.shading;\n            if (value == null && typeof value === 'undefined') {\n                sh.remove(this.dictionaryProperties.bBox);\n            }\n            else {\n                sh.items.setValue(this.dictionaryProperties.bBox, value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGradientBrush.prototype, \"colorSpace\", {\n        /**\n         * Gets or sets the color space of the brush.\n         * @public\n         */\n        get: function () {\n            return this.mcolorSpace;\n        },\n        set: function (value) {\n            var colorSpace = this.shading.items.getValue(this.dictionaryProperties.colorSpace);\n            if ((value !== this.mcolorSpace) || (colorSpace == null)) {\n                this.mcolorSpace = value;\n                var csValue = this.colorSpaceToDeviceName(value);\n                this.shading.items.setValue(this.dictionaryProperties.colorSpace, new PdfName(csValue));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGradientBrush.prototype, \"stroking\", {\n        /**\n         * Gets or sets a value indicating whether this PdfGradientBrush is stroking.\n         * @public\n         */\n        get: function () {\n            return this.mbStroking;\n        },\n        set: function (value) {\n            this.mbStroking = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGradientBrush.prototype, \"patternDictionary\", {\n        /**\n         * Gets the pattern dictionary.\n         * @protected\n         */\n        get: function () {\n            if (this.mpatternDictionary == null) {\n                this.mpatternDictionary = new PdfDictionary();\n            }\n            return this.mpatternDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGradientBrush.prototype, \"shading\", {\n        /**\n         * Gets or sets the shading dictionary.\n         * @protected\n         */\n        get: function () {\n            return this.mshading;\n        },\n        set: function (value) {\n            if (value == null) {\n                throw new Error('ArgumentNullException : Shading');\n            }\n            if (value !== this.mshading) {\n                this.mshading = value;\n                this.patternDictionary.items.setValue(this.dictionaryProperties.shading, new PdfReferenceHolder(this.mshading));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGradientBrush.prototype, \"matrix\", {\n        /**\n         * Gets or sets the transformation matrix.\n         * @public\n         */\n        get: function () {\n            return this.mmatrix;\n        },\n        set: function (value) {\n            if (value == null) {\n                throw new Error('ArgumentNullException : Matrix');\n            }\n            if (value !== this.mmatrix) {\n                this.mmatrix = value.clone();\n                var m = new PdfArray(this.mmatrix.matrix.elements);\n                this.mpatternDictionary.items.setValue(this.dictionaryProperties.matrix, m);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Overrides\n    /**\n     * Monitors the changes of the brush and modify PDF state respectfully.\n     * @param brush The brush.\n     * @param streamWriter The stream writer.\n     * @param getResources The get resources delegate.\n     * @param saveChanges if set to true the changes should be saved anyway.\n     * @param currentColorSpace The current color space.\n     */\n    /* tslint:disable-next-line:max-line-length */\n    PdfGradientBrush.prototype.monitorChanges = function (brush, streamWriter, getResources, saveChanges, currentColorSpace) {\n        var diff = false;\n        if (brush instanceof PdfGradientBrush) {\n            if ((this.colorSpace !== currentColorSpace)) {\n                this.colorSpace = currentColorSpace;\n                this.resetFunction();\n            }\n            //  Set the /Pattern colour space.\n            streamWriter.setColorSpace('Pattern', this.mbStroking);\n            //  Set the pattern for non-stroking operations.\n            var resources = getResources.getResources();\n            var name_1 = resources.getName(this);\n            streamWriter.setColourWithPattern(null, name_1, this.mbStroking);\n            diff = true;\n        }\n        return diff;\n    };\n    /**\n     * Resets the changes, which were made by the brush.\n     * In other words resets the state to the initial one.\n     * @param streamWriter The stream writer.\n     */\n    PdfGradientBrush.prototype.resetChanges = function (streamWriter) {\n        //  Unable reset.\n    };\n    //Implementation\n    /**\n     * Converts colorspace enum to a PDF name.\n     * @param colorSpace The color space enum value.\n     */\n    PdfGradientBrush.prototype.colorSpaceToDeviceName = function (colorSpace) {\n        var result;\n        switch (colorSpace) {\n            case PdfColorSpace.Rgb:\n                result = 'DeviceRGB';\n                break;\n        }\n        return result;\n    };\n    /**\n     * Resets the pattern dictionary.\n     * @param dictionary A new pattern dictionary.\n     */\n    PdfGradientBrush.prototype.resetPatternDictionary = function (dictionary) {\n        this.mpatternDictionary = dictionary;\n    };\n    /**\n     * Clones the anti aliasing value.\n     * @param brush The brush.\n     */\n    PdfGradientBrush.prototype.cloneAntiAliasingValue = function (brush) {\n        if ((brush == null)) {\n            throw new Error('ArgumentNullException : brush');\n        }\n        var sh = this.shading;\n        var aa = (sh.items.getValue(this.dictionaryProperties.antiAlias));\n        if ((aa != null)) {\n            brush.shading.items.setValue(this.dictionaryProperties.antiAlias, new PdfBoolean(aa.value));\n        }\n    };\n    /**\n     * Clones the background value.\n     * @param brush The brush.\n     */\n    PdfGradientBrush.prototype.cloneBackgroundValue = function (brush) {\n        var background = this.background;\n        if (!background.isEmpty) {\n            brush.background = background;\n        }\n    };\n    Object.defineProperty(PdfGradientBrush.prototype, \"element\", {\n        /* tslint:enable */\n        // IPdfWrapper Members\n        /**\n         * Gets the `element`.\n         * @private\n         */\n        get: function () {\n            return this.patternDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGradientBrush;\n}(PdfBrush));\nexport { PdfGradientBrush };\n", "/**\n * PdfTemplate.ts class for EJ2-PDF\n */\nimport { PdfStream } from './../../primitives/pdf-stream';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfGraphics } from './../pdf-graphics';\nimport { PdfResources } from './../pdf-resources';\nimport { PdfName } from './../../primitives/pdf-name';\nimport { PointF, SizeF, RectangleF } from './../../drawing/pdf-drawing';\nimport { GetResourceEventHandler } from './../pdf-graphics';\n/**\n * Represents `Pdf Template` object.\n * @private\n */\nvar PdfTemplate = /** @class */ (function () {\n    function PdfTemplate(arg1, arg2) {\n        /**\n         * Initialize an instance for `DictionaryProperties` class.\n         * @private\n         * @hidden\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Checks whether the transformation 'is performed'.\n         * @default true\n         * @private\n         */\n        this.writeTransformation = true;\n        if (typeof arg1 === 'undefined') {\n            //\n        }\n        else if (arg1 instanceof SizeF && typeof arg2 === 'undefined') {\n            this.content = new PdfStream();\n            var tempSize = new SizeF(arg1.width, arg1.height);\n            this.setSize(tempSize);\n            this.initialize();\n        }\n        else {\n            this.content = new PdfStream();\n            this.setSize(new SizeF(arg1, arg2));\n            this.initialize();\n        }\n    }\n    Object.defineProperty(PdfTemplate.prototype, \"size\", {\n        //Properties\n        /**\n         * Gets the size of the 'PdfTemplate'.\n         */\n        get: function () {\n            return this.templateSize;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTemplate.prototype, \"width\", {\n        /**\n         * Gets the width of the 'PdfTemplate'.\n         */\n        get: function () {\n            return this.size.width;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTemplate.prototype, \"height\", {\n        /**\n         * Gets the height of the 'PdfTemplate'.\n         */\n        get: function () {\n            return this.size.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTemplate.prototype, \"graphics\", {\n        /**\n         * Gets the `graphics` of the 'PdfTemplate'.\n         */\n        get: function () {\n            if (this.pdfGraphics == null || typeof this.pdfGraphics === 'undefined') {\n                var gr = new GetResourceEventHandler(this);\n                var g = new PdfGraphics(this.size, gr, this.content);\n                this.pdfGraphics = g;\n                // if(this.writeTransformation) {\n                // Transform co-ordinates to Top/Left.\n                this.pdfGraphics.initializeCoordinates();\n                // }\n            }\n            return this.pdfGraphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the resources and modifies the template dictionary.\n     * @private\n     */\n    PdfTemplate.prototype.getResources = function () {\n        if (this.resources == null) {\n            this.resources = new PdfResources();\n            this.content.items.setValue(this.dictionaryProperties.resources, this.resources);\n        }\n        return this.resources;\n    };\n    // Public methods\n    /**\n     * `Initialize` the type and subtype of the template.\n     * @private\n     */\n    PdfTemplate.prototype.initialize = function () {\n        this.addType();\n        this.addSubType();\n    };\n    /**\n     * `Adds type key`.\n     * @private\n     */\n    PdfTemplate.prototype.addType = function () {\n        var value = new PdfName(this.dictionaryProperties.xObject);\n        this.content.items.setValue(this.dictionaryProperties.type, value);\n    };\n    /**\n     * `Adds SubType key`.\n     * @private\n     */\n    PdfTemplate.prototype.addSubType = function () {\n        var value = new PdfName(this.dictionaryProperties.form);\n        this.content.items.setValue(this.dictionaryProperties.subtype, value);\n    };\n    PdfTemplate.prototype.reset = function (size) {\n        if (typeof size === 'undefined') {\n            if (this.resources != null) {\n                this.resources = null;\n                this.content.remove(this.dictionaryProperties.resources);\n            }\n            if (this.graphics != null) {\n                this.graphics.reset(this.size);\n            }\n        }\n        else {\n            this.setSize(size);\n            this.reset();\n        }\n    };\n    /**\n     * `Set the size` of the 'PdfTemplate'.\n     * @private\n     */\n    PdfTemplate.prototype.setSize = function (size) {\n        var rect = new RectangleF(new PointF(0, 0), size);\n        var val = PdfArray.fromRectangle(rect);\n        this.content.items.setValue(this.dictionaryProperties.bBox, val);\n        this.templateSize = size;\n    };\n    Object.defineProperty(PdfTemplate.prototype, \"element\", {\n        // /**\n        //  * Returns the value of current graphics.\n        //  * @private\n        //  */\n        // public GetGraphics(g : PdfGraphics) : PdfGraphics {\n        //     if (this.graphics == null || typeof this.graphics === 'undefined') {\n        //         this.graphics = g;\n        //         this.graphics.Size = this.Size;\n        //         this.graphics.StreamWriter = new PdfStreamWriter(this.content)\n        //         this.graphics.Initialize();\n        //         if(this.writeTransformation) {\n        //             this.graphics.InitializeCoordinates();\n        //         }\n        //     }\n        //     return this.graphics;\n        // }\n        // IPdfWrapper Members\n        /**\n         * Gets the `content stream` of 'PdfTemplate' class.\n         * @private\n         */\n        get: function () {\n            return this.content;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfTemplate;\n}());\nexport { PdfTemplate };\n", "var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfResources.ts class for EJ2-PDF\n */\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { TemporaryDictionary } from './../collections/object-object-pair/dictionary';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfCrossTable } from './../input-output/pdf-cross-table';\nimport { PdfFont } from './fonts/pdf-font';\nimport { PdfTemplate } from './figures/pdf-template';\nimport { PdfBrush } from './brushes/pdf-brush';\nimport { PdfTransparency } from './pdf-transparency';\nimport { PdfBitmap } from './../graphics/images/pdf-bitmap';\nimport { PdfImage } from './../graphics/images/pdf-image';\nimport { PdfGradientBrush } from './brushes/pdf-gradient-brush';\nimport { PdfTilingBrush } from './brushes/pdf-tiling-brush';\n/**\n * `PdfResources` class used to set resource contents like font, image.\n * @private\n */\nvar PdfResources = /** @class */ (function (_super) {\n    __extends(PdfResources, _super);\n    function PdfResources(baseDictionary) {\n        var _this = _super.call(this, baseDictionary) || this;\n        /**\n         * Dictionary for the `properties names`.\n         * @private\n         */\n        _this.properties = new PdfDictionary();\n        return _this;\n    }\n    Object.defineProperty(PdfResources.prototype, \"names\", {\n        //Properties\n        /**\n         * Gets the `font names`.\n         * @private\n         */\n        get: function () {\n            return this.getNames();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfResources.prototype, \"document\", {\n        /**\n         * Get or set the `page document`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument;\n        },\n        set: function (value) {\n            this.pdfDocument = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Public Methods\n    /**\n     * `Generates name` for the object and adds to the resource if the object is new.\n     * @private\n     */\n    PdfResources.prototype.getName = function (obj) {\n        var primitive = obj.element;\n        var name = null;\n        if (this.names.containsKey(primitive)) {\n            name = this.names.getValue(primitive);\n        }\n        // Object is new.\n        if (name == null) {\n            var sName = this.generateName();\n            name = new PdfName(sName);\n            this.names.setValue(primitive, name);\n            if (obj instanceof PdfFont) {\n                this.add(obj, name);\n            }\n            else if (obj instanceof PdfTemplate) {\n                this.add(obj, name);\n            }\n            else if (obj instanceof PdfGradientBrush || obj instanceof PdfTilingBrush) {\n                this.add(obj, name);\n            }\n            else if (obj instanceof PdfTransparency) {\n                this.add(obj, name);\n            }\n            else if (obj instanceof PdfImage || obj instanceof PdfBitmap) {\n                this.add(obj, name);\n            }\n        }\n        return name;\n    };\n    /**\n     * Gets `resource names` to font dictionaries.\n     * @private\n     */\n    PdfResources.prototype.getNames = function () {\n        if (this.pdfNames == null) {\n            this.pdfNames = new TemporaryDictionary();\n        }\n        var fonts = this.items.getValue(this.dictionaryProperties.font);\n        if (fonts != null) {\n            var reference = fonts;\n            var dictionary = fonts;\n            dictionary = PdfCrossTable.dereference(fonts);\n        }\n        return this.pdfNames;\n    };\n    /**\n     * Add `RequireProcedureSet` into procset array.\n     * @private\n     */\n    PdfResources.prototype.requireProcedureSet = function (procedureSetName) {\n        if (procedureSetName == null) {\n            throw new Error('ArgumentNullException:procedureSetName');\n        }\n        var procSets = this.items.getValue(this.dictionaryProperties.procset);\n        if (procSets == null) {\n            procSets = new PdfArray();\n            this.items.setValue(this.dictionaryProperties.procset, procSets);\n        }\n        var name = new PdfName(procedureSetName);\n        if (!procSets.contains(name)) {\n            procSets.add(name);\n        }\n    };\n    //Helper Methods\n    /**\n     * `Remove font` from array.\n     * @private\n     */\n    PdfResources.prototype.removeFont = function (name) {\n        var key = null;\n        var keys = this.pdfNames.keys();\n        for (var index = 0; index < this.pdfNames.size(); index++) {\n            if (this.pdfNames.getValue(keys[index]) === new PdfName(name)) {\n                key = keys[index];\n                break;\n            }\n        }\n        if (key != null) {\n            this.pdfNames.remove(key);\n        }\n    };\n    /**\n     * Generates `Unique string name`.\n     * @private\n     */\n    PdfResources.prototype.generateName = function () {\n        var name = Guid.getNewGuidString();\n        return name;\n    };\n    PdfResources.prototype.add = function (arg1, arg2) {\n        if (arg1 instanceof PdfFont) {\n            var dictionary = null;\n            var fonts = this.items.getValue(this.dictionaryProperties.font);\n            if (fonts != null) {\n                var reference = fonts;\n                dictionary = fonts;\n                dictionary = fonts;\n            }\n            else {\n                dictionary = new PdfDictionary();\n                this.items.setValue(this.dictionaryProperties.font, dictionary);\n            }\n            dictionary.items.setValue(arg2.value, new PdfReferenceHolder(arg1.element));\n        }\n        else if (arg1 instanceof PdfTemplate) {\n            var xobjects = void 0;\n            xobjects = this.items.getValue(this.dictionaryProperties.xObject);\n            // Create fonts dictionary.\n            if (xobjects == null) {\n                xobjects = new PdfDictionary();\n                this.items.setValue(this.dictionaryProperties.xObject, xobjects);\n            }\n            xobjects.items.setValue(arg2.value, new PdfReferenceHolder(arg1.element));\n        }\n        else if (arg1 instanceof PdfBrush) {\n            if (arg1 instanceof PdfGradientBrush || arg1 instanceof PdfTilingBrush) {\n                var savable = arg1.element;\n                if (savable != null) {\n                    var pattern = this.items.getValue(this.dictionaryProperties.pattern);\n                    // Create a new pattern dictionary.\n                    if (pattern == null) {\n                        pattern = new PdfDictionary();\n                        this.items.setValue(this.dictionaryProperties.pattern, pattern);\n                    }\n                    pattern.items.setValue(arg2.value, new PdfReferenceHolder(savable));\n                }\n            }\n        }\n        else if (arg1 instanceof PdfTransparency) {\n            var savable = arg1.element;\n            var transDic = null;\n            transDic = this.items.getValue(this.dictionaryProperties.extGState);\n            // Create a new pattern dictionary.\n            if (transDic == null) {\n                transDic = new PdfDictionary();\n                this.items.setValue(this.dictionaryProperties.extGState, transDic);\n            }\n            transDic.items.setValue(arg2.value, new PdfReferenceHolder(savable));\n        }\n        else {\n            /* tslint:disable */\n            var xobjects = this.Dictionary.items.getValue(this.dictionaryProperties.xObject);\n            var parentXObjects = void 0;\n            if (typeof this.pdfDocument !== 'undefined') {\n                parentXObjects = this.pdfDocument.sections.element.items.getValue(this.dictionaryProperties.resources).items.getValue(this.dictionaryProperties.xObject);\n            }\n            var values = this.Dictionary.items.values();\n            var hasSameImageStream = false;\n            var oldReference = void 0;\n            if (typeof this.pdfDocument !== 'undefined' && (typeof parentXObjects === undefined || parentXObjects == null)) {\n                parentXObjects = new PdfDictionary();\n                this.pdfDocument.sections.element.items.getValue(this.dictionaryProperties.resources).items.setValue(this.dictionaryProperties.xObject, parentXObjects);\n            }\n            else if (typeof this.pdfDocument !== 'undefined') {\n                var values_1 = parentXObjects.items.values();\n                for (var i = 0; i < values_1.length; i++) {\n                    if (typeof values_1[i] !== 'undefined' && typeof values_1[i].element !== 'undefined') {\n                        if (values_1[i].element.data[0] === arg1.element.data[0]) {\n                            oldReference = values_1[i];\n                            hasSameImageStream = true;\n                        }\n                    }\n                }\n            }\n            if (xobjects == null) {\n                xobjects = new PdfDictionary();\n                this.Dictionary.items.setValue(this.dictionaryProperties.xObject, xobjects);\n            }\n            if (hasSameImageStream && typeof oldReference !== 'undefined') {\n                xobjects.items.setValue(arg2.value, oldReference);\n            }\n            else {\n                var reference = new PdfReferenceHolder(arg1.element);\n                xobjects.items.setValue(arg2.value, reference);\n                if (typeof this.pdfDocument !== 'undefined') {\n                    parentXObjects.items.setValue(arg2.value, reference);\n                }\n            }\n            /* tslint:enable */\n        }\n    };\n    return PdfResources;\n}(PdfDictionary));\nexport { PdfResources };\n/* tslint:disable */\n/**\n * Used to create new guid for resources.\n * @private\n */\nvar Guid = /** @class */ (function () {\n    function Guid() {\n    }\n    /**\n     * Generate `new GUID`.\n     * @private\n     */\n    Guid.getNewGuidString = function () {\n        return 'aaaaaaaa-aaaa-4aaa-baaa-aaaaaaaaaaaa'.replace(/[ab]/g, function (c) {\n            var random = Math.random() * 16 | 0;\n            var result = c === 'a' ? random : (random & 0x3 | 0x8);\n            return result.toString(16);\n        });\n    };\n    return Guid;\n}());\nexport { Guid };\n/* tslint:enable */ \n", "var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { GetResourceEventHandler } from './../pdf-graphics';\nimport { PdfBrush } from './pdf-brush';\nimport { PointF, SizeF, RectangleF, Rectangle } from './../../drawing/pdf-drawing';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfNumber } from './../../primitives/pdf-number';\nimport { PdfGraphics } from './../pdf-graphics';\nimport { PdfResources } from './../pdf-resources';\nimport { PdfStream } from './../../primitives/pdf-stream';\nimport { PdfPage } from './../../pages/pdf-page';\n/**\n * `PdfTilingBrush` Implements a colored tiling brush.\n */\nvar PdfTilingBrush = /** @class */ (function (_super) {\n    __extends(PdfTilingBrush, _super);\n    /**\n     * Initializes a new instance of the `PdfTilingBrush` class.\n     * @public\n     */\n    function PdfTilingBrush(arg1, arg2) {\n        var _this = _super.call(this) || this;\n        /**\n         * Local variable to store Stroking.\n         * @private\n         */\n        _this.mStroking = false;\n        /**\n         * Local variable to store the tile start location.\n         * @private\n         */\n        _this.mLocation = new PointF(0, 0);\n        /**\n         * Local variable to store the dictionary properties.\n         * @private\n         */\n        _this.mDictionaryProperties = new DictionaryProperties();\n        var rect = null;\n        if (arg1 instanceof Rectangle) {\n            rect = arg1;\n        }\n        else if (arg1 instanceof SizeF) {\n            rect = new Rectangle(0, 0, arg1.width, arg1.height);\n        }\n        if (arg2 !== null && arg2 instanceof PdfPage) {\n            _this.mPage = arg2;\n        }\n        _this.brushStream = new PdfStream();\n        _this.mResources = new PdfResources();\n        _this.brushStream.items.setValue(_this.mDictionaryProperties.resources, _this.mResources);\n        _this.setBox(rect);\n        _this.setObligatoryFields();\n        if (arg2 !== null && arg2 instanceof PdfPage) {\n            _this.mPage = arg2;\n            _this.graphics.colorSpace = arg2.document.colorSpace;\n        }\n        return _this;\n    }\n    /**\n     * Initializes a new instance of the `PdfTilingBrush` class.\n     * @private\n     * @param rectangle The size of the smallest brush cell.\n     * @param page The Current Page Object.\n     * @param location The Tile start location.\n     * @param matrix The matrix.\n     */\n    PdfTilingBrush.prototype.initialize = function (rectangle, page, location, matrix) {\n        this.mPage = page;\n        this.mLocation = location;\n        this.mTransformationMatrix = matrix;\n        this.tempBrushStream = this.brushStream;\n        this.brushStream = new PdfStream();\n        var tempResource = new PdfResources();\n        this.brushStream.items.setValue(this.mDictionaryProperties.resources, tempResource);\n        this.setBox(rectangle);\n        this.setObligatoryFields();\n        return this;\n    };\n    Object.defineProperty(PdfTilingBrush.prototype, \"location\", {\n        //Properties\n        /**\n         * Location representing the start position of the tiles.\n         * @public\n         */\n        get: function () {\n            return this.mLocation;\n        },\n        set: function (value) {\n            this.mLocation = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets the obligatory fields.\n     * @private\n     */\n    PdfTilingBrush.prototype.setObligatoryFields = function () {\n        this.brushStream.items.setValue(this.mDictionaryProperties.patternType, new PdfNumber(1));\n        //  Tiling brush.\n        this.brushStream.items.setValue(this.mDictionaryProperties.paintType, new PdfNumber(1));\n        //  Coloured.\n        this.brushStream.items.setValue(this.mDictionaryProperties.tilingType, new PdfNumber(1));\n        //  Constant spacing.\n        this.brushStream.items.setValue(this.mDictionaryProperties.xStep, new PdfNumber((this.mBox.right - this.mBox.left)));\n        this.brushStream.items.setValue(this.mDictionaryProperties.yStep, new PdfNumber((this.mBox.bottom - this.mBox.top)));\n        if ((this.mPage != null) && (this.mLocation != null)) {\n            if ((this.mTransformationMatrix == null && typeof this.mTransformationMatrix === 'undefined')) {\n                // Transform the tile origin to fit the location\n                var tileTransform = (this.mPage.size.height % this.rectangle.size.height) - (this.mLocation.y);\n                /* tslint:disable-next-line:max-line-length */\n                this.brushStream.items.setValue(this.mDictionaryProperties.matrix, new PdfArray([1, 0, 0, 1, this.mLocation.x, tileTransform]));\n            }\n            else {\n                var tileTransform = 0;\n                // Transform the tile origin to fit the location\n                var elements = this.mTransformationMatrix.matrix.elements;\n                if ((this.mPage.size.height > this.rectangle.size.height)) {\n                    tileTransform = (this.mTransformationMatrix.matrix.offsetY\n                        - (this.mPage.size.height % this.rectangle.size.height));\n                }\n                else {\n                    tileTransform = ((this.mPage.size.height % this.rectangle.size.height) + this.mTransformationMatrix.matrix.offsetY);\n                }\n                this.brushStream.items.setValue(this.mDictionaryProperties.matrix, new PdfArray([\n                    elements[0], elements[1], elements[2], elements[3], elements[4], tileTransform\n                ]));\n            }\n        }\n    };\n    /**\n     * Sets the BBox coordinates.\n     * @private\n     */\n    PdfTilingBrush.prototype.setBox = function (box) {\n        this.mBox = box;\n        var rect = new RectangleF(this.mBox.left, this.mBox.top, this.mBox.right, this.mBox.bottom);\n        this.brushStream.items.setValue(this.mDictionaryProperties.bBox, PdfArray.fromRectangle(rect));\n    };\n    Object.defineProperty(PdfTilingBrush.prototype, \"rectangle\", {\n        //Properties\n        /**\n         * Gets the boundary box of the smallest brush cell.\n         * @public\n         */\n        get: function () {\n            return this.mBox;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTilingBrush.prototype, \"size\", {\n        /**\n         * Gets the size of the smallest brush cell.\n         * @public\n         */\n        get: function () {\n            return this.mBox.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTilingBrush.prototype, \"graphics\", {\n        /**\n         * Gets Graphics context of the brush.\n         */\n        get: function () {\n            if ((this.mGraphics == null && typeof this.mGraphics === 'undefined')) {\n                var gr = new GetResourceEventHandler(this);\n                var g = new PdfGraphics(this.size, gr, this.brushStream);\n                this.mGraphics = g;\n                this.mResources = this.getResources();\n                this.mGraphics.initializeCoordinates();\n            }\n            return this.mGraphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the resources and modifies the template dictionary.\n     * @public\n     */\n    PdfTilingBrush.prototype.getResources = function () {\n        return this.mResources;\n    };\n    Object.defineProperty(PdfTilingBrush.prototype, \"stroking\", {\n        /**\n         * Gets or sets a value indicating whether this PdfTilingBrush\n         * is used for stroking operations.\n         */\n        get: function () {\n            return this.mStroking;\n        },\n        set: function (value) {\n            this.mStroking = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //PdfBrush methods\n    /**\n     * Creates a new copy of a brush.\n     * @public\n     */\n    PdfTilingBrush.prototype.clone = function () {\n        var brush = this.initialize(this.rectangle, this.mPage, this.location, this.mTransformationMatrix);\n        if ((this.mTransformationMatrix != null) && (this.mTransformationMatrix.matrix != null)) {\n            /* tslint:disable-next-line:max-line-length */\n            brush.brushStream.items.setValue(this.mDictionaryProperties.matrix, new PdfArray(this.mTransformationMatrix.matrix.elements));\n        }\n        brush.brushStream.data = this.tempBrushStream.data;\n        brush.mResources = new PdfResources(this.mResources);\n        brush.brushStream.items.setValue(this.mDictionaryProperties.resources, brush.mResources);\n        return brush;\n    };\n    /**\n     * Monitors the changes of the brush and modify PDF state respectfully.\n     * @param brush The brush\n     * @param streamWriter The stream writer\n     * @param getResources The get resources delegate.\n     * @param saveChanges if set to true the changes should be saved anyway.\n     * @param currentColorSpace The current color space.\n     */\n    /* tslint:disable-next-line:max-line-length */\n    PdfTilingBrush.prototype.monitorChanges = function (brush, streamWriter, getResources, saveChanges, currentColorSpace) {\n        var diff = false;\n        if (brush !== this) {\n            //  Set the Pattern colour space.\n            streamWriter.setColorSpace('Pattern', this.mStroking);\n            //  Set the pattern for non-stroking operations.\n            var resources1 = getResources.getResources();\n            var name1 = resources1.getName(this);\n            streamWriter.setColourWithPattern(null, name1, this.mStroking);\n            diff = true;\n        }\n        else if (brush instanceof PdfTilingBrush) {\n            //  Set the /Pattern colour space.\n            streamWriter.setColorSpace('Pattern', this.mStroking);\n            //  Set the pattern for non-stroking operations.\n            var resources = getResources.getResources();\n            var name_1 = resources.getName(this);\n            streamWriter.setColourWithPattern(null, name_1, this.mStroking);\n            diff = true;\n        }\n        return diff;\n    };\n    /**\n     * Resets the changes, which were made by the brush.\n     * In other words resets the state to the initial one.\n     * @param streamWriter The stream writer.\n     */\n    PdfTilingBrush.prototype.resetChanges = function (streamWriter) {\n        //  We shouldn't do anything to reset changes.\n        //  All changes will be reset automatically by setting a new colour space.\n    };\n    Object.defineProperty(PdfTilingBrush.prototype, \"element\", {\n        /* tslint:enable */\n        // IPdfWrapper Members\n        /**\n         * Gets the `element`.\n         * @public\n         */\n        get: function () {\n            return this.brushStream;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfTilingBrush;\n}(PdfBrush));\nexport { PdfTilingBrush };\n", "/**\n * PdfGraphics.ts class for EJ2-PDF\n */\nimport { PdfColorSpace, TextRenderingMode, PdfFillMode, PdfTextAlignment } from './enum';\nimport { PdfVerticalAlignment, PdfBlendMode } from './enum';\nimport { PdfSubSuperScript } from './fonts/enum';\nimport { PdfStreamWriter } from './../input-output/pdf-stream-writer';\nimport { PdfPen } from './pdf-pen';\nimport { PdfBrush } from './brushes/pdf-brush';\nimport { PdfSolidBrush } from './brushes/pdf-solid-brush';\nimport { PdfFont } from './fonts/pdf-font';\nimport { PdfTransformationMatrix, Matrix } from './pdf-transformation-matrix';\nimport { PointF, SizeF, RectangleF } from './../drawing/pdf-drawing';\nimport { ProcedureSets } from './constants';\nimport { PdfString } from './../primitives/pdf-string';\nimport { PdfStringFormat } from './fonts/pdf-string-format';\nimport { TemporaryDictionary } from './../collections/object-object-pair/dictionary';\nimport { PdfTransparency } from './pdf-transparency';\nimport { PdfStringLayouter, LineType } from './fonts/string-layouter';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { StringTokenizer } from './fonts/string-tokenizer';\nimport { PdfAutomaticFieldInfoCollection } from './../document/automatic-fields/automatic-field-info-collection';\nimport { PdfAutomaticFieldInfo } from './../document/automatic-fields/automatic-field-info';\nimport { Operators } from './../input-output/pdf-operators';\nimport { UnicodeTrueTypeFont } from './fonts/unicode-true-type-font';\nimport { InternalEnum } from './../primitives/pdf-string';\nimport { RtlRenderer } from './fonts/rtl-renderer';\nimport { PdfTextDirection } from './enum';\nimport { PathPointType } from './figures/enum';\nimport { PdfGradientBrush } from './../../implementation/graphics/brushes/pdf-gradient-brush';\nimport { PdfTilingBrush } from './brushes/pdf-tiling-brush';\n/**\n * `PdfGraphics` class represents a graphics context of the objects.\n * It's used for performing all the graphics operations.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * // set the font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * //\n * //graphics of the page\n * let page1Graphics : PdfGraphics = page1.graphics;\n * // draw the text on the page1 graphics\n * page1Graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * //\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfGraphics = /** @class */ (function () {\n    function PdfGraphics(arg1, arg2, arg3) {\n        /**\n         * Represents the `Current color space`.\n         * @private\n         */\n        this.currentColorSpace = PdfColorSpace.Rgb;\n        /**\n         * Stores `previous rendering mode`.\n         * @private\n         */\n        this.previousTextRenderingMode = TextRenderingMode.Fill;\n        /**\n         * Previous `character spacing` value or 0.\n         * @private\n         */\n        this.previousCharacterSpacing = 0.0;\n        /**\n         * Previous `word spacing` value or 0.\n         * @private\n         */\n        this.previousWordSpacing = 0.0;\n        /**\n         * The `previously used text scaling` value.\n         * @private\n         */\n        this.previousTextScaling = 100.0;\n        /**\n         * Instance of `ProcedureSets` class.\n         * @private\n         */\n        this.procedureSets = new ProcedureSets();\n        /**\n         * To check wihether it is a `direct text rendering`.\n         * @default true\n         * @private\n         */\n        this.isNormalRender = true;\n        /**\n         * check whether to `use font size` to calculate the shift.\n         * @default false\n         * @private\n         */\n        this.isUseFontSize = false;\n        /**\n         * check whether the font is in `italic type`.\n         * @default false\n         * @private\n         */\n        this.isItalic = false;\n        /**\n         * Check whether it is an `emf Text Matrix`.\n         * @default false\n         * @private\n         */\n        this.isEmfTextScaled = false;\n        /**\n         * Check whether it is an `emf` call.\n         * @default false\n         * @private\n         */\n        this.isEmf = false;\n        /**\n         * Check whether it is an `emf plus` call.\n         * @default false\n         * @private\n         */\n        this.isEmfPlus = false;\n        /**\n         * Check whether it is in `base line format`.\n         * @default true\n         * @private\n         */\n        this.isBaselineFormat = true;\n        /**\n         * Emf Text `Scaling Factor`.\n         * @private\n         */\n        this.emfScalingFactor = new SizeF(0, 0);\n        /**\n         * To check whether the `last color space` of document and garphics is saved.\n         * @private\n         */\n        this.colorSpaceChanged = false;\n        /**\n         * Stores an instance of `DictionaryProperties`.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Checks whether the x co-ordinate is need to set as client size or not.\n         * @hidden\n         * @private\n         */\n        this.isOverloadWithPosition = false;\n        /**\n         * Checks whether the x co-ordinate is need to set as client size or not.\n         * @hidden\n         * @private\n         */\n        this.isPointOverload = false;\n        /**\n         * Current colorspaces.\n         * @hidden\n         * @private\n         */\n        this.currentColorSpaces = ['RGB', 'CMYK', 'GrayScale', 'Indexed'];\n        /**\n         * Checks the current image `is optimized` or not.\n         * @default false.\n         * @private\n         */\n        this.isImageOptimized = false;\n        /**\n         * Stores the `graphics states`.\n         * @private\n         */\n        this.graphicsState = [];\n        /**\n         * Indicates whether the object `had trasparency`.\n         * @default false\n         * @private\n         */\n        this.istransparencySet = false;\n        /**\n         * Stores the instance of `PdfAutomaticFieldInfoCollection` class .\n         * @default null\n         * @private\n         */\n        this.internalAutomaticFields = null;\n        /**\n         * Stores the index of the start line that should draw with in the next page.\n         * @private\n         */\n        this.startCutIndex = -1;\n        this.getResources = arg2;\n        this.canvasSize = arg1;\n        if (arg3 instanceof PdfStreamWriter) {\n            this.pdfStreamWriter = arg3;\n        }\n        else {\n            this.pdfStreamWriter = new PdfStreamWriter(arg3);\n        }\n        this.initialize();\n    }\n    Object.defineProperty(PdfGraphics.prototype, \"stringLayoutResult\", {\n        //  Properties\n        /**\n         * Returns the `result` after drawing string.\n         * @private\n         */\n        get: function () {\n            return this.pdfStringLayoutResult;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"size\", {\n        /**\n         * Gets the `size` of the canvas.\n         * @private\n         */\n        get: function () {\n            return this.canvasSize;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"mediaBoxUpperRightBound\", {\n        /**\n         * Gets and Sets the value of `MediaBox upper right bound`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.internalMediaBoxUpperRightBound === 'undefined') {\n                this.internalMediaBoxUpperRightBound = 0;\n            }\n            return this.internalMediaBoxUpperRightBound;\n        },\n        set: function (value) {\n            this.internalMediaBoxUpperRightBound = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"clientSize\", {\n        /**\n         * Gets the `size` of the canvas reduced by margins and page templates.\n         * @private\n         */\n        get: function () {\n            return new SizeF(this.clipBounds.width, this.clipBounds.height);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"colorSpace\", {\n        /**\n         * Gets or sets the current `color space` of the document\n         * @private\n         */\n        get: function () {\n            return this.currentColorSpace;\n        },\n        set: function (value) {\n            this.currentColorSpace = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"streamWriter\", {\n        /**\n         * Gets the `stream writer`.\n         * @private\n         */\n        get: function () {\n            return this.pdfStreamWriter;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"matrix\", {\n        /**\n         * Gets the `transformation matrix` reflecting current transformation.\n         * @private\n         */\n        get: function () {\n            if (this.transformationMatrix == null) {\n                this.transformationMatrix = new PdfTransformationMatrix();\n            }\n            return this.transformationMatrix;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"layer\", {\n        /**\n         * Gets the `layer` for the graphics, if exists.\n         * @private\n         */\n        get: function () {\n            return this.pageLayer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"page\", {\n        /**\n         * Gets the `page` for this graphics, if exists.\n         * @private\n         */\n        get: function () {\n            return this.pageLayer.page;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"automaticFields\", {\n        get: function () {\n            if (this.internalAutomaticFields == null || typeof this.internalAutomaticFields === 'undefined') {\n                this.internalAutomaticFields = new PdfAutomaticFieldInfoCollection();\n            }\n            return this.internalAutomaticFields;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * `Initializes` this instance.\n     * @private\n     */\n    PdfGraphics.prototype.initialize = function () {\n        this.bStateSaved = false;\n        this.currentPen = null;\n        this.currentBrush = null;\n        this.currentFont = null;\n        this.currentColorSpace = PdfColorSpace.Rgb;\n        this.bCSInitialized = false;\n        this.transformationMatrix = null;\n        this.previousTextRenderingMode = (-1); //.Fill;\n        this.previousCharacterSpacing = -1.0;\n        this.previousWordSpacing = -1.0;\n        this.previousTextScaling = -100.0;\n        // this.m_trasparencies = null;\n        this.currentStringFormat = null;\n        this.clipBounds = new RectangleF(new PointF(0, 0), this.size);\n        this.getResources.getResources().requireProcedureSet(this.procedureSets.pdf);\n    };\n    PdfGraphics.prototype.drawPdfTemplate = function (template, location, size) {\n        if (typeof size === 'undefined') {\n            if (template == null) {\n                throw Error('ArgumentNullException-template');\n            }\n            this.drawPdfTemplate(template, location, template.size);\n        }\n        else {\n            // let crossTable : PdfCrossTable = null;\n            // if (this.pageLayer != null) {\n            //     crossTable = (this.page as PdfPage).section.parentDocument.crossTable;\n            // }\n            if (template == null) {\n                throw Error('ArgumentNullException-template');\n            }\n            var scaleX = (template.width > 0) ? size.width / template.width : 1;\n            var scaleY = (template.height > 0) ? size.height / template.height : 1;\n            var bNeedScale = !(scaleX === 1 && scaleY === 1);\n            // Save state.\n            var state = this.save();\n            // Take into consideration that rect location is bottom/left.\n            var matrix = new PdfTransformationMatrix();\n            if (this.pageLayer != null) {\n                this.getTranslateTransform(location.x, location.y + size.height, matrix);\n            }\n            if (bNeedScale) {\n                this.getScaleTransform(scaleX, scaleY, matrix);\n            }\n            this.pdfStreamWriter.modifyCtm(matrix);\n            // Output template.\n            var resources = this.getResources.getResources();\n            var name_1 = resources.getName(template);\n            this.pdfStreamWriter.executeObject(name_1);\n            // Restore state.\n            this.restore(state);\n            //Transfer automatic fields from template.\n            var g = template.graphics;\n            if (g != null) {\n                for (var index = 0; index < g.automaticFields.automaticFields.length; index++) {\n                    var fieldInfo = g.automaticFields.automaticFields[index];\n                    var newLocation = new PointF(fieldInfo.location.x + location.x, fieldInfo.location.y + location.y);\n                    var scalingX = template.size.width == 0 ? 0 : size.width / template.size.width;\n                    var scalingY = template.size.height == 0 ? 0 : size.height / template.size.height;\n                    this.automaticFields.add(new PdfAutomaticFieldInfo(fieldInfo.field, newLocation, scalingX, scalingY));\n                    this.page.dictionary.modify();\n                }\n            }\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.imageB);\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.imageC);\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.imageI);\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.text);\n        }\n    };\n    /**\n     * @public\n     */\n    PdfGraphics.prototype.drawString = function (arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9) {\n        if (typeof arg1 === 'string' && arg2 instanceof PdfFont && (arg3 instanceof PdfPen || arg3 === null) && (arg4 instanceof PdfBrush || arg4 === null) && typeof arg5 === 'number' && typeof arg6 === 'number' && (arg7 instanceof PdfStringFormat || arg7 === null) && typeof arg8 === 'undefined') {\n            this.isOverloadWithPosition = true;\n            this.drawString(arg1, arg2, arg3, arg4, arg5, arg6, (this.clientSize.width - arg5), 0, arg7);\n        }\n        else {\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            var temparg5 = arg5;\n            var temparg6 = arg6;\n            var temparg7 = arg7;\n            var temparg8 = arg8;\n            var temparg9 = arg9;\n            var layouter = new PdfStringLayouter();\n            var result = layouter.layout(arg1, arg2, temparg9, new SizeF(temparg7, temparg8), this.isOverloadWithPosition, this.clientSize);\n            if (!result.empty) {\n                var rect = this.checkCorrectLayoutRectangle(result.actualSize, temparg5, temparg6, temparg9);\n                if (temparg7 <= 0) {\n                    temparg5 = rect.x;\n                    temparg7 = rect.width;\n                }\n                if (temparg8 <= 0) {\n                    temparg6 = rect.y;\n                    temparg8 = rect.height;\n                }\n                this.drawStringLayoutResult(result, arg2, temparg3, temparg4, new RectangleF(temparg5, temparg6, temparg7, temparg8), temparg9);\n                this.isEmfTextScaled = false;\n                this.emfScalingFactor = new SizeF(0, 0);\n            }\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.text);\n            this.isNormalRender = true;\n            this.pdfStringLayoutResult = result;\n            this.isUseFontSize = false;\n        }\n    };\n    PdfGraphics.prototype.drawLine = function (arg1, arg2, arg3, arg4, arg5) {\n        if (arg2 instanceof PointF) {\n            var temparg2 = arg2;\n            var temparg3 = arg3;\n            this.drawLine(arg1, temparg2.x, temparg2.y, temparg3.x, temparg3.y);\n        }\n        else {\n            var temparg2 = arg2;\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            var temparg5 = arg5;\n            this.stateControl(arg1, null, null);\n            var sw = this.streamWriter;\n            sw.beginPath(temparg2, temparg3);\n            sw.appendLineSegment(temparg4, temparg5);\n            sw.strokePath();\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.pdf);\n        }\n    };\n    PdfGraphics.prototype.drawRectangle = function (arg1, arg2, arg3, arg4, arg5, arg6) {\n        if (arg1 instanceof PdfPen && typeof arg2 === 'number') {\n            var temparg3 = arg3;\n            this.drawRectangle(arg1, null, arg2, temparg3, arg4, arg5);\n        }\n        else if (arg1 instanceof PdfBrush && typeof arg2 === 'number') {\n            var temparg3 = arg3;\n            this.drawRectangle(null, arg1, arg2, temparg3, arg4, arg5);\n        }\n        else {\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            var temparg5 = arg5;\n            var temparg6 = arg6;\n            if ((arg2 instanceof PdfTilingBrush)) {\n                this.bCSInitialized = false;\n                var xOffset = (this.matrix.matrix.offsetX + temparg3);\n                var yOffset = void 0;\n                if (((this.layer != null) && (this.layer.page != null))) {\n                    yOffset = ((this.layer.page.size.height - this.matrix.matrix.offsetY) + temparg4);\n                }\n                else {\n                    yOffset = ((this.clientSize.height - this.matrix.matrix.offsetY) + temparg4);\n                }\n                (arg2).location = new PointF(xOffset, yOffset);\n                (arg2).graphics.colorSpace = this.colorSpace;\n            }\n            else if ((arg2 instanceof PdfGradientBrush)) {\n                arg2.colorSpace = this.colorSpace;\n            }\n            if (arg2 instanceof PdfSolidBrush && arg2.color.isEmpty) {\n                arg2 = null;\n            }\n            var temparg1 = arg1;\n            var temparg2 = arg2;\n            this.stateControl(temparg1, temparg2, null);\n            this.streamWriter.appendRectangle(temparg3, temparg4, temparg5, temparg6);\n            this.drawPathHelper(temparg1, temparg2, false);\n        }\n    };\n    /**\n     * Draw rounded rectangle specified by a brush, pen, coordinate pair, a width, a height and a radius.\n     * ```typescript\n     * // Create a new PDF document.\n     * let document : PdfDocument = new PdfDocument();\n     * // Create a new page\n     * let page : PdfPage = document.pages.add();\n     * // Create brush for draw rectangle\n     * let brush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(238, 130, 238));\n     * // Create a new PDF pen\n     * let pen: PdfPen = new PdfPen(new PdfColor(255, 0, 0), 1);\n     * // Draw rounded rectangle\n     * page.graphics.drawRoundedRectangle(pen, brush, 20, 20, 100, 50, 5);\n     * // save the document\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     * @param pen Stoke color of the rectangle.\n     * @param brush Fill color of the rectangle.\n     * @param x The x-coordinate of the upper-left corner of the rectangle to draw.\n     * @param y The y-coordinate of the upper-left corner of the rectangle to draw.\n     * @param width Width of the rectangle to draw.\n     * @param height Height of the rectangle to draw.\n     * @param radius Radius of the arcs to draw.\n     */\n    PdfGraphics.prototype.drawRoundedRectangle = function (pen, brush, x, y, width, height, radius) {\n        if (pen === null) {\n            throw new Error('pen');\n        }\n        if (brush === null) {\n            throw new Error('brush');\n        }\n        if (radius === 0) {\n            this.drawRectangle(pen, brush, x, y, width, height);\n        }\n        else {\n            var bounds = [x, y, width, height];\n            var diameter = radius * 2;\n            var size = [diameter, diameter];\n            var arc = [bounds[0], bounds[1], size[0], size[1]];\n            this._pathPoints = [];\n            this._pathTypes = [];\n            var startFigure = true;\n            startFigure = this._addArc(arc[0], arc[1], arc[2], arc[3], 180, 90, startFigure);\n            arc[0] = (bounds[0] + bounds[2]) - diameter;\n            startFigure = this._addArc(arc[0], arc[1], arc[2], arc[3], 270, 90, startFigure);\n            arc[1] = (bounds[1] + bounds[3]) - diameter;\n            startFigure = this._addArc(arc[0], arc[1], arc[2], arc[3], 0, 90, startFigure);\n            arc[0] = bounds[0];\n            startFigure = this._addArc(arc[0], arc[1], arc[2], arc[3], 90, 90, startFigure);\n            var index = this._pathPoints.length - 1;\n            var type = ((this._pathTypes[index]));\n            type = (type | PathPointType.CloseSubpath);\n            this._pathTypes[index] = (type);\n            this._drawPath(pen, brush, this._pathPoints, this._pathTypes, PdfFillMode.Alternate);\n            this._pathPoints = [];\n            this._pathTypes = [];\n        }\n    };\n    PdfGraphics.prototype._addArc = function (x, y, width, height, startAngle, sweepAngle, startFigure) {\n        var points = this._getBezierArcPoints(x, y, (x + width), (y + height), startAngle, sweepAngle);\n        for (var i = 0; i < points.length; i = i + 8) {\n            var point = [points[i], points[i + 1], points[i + 2], points[i + 3], points[i + 4], points[i + 5], points[i + 6], points[i + 7]];\n            startFigure = this._addArcPoints(point, PathPointType.Bezier3, startFigure);\n        }\n        return startFigure;\n    };\n    PdfGraphics.prototype._addArcPoints = function (points, pointType, startFigure) {\n        for (var i = 0; i < points.length; i++) {\n            var point = new PointF(points[i], points[(i + 1)]);\n            if (i === 0) {\n                if (this._pathPoints.length === 0 || startFigure) {\n                    this._addPoint(point, PathPointType.Start);\n                    startFigure = false;\n                }\n                else if (point.x !== this._getLastPoint().x || point.y !== this._getLastPoint().y) {\n                    this._addPoint(point, PathPointType.Line);\n                }\n            }\n            else {\n                this._addPoint(point, pointType);\n            }\n            i++;\n        }\n        return startFigure;\n    };\n    PdfGraphics.prototype._getLastPoint = function () {\n        var lastPoint = new PointF(0, 0);\n        var count = this._pathPoints.length;\n        if (count > 0) {\n            lastPoint.x = this._pathPoints[(count - 1)].x;\n            lastPoint.y = this._pathPoints[(count - 1)].y;\n        }\n        return lastPoint;\n    };\n    PdfGraphics.prototype._addPoint = function (point, type) {\n        this._pathPoints.push(point);\n        this._pathTypes.push(type);\n    };\n    PdfGraphics.prototype._getBezierArcPoints = function (x1, y1, x2, y2, s1, e1) {\n        if ((x1 > x2)) {\n            var tmp = void 0;\n            tmp = x1;\n            x1 = x2;\n            x2 = tmp;\n        }\n        if ((y2 > y1)) {\n            var tmp = void 0;\n            tmp = y1;\n            y1 = y2;\n            y2 = tmp;\n        }\n        var fragAngle;\n        var numFragments;\n        if ((Math.abs(e1) <= 90)) {\n            fragAngle = e1;\n            numFragments = 1;\n        }\n        else {\n            numFragments = (Math.ceil((Math.abs(e1) / 90)));\n            fragAngle = (e1 / numFragments);\n        }\n        var xcen = ((x1 + x2) / 2);\n        var ycen = ((y1 + y2) / 2);\n        var rx = ((x2 - x1) / 2);\n        var ry = ((y2 - y1) / 2);\n        var halfAng = ((fragAngle * (Math.PI / 360)));\n        var kappa = (Math.abs(4.0 / 3.0 * (1.0 - Math.cos(halfAng)) / Math.sin(halfAng)));\n        var pointList = [];\n        for (var i = 0; (i < numFragments); i++) {\n            var theta0 = (((s1 + (i * fragAngle)) * (Math.PI / 180)));\n            var theta1 = (((s1 + ((i + 1) * fragAngle)) * (Math.PI / 180)));\n            var cos0 = (Math.cos(theta0));\n            var cos1 = (Math.cos(theta1));\n            var sin0 = (Math.sin(theta0));\n            var sin1 = (Math.sin(theta1));\n            if ((fragAngle > 0)) {\n                pointList.push((xcen + (rx * cos0)), (ycen - (ry * sin0)), (xcen + (rx * (cos0 - (kappa * sin0)))), (ycen - (ry * (sin0 + (kappa * cos0)))), (xcen + (rx * (cos1 + (kappa * sin1)))), (ycen - (ry * (sin1 - (kappa * cos1)))), (xcen + (rx * cos1)), (ycen - (ry * sin1)));\n            }\n            else {\n                pointList.push((xcen + (rx * cos0)), (ycen - (ry * sin0)), (xcen + (rx * (cos0 + (kappa * sin0)))), (ycen - (ry * (sin0 - (kappa * cos0)))), (xcen + (rx * (cos1 - (kappa * sin1)))), (ycen - (ry * (sin1 + (kappa * cos1)))), (xcen + (rx * cos1)), (ycen - (ry * sin1)));\n            }\n        }\n        return pointList;\n    };\n    PdfGraphics.prototype.drawPathHelper = function (arg1, arg2, arg3, arg4) {\n        if (typeof arg3 === 'boolean') {\n            var temparg3 = arg3;\n            this.drawPathHelper(arg1, arg2, PdfFillMode.Winding, temparg3);\n        }\n        else {\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            var isPen = arg1 != null;\n            var isBrush = arg2 != null;\n            var isEvenOdd = (temparg3 === PdfFillMode.Alternate);\n            if (isPen && isBrush) {\n                this.streamWriter.fillStrokePath(isEvenOdd);\n            }\n            else if (!isPen && !isBrush) {\n                this.streamWriter.endPath();\n            }\n            else if (isPen) {\n                this.streamWriter.strokePath();\n            }\n            else {\n                this.streamWriter.fillPath(isEvenOdd);\n            }\n        }\n    };\n    PdfGraphics.prototype.drawImage = function (arg1, arg2, arg3, arg4, arg5) {\n        if (typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'undefined') {\n            var size = arg1.physicalDimension;\n            this.drawImage(arg1, arg2, arg3, size.width, size.height);\n        }\n        else {\n            var temparg2 = arg2;\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            var temparg5 = arg5;\n            arg1.save();\n            var matrix = new PdfTransformationMatrix();\n            this.getTranslateTransform(temparg2, (temparg3 + temparg5), matrix);\n            this.getScaleTransform(arg4, arg5, matrix);\n            this.pdfStreamWriter.write('q');\n            this.pdfStreamWriter.modifyCtm(matrix);\n            // Output template.\n            var resources = this.getResources.getResources();\n            if (typeof this.pageLayer !== 'undefined' && this.page != null) {\n                resources.document = this.page.document;\n            }\n            var name_2 = resources.getName(arg1);\n            if (typeof this.pageLayer !== 'undefined') {\n                this.page.setResources(resources);\n            }\n            this.pdfStreamWriter.executeObject(name_2);\n            this.pdfStreamWriter.write(Operators.restoreState);\n            this.pdfStreamWriter.write(Operators.newLine);\n            var resource = this.getResources.getResources();\n            resource.requireProcedureSet(this.procedureSets.imageB);\n            resource.requireProcedureSet(this.procedureSets.imageC);\n            resource.requireProcedureSet(this.procedureSets.imageI);\n            resource.requireProcedureSet(this.procedureSets.text);\n        }\n    };\n    //Implementation\n    /**\n     * Returns `bounds` of the line info.\n     * @private\n     */\n    PdfGraphics.prototype.getLineBounds = function (lineIndex, result, font, layoutRectangle, format) {\n        var bounds;\n        if (!result.empty && lineIndex < result.lineCount && lineIndex >= 0) {\n            var line = result.lines[lineIndex];\n            var vShift = this.getTextVerticalAlignShift(result.actualSize.height, layoutRectangle.height, format);\n            var y = vShift + layoutRectangle.y + (result.lineHeight * lineIndex);\n            var lineWidth = line.width;\n            var hShift = this.getHorizontalAlignShift(lineWidth, layoutRectangle.width, format);\n            var lineIndent = this.getLineIndent(line, format, layoutRectangle, (lineIndex === 0));\n            hShift += (!this.rightToLeft(format)) ? lineIndent : 0;\n            var x = layoutRectangle.x + hShift;\n            var width = (!this.shouldJustify(line, layoutRectangle.width, format)) ? lineWidth - lineIndent : layoutRectangle.width - lineIndent;\n            var height = result.lineHeight;\n            bounds = new RectangleF(x, y, width, height);\n        }\n        else {\n            bounds = new RectangleF(0, 0, 0, 0);\n        }\n        return bounds;\n    };\n    /**\n     * Creates `lay outed rectangle` depending on the text settings.\n     * @private\n     */\n    PdfGraphics.prototype.checkCorrectLayoutRectangle = function (textSize, x, y, format) {\n        var layoutedRectangle = new RectangleF(x, y, textSize.width, textSize.width);\n        if (format != null) {\n            switch (format.alignment) {\n                case PdfTextAlignment.Center:\n                    layoutedRectangle.x -= layoutedRectangle.width / 2;\n                    break;\n                case PdfTextAlignment.Right:\n                    layoutedRectangle.x -= layoutedRectangle.width;\n                    break;\n            }\n            switch (format.lineAlignment) {\n                case PdfVerticalAlignment.Middle:\n                    layoutedRectangle.y -= layoutedRectangle.height / 2;\n                    break;\n                case PdfVerticalAlignment.Bottom:\n                    layoutedRectangle.y -= layoutedRectangle.height;\n                    break;\n            }\n        }\n        return layoutedRectangle;\n    };\n    /**\n     * Sets the `layer` for the graphics.\n     * @private\n     */\n    PdfGraphics.prototype.setLayer = function (layer) {\n        this.pageLayer = layer;\n        var page = layer.page;\n        if (page != null && typeof page !== 'undefined') {\n            page.beginSave = this.pageSave;\n        }\n    };\n    /**\n     * Adding page number field before page saving.\n     * @private\n     */\n    PdfGraphics.prototype.pageSave = function (page) {\n        if (page.graphics.automaticFields != null) {\n            for (var i = 0; i < page.graphics.automaticFields.automaticFields.length; i++) {\n                var fieldInfo = page.graphics.automaticFields.automaticFields[i];\n                fieldInfo.field.performDraw(page.graphics, fieldInfo.location, fieldInfo.scalingX, fieldInfo.scalingY);\n            }\n        }\n    };\n    /**\n     * `Draws a layout result`.\n     * @private\n     */\n    PdfGraphics.prototype.drawStringLayoutResult = function (result, font, pen, brush, layoutRectangle, format) {\n        if (!result.empty) {\n            this.applyStringSettings(font, pen, brush, format, layoutRectangle);\n            // Set text scaling\n            var textScaling = (format != null) ? format.horizontalScalingFactor : 100.0;\n            if (textScaling !== this.previousTextScaling && !this.isEmfTextScaled) {\n                this.pdfStreamWriter.setTextScaling(textScaling);\n                this.previousTextScaling = textScaling;\n            }\n            var height = (format == null || format.lineSpacing === 0) ? font.height : format.lineSpacing + font.height;\n            var subScript = (format != null && format.subSuperScript === PdfSubSuperScript.SubScript);\n            var shift = 0;\n            shift = (subScript) ? height - (font.height + font.metrics.getDescent(format)) : (height - font.metrics.getAscent(format));\n            this.shift = shift;\n            this.pdfStreamWriter.startNextLine(layoutRectangle.x, layoutRectangle.y - shift);\n            this.pdfStreamWriter.setLeading(+height);\n            var resultHeight = 0;\n            var remainingString = '';\n            for (var i = 0; i < result.lines.length; i++) {\n                resultHeight += result.lineHeight;\n                if ((layoutRectangle.y + resultHeight) > this.clientSize.height) {\n                    this.startCutIndex = i;\n                    break;\n                }\n            }\n            for (var j = this.startCutIndex; (j < result.lines.length && j >= 0); j++) {\n                remainingString += result.lines[j].text;\n            }\n            var bounds = new RectangleF(layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height);\n            this.drawLayoutResult(result, font, format, layoutRectangle);\n            this.underlineStrikeoutText(pen, brush, result, font, bounds, format);\n            this.isEmfPlus = false;\n            this.isUseFontSize = false;\n            if (this.startCutIndex !== -1) {\n                var page = this.getNextPage();\n                page.graphics.drawString(remainingString, font, pen, brush, layoutRectangle.x, 0, layoutRectangle.width, 0, format);\n            }\n        }\n        else {\n            throw new Error('ArgumentNullException:result');\n        }\n    };\n    /**\n     * Gets the `next page`.\n     * @private\n     */\n    PdfGraphics.prototype.getNextPage = function () {\n        var section = this.currentPage.section;\n        var nextPage = null;\n        var index = section.indexOf(this.currentPage);\n        if (index === section.count - 1) {\n            nextPage = section.add();\n        }\n        else {\n            nextPage = section.getPages()[index + 1];\n        }\n        return nextPage;\n    };\n    PdfGraphics.prototype.setClip = function (rectangle, mode) {\n        if (typeof mode === 'undefined') {\n            this.setClip(rectangle, PdfFillMode.Winding);\n        }\n        else {\n            this.pdfStreamWriter.appendRectangle(rectangle);\n            this.pdfStreamWriter.clipPath((mode === PdfFillMode.Alternate));\n        }\n    };\n    /**\n     * Applies all the `text settings`.\n     * @private\n     */\n    PdfGraphics.prototype.applyStringSettings = function (font, pen, brush, format, bounds) {\n        if (brush instanceof PdfTilingBrush) {\n            this.bCSInitialized = false;\n            brush.graphics.colorSpace = this.colorSpace;\n        }\n        else if ((brush instanceof PdfGradientBrush)) {\n            this.bCSInitialized = false;\n            brush.colorSpace = this.colorSpace;\n        }\n        var setLineWidth = false;\n        var tm = this.getTextRenderingMode(pen, brush, format);\n        this.stateControl(pen, brush, font, format);\n        this.pdfStreamWriter.beginText();\n        if ((tm) !== this.previousTextRenderingMode) {\n            this.pdfStreamWriter.setTextRenderingMode(tm);\n            this.previousTextRenderingMode = tm;\n        }\n        // Set character spacing.\n        var cs = (format != null) ? format.characterSpacing : 0;\n        if (cs !== this.previousCharacterSpacing && !this.isEmfTextScaled) {\n            this.pdfStreamWriter.setCharacterSpacing(cs);\n            this.previousCharacterSpacing = cs;\n        }\n        // Set word spacing.\n        // NOTE: it works only if the space code is equal to 32 (0x20).\n        var ws = (format != null) ? format.wordSpacing : 0;\n        if (ws !== this.previousWordSpacing) {\n            this.pdfStreamWriter.setWordSpacing(ws);\n            this.previousWordSpacing = ws;\n        }\n    };\n    /**\n     * Calculates `shift value` if the text is vertically aligned.\n     * @private\n     */\n    PdfGraphics.prototype.getTextVerticalAlignShift = function (textHeight, boundsHeight, format) {\n        var shift = 0;\n        if (boundsHeight >= 0 && format != null && format.lineAlignment !== PdfVerticalAlignment.Top) {\n            switch (format.lineAlignment) {\n                case PdfVerticalAlignment.Middle:\n                    shift = (boundsHeight - textHeight) / 2;\n                    break;\n                case PdfVerticalAlignment.Bottom:\n                    shift = boundsHeight - textHeight;\n                    break;\n            }\n        }\n        return shift;\n    };\n    /**\n     * `Draws layout result`.\n     * @private\n     */\n    PdfGraphics.prototype.drawLayoutResult = function (result, font, format, layoutRectangle) {\n        var vAlignShift = this.getTextVerticalAlignShift(result.actualSize.height, layoutRectangle.height, format);\n        if (vAlignShift !== 0) {\n            this.pdfStreamWriter.startNextLine(0, vAlignShift);\n        }\n        var ttfFont = font;\n        var unicode = (ttfFont != null && ttfFont.isUnicode);\n        var embed = (ttfFont != null && ttfFont.isEmbedFont);\n        var lines = result.lines;\n        for (var i = 0, len = lines.length; (i < len && i !== this.startCutIndex); i++) {\n            var lineInfo = lines[i];\n            var line = lineInfo.text;\n            var lineWidth = lineInfo.width;\n            var hAlignShift = this.getHorizontalAlignShift(lineWidth, layoutRectangle.width, format);\n            var lineIndent = this.getLineIndent(lineInfo, format, layoutRectangle, (i === 0));\n            hAlignShift += (!this.rightToLeft(format)) ? lineIndent : 0;\n            if (hAlignShift !== 0 && !this.isEmfTextScaled) {\n                this.pdfStreamWriter.startNextLine(hAlignShift, 0);\n            }\n            if (unicode) {\n                this.drawUnicodeLine(lineInfo, layoutRectangle, font, format);\n            }\n            else {\n                this.drawAsciiLine(lineInfo, layoutRectangle, font, format);\n            }\n            if (hAlignShift !== 0 && !this.isEmfTextScaled) {\n                this.pdfStreamWriter.startNextLine(-hAlignShift, 0);\n            }\n            if (this.isOverloadWithPosition && lines.length > 1) {\n                this.pdfStreamWriter.startNextLine(-(layoutRectangle.x), 0);\n                layoutRectangle.x = 0;\n                layoutRectangle.width = this.clientSize.width;\n                this.isOverloadWithPosition = false;\n                this.isPointOverload = true;\n            }\n        }\n        this.getResources.getResources().requireProcedureSet(this.procedureSets.text);\n        if (vAlignShift !== 0) {\n            this.pdfStreamWriter.startNextLine(0, -(vAlignShift - result.lineHeight));\n        }\n        this.pdfStreamWriter.endText();\n    };\n    /**\n     * `Draws Ascii line`.\n     * @private\n     */\n    PdfGraphics.prototype.drawAsciiLine = function (lineInfo, layoutRectangle, font, format) {\n        this.justifyLine(lineInfo, layoutRectangle.width, format);\n        var value = '';\n        if (lineInfo.text.indexOf('(') !== -1 || lineInfo.text.indexOf(')') !== -1) {\n            for (var i = 0; i < lineInfo.text.length; i++) {\n                if (lineInfo.text[i] === '(') {\n                    value += '\\\\\\(';\n                }\n                else if (lineInfo.text[i] === ')') {\n                    value += '\\\\\\)';\n                }\n                else {\n                    value += lineInfo.text[i];\n                }\n            }\n        }\n        if (value === '') {\n            value = lineInfo.text;\n        }\n        var line = '(' + value + ')';\n        this.pdfStreamWriter.showNextLineText(new PdfString(line));\n    };\n    /**\n     * Draws unicode line.\n     * @private\n     */\n    PdfGraphics.prototype.drawUnicodeLine = function (lineInfo, layoutRectangle, font, format) {\n        var line = lineInfo.text;\n        var lineWidth = lineInfo.width;\n        var rtl = (format !== null && typeof format !== 'undefined' && format.rightToLeft);\n        var useWordSpace = (format !== null && typeof format !== 'undefined' && (format.wordSpacing !== 0 || format.alignment === PdfTextAlignment.Justify));\n        var ttfFont = font;\n        var wordSpacing = this.justifyLine(lineInfo, layoutRectangle.width, format);\n        var rtlRender = new RtlRenderer();\n        if (rtl || (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.None)) {\n            var blocks = null;\n            var rightAlign = (format !== null && typeof format !== 'undefined' && format.alignment === PdfTextAlignment.Right);\n            if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.None) {\n                /* tslint:disable-next-line:max-line-length */\n                blocks = rtlRender.layout(line, ttfFont, (format.textDirection === PdfTextDirection.RightToLeft) ? true : false, useWordSpace, format);\n            }\n            else {\n                blocks = rtlRender.layout(line, ttfFont, rightAlign, useWordSpace, format);\n            }\n            var words = null;\n            if (blocks.length > 1) {\n                if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.None) {\n                    /* tslint:disable-next-line:max-line-length */\n                    words = rtlRender.splitLayout(line, ttfFont, (format.textDirection === PdfTextDirection.RightToLeft) ? true : false, useWordSpace, format);\n                }\n                else {\n                    words = rtlRender.splitLayout(line, ttfFont, rightAlign, useWordSpace, format);\n                }\n            }\n            else {\n                words = [line];\n            }\n            this.drawUnicodeBlocks(blocks, words, ttfFont, format, wordSpacing);\n        }\n        else {\n            if (useWordSpace) {\n                var result = this.breakUnicodeLine(line, ttfFont, null);\n                var blocks = result.tokens;\n                var words = result.words;\n                this.drawUnicodeBlocks(blocks, words, ttfFont, format, wordSpacing);\n            }\n            else {\n                var token = this.convertToUnicode(line, ttfFont);\n                var value = this.getUnicodeString(token);\n                this.streamWriter.showNextLineText(value);\n            }\n        }\n    };\n    /**\n     * Draws array of unicode tokens.\n     */\n    PdfGraphics.prototype.drawUnicodeBlocks = function (blocks, words, font, format, wordSpacing) {\n        if (blocks == null) {\n            throw new Error('Argument Null Exception : blocks');\n        }\n        if (words == null) {\n            throw new Error('Argument Null Exception : words');\n        }\n        if (font == null) {\n            throw new Error('Argument Null Exception : font');\n        }\n        this.streamWriter.startNextLine();\n        var x = 0;\n        var xShift = 0;\n        var firstLineIndent = 0;\n        var paragraphIndent = 0;\n        try {\n            if (format !== null && typeof format !== 'undefined') {\n                firstLineIndent = format.firstLineIndent;\n                paragraphIndent = format.paragraphIndent;\n                format.firstLineIndent = 0;\n                format.paragraphIndent = 0;\n            }\n            var spaceWidth = font.getCharWidth(StringTokenizer.whiteSpace, format) + wordSpacing;\n            var characterSpacing = (format != null) ? format.characterSpacing : 0;\n            var wordSpace = (format !== null && typeof format !== 'undefined' && wordSpacing === 0) ? format.wordSpacing : 0;\n            spaceWidth += characterSpacing + wordSpace;\n            for (var i = 0; i < blocks.length; i++) {\n                var token = blocks[i];\n                var word = words[i];\n                var tokenWidth = 0;\n                if (x !== 0) {\n                    this.streamWriter.startNextLine(x, 0);\n                }\n                if (word.length > 0) {\n                    tokenWidth += /*Utils.Round(*/ font.measureString(word, format).width /*)*/;\n                    tokenWidth += characterSpacing;\n                    var val = this.getUnicodeString(token);\n                    this.streamWriter.showText(val);\n                }\n                if (i !== blocks.length - 1) {\n                    x = tokenWidth + spaceWidth;\n                    xShift += x;\n                }\n            }\n            // Rolback current line position.\n            if (xShift > 0) {\n                this.streamWriter.startNextLine(-xShift, 0);\n            }\n        }\n        finally {\n            if (format !== null && typeof format !== 'undefined') {\n                format.firstLineIndent = firstLineIndent;\n                format.paragraphIndent = paragraphIndent;\n            }\n        }\n    };\n    /**\n     * Breakes the unicode line to the words and converts symbols to glyphs.\n     */\n    PdfGraphics.prototype.breakUnicodeLine = function (line, ttfFont, words) {\n        if (line === null) {\n            throw new Error('Argument Null Exception : line');\n        }\n        words = line.split(null);\n        var tokens = [];\n        for (var i = 0; i < words.length; i++) {\n            // Reconvert string according to unicode standard.\n            var word = words[i];\n            var token = this.convertToUnicode(word, ttfFont);\n            tokens[i] = token;\n        }\n        return { tokens: tokens, words: words };\n    };\n    /**\n     * Creates PdfString from the unicode text.\n     */\n    PdfGraphics.prototype.getUnicodeString = function (token) {\n        if (token === null) {\n            throw new Error('Argument Null Exception : token');\n        }\n        var val = new PdfString(token);\n        val.converted = true;\n        val.encode = InternalEnum.ForceEncoding.Ascii;\n        return val;\n    };\n    /**\n     * Converts to unicode format.\n     */\n    PdfGraphics.prototype.convertToUnicode = function (text, ttfFont) {\n        var token = null;\n        if (text == null) {\n            throw new Error('Argument Null Exception : text');\n        }\n        if (ttfFont == null) {\n            throw new Error('Argument Null Exception : ttfFont');\n        }\n        if (ttfFont.fontInternal instanceof UnicodeTrueTypeFont) {\n            var ttfReader = ttfFont.fontInternal.ttfReader;\n            ttfFont.setSymbols(text);\n            token = ttfReader.convertString(text);\n            var bytes = PdfString.toUnicodeArray(token, false);\n            token = PdfString.byteToString(bytes);\n        }\n        return token;\n    };\n    /**\n     * `Justifies` the line if needed.\n     * @private\n     */\n    PdfGraphics.prototype.justifyLine = function (lineInfo, boundsWidth, format) {\n        var line = lineInfo.text;\n        var lineWidth = lineInfo.width;\n        var shouldJustify = this.shouldJustify(lineInfo, boundsWidth, format);\n        var hasWordSpacing = (format != null && format.wordSpacing !== 0);\n        var symbols = StringTokenizer.spaces;\n        var whitespacesCount = StringTokenizer.getCharsCount(line, symbols);\n        var wordSpace = 0;\n        if (shouldJustify) {\n            // Correct line width.\n            if (hasWordSpacing) {\n                lineWidth -= (whitespacesCount * format.wordSpacing);\n            }\n            var difference = boundsWidth - lineWidth;\n            wordSpace = difference / whitespacesCount;\n            this.pdfStreamWriter.setWordSpacing(wordSpace);\n        }\n        else {\n            // If there is justifying, but the line shouldn't be justified, restore default word spacing.\n            if (hasWordSpacing) {\n                this.pdfStreamWriter.setWordSpacing(format.wordSpacing);\n            }\n            else {\n                this.pdfStreamWriter.setWordSpacing(0);\n            }\n        }\n        return wordSpace;\n    };\n    /**\n     * `Reset` or reinitialize the current graphic value.\n     * @private\n     */\n    PdfGraphics.prototype.reset = function (size) {\n        this.canvasSize = size;\n        this.streamWriter.clear();\n        this.initialize();\n        this.initializeCoordinates();\n    };\n    /**\n     * Checks whether the line should be `justified`.\n     * @private\n     */\n    PdfGraphics.prototype.shouldJustify = function (lineInfo, boundsWidth, format) {\n        var line = lineInfo.text;\n        var lineWidth = lineInfo.width;\n        var justifyStyle = (format != null && format.alignment === PdfTextAlignment.Justify);\n        var goodWidth = (boundsWidth >= 0 && lineWidth < boundsWidth);\n        var symbols = StringTokenizer.spaces;\n        var whitespacesCount = StringTokenizer.getCharsCount(line, symbols);\n        var hasSpaces = (whitespacesCount > 0 && line[0] !== StringTokenizer.whiteSpace);\n        var goodLineBreakStyle = ((lineInfo.lineType & LineType.LayoutBreak) > 0);\n        var shouldJustify = (justifyStyle && goodWidth && hasSpaces && (goodLineBreakStyle || format.alignment === PdfTextAlignment.Justify));\n        return shouldJustify;\n    };\n    /**\n     * Emulates `Underline, Strikeout` of the text if needed.\n     * @private\n     */\n    PdfGraphics.prototype.underlineStrikeoutText = function (pen, brush, result, font, layoutRectangle, format) {\n        if (font.underline || font.strikeout) {\n            // Calculate line width.\n            var linePen = this.createUnderlineStikeoutPen(pen, brush, font, format);\n            if (linePen != null) {\n                // Approximate line positions.\n                var vShift = this.getTextVerticalAlignShift(result.actualSize.height, layoutRectangle.height, format);\n                var underlineYOffset = 0;\n                underlineYOffset = layoutRectangle.y + vShift + font.metrics.getAscent(format) + 1.5 * linePen.width;\n                var strikeoutYOffset = layoutRectangle.y + vShift + font.metrics.getHeight(format) / 2 + 1.5 * linePen.width;\n                var lines = result.lines;\n                // Run through the text and draw lines.\n                for (var i = 0, len = result.lineCount; i < len; i++) {\n                    var lineInfo = lines[i];\n                    var line = lineInfo.text;\n                    var lineWidth = lineInfo.width;\n                    var hShift = this.getHorizontalAlignShift(lineWidth, layoutRectangle.width, format);\n                    var lineIndent = this.getLineIndent(lineInfo, format, layoutRectangle, (i === 0));\n                    hShift += (!this.rightToLeft(format)) ? lineIndent : 0;\n                    var x1 = layoutRectangle.x + hShift;\n                    var x2 = (!this.shouldJustify(lineInfo, layoutRectangle.width, format)) ? x1 + lineWidth - lineIndent : x1 + layoutRectangle.width - lineIndent;\n                    if (font.underline) {\n                        var y = underlineYOffset;\n                        this.drawLine(linePen, x1, y, x2, y);\n                        underlineYOffset += result.lineHeight;\n                    }\n                    if (font.strikeout) {\n                        var y = strikeoutYOffset;\n                        this.drawLine(linePen, x1, y, x2, y);\n                        strikeoutYOffset += result.lineHeight;\n                    }\n                    if (this.isPointOverload && lines.length > 1) {\n                        layoutRectangle.x = 0;\n                        layoutRectangle.width = this.clientSize.width;\n                    }\n                }\n                this.isPointOverload = false;\n            }\n        }\n    };\n    /**\n     * `Creates a pen` for drawing lines in the text.\n     * @private\n     */\n    PdfGraphics.prototype.createUnderlineStikeoutPen = function (pen, brush, font, format) {\n        // Calculate line width.\n        var lineWidth = font.metrics.getSize(format) / 20;\n        var linePen = null;\n        // Create a pen fo the lines.\n        if (pen != null) {\n            linePen = new PdfPen(pen.color, lineWidth);\n        }\n        else if (brush != null) {\n            linePen = new PdfPen(brush, lineWidth);\n        }\n        return linePen;\n    };\n    /**\n     * Return `text rendering mode`.\n     * @private\n     */\n    PdfGraphics.prototype.getTextRenderingMode = function (pen, brush, format) {\n        var tm = TextRenderingMode.None;\n        if (pen != null && brush != null) {\n            tm = TextRenderingMode.FillStroke;\n        }\n        else if (pen != null) {\n            tm = TextRenderingMode.Stroke;\n        }\n        else {\n            tm = TextRenderingMode.Fill;\n        }\n        if (format != null && format.clipPath) {\n            tm |= TextRenderingMode.ClipFlag;\n        }\n        return tm;\n    };\n    /**\n     * Returns `line indent` for the line.\n     * @private\n     */\n    PdfGraphics.prototype.getLineIndent = function (lineInfo, format, layoutBounds, firstLine) {\n        var lineIndent = 0;\n        var firstParagraphLine = ((lineInfo.lineType & LineType.FirstParagraphLine) > 0);\n        if (format != null && firstParagraphLine) {\n            lineIndent = (firstLine) ? format.firstLineIndent : format.paragraphIndent;\n            lineIndent = (layoutBounds.width > 0) ? Math.min(layoutBounds.width, lineIndent) : lineIndent;\n        }\n        return lineIndent;\n    };\n    /**\n     * Calculates shift value if the line is `horizontaly aligned`.\n     * @private\n     */\n    PdfGraphics.prototype.getHorizontalAlignShift = function (lineWidth, boundsWidth, format) {\n        var shift = 0;\n        if (boundsWidth >= 0 && format != null && format.alignment !== PdfTextAlignment.Left) {\n            switch (format.alignment) {\n                case PdfTextAlignment.Center:\n                    shift = (boundsWidth - lineWidth) / 2;\n                    break;\n                case PdfTextAlignment.Right:\n                    shift = boundsWidth - lineWidth;\n                    break;\n            }\n        }\n        return shift;\n    };\n    /**\n     * Gets or sets the value that indicates `text direction` mode.\n     * @private\n     */\n    PdfGraphics.prototype.rightToLeft = function (format) {\n        var rtl = (format !== null && typeof format !== 'undefined' && format.rightToLeft);\n        if (format !== null && typeof format !== 'undefined') {\n            if (format.textDirection !== PdfTextDirection.None && typeof format.textDirection !== 'undefined') {\n                rtl = true;\n            }\n        }\n        return rtl;\n    };\n    PdfGraphics.prototype.stateControl = function (pen, brush, font, format) {\n        if (typeof format === 'undefined') {\n            this.stateControl(pen, brush, font, null);\n        }\n        else {\n            if (brush instanceof PdfGradientBrush) {\n                this.bCSInitialized = false;\n                brush.colorSpace = this.colorSpace;\n            }\n            if (brush instanceof PdfTilingBrush) {\n                this.bCSInitialized = false;\n                brush.graphics.colorSpace = this.colorSpace;\n            }\n            var saveState = false;\n            if (brush !== null) {\n                var solidBrush = brush;\n                if (typeof this.pageLayer !== 'undefined' && this.pageLayer != null) {\n                    if (this.colorSpaceChanged === false) {\n                        this.lastDocumentCS = this.pageLayer.page.document.colorSpace;\n                        this.lastGraphicsCS = this.pageLayer.page.graphics.colorSpace;\n                        this.colorSpace = this.pageLayer.page.document.colorSpace;\n                        this.currentColorSpace = this.pageLayer.page.document.colorSpace;\n                        this.colorSpaceChanged = true;\n                    }\n                }\n                this.initCurrentColorSpace(this.currentColorSpace);\n            }\n            else if (pen != null) {\n                var pdfPen = pen;\n                if (typeof this.pageLayer !== 'undefined' && this.pageLayer != null) {\n                    this.colorSpace = this.pageLayer.page.document.colorSpace;\n                    this.currentColorSpace = this.pageLayer.page.document.colorSpace;\n                }\n                this.initCurrentColorSpace(this.currentColorSpace);\n            }\n            this.penControl(pen, saveState);\n            this.brushControl(brush, saveState);\n            this.fontControl(font, format, saveState);\n        }\n    };\n    /**\n     * Initializes the `current color space`.\n     * @private\n     */\n    PdfGraphics.prototype.initCurrentColorSpace = function (colorspace) {\n        var re = this.getResources.getResources();\n        if (!this.bCSInitialized) {\n            if (this.currentColorSpace != PdfColorSpace.GrayScale) {\n                this.pdfStreamWriter.setColorSpace('Device' + this.currentColorSpaces[this.currentColorSpace], true);\n                this.pdfStreamWriter.setColorSpace('Device' + this.currentColorSpaces[this.currentColorSpace], false);\n                this.bCSInitialized = true;\n            }\n            else {\n                this.pdfStreamWriter.setColorSpace('DeviceGray', true);\n                this.pdfStreamWriter.setColorSpace('DeviceGray', false);\n                this.bCSInitialized = true;\n            }\n        }\n    };\n    /**\n     * Controls the `pen state`.\n     * @private\n     */\n    PdfGraphics.prototype.penControl = function (pen, saveState) {\n        if (pen != null) {\n            this.currentPen = pen;\n            pen.monitorChanges(this.currentPen, this.pdfStreamWriter, this.getResources, saveState, this.colorSpace, this.matrix.clone());\n            this.currentPen = pen.clone();\n        }\n    };\n    /**\n     * Controls the `brush state`.\n     * @private\n     */\n    PdfGraphics.prototype.brushControl = function (brush, saveState) {\n        if (brush != null && typeof brush !== 'undefined') {\n            var b = brush.clone();\n            var lgb = b;\n            if (lgb !== null && typeof lgb !== 'undefined' && !(brush instanceof PdfSolidBrush) && !(brush instanceof PdfTilingBrush)) {\n                var m = lgb.matrix;\n                var matrix = this.matrix.clone();\n                if ((m != null)) {\n                    m.multiply(matrix);\n                    matrix = m;\n                }\n                lgb.matrix = matrix;\n            }\n            this.currentBrush = lgb;\n            var br = (brush);\n            b.monitorChanges(this.currentBrush, this.pdfStreamWriter, this.getResources, saveState, this.colorSpace);\n            this.currentBrush = brush;\n            brush = null;\n        }\n    };\n    /**\n     * Saves the font and other `font settings`.\n     * @private\n     */\n    PdfGraphics.prototype.fontControl = function (font, format, saveState) {\n        if (font != null) {\n            var curSubSuper = (format != null) ? format.subSuperScript : PdfSubSuperScript.None;\n            var prevSubSuper = (this.currentStringFormat != null) ? this.currentStringFormat.subSuperScript : PdfSubSuperScript.None;\n            if (saveState || font !== this.currentFont || curSubSuper !== prevSubSuper) {\n                var resources = this.getResources.getResources();\n                this.currentFont = font;\n                this.currentStringFormat = format;\n                var size = font.metrics.getSize(format);\n                this.isEmfTextScaled = false;\n                var fontName = resources.getName(font);\n                this.pdfStreamWriter.setFont(font, fontName, size);\n            }\n        }\n    };\n    PdfGraphics.prototype.setTransparency = function (arg1, arg2, arg3) {\n        if (typeof arg2 === 'undefined') {\n            this.istransparencySet = true;\n            this.setTransparency(arg1, arg1, PdfBlendMode.Normal);\n        }\n        else if (typeof arg2 === 'number' && typeof arg3 === 'undefined') {\n            this.setTransparency(arg1, arg2, PdfBlendMode.Normal);\n        }\n        else {\n            if (this.trasparencies == null) {\n                this.trasparencies = new TemporaryDictionary();\n            }\n            var transp = null;\n            var td = new TransparencyData(arg1, arg2, arg3);\n            if (this.trasparencies.containsKey(td)) {\n                transp = this.trasparencies.getValue(td);\n            }\n            if (transp == null) {\n                transp = new PdfTransparency(arg1, arg2, arg3);\n                this.trasparencies.setValue(td, transp);\n            }\n            var resources = this.getResources.getResources();\n            var name_3 = resources.getName(transp);\n            var sw = this.streamWriter;\n            sw.setGraphicsState(name_3);\n        }\n    };\n    PdfGraphics.prototype.clipTranslateMargins = function (x, y, left, top, right, bottom) {\n        if (x instanceof RectangleF && typeof y === 'undefined') {\n            this.clipBounds = x;\n            this.pdfStreamWriter.writeComment('Clip margins.');\n            this.pdfStreamWriter.appendRectangle(x);\n            this.pdfStreamWriter.closePath();\n            this.pdfStreamWriter.clipPath(false);\n            this.pdfStreamWriter.writeComment('Translate co-ordinate system.');\n            this.translateTransform(x.x, x.y);\n        }\n        else if (typeof x === 'number') {\n            var clipArea = new RectangleF(left, top, this.size.width - left - right, this.size.height - top - bottom);\n            this.clipBounds = clipArea;\n            this.pdfStreamWriter.writeComment(\"Clip margins.\");\n            this.pdfStreamWriter.appendRectangle(clipArea);\n            this.pdfStreamWriter.closePath();\n            this.pdfStreamWriter.clipPath(false);\n            this.pdfStreamWriter.writeComment(\"Translate co-ordinate system.\");\n            this.translateTransform(x, y);\n        }\n    };\n    /**\n     * `Updates y` co-ordinate.\n     * @private\n     */\n    PdfGraphics.prototype.updateY = function (y) {\n        return -y;\n    };\n    /**\n     * Used to `translate the transformation`.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // create a new page\n     * let page1 : PdfPage = document.pages.add();\n     * // set pen\n     * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n     * //\n     * // set translate transform\n     * page1.graphics.translateTransform(100, 100);\n     * //\n     * // draw the rectangle after applying translate transform\n     * page1.graphics.drawRectangle(pen, new RectangleF({x : 0, y : 0}, {width : 100, height : 50}));\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     * @param offsetX The x-coordinate of the translation.\n     * @param offsetY The y-coordinate of the translation.\n     */\n    PdfGraphics.prototype.translateTransform = function (offsetX, offsetY) {\n        var matrix = new PdfTransformationMatrix();\n        this.getTranslateTransform(offsetX, offsetY, matrix);\n        this.pdfStreamWriter.modifyCtm(matrix);\n        this.matrix.multiply(matrix);\n    };\n    /**\n     * `Translates` coordinates of the input matrix.\n     * @private\n     */\n    PdfGraphics.prototype.getTranslateTransform = function (x, y, input) {\n        input.translate(x, this.updateY(y));\n        return input;\n    };\n    /**\n     * Applies the specified `scaling operation` to the transformation matrix of this Graphics by prepending it to the object's transformation matrix.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // create a new page\n     * let page1 : PdfPage = document.pages.add();\n     * // create pen\n     * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n     * //\n     * // apply scaling trasformation\n     * page1.graphics.scaleTransform(1.5, 2);\n     * //\n     * // draw the rectangle after applying scaling transform\n     * page1.graphics.drawRectangle(pen, new RectangleF({x : 100, y : 100}, {width : 100, height : 50}));\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     * @param scaleX Scale factor in the x direction.\n     * @param scaleY Scale factor in the y direction.\n     */\n    PdfGraphics.prototype.scaleTransform = function (scaleX, scaleY) {\n        var matrix = new PdfTransformationMatrix();\n        this.getScaleTransform(scaleX, scaleY, matrix);\n        this.pdfStreamWriter.modifyCtm(matrix);\n        this.matrix.multiply(matrix);\n    };\n    /**\n     * `Scales` coordinates of the input matrix.\n     * @private\n     */\n    PdfGraphics.prototype.getScaleTransform = function (x, y, input) {\n        if (input == null) {\n            input = new PdfTransformationMatrix();\n        }\n        input.scale(x, y);\n        return input;\n    };\n    /**\n     * Applies the specified `rotation` to the transformation matrix of this Graphics.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // create a new page\n     * let page1 : PdfPage = document.pages.add();\n     * // create pen\n     * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n     * //\n     * // set RotateTransform with 25 degree of angle\n     * page1.graphics.rotateTransform(25);\n     * //\n     * // draw the rectangle after RotateTransformation\n     * page1.graphics.drawRectangle(pen, new RectangleF({x : 100, y : 100}, {width : 100, height : 50}));\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     * @param angle Angle of rotation in degrees.\n     */\n    PdfGraphics.prototype.rotateTransform = function (angle) {\n        var matrix = new PdfTransformationMatrix();\n        this.getRotateTransform(angle, matrix);\n        this.pdfStreamWriter.modifyCtm(matrix);\n        this.matrix.multiply(matrix);\n    };\n    /**\n     * `Initializes coordinate system`.\n     * @private\n     */\n    PdfGraphics.prototype.initializeCoordinates = function () {\n        // Matrix equation: TM(T-1)=M', where T=[1 0 0 -1 0 h]\n        this.pdfStreamWriter.writeComment('Change co-ordinate system to left/top.');\n        // Translate co-ordinates only, don't flip.\n        if (this.mediaBoxUpperRightBound !== -(this.size.height)) {\n            if (this.cropBox == null) {\n                if (this.mediaBoxUpperRightBound === this.size.height || this.mediaBoxUpperRightBound === 0) {\n                    this.translateTransform(0, this.updateY(this.size.height));\n                }\n                else {\n                    this.translateTransform(0, this.updateY(this.mediaBoxUpperRightBound));\n                }\n            }\n        }\n    };\n    /**\n     * `Rotates` coordinates of the input matrix.\n     * @private\n     */\n    PdfGraphics.prototype.getRotateTransform = function (angle, input) {\n        if (input == null || typeof input === 'undefined') {\n            input = new PdfTransformationMatrix();\n        }\n        input.rotate(this.updateY(angle));\n        return input;\n    };\n    /**\n     * `Saves` the current state of this Graphics and identifies the saved state with a GraphicsState.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // create a new page\n     * let page1 : PdfPage = document.pages.add();\n     * // create pen\n     * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n     * //\n     * // save the graphics state\n     * let state1 : PdfGraphicsState = page1.graphics.save();\n     * //\n     * page1.graphics.scaleTransform(1.5, 2);\n     * // draw the rectangle\n     * page1.graphics.drawRectangle(pen, new RectangleF({x : 100, y : 100}, {width : 100, height : 50}));\n     * // restore the graphics state\n     * page1.graphics.restore(state1);\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.save = function () {\n        var state = new PdfGraphicsState(this, this.matrix.clone());\n        state.brush = this.currentBrush;\n        state.pen = this.currentPen;\n        state.font = this.currentFont;\n        state.colorSpace = this.currentColorSpace;\n        state.characterSpacing = this.previousCharacterSpacing;\n        state.wordSpacing = this.previousWordSpacing;\n        state.textScaling = this.previousTextScaling;\n        state.textRenderingMode = this.previousTextRenderingMode;\n        this.graphicsState.push(state);\n        this.pdfStreamWriter.saveGraphicsState();\n        return state;\n    };\n    PdfGraphics.prototype.restore = function (state) {\n        if (typeof state === 'undefined') {\n            if (this.graphicsState.length > 0) {\n                this.doRestoreState();\n            }\n        }\n        else {\n            if (this.graphicsState.indexOf(state) !== -1) {\n                for (;;) {\n                    if (this.graphicsState.length === 0) {\n                        break;\n                    }\n                    var popState = this.doRestoreState();\n                    if (popState === state) {\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * `Restores graphics state`.\n     * @private\n     */\n    PdfGraphics.prototype.doRestoreState = function () {\n        var state = this.graphicsState.pop();\n        this.transformationMatrix = state.matrix;\n        this.currentBrush = state.brush;\n        this.currentPen = state.pen;\n        this.currentFont = state.font;\n        this.currentColorSpace = state.colorSpace;\n        this.previousCharacterSpacing = state.characterSpacing;\n        this.previousWordSpacing = state.wordSpacing;\n        this.previousTextScaling = state.textScaling;\n        this.previousTextRenderingMode = state.textRenderingMode;\n        this.pdfStreamWriter.restoreGraphicsState();\n        return state;\n    };\n    /**\n     * `Draws the specified path`, using its original physical size, at the location specified by a coordinate pair.\n     * ```typescript\n     * // create a new PDF document.\n     * let document : PdfDocument = new PdfDocument();\n     * // add a page to the document.\n     * let page1 : PdfPage = document.pages.add();\n     * //Create new PDF path.\n     * let path : PdfPath = new PdfPath();\n     * //Add line path points.\n     * path.addLine(new PointF(10, 100), new PointF(10, 200));\n     * path.addLine(new PointF(100, 100), new PointF(100, 200));\n     * path.addLine(new PointF(100, 200), new PointF(55, 150));\n     * // set pen\n     * let pen : PdfPen = new PdfPen(new PdfColor(255, 0, 0));\n     * // set brush\n     * let brush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n     * // draw the path\n     * page1.graphics.drawPath(pen, brush, path);\n     * //\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     * @param pen Color of the text.\n     * @param brush Color of the text.\n     * @param path Draw path.\n     */\n    PdfGraphics.prototype.drawPath = function (pen, brush, path) {\n        this._drawPath(pen, brush, path.pathPoints, path.pathTypes, path.fillMode);\n    };\n    PdfGraphics.prototype._drawPath = function (pen, brush, pathPoints, pathTypes, fillMode) {\n        if (brush instanceof PdfTilingBrush) {\n            this.bCSInitialized = false;\n            brush.graphics.colorSpace = this.colorSpace;\n        }\n        else if (brush instanceof PdfGradientBrush) {\n            this.bCSInitialized = false;\n            brush.colorSpace = this.colorSpace;\n        }\n        this.stateControl(pen, brush, null);\n        this.buildUpPath(pathPoints, pathTypes);\n        this.drawPathHelper(pen, brush, fillMode, false);\n    };\n    /* tslint:disable-next-line:max-line-length */\n    PdfGraphics.prototype.drawArc = function (arg1, arg2, arg3, arg4, arg5, arg6, arg7) {\n        if (arg2 instanceof RectangleF) {\n            this.drawArc(arg1, arg2.x, arg2.y, arg2.width, arg2.height, arg3, arg4);\n        }\n        else {\n            if ((arg7 !== 0)) {\n                this.stateControl(arg1, null, null);\n                this.constructArcPath(arg2, arg3, (arg2 + arg4), (arg3 + arg5), arg6, arg7);\n                this.drawPathHelper(arg1, null, false);\n            }\n        }\n    };\n    /**\n     * Builds up the path.\n     * @private\n     */\n    PdfGraphics.prototype.buildUpPath = function (arg1, arg2) {\n        var cnt = arg1.length;\n        for (var i = 0; i < cnt; ++i) {\n            var typeValue = 0;\n            var point = arg1[i];\n            switch (((arg2[i] & (PdfGraphics.pathTypesValuesMask)))) {\n                case PathPointType.Start:\n                    this.pdfStreamWriter.beginPath(point.x, point.y);\n                    break;\n                case PathPointType.Bezier3:\n                    var p2 = new PointF(0, 0);\n                    var p3 = new PointF(0, 0);\n                    var result1 = this.getBezierPoints(arg1, arg2, i, p2, p3);\n                    this.pdfStreamWriter.appendBezierSegment(point, result1.p2, result1.p3);\n                    i = result1.i;\n                    break;\n                case PathPointType.Line:\n                    this.pdfStreamWriter.appendLineSegment(point);\n                    break;\n                default:\n                    throw new Error('ArithmeticException - Incorrect path formation.');\n            }\n            typeValue = arg2[i];\n            this.checkFlags(typeValue);\n        }\n    };\n    /**\n     * Gets the bezier points from respective arrays.\n     * @private\n     */\n    /* tslint:disable-next-line:max-line-length */\n    PdfGraphics.prototype.getBezierPoints = function (points, types, i, p2, p3) {\n        var errorMsg = 'Malforming path.';\n        ++i;\n        if ((((types[i] & PdfGraphics.pathTypesValuesMask)) === PathPointType.Bezier3)) {\n            p2 = points[i];\n            ++i;\n            if ((((types[i] & PdfGraphics.pathTypesValuesMask)) === PathPointType.Bezier3)) {\n                p3 = points[i];\n            }\n            else {\n                throw new Error('ArgumentException : errorMsg');\n            }\n        }\n        else {\n            throw new Error('ArgumentException : errorMsg');\n        }\n        return { i: i, p2: p2, p3: p3 };\n    };\n    /**\n     * Checks path point type flags.\n     * @private\n     */\n    PdfGraphics.prototype.checkFlags = function (type) {\n        if ((((type & (PathPointType.CloseSubpath))) === PathPointType.CloseSubpath)) {\n            this.pdfStreamWriter.closePath();\n        }\n    };\n    /**\n     * Constructs the arc path using Bezier curves.\n     * @private\n     */\n    PdfGraphics.prototype.constructArcPath = function (x1, y1, x2, y2, startAng, sweepAngle) {\n        var points = this.getBezierArc(x1, y1, x2, y2, startAng, sweepAngle);\n        if ((points.length === 0)) {\n            return;\n        }\n        var pt = [points[0], points[1], points[2], points[3], points[4], points[5], points[6], points[7]];\n        this.pdfStreamWriter.beginPath(pt[0], pt[1]);\n        var i = 0;\n        for (i = 0; i < points.length; i = i + 8) {\n            pt = [points[i], points[i + 1], points[i + 2], points[i + 3], points[i + 4], points[i + 5], points[i + 6], points[i + 7]];\n            this.pdfStreamWriter.appendBezierSegment(pt[2], pt[3], pt[4], pt[5], pt[6], pt[7]);\n        }\n    };\n    /**\n     * Gets the bezier points for arc constructing.\n     * @private\n     */\n    PdfGraphics.prototype.getBezierArc = function (numX1, numY1, numX2, numY2, s1, e1) {\n        if ((numX1 > numX2)) {\n            var tmp = void 0;\n            tmp = numX1;\n            numX1 = numX2;\n            numX2 = tmp;\n        }\n        if ((numY2 > numY1)) {\n            var tmp = void 0;\n            tmp = numY1;\n            numY1 = numY2;\n            numY2 = tmp;\n        }\n        var fragAngle1;\n        var numFragments;\n        if ((Math.abs(e1) <= 90)) {\n            fragAngle1 = e1;\n            numFragments = 1;\n        }\n        else {\n            numFragments = (Math.ceil((Math.abs(e1) / 90)));\n            fragAngle1 = (e1 / numFragments);\n        }\n        var xcen = ((numX1 + numX2) / 2);\n        var ycen = ((numY1 + numY2) / 2);\n        var rx = ((numX2 - numX1) / 2);\n        var ry = ((numY2 - numY1) / 2);\n        var halfAng = ((fragAngle1 * (Math.PI / 360)));\n        var kappa = (Math.abs(4.0 / 3.0 * (1.0 - Math.cos(halfAng)) / Math.sin(halfAng)));\n        var pointsList = [];\n        for (var i = 0; (i < numFragments); i++) {\n            var thetaValue0 = (((s1 + (i * fragAngle1)) * (Math.PI / 180)));\n            var thetaValue1 = (((s1 + ((i + 1) * fragAngle1)) * (Math.PI / 180)));\n            var cos0 = (Math.cos(thetaValue0));\n            var cos1 = (Math.cos(thetaValue1));\n            var sin0 = (Math.sin(thetaValue0));\n            var sin1 = (Math.sin(thetaValue1));\n            if ((fragAngle1 > 0)) {\n                /* tslint:disable-next-line:max-line-length */\n                pointsList.push((xcen + (rx * cos0)), (ycen - (ry * sin0)), (xcen + (rx * (cos0 - (kappa * sin0)))), (ycen - (ry * (sin0 + (kappa * cos0)))), (xcen + (rx * (cos1 + (kappa * sin1)))), (ycen - (ry * (sin1 - (kappa * cos1)))), (xcen + (rx * cos1)), (ycen - (ry * sin1)));\n            }\n            else {\n                /* tslint:disable-next-line:max-line-length */\n                pointsList.push((xcen + (rx * cos0)), (ycen - (ry * sin0)), (xcen + (rx * (cos0 + (kappa * sin0)))), (ycen - (ry * (sin0 - (kappa * cos0)))), (xcen + (rx * (cos1 - (kappa * sin1)))), (ycen - (ry * (sin1 + (kappa * cos1)))), (xcen + (rx * cos1)), (ycen - (ry * sin1)));\n            }\n        }\n        return pointsList;\n    };\n    /* tslint:disable */\n    // Constants\n    /**\n     * Specifies the mask of `path type values`.\n     * @private\n     */\n    PdfGraphics.pathTypesValuesMask = 0xf;\n    /**\n     * Checks whether the object is `transparencyObject`.\n     * @hidden\n     * @private\n     */\n    PdfGraphics.transparencyObject = false;\n    return PdfGraphics;\n}());\nexport { PdfGraphics };\n/**\n * `GetResourceEventHandler` class is alternate for event handlers and delegates.\n * @private\n * @hidden\n */\nvar GetResourceEventHandler = /** @class */ (function () {\n    /**\n     * Initialize instance of `GetResourceEventHandler` class.\n     * Alternate for event handlers and delegates.\n     * @private\n     */\n    function GetResourceEventHandler(sender) {\n        this.sender = sender;\n    }\n    /**\n     * Return the instance of `PdfResources` class.\n     * @private\n     */\n    GetResourceEventHandler.prototype.getResources = function () {\n        return this.sender.getResources();\n    };\n    return GetResourceEventHandler;\n}());\nexport { GetResourceEventHandler };\nvar PdfGraphicsState = /** @class */ (function () {\n    function PdfGraphicsState(graphics, matrix) {\n        /**\n         * Stores `previous rendering mode`.\n         * @default TextRenderingMode.Fill\n         * @private\n         */\n        this.internalTextRenderingMode = TextRenderingMode.Fill;\n        /**\n         * `Previous character spacing` value or 0.\n         * @default 0.0\n         * @private\n         */\n        this.internalCharacterSpacing = 0.0;\n        /**\n         * `Previous word spacing` value or 0.\n         * @default 0.0\n         * @private\n         */\n        this.internalWordSpacing = 0.0;\n        /**\n         * The previously used `text scaling value`.\n         * @default 100.0\n         * @private\n         */\n        this.internalTextScaling = 100.0;\n        /**\n         * `Current color space`.\n         * @default PdfColorSpace.Rgb\n         * @private\n         */\n        this.pdfColorSpace = PdfColorSpace.Rgb;\n        if (typeof graphics !== 'undefined') {\n            this.pdfGraphics = graphics;\n            var elements_1 = [];\n            graphics.matrix.matrix.elements.forEach(function (element) {\n                elements_1.push(element);\n            });\n            this.transformationMatrix = new PdfTransformationMatrix();\n            this.transformationMatrix.matrix = new Matrix(elements_1);\n        }\n    }\n    Object.defineProperty(PdfGraphicsState.prototype, \"graphics\", {\n        // Properties\n        /**\n         * Gets the parent `graphics object`.\n         * @private\n         */\n        get: function () {\n            return this.pdfGraphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"matrix\", {\n        /**\n         * Gets the `current matrix`.\n         * @private\n         */\n        get: function () {\n            return this.transformationMatrix;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"characterSpacing\", {\n        /**\n         * Gets or sets the `current character spacing`.\n         * @private\n         */\n        get: function () {\n            return this.internalCharacterSpacing;\n        },\n        set: function (value) {\n            this.internalCharacterSpacing = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"wordSpacing\", {\n        /**\n         * Gets or sets the `word spacing` value.\n         * @private\n         */\n        get: function () {\n            return this.internalWordSpacing;\n        },\n        set: function (value) {\n            this.internalWordSpacing = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"textScaling\", {\n        /**\n         * Gets or sets the `text scaling` value.\n         * @private\n         */\n        get: function () {\n            return this.internalTextScaling;\n        },\n        set: function (value) {\n            this.internalTextScaling = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"pen\", {\n        /**\n         * Gets or sets the `current pen` object.\n         * @private\n         */\n        get: function () {\n            return this.pdfPen;\n        },\n        set: function (value) {\n            this.pdfPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"brush\", {\n        /**\n         * Gets or sets the `brush`.\n         * @private\n         */\n        get: function () {\n            return this.pdfBrush;\n        },\n        set: function (value) {\n            this.pdfBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"font\", {\n        /**\n         * Gets or sets the `current font` object.\n         * @private\n         */\n        get: function () {\n            return this.pdfFont;\n        },\n        set: function (value) {\n            this.pdfFont = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"colorSpace\", {\n        /**\n         * Gets or sets the `current color space` value.\n         * @private\n         */\n        get: function () {\n            return this.pdfColorSpace;\n        },\n        set: function (value) {\n            this.pdfColorSpace = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"textRenderingMode\", {\n        /**\n         * Gets or sets the `text rendering mode`.\n         * @private\n         */\n        get: function () {\n            return this.internalTextRenderingMode;\n        },\n        set: function (value) {\n            this.internalTextRenderingMode = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGraphicsState;\n}());\nexport { PdfGraphicsState };\nvar TransparencyData = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `TransparencyData` class.\n     * @private\n     */\n    function TransparencyData(alphaPen, alphaBrush, blendMode) {\n        this.alphaPen = alphaPen;\n        this.alphaBrush = alphaBrush;\n        this.blendMode = blendMode;\n    }\n    return TransparencyData;\n}());\n/* tslint:enable */\n", "import { PdfStream } from './../primitives/pdf-stream';\nimport { PdfGraphics, GetResourceEventHandler } from './../graphics/pdf-graphics';\nimport { PdfPageLayerCollection } from './pdf-page-layer-collection';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfColorSpace } from './../graphics/enum';\n/**\n * The `PdfPageLayer` used to create layers in PDF document.\n * @private\n */\nvar PdfPageLayer = /** @class */ (function () {\n    function PdfPageLayer(page, streamClipPageTemplates) {\n        // private bSaved : boolean;\n        /**\n         * Local Variable to store the `color space` of the document.\n         * @private\n         */\n        this.pdfColorSpace = PdfColorSpace.Rgb;\n        /**\n         * Local Variable to set `visibility`.\n         * @default true\n         * @private\n         */\n        this.isVisible = true;\n        /**\n         * Indicates if `Sublayer` is present.\n         * @default false\n         * @private\n         */\n        this.sublayer = false;\n        /**\n         * Local variable to store `length` of the graphics.\n         * @default 0\n         * @private\n         */\n        this.contentLength = 0;\n        /**\n         * Instance for `PdfDictionaryProperties` Class.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        if (page === null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        this.pdfPage = page;\n        this.clipPageTemplates = true;\n        if (typeof streamClipPageTemplates === 'undefined') {\n            this.content = new PdfStream();\n        }\n        else if (streamClipPageTemplates instanceof PdfStream || streamClipPageTemplates === null) {\n            if (streamClipPageTemplates === null) {\n                throw new Error('ArgumentNullException:stream');\n            }\n            this.content = streamClipPageTemplates;\n        }\n        else {\n            this.content = new PdfStream();\n            this.clipPageTemplates = streamClipPageTemplates;\n        }\n    }\n    Object.defineProperty(PdfPageLayer.prototype, \"colorSpace\", {\n        // Properties\n        /**\n         * Get or set the `color space`.\n         * @private\n         */\n        get: function () {\n            return this.pdfColorSpace;\n        },\n        set: function (value) {\n            this.pdfColorSpace = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"page\", {\n        /**\n         * Gets parent `page` of the layer.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"layerId\", {\n        /**\n         * Gets and Sets the `id of the layer`.\n         * @private\n         */\n        get: function () {\n            return this.layerid;\n        },\n        set: function (value) {\n            this.layerid = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"name\", {\n        /**\n         * Gets or sets the `name` of the layer.\n         * @private\n         */\n        get: function () {\n            return this.layerName;\n        },\n        set: function (value) {\n            this.layerName = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"visible\", {\n        /**\n         * Gets or sets the `visibility` of the layer.\n         * @private\n         */\n        get: function () {\n            return this.isVisible;\n        },\n        set: function (value) {\n            this.isVisible = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"graphics\", {\n        /**\n         * Gets `Graphics` context of the layer, used to draw various graphical content on layer.\n         * @private\n         */\n        get: function () {\n            if ((this.pdfGraphics == null)) {\n                this.initializeGraphics(this.page);\n            }\n            return this.pdfGraphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"layers\", {\n        /**\n         * Gets the collection of `PdfPageLayer`, this collection handle by the class 'PdfPageLayerCollection'.\n         * @private\n         */\n        get: function () {\n            if (this.layer == null) {\n                this.layer = new PdfPageLayerCollection(this.page);\n                this.layer.sublayer = true;\n                return this.layer;\n            }\n            else {\n                return this.layer;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Adds` a new PDF Page layer.\n     * @private\n     */\n    PdfPageLayer.prototype.add = function () {\n        var layer = new PdfPageLayer(this.pdfPage);\n        layer.name = '';\n        return layer;\n    };\n    /**\n     * Returns a value indicating the `sign` of a single-precision floating-point number.\n     * @private\n     */\n    PdfPageLayer.prototype.sign = function (number) {\n        if (number === 0) {\n            return 0;\n        }\n        else if (number > 0) {\n            return 1;\n        }\n        else {\n            return -1;\n        }\n    };\n    /**\n     * `Initializes Graphics context` of the layer.\n     * @private\n     */\n    PdfPageLayer.prototype.initializeGraphics = function (page) {\n        var oPage = page;\n        var gr = new GetResourceEventHandler(this.page);\n        var cropBox = null;\n        this.pdfGraphics = new PdfGraphics(page.size, gr, this.content);\n        this.pdfGraphics.mediaBoxUpperRightBound = 0;\n        if (oPage != null) {\n            var sc = oPage.section.parent;\n            if (sc != null) {\n                this.pdfGraphics.colorSpace = sc.document.colorSpace;\n                this.colorSpace = sc.document.colorSpace;\n            }\n        }\n        // Transform coordinates to the left/top and activate margins.\n        var isSame = (this.sign(page.origin.y) === this.sign(page.origin.x));\n        // if (page != null) {\n        if (page.origin.x >= 0 && page.origin.y >= 0 || !(isSame)) {\n            this.pdfGraphics.initializeCoordinates();\n        }\n        else {\n            // this.m_graphics.InitializeCoordinates(page);\n        }\n        var clipRect = oPage.section.getActualBounds(oPage, true);\n        var margins = oPage.section.pageSettings.margins;\n        if (this.clipPageTemplates) {\n            if (page.origin.x >= 0 && page.origin.y >= 0) {\n                this.pdfGraphics.clipTranslateMargins(clipRect);\n            }\n        }\n        else {\n            this.graphics.clipTranslateMargins(clipRect.x, clipRect.y, margins.left, margins.top, margins.right, margins.bottom);\n        }\n        this.pdfGraphics.setLayer(this);\n        // this.bSaved = false;\n    };\n    Object.defineProperty(PdfPageLayer.prototype, \"element\", {\n        // IPdfWrapper Members\n        /**\n         * Gets the wrapped `element`.\n         * @private\n         */\n        get: function () {\n            return this.content;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfPageLayer;\n}());\nexport { PdfPageLayer };\n", "/**\n * PdfCollection.ts class for EJ2-PDF\n * The class used to handle the collection of PdF objects.\n */\nvar PdfCollection = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `Collection` class.\n     * @private\n     */\n    function PdfCollection() {\n        //\n    }\n    Object.defineProperty(PdfCollection.prototype, \"count\", {\n        // Properties\n        /**\n         * Gets the `Count` of stored objects.\n         * @private\n         */\n        get: function () {\n            if (typeof this.collection === 'undefined') {\n                this.collection = [];\n            }\n            return this.collection.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCollection.prototype, \"list\", {\n        /**\n         * Gets the `list` of stored objects.\n         * @private\n         */\n        get: function () {\n            if (typeof this.collection === 'undefined') {\n                this.collection = [];\n            }\n            return this.collection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfCollection;\n}());\nexport { PdfCollection };\n", "var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfPageLayerCollection.ts class for EJ2-PDF\n */\nimport { PdfPageBase } from './pdf-page-base';\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { PdfPageLayer } from './pdf-page-layer';\nimport { PdfCollection } from './../general/pdf-collection';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfStream } from './../primitives/pdf-stream';\n/**\n * The class provides methods and properties to handle the collections of `PdfPageLayer`.\n */\nvar PdfPageLayerCollection = /** @class */ (function (_super) {\n    __extends(PdfPageLayerCollection, _super);\n    function PdfPageLayerCollection(page) {\n        var _this = _super.call(this) || this;\n        /**\n         * Stores the `number of first level layers` in the document.\n         * @default 0\n         * @private\n         */\n        _this.parentLayerCount = 0;\n        /**\n         * Indicates if `Sublayer` is present.\n         * @default false\n         * @private\n         */\n        _this.sublayer = false;\n        /**\n         * Stores the `optional content dictionary`.\n         * @private\n         */\n        _this.optionalContent = new PdfDictionary();\n        if (page instanceof PdfPageBase) {\n            // if (page == null) {\n            //     throw new Error('ArgumentNullException:page');\n            // }\n            _this.page = page;\n            var lPage = page;\n            // if (lPage != null) {\n            _this.parseLayers(lPage);\n            // }\n        }\n        return _this;\n    }\n    PdfPageLayerCollection.prototype.items = function (index, value) {\n        if (typeof index === 'number' && typeof value === 'undefined') {\n            var obj = this.list[index];\n            return obj;\n        }\n        else {\n            if (value == null) {\n                throw new Error('ArgumentNullException: layer');\n            }\n            if (value.page !== this.page) {\n                throw new Error('ArgumentException: The layer belongs to another page');\n            }\n            // // Add/remove the layer.\n            // let layer : PdfPageLayer = this.items(index);\n            // if (layer != null) {\n            //     this.RemoveLayer(layer);\n            // }\n            // this.List[index] = value;\n            // this.InsertLayer(index, value);\n        }\n    };\n    PdfPageLayerCollection.prototype.add = function (firstArgument, secondArgument) {\n        if (typeof firstArgument === 'undefined') {\n            var layer = new PdfPageLayer(this.page);\n            layer.name = '';\n            this.add(layer);\n            return layer;\n        }\n        else if (firstArgument instanceof PdfPageLayer) {\n            // if (layer == null)\n            //     throw new ArgumentNullException(\"layer\");\n            // if (layer.Page != m_page)\n            //     throw new ArgumentException(\"The layer belongs to another page\");\n            var index = this.list.push(firstArgument);\n            // Register layer.\n            this.addLayer(index, firstArgument);\n            return index;\n        }\n        else {\n            return 0;\n        }\n    };\n    /**\n     * Registers `layer` at the page.\n     * @private\n     */\n    PdfPageLayerCollection.prototype.addLayer = function (index, layer) {\n        var reference = new PdfReferenceHolder(layer);\n        this.page.contents.add(reference);\n    };\n    // private RemoveLayer(layer : PdfPageLayer) : void {\n    //     if (layer == null) {\n    //         throw new Error('ArgumentNullException:layer');\n    //     }\n    //     let reference : PdfReferenceHolder = new PdfReferenceHolder(layer);\n    //     if (this.page != null) {\n    //         this.page.Contents.Remove(reference);\n    //     }\n    // }\n    /**\n     * Inserts `PdfPageLayer` into the collection at specified index.\n     * @private\n     */\n    PdfPageLayerCollection.prototype.insert = function (index, layer) {\n        // if (index < 0)\n        //     throw new ArgumentOutOfRangeException(\"index\", \"Value can not be less 0\");\n        // if (layer == null)\n        //     throw new ArgumentNullException(\"layer\");\n        // if (layer.Page != m_page)\n        //     throw new ArgumentException(\"The layer belongs to another page\");\n        var list = [];\n        var length = this.list.length;\n        for (var i = index; i < length; i++) {\n            list.push(this.list.pop());\n        }\n        this.list.push(layer);\n        for (var i = 0; i < list.length; i++) {\n            this.list.push(list[i]);\n        }\n        // Register layer.\n        this.insertLayer(index, layer);\n    };\n    /**\n     * Registers layer at the page.\n     * @private\n     */\n    PdfPageLayerCollection.prototype.insertLayer = function (index, layer) {\n        if (layer == null) {\n            throw new Error('ArgumentNullException:layer');\n        }\n        var reference = new PdfReferenceHolder(layer);\n        this.page.contents.insert(index, reference);\n    };\n    // tslint:disable\n    /**\n     * `Parses the layers`.\n     * @private\n     */\n    PdfPageLayerCollection.prototype.parseLayers = function (loadedPage) {\n        // if (loadedPage == null) {\n        //     throw new Error('ArgumentNullException:loadedPage');\n        // }\n        var contents = this.page.contents;\n        var resource = this.page.getResources();\n        var crossTable = null;\n        var ocproperties = null;\n        var propertie = null;\n        var isLayerAdded = false;\n        // if (loadedPage instanceof PdfPage) {\n        crossTable = loadedPage.crossTable;\n        // } else {\n        //     crossTable = (loadedPage as PdfLoadedPage).CrossTable;\n        //     Propertie = PdfCrossTable.Dereference(Resource[DictionaryProperties.Properties]) as PdfDictionary;\n        //     ocproperties = PdfCrossTable.Dereference((loadedPage as PdfLoadedPage).\n        //     Document.Catalog[DictionaryProperties.OCProperties]) as PdfDictionary;\n        // }\n        var saveStream = new PdfStream();\n        var restoreStream = new PdfStream();\n        var saveState = 'q';\n        var newLine = '\\n';\n        var restoreState = 'Q';\n        // for (let index : number = 0; index < contents.Items.length; index++) {\n        //     let obj : IPdfPrimitive = contents[index];\n        //     let stream : PdfStream = crossTable.GetObject(obj) as PdfStream;\n        //     if (stream == null)\n        //         throw new PdfDocumentException(\"Invalid contents array.\");\n        //     // if (stream.Compress)\n        //     {\n        //         if (!loadedPage.Imported)\n        //             stream.Decompress();\n        //     }\n        //     byte[] contentId = stream.Data;\n        //     string str = PdfString.ByteToString(contentId);\n        //     if (!loadedPage.Imported && (contents.Count == 1) && ((stream.Data[stream.Data.Length - 2] ==\n        //     RestoreState) || (stream.Data[stream.Data.Length - 1] == RestoreState)))\n        //     {\n        //         byte[] content = stream.Data;\n        //         byte[] data = new byte[content.Length + 4];\n        //         data[0] = SaveState;\n        //         data[1] = NewLine;\n        //         content.CopyTo(data, 2);\n        //         data[data.Length - 2] = NewLine;\n        //         data[data.Length - 1] = RestoreState;\n        //         stream.Data = data;\n        //     }\n        //     if (ocproperties != null)\n        //     {\n        //         if (Propertie != null)\n        //         {\n        //             foreach (KeyValuePair<PdfName, IPdfPrimitive> prop in Propertie.Items)\n        //             {\n        //                 String Key = prop.Key.ToString();\n        //                 PdfReferenceHolder refh = prop.Value as PdfReferenceHolder;\n        //                 PdfDictionary Dict = null;\n        //                 if (refh != null)\n        //                 {\n        //                     Dict = refh.Object as PdfDictionary;\n        //                 }\n        //                 else\n        //                 {\n        //                     Dict = prop.Value as PdfDictionary;\n        //                 }\n        //                 PdfDictionary m_usage = PdfCrossTable.Dereference(Dict[DictionaryProperties.Usage]) as PdfDictionary;\n        //                 if (m_usage != null)\n        //                 {\n        //                     if (str.Contains(Key))\n        //                     {\n        //                         PdfPageLayer layer = new PdfPageLayer(loadedPage, stream);\n        //                         PdfDictionary printoption = PdfCrossTable.Dereference(m_usage[DictionaryProperties.Print])\n        //                         as PdfDictionary;\n        //                         if (printoption != null)\n        //                         {\n        //                             layer.m_printOption = printoption;\n        //                             foreach (KeyValuePair<PdfName, IPdfPrimitive> value in printoption.Items)\n        //                             {\n        //                                 if (value.Key.Value.Equals(DictionaryProperties.PrintState))\n        //                                 {\n        //                                     string printState = (value.Value as PdfName).Value;\n        //                                     if (printState.Equals(DictionaryProperties.OCGON))\n        //                                     {\n        //                                         layer.PrintState = PdfPrintState.AlwaysPrint;\n        //                                         break;\n        //                                     }\n        //                                     else\n        //                                     {\n        //                                         layer.PrintState = PdfPrintState.NeverPrint;\n        //                                         break;\n        //                                     }\n        //                                 }\n        //                             }\n        //                         }\n        //                         PdfString layerName = PdfCrossTable.Dereference(Dict[DictionaryProperties.Name]) as PdfString;\n        //                         layer.Name = layerName.Value;\n        //                         List.add(layer);\n        //                         isLayerAdded = true;\n        //                         if(!str.Contains(\"EMC\"))\n        //                         break;\n        //                     }\n        //                 }\n        //                 else\n        //                 {\n        //                     if (str.Contains(Key))\n        //                     {\n        //                         PdfPageLayer layer = new PdfPageLayer(loadedPage, stream);\n        //                         List.add(layer);\n        //                         if(Dict.ContainsKey(DictionaryProperties.Name))\n        //                         {\n        //                         PdfString layerName = PdfCrossTable.Dereference(Dict[DictionaryProperties.Name]) as PdfString;\n        //                         layer.Name = layerName.Value;\n        //                         }\n        //                         isLayerAdded = true;\n        //                         break;\n        //                     }\n        //                 }\n        //             }\n        //         }\n        //     }\n        //     if (!isLayerAdded)\n        //     {\n        //         PdfPageLayer layer = new PdfPageLayer(loadedPage, stream);\n        //         List.add(layer);\n        //     }\n        //     else\n        //         isLayerAdded = false;\n        // }\n        var saveData = [];\n        saveData.push(saveState);\n        saveStream.data = saveData;\n        contents.insert(0, new PdfReferenceHolder(saveStream));\n        saveData = [];\n        saveData.push(restoreState);\n        restoreStream.data = saveData;\n        contents.insert(contents.count, new PdfReferenceHolder(restoreStream));\n    };\n    /**\n     * Returns `index of` the `PdfPageLayer` in the collection if exists, -1 otherwise.\n     * @private\n     */\n    PdfPageLayerCollection.prototype.indexOf = function (layer) {\n        if (layer == null) {\n            throw new Error('ArgumentNullException: layer');\n        }\n        var index = this.list.indexOf(layer);\n        return index;\n    };\n    return PdfPageLayerCollection;\n}(PdfCollection));\nexport { PdfPageLayerCollection };\n", "import { PdfArray } from './../primitives/pdf-array';\nimport { PdfPageLayerCollection } from './pdf-page-layer-collection';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfResources } from './../graphics/pdf-resources';\n/**\n * The abstract base class for all pages,\n * `PdfPageBase` class provides methods and properties to create PDF pages and its elements.\n * @private\n */\nvar PdfPageBase = /** @class */ (function () {\n    //constructors\n    /**\n     * Initializes a new instance of the `PdfPageBase` class.\n     * @private\n     */\n    function PdfPageBase(dictionary) {\n        /**\n         * `Index` of the default layer.\n         * @default -1.\n         * @private\n         */\n        this.defLayerIndex = -1;\n        /**\n         * Local variable to store if page `updated`.\n         * @default false.\n         * @private\n         */\n        this.modified = false;\n        /**\n         * Instance of `DictionaryProperties` class.\n         * @hidden\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        this.pageDictionary = dictionary;\n    }\n    Object.defineProperty(PdfPageBase.prototype, \"section\", {\n        //Properties\n        /**\n         * Gets the `section` of a page.\n         * @private\n         */\n        get: function () {\n            // if (this.pdfSection === null) {\n            //     throw new Error('PdfException : Page must be added to some section before using.');\n            // }\n            return this.pdfSection;\n        },\n        set: function (value) {\n            this.pdfSection = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageBase.prototype, \"dictionary\", {\n        /**\n         * Gets the page `dictionary`.\n         * @private\n         */\n        get: function () {\n            return this.pageDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageBase.prototype, \"element\", {\n        /**\n         * Gets the wrapped `element`.\n         * @private\n         */\n        get: function () {\n            return this.pageDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageBase.prototype, \"defaultLayer\", {\n        /**\n         * Gets the `default layer` of the page (Read only).\n         * @private\n         */\n        get: function () {\n            var layer = this.layers;\n            var index = this.defaultLayerIndex;\n            var returnlayer = layer.items(index);\n            return returnlayer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageBase.prototype, \"defaultLayerIndex\", {\n        /**\n         * Gets or sets `index of the default layer`.\n         * @private\n         */\n        get: function () {\n            if (this.layerCollection.count === 0 || this.defLayerIndex === -1) {\n                var layer = this.layerCollection.add();\n                this.defLayerIndex = this.layerCollection.indexOf(layer);\n            }\n            return this.defLayerIndex;\n        },\n        /**\n         * Gets or sets` index of the default layer`.\n         * @private\n         */\n        set: function (value) {\n            if (value < 0 || value > this.layers.count - 1) {\n                throw new Error('ArgumentOutOfRangeException : value, Index can not be less 0 and greater Layers.Count - 1');\n            }\n            else {\n                this.defLayerIndex = value;\n                this.modified = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageBase.prototype, \"layers\", {\n        /**\n         * Gets the collection of the page's `layers` (Read only).\n         * @private\n         */\n        get: function () {\n            if (this.layerCollection == null || typeof this.layerCollection === 'undefined') {\n                this.layerCollection = new PdfPageLayerCollection(this);\n            }\n            return this.layerCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Return an instance of `PdfResources` class.\n     * @private\n     */\n    PdfPageBase.prototype.getResources = function () {\n        if (this.resources == null) {\n            this.resources = new PdfResources();\n            this.dictionary.items.setValue(this.dictionaryProperties.resources, this.resources);\n        }\n        return this.resources;\n    };\n    Object.defineProperty(PdfPageBase.prototype, \"contents\", {\n        /**\n         * Gets `array of page's content`.\n         * @private\n         */\n        get: function () {\n            var obj = this.pageDictionary.items.getValue(this.dictionaryProperties.contents);\n            var contents = obj;\n            var rh = obj;\n            if (contents == null) {\n                contents = new PdfArray();\n                this.pageDictionary.items.setValue(this.dictionaryProperties.contents, contents);\n            }\n            return contents;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets the `resources`.\n     * @private\n     */\n    PdfPageBase.prototype.setResources = function (res) {\n        this.resources = res;\n        this.dictionary.items.setValue(this.dictionaryProperties.resources, this.resources);\n        this.modified = true;\n    };\n    return PdfPageBase;\n}());\nexport { PdfPageBase };\n", "import { PdfArray } from './../primitives/pdf-array';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { SizeF, RectangleF, PointF } from './../drawing/pdf-drawing';\nimport { PdfStringLayouter } from './../graphics/fonts/string-layouter';\nimport { PdfColorSpace } from './../graphics/enum';\n/**\n * `PdfAnnotationCollection` class represents the collection of 'PdfAnnotation' objects.\n * @private\n */\nvar PdfAnnotationCollection = /** @class */ (function () {\n    function PdfAnnotationCollection(page) {\n        // Constants\n        /**\n         * `Error` constant message.\n         * @private\n         */\n        this.alreadyExistsAnnotationError = 'This annotatation had been already added to page';\n        /**\n         * `Error` constant message.\n         * @private\n         */\n        this.missingAnnotationException = 'Annotation is not contained in collection.';\n        /**\n         * Specifies the Internal variable to store fields of `PdfDictionaryProperties`.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Array of the `annotations`.\n         * @private\n         */\n        this.internalAnnotations = new PdfArray();\n        /**\n         * privte `list` for the annotations.\n         * @private\n         */\n        this.lists = [];\n        if (typeof page !== 'undefined') {\n            this.page = page;\n        }\n    }\n    Object.defineProperty(PdfAnnotationCollection.prototype, \"annotations\", {\n        /**\n         * Gets the `PdfAnnotation` object at the specified index. Read-Only.\n         * @private\n         */\n        get: function () {\n            return this.internalAnnotations;\n        },\n        set: function (value) {\n            this.internalAnnotations = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Public methods\n    /**\n     * `Adds` a new annotation to the collection.\n     * @private\n     */\n    PdfAnnotationCollection.prototype.add = function (annotation) {\n        // this.SetPrint(annotation);\n        this.doAdd(annotation);\n    };\n    /**\n     * `Adds` a Annotation to collection.\n     * @private\n     */\n    /* tslint:disable */\n    PdfAnnotationCollection.prototype.doAdd = function (annotation) {\n        if (typeof annotation.destination !== 'undefined') {\n            var layout = new PdfStringLayouter();\n            var layoutResult = layout.layout(annotation.text, annotation.font, annotation.stringFormat, new SizeF((annotation.bounds.width), 0), false, new SizeF(0, 0));\n            var lastPosition = annotation.bounds.y;\n            if (layoutResult.lines.length === 1) {\n                var size = annotation.font.measureString(layoutResult.lines[0].text);\n                annotation.bounds = new RectangleF(new PointF(annotation.bounds.x, lastPosition), size);\n                annotation.text = layoutResult.lines[0].text;\n                //Draw Annotation Text.\n                this.page.graphics.drawString(annotation.text, annotation.font, null, annotation.brush, annotation.bounds.x, annotation.bounds.y, annotation.bounds.width, annotation.bounds.height, null);\n                //Add annotation to dictionary.\n                annotation.setPage(this.page);\n                this.setColor(annotation);\n                this.internalAnnotations.add(new PdfReferenceHolder(annotation));\n                this.lists.push(annotation);\n            }\n            else {\n                for (var i = 0; i < layoutResult.lines.length; i++) {\n                    var size = annotation.font.measureString(layoutResult.lines[i].text);\n                    if (i === 0) {\n                        annotation.bounds = new RectangleF(annotation.bounds.x, lastPosition, size.width, size.height);\n                        annotation.text = layoutResult.lines[i].text;\n                        //Draw Annotation Text.\n                        this.page.graphics.drawString(annotation.text, annotation.font, null, annotation.brush, annotation.bounds.x, lastPosition, size.width, size.height, null);\n                        //Add annotation to dictionary.\n                        annotation.setPage(this.page);\n                        this.setColor(annotation);\n                        this.internalAnnotations.add(new PdfReferenceHolder(annotation));\n                        this.lists.push(annotation);\n                        //Update y for drawing next line of the text.\n                        lastPosition += annotation.bounds.height;\n                    }\n                    else {\n                        var annot = annotation.clone();\n                        annot.bounds = new RectangleF(new PointF(annotation.bounds.x, lastPosition), size);\n                        annot.text = layoutResult.lines[i].text;\n                        //Draw Annotation Text.\n                        this.page.graphics.drawString(annot.text, annot.font, null, annot.brush, annot.bounds.x, annot.bounds.y, annot.bounds.width, annot.bounds.height, null);\n                        //Add annotation to dictionary.\n                        annot.setPage(this.page);\n                        this.setColor(annot);\n                        this.internalAnnotations.add(new PdfReferenceHolder(annot));\n                        this.lists.push(annot);\n                        //Update y for drawing next line of the text.\n                        lastPosition += annot.bounds.height;\n                    }\n                }\n            }\n        }\n        else {\n            annotation.setPage(this.page);\n            this.internalAnnotations.add(new PdfReferenceHolder(annotation));\n            return this.lists.push(annotation);\n        }\n    };\n    /* tslint:enable */\n    /**\n     * `Set a color of an annotation`.\n     * @private\n     */\n    PdfAnnotationCollection.prototype.setColor = function (annotation) {\n        var cs = PdfColorSpace.Rgb;\n        var colours = annotation.color.toArray(cs);\n        annotation.dictionary.items.setValue(this.dictionaryProperties.c, colours);\n    };\n    Object.defineProperty(PdfAnnotationCollection.prototype, \"element\", {\n        // IPdfWrapper Members\n        /**\n         * Gets the `Element` representing this object.\n         * @private\n         */\n        get: function () {\n            return this.internalAnnotations;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAnnotationCollection;\n}());\nexport { PdfAnnotationCollection };\n", "var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfPageBase } from './pdf-page-base';\nimport { PdfDictionary, SaveTemplateEventHandler } from './../primitives/pdf-dictionary';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { SizeF } from './../drawing/pdf-drawing';\nimport { PdfAnnotationCollection } from './../annotations/annotation-collection';\nimport { PdfPageLayer } from './pdf-page-layer';\n/**\n * Provides methods and properties to create pages and its elements.\n * `PdfPage` class inherited from the `PdfPageBase` class.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * //\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * //\n * // set the font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPage = /** @class */ (function (_super) {\n    __extends(PdfPage, _super);\n    //constructors\n    /**\n     * Initialize the new instance for `PdfPage` class.\n     * @private\n     */\n    function PdfPage() {\n        var _this = _super.call(this, new PdfDictionary()) || this;\n        /**\n         * Stores the instance of `PdfAnnotationCollection` class.\n         * @hidden\n         * @default null\n         * @private\n         */\n        _this.annotationCollection = null;\n        /**\n         * Stores the instance of `PageBeginSave` event for Page Number Field.\n         * @default null\n         * @private\n         */\n        _this.beginSave = null;\n        _this.initialize();\n        return _this;\n    }\n    Object.defineProperty(PdfPage.prototype, \"document\", {\n        //Properties\n        /**\n         * Gets current `document`.\n         * @private\n         */\n        get: function () {\n            if (this.section !== null && this.section.parent !== null) {\n                return this.section.parent.document;\n            }\n            else {\n                return null;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"graphics\", {\n        /**\n         * Get the current `graphics`.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a new page to the document\n         * let page1 : PdfPage = document.pages.add();\n         * //\n         * // get graphics\n         * let graphics : PdfGraphics = page1.graphics;\n         * //\n         * // set the font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // create black brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * // draw the text\n         * graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var result = this.defaultLayer.graphics;\n            result.currentPage = this;\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"crossTable\", {\n        /**\n         * Gets the `cross table`.\n         * @private\n         */\n        get: function () {\n            if (this.section === null) {\n                throw new Error('PdfDocumentException : Page is not created');\n            }\n            return this.section.parent === null ? this.section.parentDocument.crossTable : this.section.parent.document.crossTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"size\", {\n        /**\n         * Gets the size of the PDF page- Read only.\n         * @public\n         */\n        get: function () {\n            return this.section.pageSettings.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"origin\", {\n        /**\n         * Gets the `origin` of the page.\n         * @private\n         */\n        get: function () {\n            return this.section.pageSettings.origin;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"annotations\", {\n        /**\n         * Gets a collection of the `annotations` of the page- Read only.\n         * @private\n         */\n        get: function () {\n            if (this.annotationCollection == null) {\n                this.annotationCollection = new PdfAnnotationCollection(this);\n                // if (!this.Dictionary.ContainsKey(this.dictionaryProperties.annots)) {\n                this.dictionary.items.setValue(this.dictionaryProperties.annots, this.annotationCollection.element);\n                // }\n                this.annotationCollection.annotations = this.dictionary.items.getValue(this.dictionaryProperties.annots);\n            }\n            return this.annotationCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * `Initializes` a page.\n     * @private\n     */\n    PdfPage.prototype.initialize = function () {\n        this.dictionary.items.setValue(this.dictionaryProperties.type, new PdfName('Page'));\n        this.dictionary.pageBeginDrawTemplate = new SaveTemplateEventHandler(this);\n    };\n    /**\n     * Sets parent `section` to the page.\n     * @private\n     */\n    PdfPage.prototype.setSection = function (section) {\n        this.section = section;\n        this.dictionary.items.setValue(this.dictionaryProperties.parent, new PdfReferenceHolder(section));\n    };\n    /**\n     * `Resets the progress`.\n     * @private\n     */\n    PdfPage.prototype.resetProgress = function () {\n        this.isProgressOn = false;\n    };\n    /**\n     * Get the page size reduced by page margins and page template dimensions.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // add a pages to the document\n     * let page1 : PdfPage = document.pages.add();\n     * // create new standard font\n     * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // set brush\n     * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n     * //\n     * // set the specified point using `getClientSize` method\n     * let point : PointF = new PointF(page1.getClientSize().width - 200, page1.getClientSize().height - 200);\n     * // draw the text\n     * page1.graphics.drawString('Hello World', font, blackBrush, point);\n     * //\n     * // save the document\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfPage.prototype.getClientSize = function () {\n        var returnValue = this.section.getActualBounds(this, true);\n        return new SizeF(returnValue.width, returnValue.height);\n    };\n    /**\n     * Helper method to retrive the instance of `PageBeginSave` event for header and footer elements.\n     * @private\n     */\n    PdfPage.prototype.pageBeginSave = function () {\n        var doc = this.document;\n        if (typeof doc !== undefined && doc != null) {\n            this.drawPageTemplates(doc);\n        }\n        if (this.beginSave != null && typeof this.beginSave !== 'undefined') {\n            this.beginSave(this);\n        }\n    };\n    /**\n     * Helper method to draw template elements.\n     * @private\n     */\n    PdfPage.prototype.drawPageTemplates = function (document) {\n        // Draw Background templates.\n        var hasBackTemplates = this.section.containsTemplates(document, this, false);\n        if (hasBackTemplates) {\n            var backLayer = new PdfPageLayer(this, false);\n            this.layers.insert(0, backLayer);\n            this.section.drawTemplates(this, backLayer, document, false);\n            if (backLayer.graphics !== null && typeof backLayer.graphics !== 'undefined') {\n                for (var i = 0; i < backLayer.graphics.automaticFields.automaticFields.length; i++) {\n                    var fieldInfo = backLayer.graphics.automaticFields.automaticFields[i];\n                    fieldInfo.field.performDraw(backLayer.graphics, fieldInfo.location, fieldInfo.scalingX, fieldInfo.scalingY);\n                }\n            }\n        }\n        // Draw Foreground templates.\n        var hasFrontTemplates = this.section.containsTemplates(document, this, true);\n        if (hasFrontTemplates) {\n            var frontLayer = new PdfPageLayer(this, false);\n            this.layers.add(frontLayer);\n            this.section.drawTemplates(this, frontLayer, document, true);\n        }\n    };\n    return PdfPage;\n}(PdfPageBase));\nexport { PdfPage };\n", "/**\n * Provides data for `PageAddedEventHandler` event.\n * This event raises when adding the new PDF page to the PDF document.\n */\nvar PageAddedEventArgs = /** @class */ (function () {\n    function PageAddedEventArgs(page) {\n        if (typeof page !== 'undefined') {\n            this.pdfPage = page;\n        }\n        else {\n            this.pdfPage = null;\n        }\n    }\n    Object.defineProperty(PageAddedEventArgs.prototype, \"page\", {\n        /**\n         * Gets the `newly added page`.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PageAddedEventArgs;\n}());\nexport { PageAddedEventArgs };\n", "/**\n * Represents the `collection of pages in a section`.\n * @private\n */\nvar PdfSectionPageCollection = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `PdfSectionPageCollection` class.\n     * @private\n     */\n    function PdfSectionPageCollection(section) {\n        //  Fields\n        /**\n         * @hidden\n         * @private\n         */\n        this.pdfSection = null;\n        if (section == null) {\n            throw Error('ArgumentNullException(\"section\")');\n        }\n        this.section = section;\n    }\n    Object.defineProperty(PdfSectionPageCollection.prototype, \"section\", {\n        // Properties\n        /**\n         * Gets the `PdfPage` at the specified index.\n         * @private\n         */\n        get: function () {\n            return this.pdfSection;\n        },\n        set: function (value) {\n            this.pdfSection = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Public Methods\n    /**\n     * `Determines` whether the specified page is within the collection.\n     * @private\n     */\n    PdfSectionPageCollection.prototype.contains = function (page) {\n        return this.section.contains(page);\n    };\n    /**\n     * `Removes` the specified page from collection.\n     * @private\n     */\n    PdfSectionPageCollection.prototype.remove = function (page) {\n        this.section.remove(page);\n    };\n    /**\n     * `Adds` a new page from collection.\n     * @private\n     */\n    PdfSectionPageCollection.prototype.add = function () {\n        return this.section.add();\n    };\n    return PdfSectionPageCollection;\n}());\nexport { PdfSectionPageCollection };\n", "import { TemplateType } from './../pages/enum';\n// import { PdfStampCollection } from `./../Pages/PdfStampCollection`;\n/**\n * `PdfDocumentTemplate` class encapsulates a page template for all the pages in the document.\n * @private\n */\nvar PdfDocumentTemplate = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `PdfDocumentTemplate` class.\n     * @public\n     */\n    function PdfDocumentTemplate() {\n        //\n    }\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"left\", {\n        // private m_stamps : PdfStampCollection;\n        // Properties\n        /**\n         * `Left` page template object.\n         * @public\n         */\n        get: function () {\n            return this.leftTemplate;\n        },\n        set: function (value) {\n            this.leftTemplate = this.checkElement(value, TemplateType.Left);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"top\", {\n        /**\n         * `Top` page template object.\n         * @public\n         */\n        get: function () {\n            return this.topTemplate;\n        },\n        set: function (value) {\n            this.topTemplate = this.checkElement(value, TemplateType.Top);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"right\", {\n        /**\n         * `Right` page template object.\n         * @public\n         */\n        get: function () {\n            return this.rightTemplate;\n        },\n        set: function (value) {\n            this.rightTemplate = this.checkElement(value, TemplateType.Right);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"bottom\", {\n        /**\n         * `Bottom` page template object.\n         * @public\n         */\n        get: function () {\n            return this.bottomTemplate;\n        },\n        set: function (value) {\n            this.bottomTemplate = this.checkElement(value, TemplateType.Bottom);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"EvenLeft\", {\n        /**\n         * `EvenLeft` page template object.\n         * @public\n         */\n        get: function () {\n            return this.evenLeft;\n        },\n        set: function (value) {\n            this.evenLeft = this.checkElement(value, TemplateType.Left);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"EvenTop\", {\n        /**\n         * `EvenTop` page template object.\n         * @public\n         */\n        get: function () {\n            return this.evenTop;\n        },\n        set: function (value) {\n            this.evenTop = this.checkElement(value, TemplateType.Top);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"EvenRight\", {\n        /**\n         * `EvenRight` page template object.\n         * @public\n         */\n        get: function () {\n            return this.evenRight;\n        },\n        set: function (value) {\n            this.evenRight = this.checkElement(value, TemplateType.Right);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"EvenBottom\", {\n        /**\n         * `EvenBottom` page template object.\n         * @public\n         */\n        get: function () {\n            return this.evenBottom;\n        },\n        set: function (value) {\n            this.evenBottom = this.checkElement(value, TemplateType.Bottom);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"OddLeft\", {\n        /**\n         * `OddLeft` page template object.\n         * @public\n         */\n        get: function () {\n            return this.oddLeft;\n        },\n        set: function (value) {\n            this.oddLeft = this.checkElement(value, TemplateType.Left);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"OddTop\", {\n        /**\n         * `OddTop` page template object.\n         * @public\n         */\n        get: function () {\n            return this.oddTop;\n        },\n        set: function (value) {\n            this.oddTop = this.checkElement(value, TemplateType.Top);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"OddRight\", {\n        /**\n         * `OddRight` page template object.\n         * @public\n         */\n        get: function () {\n            return this.oddRight;\n        },\n        set: function (value) {\n            this.oddRight = this.checkElement(value, TemplateType.Right);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"OddBottom\", {\n        /**\n         * `OddBottom` page template object.\n         * @public\n         */\n        get: function () {\n            return this.oddBottom;\n        },\n        set: function (value) {\n            this.oddBottom = this.checkElement(value, TemplateType.Bottom);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Returns `left` template.\n     * @public\n     */\n    PdfDocumentTemplate.prototype.getLeft = function (page) {\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var template = null;\n        // if (page.Document.Pages != null) {\n        var even = this.isEven(page);\n        if (even) {\n            template = (this.EvenLeft != null) ? this.EvenLeft : this.left;\n        }\n        else {\n            template = (this.OddLeft != null) ? this.OddLeft : this.left;\n        }\n        // }\n        return template;\n    };\n    /**\n     * Returns `top` template.\n     * @public\n     */\n    PdfDocumentTemplate.prototype.getTop = function (page) {\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var template = null;\n        // if (page.Document.Pages != null) {\n        var even = this.isEven(page);\n        if (even) {\n            template = (this.EvenTop != null) ? this.EvenTop : this.top;\n        }\n        else {\n            template = (this.OddTop != null) ? this.OddTop : this.top;\n        }\n        // }\n        return template;\n    };\n    /**\n     * Returns `right` template.\n     * @public\n     */\n    PdfDocumentTemplate.prototype.getRight = function (page) {\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var template = null;\n        // if (page.Document.Pages != null) {\n        var even = this.isEven(page);\n        if (even) {\n            template = (this.EvenRight != null) ? this.EvenRight : this.right;\n        }\n        else {\n            template = (this.OddRight != null) ? this.OddRight : this.right;\n        }\n        // }\n        return template;\n    };\n    /**\n     * Returns `bottom` template.\n     * @public\n     */\n    PdfDocumentTemplate.prototype.getBottom = function (page) {\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var template = null;\n        // if (page.Document.Pages != null) {\n        var even = this.isEven(page);\n        if (even) {\n            template = (this.EvenBottom != null) ? this.EvenBottom : this.bottom;\n        }\n        else {\n            template = (this.OddBottom != null) ? this.OddBottom : this.bottom;\n        }\n        // }\n        return template;\n    };\n    /**\n     * Checks whether the page `is even`.\n     * @private\n     */\n    PdfDocumentTemplate.prototype.isEven = function (page) {\n        var pages = page.section.document.pages;\n        var index = 0;\n        if (pages.pageCollectionIndex.containsKey(page)) {\n            index = pages.pageCollectionIndex.getValue(page) + 1;\n        }\n        else {\n            index = pages.indexOf(page) + 1;\n        }\n        var even = ((index % 2) === 0);\n        return even;\n    };\n    /**\n     * Checks a `template element`.\n     * @private\n     */\n    PdfDocumentTemplate.prototype.checkElement = function (templateElement, type) {\n        if (templateElement != null) {\n            if ((typeof templateElement.type !== 'undefined') && (templateElement.type !== TemplateType.None)) {\n                throw new Error('NotSupportedException:Can not reassign the template element. Please, create new one.');\n            }\n            templateElement.type = type;\n        }\n        return templateElement;\n    };\n    return PdfDocumentTemplate;\n}());\nexport { PdfDocumentTemplate };\n", "var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfSectionTemplate.ts class for EJ2-PDF\n */\nimport { PdfDocumentTemplate } from './../document/pdf-document-template';\n/**\n * Represents a `page template` for all the pages in the section.\n */\nvar PdfSectionTemplate = /** @class */ (function (_super) {\n    __extends(PdfSectionTemplate, _super);\n    // Constructors\n    /**\n     * `Creates a new object`.\n     * @private\n     */\n    function PdfSectionTemplate() {\n        var _this = _super.call(this) || this;\n        _this.leftValue = _this.topValue = _this.rightValue = _this.bottomValue = _this.stampValue = true;\n        return _this;\n    }\n    Object.defineProperty(PdfSectionTemplate.prototype, \"applyDocumentLeftTemplate\", {\n        // Properties\n        /**\n         * Gets or sets value indicating whether parent `Left page template should be used or not`.\n         * @private\n         */\n        get: function () {\n            return this.leftValue;\n        },\n        set: function (value) {\n            this.leftValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionTemplate.prototype, \"applyDocumentTopTemplate\", {\n        /**\n         * Gets or sets value indicating whether parent `Top page template should be used or not`.\n         * @private\n         */\n        get: function () {\n            return this.topValue;\n        },\n        set: function (value) {\n            this.topValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionTemplate.prototype, \"applyDocumentRightTemplate\", {\n        /**\n         * Gets or sets value indicating whether parent `Right page template should be used or not`.\n         * @private\n         */\n        get: function () {\n            return this.rightValue;\n        },\n        set: function (value) {\n            this.rightValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionTemplate.prototype, \"applyDocumentBottomTemplate\", {\n        /**\n         * Gets or sets value indicating whether parent `Bottom page template should be used or not`.\n         * @private\n         */\n        get: function () {\n            return this.bottomValue;\n        },\n        set: function (value) {\n            this.bottomValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionTemplate.prototype, \"applyDocumentStamps\", {\n        /**\n         * Gets or sets value indicating whether the `stamp value` is true or not.\n         * @private\n         */\n        get: function () {\n            return this.stampValue;\n        },\n        set: function (value) {\n            this.stampValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfSectionTemplate;\n}(PdfDocumentTemplate));\nexport { PdfSectionTemplate };\n", "import { PdfPage } from './pdf-page';\nimport { PageAddedEventArgs } from './page-added-event-arguments';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { SaveSectionEventHandler } from './../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfSectionCollection } from './pdf-section-collection';\nimport { PdfSectionPageCollection } from './pdf-section-page-collection';\nimport { RectangleF } from './../drawing/pdf-drawing';\nimport { PdfSectionTemplate } from './pdf-section-templates';\n/**\n * Represents a `section` entity. A section it's a set of the pages with similar page settings.\n */\nvar PdfSection = /** @class */ (function () {\n    function PdfSection(document, pageSettings) {\n        //Fields\n        //public PageAdded() : PageAddedEventArgs.PageAddedEventHandler = new PageAddedEventArgs.PageAddedEventHandler(Object,args)\n        /**\n         * @hidden\n         * @private\n         */\n        this.pageAdded = new PageAddedEventArgs();\n        /**\n         * @hidden\n         * @private\n         */\n        this.pdfPages = [];\n        /**\n         * @hidden\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        this.pdfDocument = document;\n        if (typeof pageSettings === 'undefined') {\n            this.settings = document.pageSettings.clone();\n            this.initialSettings = this.settings.clone();\n        }\n        else {\n            this.settings = pageSettings.clone();\n            this.initialSettings = this.settings.clone();\n        }\n        this.initialize();\n    }\n    Object.defineProperty(PdfSection.prototype, \"parent\", {\n        //Property\n        /**\n         * Gets or sets the `parent`.\n         * @private\n         */\n        get: function () {\n            return this.sectionCollection;\n        },\n        set: function (value) {\n            this.sectionCollection = value;\n            this.section.items.setValue(this.dictionaryProperties.parent, new PdfReferenceHolder(value));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"parentDocument\", {\n        /**\n         * Gets the `parent document`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"pageSettings\", {\n        /**\n         * Gets or sets the `page settings` of the section.\n         * @private\n         */\n        get: function () {\n            return this.settings;\n        },\n        set: function (value) {\n            if (value != null) {\n                this.settings = value;\n            }\n            else {\n                throw Error('Value can not be null.');\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"element\", {\n        /**\n         * Gets the wrapped `element`.\n         * @private\n         */\n        get: function () {\n            return this.section;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"count\", {\n        /**\n         * Gets the `count` of the pages in the section.\n         * @private\n         */\n        get: function () {\n            return this.pagesReferences.count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"template\", {\n        /**\n         * Gets or sets a `template` for the pages in the section.\n         * @private\n         */\n        get: function () {\n            if (this.pageTemplate == null) {\n                this.pageTemplate = new PdfSectionTemplate();\n            }\n            return this.pageTemplate;\n        },\n        set: function (value) {\n            this.pageTemplate = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"document\", {\n        /**\n         * Gets the `document`.\n         * @private\n         */\n        get: function () {\n            return this.sectionCollection.document;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"pages\", {\n        /**\n         * Gets the collection of `pages` in a section (Read only)\n         * @private\n         */\n        get: function () {\n            if (this.pagesCollection == null || typeof this.pagesCollection === 'undefined') {\n                this.pagesCollection = new PdfSectionPageCollection(this);\n            }\n            return this.pagesCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //methods\n    /**\n     * `Return the page collection` of current section.\n     * @private\n     */\n    PdfSection.prototype.getPages = function () {\n        return this.pdfPages;\n    };\n    /**\n     * `Translates` point into native coordinates of the page.\n     * @private\n     */\n    PdfSection.prototype.pointToNativePdf = function (page, point) {\n        var bounds = this.getActualBounds(page, true);\n        point.x += bounds.x;\n        point.y = this.pageSettings.height - (point.y);\n        return point;\n    };\n    /**\n     * Sets the page setting of the current section.\n     * @public\n     * @param settings Instance of `PdfPageSettings`\n     */\n    PdfSection.prototype.setPageSettings = function (settings) {\n        this.settings = settings;\n        this.state.orientation = settings.orientation;\n        this.state.rotate = settings.rotate;\n        this.state.size = settings.size;\n        this.state.origin = settings.origin;\n    };\n    /**\n     * `Initializes` the object.\n     * @private\n     */\n    PdfSection.prototype.initialize = function () {\n        this.pagesReferences = new PdfArray();\n        this.section = new PdfDictionary();\n        this.state = new PageSettingsState(this.pdfDocument);\n        this.section.sectionBeginSave = new SaveSectionEventHandler(this, this.state);\n        this.pageCount = new PdfNumber(0);\n        this.section.items.setValue(this.dictionaryProperties.count, this.pageCount);\n        this.section.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.pages));\n        this.section.items.setValue(this.dictionaryProperties.kids, this.pagesReferences);\n    };\n    /**\n     * Checks whether any template should be printed on this layer.\n     * @private\n     * @param document The parent document.\n     * @param page The parent page.\n     * @param foreground Layer z-order.\n     * @returns True - if some content should be printed on the layer, False otherwise.\n     */\n    PdfSection.prototype.containsTemplates = function (document, page, foreground) {\n        var documentHeaders = this.getDocumentTemplates(document, page, foreground);\n        var sectionTemplates = this.getSectionTemplates(page, foreground);\n        return (documentHeaders.length > 0 || sectionTemplates.length > 0);\n    };\n    /**\n     * Returns array of the document templates.\n     * @private\n     * @param document The parent document.\n     * @param page The parent page.\n     * @param headers If true - return headers/footers, if false - return simple templates.\n     * @param foreground If true - return foreground templates, if false - return background templates.\n     * @returns Returns array of the document templates.\n     */\n    /* tslint:disable */\n    PdfSection.prototype.getDocumentTemplates = function (document, page, foreground) {\n        var templates = [];\n        if (this.template.applyDocumentTopTemplate && document.template.getTop(page) != null) {\n            if ((!(document.template.getTop(page).foreground || foreground)) || (document.template.getTop(page).foreground && foreground)) {\n                templates.push(document.template.getTop(page));\n            }\n        }\n        if (this.template.applyDocumentBottomTemplate && document.template.getBottom(page) != null) {\n            if ((!(document.template.getBottom(page).foreground || foreground)) || (document.template.getBottom(page).foreground && foreground)) {\n                templates.push(document.template.getBottom(page));\n            }\n        }\n        if (this.template.applyDocumentLeftTemplate && document.template.getLeft(page) != null) {\n            if ((!(document.template.getLeft(page).foreground || foreground)) || (document.template.getLeft(page).foreground && foreground)) {\n                templates.push(document.template.getLeft(page));\n            }\n        }\n        if (this.template.applyDocumentRightTemplate && document.template.getRight(page) != null) {\n            if ((!(document.template.getRight(page).foreground || foreground)) || (document.template.getRight(page).foreground && foreground)) {\n                templates.push(document.template.getRight(page));\n            }\n        }\n        return templates;\n    };\n    /**\n     * Returns array of the section templates.\n     * @private\n     * @param page The parent page.\n     * @param foreground If true - return foreground templates, if false - return background templates.\n     * @returns Returns array of the section templates.\n     */\n    /* tslint:disable */\n    PdfSection.prototype.getSectionTemplates = function (page, foreground) {\n        var templates = [];\n        if (this.template.getTop(page) != null) {\n            var pageTemplate = this.template.getTop(page);\n            if ((!(pageTemplate.foreground || foreground)) || (pageTemplate.foreground && foreground)) {\n                templates.push(pageTemplate);\n            }\n        }\n        if (this.template.getBottom(page) != null) {\n            var pageTemplate = this.template.getBottom(page);\n            if ((!(pageTemplate.foreground || foreground)) || (pageTemplate.foreground && foreground)) {\n                templates.push(pageTemplate);\n            }\n        }\n        if (this.template.getLeft(page) != null) {\n            var pageTemplate = this.template.getLeft(page);\n            if ((!(pageTemplate.foreground || foreground)) || (pageTemplate.foreground && foreground)) {\n                templates.push(pageTemplate);\n            }\n        }\n        if (this.template.getRight(page) != null) {\n            var pageTemplate = this.template.getRight(page);\n            if ((!(pageTemplate.foreground || foreground)) || (pageTemplate.foreground && foreground)) {\n                templates.push(pageTemplate);\n            }\n        }\n        return templates;\n    };\n    /* tslint:enable */\n    /**\n     * `Adds` the specified page.\n     * @private\n     */\n    PdfSection.prototype.add = function (page) {\n        if (typeof page === 'undefined') {\n            var page_1 = new PdfPage();\n            this.add(page_1);\n            return page_1;\n        }\n        else {\n            var r = this.checkPresence(page);\n            this.pdfPages.push(page);\n            this.pagesReferences.add(r);\n            page.setSection(this);\n            page.resetProgress();\n            this.pageAddedMethod(page);\n        }\n    };\n    /**\n     * `Checks the presence`.\n     * @private\n     */\n    PdfSection.prototype.checkPresence = function (page) {\n        var rh = new PdfReferenceHolder(page);\n        var contains = false;\n        var sc = this.parent;\n        for (var index = 0; index < sc.section.length; index++) {\n            var section = sc.section[index];\n            contains = contains || section.contains(page);\n        }\n        return rh;\n    };\n    /**\n     * `Determines` whether the page in within the section.\n     * @private\n     */\n    PdfSection.prototype.contains = function (page) {\n        var index = this.indexOf(page);\n        return (0 <= index);\n    };\n    /**\n     * Get the `index of` the page.\n     * @private\n     */\n    PdfSection.prototype.indexOf = function (page) {\n        for (var index = 0; index < this.pdfPages.length; index++) {\n            if (this.pdfPages[index] === page) {\n                return this.pdfPages.indexOf(page);\n            }\n        }\n        var r = new PdfReferenceHolder(page);\n        return this.pagesReferences.indexOf(r);\n    };\n    /**\n     * Call two event's methods.\n     * @hidden\n     * @private\n     */\n    PdfSection.prototype.pageAddedMethod = function (page) {\n        //Create event's arguments\n        var args = new PageAddedEventArgs(page);\n        this.onPageAdded(args);\n        var parent = this.parent;\n        parent.document.pages.onPageAdded(args);\n        this.pageCount.intValue = this.count;\n    };\n    /**\n     * Called when the page has been added.\n     * @hidden\n     * @private\n     */\n    PdfSection.prototype.onPageAdded = function (args) {\n        //\n    };\n    PdfSection.prototype.getActualBounds = function (arg1, arg2, arg3) {\n        if (arg1 instanceof PdfPage && typeof arg2 === 'boolean') {\n            var result = void 0;\n            var document_1 = this.parent.document;\n            result = this.getActualBounds(document_1, arg1, arg2);\n            return result;\n        }\n        else {\n            arg1 = arg1;\n            arg2 = arg2;\n            arg3 = arg3;\n            var bounds = new RectangleF(0, 0, 0, 0);\n            bounds.height = (arg3) ? this.pageSettings.size.height : this.pageSettings.getActualSize().height;\n            bounds.width = (arg3) ? this.pageSettings.size.width : this.pageSettings.getActualSize().width;\n            var left = this.getLeftIndentWidth(arg1, arg2, arg3);\n            var top_1 = this.getTopIndentHeight(arg1, arg2, arg3);\n            var right = this.getRightIndentWidth(arg1, arg2, arg3);\n            var bottom = this.getBottomIndentHeight(arg1, arg2, arg3);\n            bounds.x += left;\n            bounds.y += top_1;\n            bounds.width -= (left + right);\n            bounds.height -= (top_1 + bottom);\n            return bounds;\n        }\n    };\n    /**\n     * Calculates width of the `left indent`.\n     * @private\n     */\n    PdfSection.prototype.getLeftIndentWidth = function (document, page, includeMargins) {\n        if (document == null) {\n            throw new Error('ArgumentNullException:document');\n        }\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var value = (includeMargins) ? this.pageSettings.margins.left : 0;\n        var templateWidth = (this.template.getLeft(page) != null) ? this.template.getLeft(page).width : 0;\n        var docTemplateWidth = (document.template.getLeft(page) != null) ? document.template.getLeft(page).width : 0;\n        value += (this.template.applyDocumentLeftTemplate) ? Math.max(templateWidth, docTemplateWidth) : templateWidth;\n        return value;\n    };\n    /**\n     * Calculates `Height` of the top indent.\n     * @private\n     */\n    PdfSection.prototype.getTopIndentHeight = function (document, page, includeMargins) {\n        if (document == null) {\n            throw new Error('ArgumentNullException:document');\n        }\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var value = (includeMargins) ? this.pageSettings.margins.top : 0;\n        var templateHeight = (this.template.getTop(page) != null) ? this.template.getTop(page).height : 0;\n        var docTemplateHeight = (document.template.getTop(page) != null) ? document.template.getTop(page).height : 0;\n        value += (this.template.applyDocumentTopTemplate) ? Math.max(templateHeight, docTemplateHeight) : templateHeight;\n        return value;\n    };\n    /**\n     * Calculates `width` of the right indent.\n     * @private\n     */\n    PdfSection.prototype.getRightIndentWidth = function (document, page, includeMargins) {\n        if (document == null) {\n            throw new Error('ArgumentNullException:document');\n        }\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var value = (includeMargins) ? this.pageSettings.margins.right : 0;\n        var templateWidth = (this.template.getRight(page) != null) ? this.template.getRight(page).width : 0;\n        var docTemplateWidth = (document.template.getRight(page) != null) ? document.template.getRight(page).width : 0;\n        value += (this.template.applyDocumentRightTemplate) ? Math.max(templateWidth, docTemplateWidth) : templateWidth;\n        return value;\n    };\n    /**\n     * Calculates `Height` of the bottom indent.\n     * @private\n     */\n    PdfSection.prototype.getBottomIndentHeight = function (document, page, includeMargins) {\n        if (document == null) {\n            throw new Error('ArgumentNullException:document');\n        }\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var value = (includeMargins) ? this.pageSettings.margins.bottom : 0;\n        var templateHeight = (this.template.getBottom(page) != null) ? this.template.getBottom(page).height : 0;\n        var docTemplateHeight = (document.template.getBottom(page) != null) ? document.template.getBottom(page).height : 0;\n        value += (this.template.applyDocumentBottomTemplate) ? Math.max(templateHeight, docTemplateHeight) : templateHeight;\n        return value;\n    };\n    /**\n     * `Removes` the page from the section.\n     * @private\n     */\n    PdfSection.prototype.remove = function (page) {\n        if (page == null) {\n            throw Error('ArgumentNullException(\"page\")');\n        }\n        var index = this.pdfPages.indexOf(page);\n        this.pagesReferences.removeAt(index);\n        var temproaryPages = [];\n        for (var j = 0; j < index; j++) {\n            temproaryPages.push(this.pdfPages[j]);\n        }\n        for (var j = index + 1; j < this.pdfPages.length; j++) {\n            temproaryPages.push(this.pdfPages[j]);\n        }\n        this.pdfPages = temproaryPages;\n    };\n    /**\n     * In fills dictionary by the data from `Page settings`.\n     * @private\n     */\n    PdfSection.prototype.applyPageSettings = function (container, parentSettings, state) {\n        var bounds = new RectangleF(state.origin, state.size);\n        container.items.setValue(this.dictionaryProperties.mediaBox, PdfArray.fromRectangle(bounds));\n        var rotate = 0;\n        rotate = PdfSectionCollection.rotateFactor * state.rotate;\n        var angle = new PdfNumber(rotate);\n        container.items.setValue(this.dictionaryProperties.rotate, angle);\n    };\n    /**\n     * Catches the Save event of the dictionary.\n     * @hidden\n     * @private\n     */\n    PdfSection.prototype.beginSave = function (state, writer) {\n        var doc = writer.document;\n        this.applyPageSettings(this.section, doc.pageSettings, state);\n    };\n    /**\n     * Draws page templates on the page.\n     * @private\n     */\n    PdfSection.prototype.drawTemplates = function (page, layer, document, foreground) {\n        var documentHeaders = this.getDocumentTemplates(document, page, foreground);\n        var sectionHeaders = this.getSectionTemplates(page, foreground);\n        this.drawTemplatesHelper(layer, document, documentHeaders);\n        this.drawTemplatesHelper(layer, document, sectionHeaders);\n    };\n    /**\n     * Draws page templates on the page.\n     * @private\n     */\n    PdfSection.prototype.drawTemplatesHelper = function (layer, document, templates) {\n        if (templates != null && templates.length > 0) {\n            var len = templates.length;\n            for (var i = 0; i < len; i++) {\n                var template = templates[i];\n                template.draw(layer, document);\n            }\n        }\n    };\n    return PdfSection;\n}());\nexport { PdfSection };\nvar PageSettingsState = /** @class */ (function () {\n    //Public Constructor\n    /**\n     * New instance to store the `PageSettings`.\n     * @private\n     */\n    function PageSettingsState(document) {\n        this.pageOrientation = document.pageSettings.orientation;\n        this.pageRotate = document.pageSettings.rotate;\n        this.pageSize = document.pageSettings.size;\n        this.pageOrigin = document.pageSettings.origin;\n    }\n    Object.defineProperty(PageSettingsState.prototype, \"orientation\", {\n        //public Properties\n        /**\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.pageOrientation;\n        },\n        set: function (value) {\n            this.pageOrientation = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PageSettingsState.prototype, \"rotate\", {\n        /**\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.pageRotate;\n        },\n        set: function (value) {\n            this.pageRotate = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PageSettingsState.prototype, \"size\", {\n        /**\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.pageSize;\n        },\n        set: function (value) {\n            this.pageSize = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PageSettingsState.prototype, \"origin\", {\n        /**\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.pageOrigin;\n        },\n        set: function (value) {\n            this.pageOrigin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PageSettingsState;\n}());\nexport { PageSettingsState };\n", "import { PdfNumber } from './../primitives/pdf-number';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfDictionary, SaveSectionCollectionEventHandler } from './../primitives/pdf-dictionary';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { RectangleF, PointF } from './../drawing/pdf-drawing';\nimport { PdfSection } from './pdf-section';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\n/**\n * Represents the `collection of the sections`.\n * @private\n */\nvar PdfSectionCollection = /** @class */ (function () {\n    //constructor\n    /**\n     * Initializes a new instance of the `PdfSectionCollection` class.\n     * @private\n     */\n    function PdfSectionCollection(document) {\n        /**\n         * @hidden\n         * @private\n         */\n        this.sections = [];\n        /**\n         * @hidden\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        // if (document === null) {\n        //     throw new Error('ArgumentNullException : document');\n        // }\n        this.pdfDocument = document.clone();\n        this.initialize();\n    }\n    Object.defineProperty(PdfSectionCollection.prototype, \"section\", {\n        //Properties\n        /**\n         * Gets the `Section` collection.\n         */\n        get: function () {\n            return this.sections;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionCollection.prototype, \"document\", {\n        /**\n         * Gets a parent `document`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionCollection.prototype, \"count\", {\n        /**\n         * Gets the `number of sections` in a document.\n         * @private\n         */\n        get: function () {\n            return this.sections.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionCollection.prototype, \"element\", {\n        /**\n         * Gets the wrapped `element`.\n         * @private\n         */\n        get: function () {\n            return this.pages;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Methods\n    /**\n     * `Initializes the object`.\n     * @private\n     */\n    PdfSectionCollection.prototype.initialize = function () {\n        this.sectionCount = new PdfNumber(0);\n        this.sectionCollection = new PdfArray();\n        this.pages = new PdfDictionary();\n        this.pages.beginSave = new SaveSectionCollectionEventHandler(this);\n        this.pages.items.setValue(this.dictionaryProperties.type, new PdfName('Pages'));\n        this.pages.items.setValue(this.dictionaryProperties.kids, this.sectionCollection);\n        this.pages.items.setValue(this.dictionaryProperties.count, this.sectionCount);\n        this.pages.items.setValue(this.dictionaryProperties.resources, new PdfDictionary());\n        this.setPageSettings(this.pages, this.pdfDocument.pageSettings);\n    };\n    /**\n     * Initializes a new instance of the `PdfSectionCollection` class.\n     * @private\n     */\n    PdfSectionCollection.prototype.pdfSectionCollection = function (index) {\n        if (index < 0 || index >= this.count) {\n            throw new Error('IndexOutOfRangeException()');\n        }\n        return this.sections[index];\n    };\n    /**\n     * In fills dictionary by the data from `Page settings`.\n     * @private\n     */\n    PdfSectionCollection.prototype.setPageSettings = function (container, pageSettings) {\n        // if (container === null) {\n        //     throw new Error('ArgumentNullException : container');\n        // }\n        // if (pageSettings === null) {\n        //     throw new Error('ArgumentNullException : pageSettings');\n        // }\n        var bounds = new RectangleF(new PointF(), pageSettings.size);\n        container.items.setValue(this.dictionaryProperties.mediaBox, PdfArray.fromRectangle(bounds));\n    };\n    /**\n     * `Adds` the specified section.\n     * @private\n     */\n    PdfSectionCollection.prototype.add = function (section) {\n        if (typeof section === 'undefined') {\n            var section_1 = new PdfSection(this.pdfDocument);\n            this.add(section_1);\n            return section_1;\n        }\n        else {\n            // if (section === null) {\n            //     throw new Error('ArgumentNullException : section');\n            // }\n            var r = this.checkSection(section);\n            this.sections.push(section);\n            section.parent = this;\n            this.sectionCollection.add(r);\n            return this.sections.indexOf(section);\n        }\n    };\n    /**\n     * `Checks` if the section is within the collection.\n     * @private\n     */\n    PdfSectionCollection.prototype.checkSection = function (section) {\n        var r = new PdfReferenceHolder(section);\n        var contains = this.sectionCollection.contains(r);\n        // if (contains) {\n        //     throw new Error('ArgumentException : The object can not be added twice to the collection,section');\n        // }\n        return r;\n    };\n    /**\n     * Catches the Save event of the dictionary to `count the pages`.\n     * @private\n     */\n    PdfSectionCollection.prototype.countPages = function () {\n        var count = 0;\n        this.sections.forEach(function (n) { return (count += n.count); });\n        return count;\n    };\n    /**\n     * Catches the Save event of the dictionary to `count the pages`.\n     * @hidden\n     * @private\n     */\n    PdfSectionCollection.prototype.beginSave = function () {\n        this.sectionCount.intValue = this.countPages();\n    };\n    //Fields\n    /**\n     * Rotate factor for page `rotation`.\n     * @default 90\n     * @private\n     */\n    PdfSectionCollection.rotateFactor = 90;\n    return PdfSectionCollection;\n}());\nexport { PdfSectionCollection };\n", "import { PdfPage } from './pdf-page';\nimport { Dictionary } from './../collections/dictionary';\n/**\n * Represents a virtual collection of all the pages in the document.\n * @private\n */\nvar PdfDocumentPageCollection = /** @class */ (function () {\n    //constructor\n    /**\n     * Initializes a new instance of the `PdfPageCollection` class.\n     * @private\n     */\n    function PdfDocumentPageCollection(document) {\n        /**\n         * It holds the page collection with the `index`.\n         * @private\n         */\n        this.pdfPageCollectionIndex = new Dictionary();\n        this.document = document;\n    }\n    Object.defineProperty(PdfDocumentPageCollection.prototype, \"count\", {\n        //Property\n        /**\n         * Gets the total `number of the pages`.\n         * @private\n         */\n        get: function () {\n            return this.countPages();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentPageCollection.prototype, \"pageCollectionIndex\", {\n        /**\n         * Gets a `page index` from the document.\n         * @private\n         */\n        get: function () {\n            return this.pdfPageCollectionIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfDocumentPageCollection.prototype.add = function (page) {\n        if (typeof page === 'undefined') {\n            var page_1 = new PdfPage();\n            this.add(page_1);\n            return page_1;\n        }\n        else {\n            var section = this.getLastSection();\n            section.add(page);\n        }\n    };\n    /**\n     * Returns `last section` in the document.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.getLastSection = function () {\n        var sc = this.document.sections;\n        if (sc.section.length === 0) {\n            sc.add();\n        }\n        var section = sc.section[sc.section.length - 1];\n        return section;\n    };\n    /**\n     * Called when `new page has been added`.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.onPageAdded = function (args) {\n        // if (PageAdded !== null)\n        // {\n        //     PageAdded(this, args);\n        // }\n    };\n    /**\n     * Gets the `total number of pages`.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.countPages = function () {\n        var sc = this.document.sections;\n        var count = 0;\n        for (var index = 0; index < sc.section.length; index++) {\n            count += sc.section[index].count;\n        }\n        return count;\n    };\n    /**\n     * Gets the `page object` from page index.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.getPageByIndex = function (index) {\n        return this.getPage(index);\n    };\n    /**\n     * Gets a page by its `index` in the document.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.getPage = function (index) {\n        if ((index < 0) || (index >= this.count)) {\n            throw Error('ArgumentOutOfRangeException(\"index\", \"Value can not be less 0\")');\n        }\n        var page = null;\n        var sectionStartIndex = 0;\n        var sectionCount = 0;\n        var pageIndex = 0;\n        var length = this.document.sections.count;\n        for (var i = 0; i < length; i++) {\n            var section = this.document.sections.section[i];\n            sectionCount = section.count;\n            pageIndex = index - sectionStartIndex;\n            // We found a section containing the page.\n            if ((index >= sectionStartIndex && pageIndex < sectionCount)) {\n                page = section.getPages()[pageIndex];\n                break;\n            }\n            sectionStartIndex += sectionCount;\n        }\n        return page;\n    };\n    /**\n     * Gets the `index of` the page in the document.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.indexOf = function (page) {\n        var index = -1;\n        if (page == null) {\n            throw new Error('ArgumentNullException: page');\n        }\n        else {\n            var numPages = 0;\n            for (var i = 0, len = this.document.sections.count; i < len; i++) {\n                var section = this.document.sections.pdfSectionCollection(i);\n                index = section.indexOf(page);\n                if (index >= 0) {\n                    index += numPages;\n                    break;\n                }\n                else {\n                    index = -1;\n                }\n                numPages += section.count;\n            }\n        }\n        return index;\n    };\n    /**\n     * `Removes` the specified page.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.remove = function (page) {\n        if (page == null) {\n            throw Error('ArgumentNullException(\"page\")');\n        }\n        var section = null;\n        var len;\n        for (var i = 0, len_1 = this.document.sections.count; i < len_1; i++) {\n            section = this.document.sections.pdfSectionCollection(i);\n            if (section.pages.contains(page)) {\n                section.pages.remove(page);\n                break;\n            }\n        }\n        return section;\n    };\n    return PdfDocumentPageCollection;\n}());\nexport { PdfDocumentPageCollection };\n", "/**\n * PdfCacheCollection.ts class for EJ2-PDF\n */\nimport { Dictionary } from './../collections/dictionary';\n/**\n * `Collection of the cached objects`.\n * @private\n */\nvar PdfCacheCollection = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `PdfCacheCollection` class.\n     * @private\n     */\n    function PdfCacheCollection() {\n        this.referenceObjects = [];\n        this.pdfFontCollection = new Dictionary();\n    }\n    // Public methods\n    /**\n     * `Searches` for the similar cached object. If is not found - adds the object to the cache.\n     * @private\n     */\n    PdfCacheCollection.prototype.search = function (obj) {\n        var result = null;\n        var group = this.getGroup(obj);\n        if (group == null) {\n            group = this.createNewGroup();\n        }\n        else if (group.length > 0) {\n            result = group[0];\n        }\n        group.push(obj);\n        return result;\n    };\n    // Implementation\n    /**\n     * `Creates` a new group.\n     * @private\n     */\n    PdfCacheCollection.prototype.createNewGroup = function () {\n        var group = [];\n        this.referenceObjects.push(group);\n        return group;\n    };\n    /**\n     * `Find and Return` a group.\n     * @private\n     */\n    PdfCacheCollection.prototype.getGroup = function (result) {\n        var group = null;\n        if (result !== null) {\n            var len = this.referenceObjects.length;\n            for (var i = 0; i < len; i++) {\n                if (this.referenceObjects.length > 0) {\n                    var tGroup = this.referenceObjects[i];\n                    if (tGroup.length > 0) {\n                        var representative = tGroup[0];\n                        if (result.equalsTo(representative)) {\n                            group = tGroup;\n                            break;\n                        }\n                    }\n                    else {\n                        this.removeGroup(tGroup);\n                    }\n                }\n                len = this.referenceObjects.length;\n            }\n        }\n        return group;\n    };\n    /**\n     * Remove a group from the storage.\n     */\n    PdfCacheCollection.prototype.removeGroup = function (group) {\n        if (group !== null) {\n            var index = this.referenceObjects.indexOf(group);\n            this.referenceObjects.slice(index, index + 1);\n        }\n    };\n    PdfCacheCollection.prototype.destroy = function () {\n        this.pdfFontCollection = undefined;\n        this.referenceObjects = undefined;\n    };\n    return PdfCacheCollection;\n}());\nexport { PdfCacheCollection };\n", "/**\n * PdfStandardFontMetricsFactory.ts class for EJ2-PDF\n */\nimport { PdfFontStyle, PdfFontFamily } from './enum';\nimport { PdfFontMetrics, StandardWidthTable } from './pdf-font-metrics';\n/**\n * @private\n * `Factory of the standard fonts metrics`.\n */\nvar PdfStandardFontMetricsFactory = /** @class */ (function () {\n    function PdfStandardFontMetricsFactory() {\n    }\n    /**\n     * Returns `metrics` of the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = null;\n        switch (fontFamily) {\n            case PdfFontFamily.Helvetica:\n                metrics = this.getHelveticaMetrics(fontFamily, fontStyle, size);\n                break;\n            case PdfFontFamily.Courier:\n                metrics = this.getCourierMetrics(fontFamily, fontStyle, size);\n                break;\n            case PdfFontFamily.TimesRoman:\n                metrics = this.getTimesMetrics(fontFamily, fontStyle, size);\n                break;\n            case PdfFontFamily.Symbol:\n                metrics = this.getSymbolMetrics(fontFamily, fontStyle, size);\n                break;\n            case PdfFontFamily.ZapfDingbats:\n                metrics = this.getZapfDingbatsMetrics(fontFamily, fontStyle, size);\n                break;\n            default:\n                metrics = this.getHelveticaMetrics(PdfFontFamily.Helvetica, fontStyle, size);\n                break;\n        }\n        metrics.name = fontFamily.toString();\n        metrics.subScriptSizeFactor = this.subSuperScriptFactor;\n        metrics.superscriptSizeFactor = this.subSuperScriptFactor;\n        return metrics;\n    };\n    // Implementation\n    /**\n     * Creates `Helvetica font metrics`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getHelveticaMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = new PdfFontMetrics();\n        if ((fontStyle & PdfFontStyle.Bold) > 0 && (fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.helveticaBoldItalicAscent;\n            metrics.descent = this.helveticaBoldItalicDescent;\n            metrics.postScriptName = this.helveticaBoldItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.arialBoldWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Bold) > 0) {\n            metrics.ascent = this.helveticaBoldAscent;\n            metrics.descent = this.helveticaBoldDescent;\n            metrics.postScriptName = this.helveticaBoldName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.arialBoldWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.helveticaItalicAscent;\n            metrics.descent = this.helveticaItalicDescent;\n            metrics.postScriptName = this.helveticaItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.arialWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else {\n            metrics.ascent = this.helveticaAscent;\n            metrics.descent = this.helveticaDescent;\n            metrics.postScriptName = this.helveticaName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.arialWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        return metrics;\n    };\n    /**\n     * Creates `Courier font metrics`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getCourierMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = new PdfFontMetrics();\n        if ((fontStyle & PdfFontStyle.Bold) > 0 && (fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.courierBoldItalicAscent;\n            metrics.descent = this.courierBoldItalicDescent;\n            metrics.postScriptName = this.courierBoldItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.fixedWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Bold) > 0) {\n            metrics.ascent = this.courierBoldAscent;\n            metrics.descent = this.courierBoldDescent;\n            metrics.postScriptName = this.courierBoldName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.fixedWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.courierItalicAscent;\n            metrics.descent = this.courierItalicDescent;\n            metrics.postScriptName = this.courierItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.fixedWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else {\n            metrics.ascent = this.courierAscent;\n            metrics.descent = this.courierDescent;\n            metrics.postScriptName = this.courierName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.fixedWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        return metrics;\n    };\n    /**\n     * Creates `Times font metrics`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getTimesMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = new PdfFontMetrics();\n        if ((fontStyle & PdfFontStyle.Bold) > 0 && (fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.timesBoldItalicAscent;\n            metrics.descent = this.timesBoldItalicDescent;\n            metrics.postScriptName = this.timesBoldItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.timesRomanBoldItalicWidths);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Bold) > 0) {\n            metrics.ascent = this.timesBoldAscent;\n            metrics.descent = this.timesBoldDescent;\n            metrics.postScriptName = this.timesBoldName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.timesRomanBoldWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.timesItalicAscent;\n            metrics.descent = this.timesItalicDescent;\n            metrics.postScriptName = this.timesItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.timesRomanItalicWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else {\n            metrics.ascent = this.timesAscent;\n            metrics.descent = this.timesDescent;\n            metrics.postScriptName = this.timesName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.timesRomanWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        return metrics;\n    };\n    /**\n     * Creates `Symbol font metrics`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getSymbolMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = new PdfFontMetrics();\n        metrics.ascent = this.symbolAscent;\n        metrics.descent = this.symbolDescent;\n        metrics.postScriptName = this.symbolName;\n        metrics.size = size;\n        metrics.widthTable = new StandardWidthTable(this.symbolWidth);\n        metrics.height = metrics.ascent - metrics.descent;\n        return metrics;\n    };\n    /**\n     * Creates `ZapfDingbats font metrics`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getZapfDingbatsMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = new PdfFontMetrics();\n        metrics.ascent = this.zapfDingbatsAscent;\n        metrics.descent = this.zapfDingbatsDescent;\n        metrics.postScriptName = this.zapfDingbatsName;\n        metrics.size = size;\n        metrics.widthTable = new StandardWidthTable(this.zapfDingbatsWidth);\n        metrics.height = metrics.ascent - metrics.descent;\n        return metrics;\n    };\n    /**\n     * `Multiplier` os subscript superscript.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.subSuperScriptFactor = 1.52;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaAscent = 931;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaDescent = -225;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaName = 'Helvetica';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldAscent = 962;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldDescent = -228;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldName = 'Helvetica-Bold';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaItalicAscent = 931;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaItalicDescent = -225;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaItalicName = 'Helvetica-Oblique';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldItalicAscent = 962;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldItalicDescent = -228;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldItalicName = 'Helvetica-BoldOblique';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierAscent = 805;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierDescent = -250;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierName = 'Courier';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldAscent = 801;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldDescent = -250;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldName = 'Courier-Bold';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierItalicAscent = 805;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierItalicDescent = -250;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierItalicName = 'Courier-Oblique';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldItalicAscent = 801;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldItalicDescent = -250;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldItalicName = 'Courier-BoldOblique';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesAscent = 898;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesDescent = -218;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesName = 'Times-Roman';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldAscent = 935;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldDescent = -218;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldName = 'Times-Bold';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesItalicAscent = 883;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesItalicDescent = -217;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesItalicName = 'Times-Italic';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldItalicAscent = 921;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldItalicDescent = -218;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldItalicName = 'Times-BoldItalic';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.symbolAscent = 1010;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.symbolDescent = -293;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.symbolName = 'Symbol';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.zapfDingbatsAscent = 820;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.zapfDingbatsDescent = -143;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.zapfDingbatsName = 'ZapfDingbats';\n    /**\n     * `Arial` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.arialWidth = [\n        278, 278, 355, 556, 556, 889, 667, 191, 333, 333, 389, 584, 278, 333,\n        278, 278, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 278, 278, 584, 584,\n        584, 556, 1015, 667, 667, 722, 722, 667, 611, 778, 722, 278, 500, 667, 556, 833,\n        722, 778, 667, 778, 722, 667, 611, 722, 667, 944, 667, 667, 611, 278, 278, 278,\n        469, 556, 333, 556, 556, 500, 556, 556, 278, 556, 556, 222, 222, 500, 222, 833,\n        556, 556, 556, 556, 333, 500, 278, 556, 500, 722, 500, 500, 500, 334, 260, 334,\n        584, 0, 556, 0, 222, 556, 333, 1000, 556, 556, 333, 1000, 667, 333, 1000, 0,\n        611, 0, 0, 222, 222, 333, 333, 350, 556, 1000, 333, 1000, 500, 333, 944, 0,\n        500, 667, 0, 333, 556, 556, 556, 556, 260, 556, 333, 737, 370, 556, 584, 0,\n        737, 333, 400, 584, 333, 333, 333, 556, 537, 278, 333, 333, 365, 556, 834, 834,\n        834, 611, 667, 667, 667, 667, 667, 667, 1000, 722, 667, 667, 667, 667, 278, 278,\n        278, 278, 722, 722, 778, 778, 778, 778, 778, 584, 778, 722, 722, 722, 722, 667,\n        667, 611, 556, 556, 556, 556, 556, 556, 889, 500, 556, 556, 556, 556, 278, 278,\n        278, 278, 556, 556, 556, 556, 556, 556, 556, 584, 611, 556, 556, 556, 556, 500,\n        556, 500\n    ];\n    /**\n     * `Arial bold` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.arialBoldWidth = [\n        278, 333, 474, 556, 556, 889, 722, 238, 333, 333, 389, 584, 278, 333,\n        278, 278, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 333, 333, 584, 584,\n        584, 611, 975, 722, 722, 722, 722, 667, 611, 778, 722, 278, 556, 722, 611, 833,\n        722, 778, 667, 778, 722, 667, 611, 722, 667, 944, 667, 667, 611, 333, 278, 333,\n        584, 556, 333, 556, 611, 556, 611, 556, 333, 611, 611, 278, 278, 556, 278, 889,\n        611, 611, 611, 611, 389, 556, 333, 611, 556, 778, 556, 556, 500, 389, 280, 389,\n        584, 0, 556, 0, 278, 556, 500, 1000, 556, 556, 333, 1000, 667, 333, 1000, 0,\n        611, 0, 0, 278, 278, 500, 500, 350, 556, 1000, 333, 1000, 556, 333, 944, 0,\n        500, 667, 0, 333, 556, 556, 556, 556, 280, 556, 333, 737, 370, 556, 584, 0,\n        737, 333, 400, 584, 333, 333, 333, 611, 556, 278, 333, 333, 365, 556, 834, 834,\n        834, 611, 722, 722, 722, 722, 722, 722, 1000, 722, 667, 667, 667, 667, 278, 278,\n        278, 278, 722, 722, 778, 778, 778, 778, 778, 584, 778, 722, 722, 722, 722, 667,\n        667, 611, 556, 556, 556, 556, 556, 556, 889, 556, 556, 556, 556, 556, 278, 278,\n        278, 278, 611, 611, 611, 611, 611, 611, 611, 584, 611, 611, 611, 611, 611, 556,\n        611, 556\n    ];\n    /**\n     * `Fixed` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.fixedWidth = [\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600\n    ];\n    /**\n     * `Times` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesRomanWidth = [\n        250, 333, 408, 500, 500, 833, 778, 180, 333, 333, 500, 564, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 278, 278, 564, 564,\n        564, 444, 921, 722, 667, 667, 722, 611, 556, 722, 722, 333, 389, 722, 611, 889,\n        722, 722, 556, 722, 667, 556, 611, 722, 722, 944, 722, 722, 611, 333, 278, 333,\n        469, 500, 333, 444, 500, 444, 500, 444, 333, 500, 500, 278, 278, 500, 278, 778,\n        500, 500, 500, 500, 333, 389, 278, 500, 500, 722, 500, 500, 444, 480, 200, 480,\n        541, 0, 500, 0, 333, 500, 444, 1000, 500, 500, 333, 1000, 556, 333, 889, 0,\n        611, 0, 0, 333, 333, 444, 444, 350, 500, 1000, 333, 980, 389, 333, 722, 0,\n        444, 722, 0, 333, 500, 500, 500, 500, 200, 500, 333, 760, 276, 500, 564, 0,\n        760, 333, 400, 564, 300, 300, 333, 500, 453, 250, 333, 300, 310, 500, 750, 750,\n        750, 444, 722, 722, 722, 722, 722, 722, 889, 667, 611, 611, 611, 611, 333, 333,\n        333, 333, 722, 722, 722, 722, 722, 722, 722, 564, 722, 722, 722, 722, 722, 722,\n        556, 500, 444, 444, 444, 444, 444, 444, 667, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 500, 500, 500, 500, 500, 500, 564, 500, 500, 500, 500, 500, 500,\n        500, 500\n    ];\n    /**\n     * `Times bold` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesRomanBoldWidth = [\n        250, 333, 555, 500, 500, 1000, 833, 278, 333, 333, 500, 570, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 570, 570,\n        570, 500, 930, 722, 667, 722, 722, 667, 611, 778, 778, 389, 500, 778, 667, 944,\n        722, 778, 611, 778, 722, 556, 667, 722, 722, 1000, 722, 722, 667, 333, 278, 333,\n        581, 500, 333, 500, 556, 444, 556, 444, 333, 500, 556, 278, 333, 556, 278, 833,\n        556, 500, 556, 556, 444, 389, 333, 556, 500, 722, 500, 500, 444, 394, 220, 394,\n        520, 0, 500, 0, 333, 500, 500, 1000, 500, 500, 333, 1000, 556, 333, 1000, 0,\n        667, 0, 0, 333, 333, 500, 500, 350, 500, 1000, 333, 1000, 389, 333, 722, 0,\n        444, 722, 0, 333, 500, 500, 500, 500, 220, 500, 333, 747, 300, 500, 570, 0,\n        747, 333, 400, 570, 300, 300, 333, 556, 540, 250, 333, 300, 330, 500, 750, 750,\n        750, 500, 722, 722, 722, 722, 722, 722, 1000, 722, 667, 667, 667, 667, 389, 389,\n        389, 389, 722, 722, 778, 778, 778, 778, 778, 570, 778, 722, 722, 722, 722, 722,\n        611, 556, 500, 500, 500, 500, 500, 500, 722, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 556, 500, 500, 500, 500, 500, 570, 500, 556, 556, 556, 556, 500,\n        556, 500\n    ];\n    /**\n     * `Times italic` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesRomanItalicWidth = [\n        250, 333, 420, 500, 500, 833, 778, 214, 333, 333, 500, 675, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 675, 675,\n        675, 500, 920, 611, 611, 667, 722, 611, 611, 722, 722, 333, 444, 667, 556, 833,\n        667, 722, 611, 722, 611, 500, 556, 722, 611, 833, 611, 556, 556, 389, 278, 389,\n        422, 500, 333, 500, 500, 444, 500, 444, 278, 500, 500, 278, 278, 444, 278, 722,\n        500, 500, 500, 500, 389, 389, 278, 500, 444, 667, 444, 444, 389, 400, 275, 400,\n        541, 0, 500, 0, 333, 500, 556, 889, 500, 500, 333, 1000, 500, 333, 944, 0,\n        556, 0, 0, 333, 333, 556, 556, 350, 500, 889, 333, 980, 389, 333, 667, 0,\n        389, 556, 0, 389, 500, 500, 500, 500, 275, 500, 333, 760, 276, 500, 675, 0,\n        760, 333, 400, 675, 300, 300, 333, 500, 523, 250, 333, 300, 310, 500, 750, 750,\n        750, 500, 611, 611, 611, 611, 611, 611, 889, 667, 611, 611, 611, 611, 333, 333,\n        333, 333, 722, 667, 722, 722, 722, 722, 722, 675, 722, 722, 722, 722, 722, 556,\n        611, 500, 500, 500, 500, 500, 500, 500, 667, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 500, 500, 500, 500, 500, 500, 675, 500, 500, 500, 500, 500, 444,\n        500, 444\n    ];\n    /**\n     * `Times bold italic` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesRomanBoldItalicWidths = [\n        250, 389, 555, 500, 500, 833, 778, 278, 333, 333, 500, 570, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 570, 570,\n        570, 500, 832, 667, 667, 667, 722, 667, 667, 722, 778, 389, 500, 667, 611, 889,\n        722, 722, 611, 722, 667, 556, 611, 722, 667, 889, 667, 611, 611, 333, 278, 333,\n        570, 500, 333, 500, 500, 444, 500, 444, 333, 500, 556, 278, 278, 500, 278, 778,\n        556, 500, 500, 500, 389, 389, 278, 556, 444, 667, 500, 444, 389, 348, 220, 348,\n        570, 0, 500, 0, 333, 500, 500, 1000, 500, 500, 333, 1000, 556, 333, 944, 0,\n        611, 0, 0, 333, 333, 500, 500, 350, 500, 1000, 333, 1000, 389, 333, 722, 0,\n        389, 611, 0, 389, 500, 500, 500, 500, 220, 500, 333, 747, 266, 500, 606, 0,\n        747, 333, 400, 570, 300, 300, 333, 576, 500, 250, 333, 300, 300, 500, 750, 750,\n        750, 500, 667, 667, 667, 667, 667, 667, 944, 667, 667, 667, 667, 667, 389, 389,\n        389, 389, 722, 722, 722, 722, 722, 722, 722, 570, 722, 722, 722, 722, 722, 611,\n        611, 500, 500, 500, 500, 500, 500, 500, 722, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 556, 500, 500, 500, 500, 500, 570, 500, 556, 556, 556, 556, 444,\n        500, 444\n    ];\n    /**\n     * `Symbol` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.symbolWidth = [\n        250, 333, 713, 500, 549, 833, 778, 439, 333, 333, 500, 549, 250, 549,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 278, 278,\n        549, 549, 549, 444, 549, 722, 667, 722, 612, 611, 763, 603, 722, 333,\n        631, 722, 686, 889, 722, 722, 768, 741, 556, 592, 611, 690, 439, 768,\n        645, 795, 611, 333, 863, 333, 658, 500, 500, 631, 549, 549, 494, 439,\n        521, 411, 603, 329, 603, 549, 549, 576, 521, 549, 549, 521, 549, 603,\n        439, 576, 713, 686, 493, 686, 494, 480, 200, 480, 549, 750, 620, 247,\n        549, 167, 713, 500, 753, 753, 753, 753, 1042, 987, 603, 987, 603, 400,\n        549, 411, 549, 549, 713, 494, 460, 549, 549, 549, 549, 1000, 603, 1000,\n        658, 823, 686, 795, 987, 768, 768, 823, 768, 768, 713, 713, 713, 713,\n        713, 713, 713, 768, 713, 790, 790, 890, 823, 549, 250, 713, 603, 603,\n        1042, 987, 603, 987, 603, 494, 329, 790, 790, 786, 713, 384, 384, 384,\n        384, 384, 384, 494, 494, 494, 494, 329, 274, 686, 686, 686, 384, 384,\n        384, 384, 384, 384, 494, 494, 494, -1\n    ];\n    /**\n     * `Zip dingbats` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.zapfDingbatsWidth = [\n        278, 974, 961, 974, 980, 719, 789, 790, 791, 690, 960, 939, 549, 855,\n        911, 933, 911, 945, 974, 755, 846, 762, 761, 571, 677, 763, 760, 759,\n        754, 494, 552, 537, 577, 692, 786, 788, 788, 790, 793, 794, 816, 823,\n        789, 841, 823, 833, 816, 831, 923, 744, 723, 749, 790, 792, 695, 776,\n        768, 792, 759, 707, 708, 682, 701, 826, 815, 789, 789, 707, 687, 696,\n        689, 786, 787, 713, 791, 785, 791, 873, 761, 762, 762, 759, 759, 892,\n        892, 788, 784, 438, 138, 277, 415, 392, 392, 668, 668, 390, 390, 317,\n        317, 276, 276, 509, 509, 410, 410, 234, 234, 334, 334, 732, 544, 544,\n        910, 667, 760, 760, 776, 595, 694, 626, 788, 788, 788, 788, 788, 788,\n        788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788,\n        788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788,\n        788, 788, 788, 788, 788, 788, 894, 838, 1016, 458, 748, 924, 748, 918,\n        927, 928, 928, 834, 873, 828, 924, 924, 917, 930, 931, 463, 883, 836,\n        836, 867, 867, 696, 696, 874, 874, 760, 946, 771, 865, 771, 888, 967,\n        888, 831, 873, 927, 970, 918\n    ];\n    return PdfStandardFontMetricsFactory;\n}());\nexport { PdfStandardFontMetricsFactory };\n", "var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfFontFamily, PdfFontStyle, FontEncoding } from './enum';\nimport { PdfFont } from './pdf-font';\nimport { PdfDocument } from './../../document/pdf-document';\nimport { PdfStandardFontMetricsFactory } from './pdf-standard-font-metrics-factory';\nimport { PdfDictionary } from './../../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfName } from './../../primitives/pdf-name';\n/**\n * Represents one of the 14 standard fonts.\n * It's used to create a standard PDF font to draw the text in to the PDF.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * //\n * // create new standard font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * //\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfStandardFont = /** @class */ (function (_super) {\n    __extends(PdfStandardFont, _super);\n    function PdfStandardFont(fontFamilyPrototype, size, style) {\n        var _this = _super.call(this, size, (typeof style === 'undefined') ? ((fontFamilyPrototype instanceof PdfStandardFont) ? fontFamilyPrototype.style : PdfFontStyle.Regular) : style) || this;\n        /**\n         * Gets `ascent` of the font.\n         * @private\n         */\n        _this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Gets `encodings` for internal class use.\n         * @hidden\n         * @private\n         */\n        _this.encodings = ['Unknown', 'StandardEncoding', 'MacRomanEncoding', 'MacExpertEncoding',\n            'WinAnsiEncoding', 'PDFDocEncoding', 'IdentityH'];\n        if (typeof fontFamilyPrototype === 'undefined') {\n            _this.pdfFontFamily = PdfFontFamily.Helvetica;\n        }\n        else if ((fontFamilyPrototype instanceof PdfStandardFont)) {\n            _this.pdfFontFamily = fontFamilyPrototype.fontFamily;\n        }\n        else {\n            _this.pdfFontFamily = fontFamilyPrototype;\n        }\n        _this.checkStyle();\n        _this.initializeInternals();\n        return _this;\n    }\n    Object.defineProperty(PdfStandardFont.prototype, \"fontFamily\", {\n        /* tslint:enable */\n        //Properties\n        /**\n         * Gets the `FontFamily`.\n         * @private\n         */\n        get: function () {\n            return this.pdfFontFamily;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //methods\n    /**\n     * Checks font `style` of the font.\n     * @private\n     */\n    PdfStandardFont.prototype.checkStyle = function () {\n        if (this.fontFamily === PdfFontFamily.Symbol || this.fontFamily === PdfFontFamily.ZapfDingbats) {\n            var style = this.style;\n            style &= ~(PdfFontStyle.Bold | PdfFontStyle.Italic);\n            this.setStyle(style);\n        }\n    };\n    /**\n     * Returns `width` of the line.\n     * @public\n     */\n    PdfStandardFont.prototype.getLineWidth = function (line, format) {\n        if (line == null) {\n            throw new Error('ArgumentNullException:line');\n        }\n        var width = 0;\n        var name = this.name;\n        line = PdfStandardFont.convert(line);\n        for (var i = 0, len = line.length; i < len; i++) {\n            var ch = line[i];\n            var charWidth = this.getCharWidthInternal(ch, format);\n            width += charWidth;\n        }\n        var size = this.metrics.getSize(format);\n        width *= (PdfFont.charSizeMultiplier * size);\n        width = this.applyFormatSettings(line, format, width);\n        return width;\n    };\n    /**\n     * Checks whether fonts are `equals`.\n     * @private\n     */\n    PdfStandardFont.prototype.equalsToFont = function (font) {\n        var equal = false;\n        var stFont = font;\n        if (stFont != null) {\n            var fontFamilyEqual = (this.fontFamily === stFont.fontFamily);\n            var lineReducer = (~(PdfFontStyle.Underline | PdfFontStyle.Strikeout));\n            var styleEqual = (this.style & lineReducer) === (stFont.style & lineReducer);\n            equal = (fontFamilyEqual && styleEqual);\n        }\n        return equal;\n    };\n    /**\n     * `Initializes` font internals..\n     * @private\n     */\n    PdfStandardFont.prototype.initializeInternals = function () {\n        var equalFont = null;\n        // if (PdfDocument.EnableCache) {\n        equalFont = PdfDocument.cache.search(this);\n        // }\n        var internals = null;\n        // if (equalFont == null) {\n        // Create font metrics.\n        var metrics = PdfStandardFontMetricsFactory.getMetrics(this.pdfFontFamily, this.style, this.size);\n        this.metrics = metrics;\n        internals = this.createInternals();\n        this.setInternals(internals);\n    };\n    /**\n     * `Creates` font`s dictionary.\n     * @private\n     */\n    PdfStandardFont.prototype.createInternals = function () {\n        var dictionary = new PdfDictionary();\n        dictionary.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.font));\n        dictionary.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.type1));\n        dictionary.items.setValue(this.dictionaryProperties.baseFont, new PdfName(this.metrics.postScriptName));\n        if (this.fontFamily !== PdfFontFamily.Symbol && this.fontFamily !== PdfFontFamily.ZapfDingbats) {\n            var encoding = this.encodings[FontEncoding.WinAnsiEncoding];\n            dictionary.items.setValue(this.dictionaryProperties.encoding, new PdfName(encoding));\n        }\n        return dictionary;\n    };\n    /**\n     * Returns `width` of the char. This methods doesn`t takes into consideration font`s size.\n     * @private\n     */\n    PdfStandardFont.prototype.getCharWidthInternal = function (charCode, format) {\n        var width = 0;\n        var code = 0;\n        code = charCode.charCodeAt(0);\n        if (this.name === '0' || this.name === '1' || this.name === '2' ||\n            this.name === '3' || this.name === '4') {\n            code = code - PdfStandardFont.charOffset;\n        }\n        code = (code >= 0 && code !== 128) ? code : 0;\n        var metrics = this.metrics;\n        var widthTable = metrics.widthTable;\n        width = widthTable.items(code);\n        return width;\n    };\n    /**\n     * `Converts` the specified text.\n     * @private\n     */\n    PdfStandardFont.convert = function (text) {\n        return text;\n    };\n    //Constants\n    /**\n     * First character `position`.\n     * @private\n     */\n    PdfStandardFont.charOffset = 32;\n    return PdfStandardFont;\n}(PdfFont));\nexport { PdfStandardFont };\n", "var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfWriter } from './../input-output/pdf-writer';\nimport { PdfMainObjectCollection } from './../input-output/pdf-main-object-collection';\nimport { PdfDocumentBase } from './pdf-document-base';\nimport { PdfCrossTable } from './../input-output/pdf-cross-table';\nimport { PdfCatalog } from './pdf-catalog';\nimport { PdfPageSettings } from './../pages/pdf-page-settings';\nimport { PdfSectionCollection } from './../pages/pdf-section-collection';\nimport { PdfDocumentPageCollection } from './../pages/pdf-document-page-collection';\nimport { PdfCacheCollection } from './../general/pdf-cache-collection';\nimport { PdfColorSpace } from './../graphics/enum';\nimport { PdfDocumentTemplate } from './pdf-document-template';\nimport { PdfFontFamily } from './../graphics/fonts/enum';\nimport { PdfStandardFont } from './../graphics/fonts/pdf-standard-font';\n/**\n * Represents a PDF document and can be used to create a new PDF document from the scratch.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * // set the font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfDocument = /** @class */ (function (_super) {\n    __extends(PdfDocument, _super);\n    function PdfDocument(isMerging) {\n        var _this = _super.call(this) || this;\n        /**\n         * Default `margin` value.\n         * @default 40.0\n         * @private\n         */\n        _this.defaultMargin = 40.0;\n        /**\n         * Internal variable to store instance of `StreamWriter` classes..\n         * @default null\n         * @private\n         */\n        _this.streamWriter = null;\n        _this.document = _this;\n        var isMerge = false;\n        if (typeof isMerging === 'undefined') {\n            PdfDocument.cacheCollection = new PdfCacheCollection();\n            isMerge = false;\n        }\n        else {\n            isMerge = isMerging;\n        }\n        var objects = new PdfMainObjectCollection();\n        _this.setMainObjectCollection(objects);\n        var crossTable = new PdfCrossTable();\n        crossTable.isMerging = isMerge;\n        crossTable.document = _this;\n        _this.setCrossTable(crossTable);\n        var catalog = new PdfCatalog();\n        _this.setCatalog(catalog);\n        objects.add(catalog);\n        catalog.position = -1;\n        _this.sectionCollection = new PdfSectionCollection(_this);\n        _this.documentPageCollection = new PdfDocumentPageCollection(_this);\n        catalog.pages = _this.sectionCollection;\n        return _this;\n    }\n    Object.defineProperty(PdfDocument, \"defaultFont\", {\n        //Properties\n        /**\n         * Gets the `default font`. It is used for complex objects when font is not explicitly defined.\n         * @private\n         */\n        get: function () {\n            if (this.defaultStandardFont == null) {\n                this.defaultStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 8);\n            }\n            return this.defaultStandardFont;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"sections\", {\n        /**\n         * Gets the collection of the `sections` in the document.\n         * @private\n         */\n        get: function () {\n            return this.sectionCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"pageSettings\", {\n        /**\n         * Gets the document's page setting.\n         * @public\n         */\n        get: function () {\n            if (this.settings == null) {\n                this.settings = new PdfPageSettings(this.defaultMargin);\n            }\n            return this.settings;\n        },\n        /**\n         * Sets the document's page setting.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         *\n         * // sets the right margin of the page\n         * document.pageSettings.margins.right = 0;\n         * // set the page size.\n         * document.pageSettings.size = new SizeF(500, 500);\n         * // change the page orientation to landscape\n         * document.pageSettings.orientation = PdfPageOrientation.Landscape;\n         * // apply 90 degree rotation on the page\n         * document.pageSettings.rotate = PdfPageRotateAngle.RotateAngle90;\n         *\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * // set the specified Point\n         * let point : PointF = new PointF(page1.getClientSize().width - 200, page1.getClientSize().height - 200);\n         * // draw the text\n         * page1.graphics.drawString('Hello World', font, blackBrush, point);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this.settings = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"pages\", {\n        /**\n         * Represents the collection of pages in the PDF document.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * //\n         * // get the collection of pages in the document\n         * let pageCollection : PdfDocumentPageCollection  = document.pages;\n         * //\n         * // add pages\n         * let page1 : PdfPage = pageCollection.add();\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.documentPageCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument, \"cache\", {\n        /**\n         * Gets collection of the `cached objects`.\n         * @private\n         */\n        get: function () {\n            if (typeof PdfDocument.cacheCollection === 'undefined' || PdfDocument.cacheCollection == null) {\n                return new PdfCacheCollection();\n            }\n            return PdfDocument.cacheCollection;\n        },\n        /**\n         * Sets collection of the `cached objects`.\n         * @private\n         */\n        set: function (value) {\n            this.cacheCollection = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument, \"enableCache\", {\n        /**\n         * Gets the value of enable cache.\n         * @private\n         */\n        get: function () {\n            return this.isCacheEnabled;\n        },\n        /**\n         * Sets thie value of enable cache.\n         * @private\n         */\n        set: function (value) {\n            this.isCacheEnabled = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"colorSpace\", {\n        /* tslint:disable */\n        /**\n         * Gets or sets the `color space` of the document. This property can be used to create PDF document in RGB, Gray scale or CMYK color spaces.\n         * @private\n         */\n        get: function () {\n            if ((this.pdfColorSpace === PdfColorSpace.Rgb) || ((this.pdfColorSpace === PdfColorSpace.Cmyk)\n                || (this.pdfColorSpace === PdfColorSpace.GrayScale))) {\n                return this.pdfColorSpace;\n            }\n            else {\n                return PdfColorSpace.Rgb;\n            }\n        },\n        set: function (value) {\n            if ((value === PdfColorSpace.Rgb) || ((value === PdfColorSpace.Cmyk) ||\n                (value === PdfColorSpace.GrayScale))) {\n                this.pdfColorSpace = value;\n            }\n            else {\n                this.pdfColorSpace = PdfColorSpace.Rgb;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"template\", {\n        /* tslint:enable */\n        /**\n         * Gets or sets a `template` to all pages in the document.\n         * @private\n         */\n        get: function () {\n            if (this.pageTemplate == null) {\n                this.pageTemplate = new PdfDocumentTemplate();\n            }\n            return this.pageTemplate;\n        },\n        set: function (value) {\n            this.pageTemplate = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfDocument.prototype.docSave = function (stream, arg2, arg3) {\n        this.checkPagesPresence();\n        if (stream === null) {\n            throw new Error('ArgumentNullException : stream');\n        }\n        this.streamWriter = stream;\n        var writer = new PdfWriter(stream);\n        writer.document = this;\n        if (typeof arg2 === 'boolean' && typeof arg3 === 'undefined') {\n            return this.crossTable.save(writer);\n        }\n        else {\n            this.crossTable.save(writer, arg2);\n        }\n    };\n    /**\n     * Checks the pages `presence`.\n     * @private\n     */\n    PdfDocument.prototype.checkPagesPresence = function () {\n        if (this.pages.count === 0) {\n            this.pages.add();\n        }\n    };\n    /**\n     * disposes the current instance of `PdfDocument` class.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // add a new page to the document\n     * let page1 : PdfPage = document.pages.add();\n     * // set the font\n     * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // create black brush\n     * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n     * // draw the text\n     * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n     * // save the document\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfDocument.prototype.destroy = function () {\n        this.catalog = undefined;\n        this.colorSpace = undefined;\n        this.currentSavingObj = undefined;\n        this.documentPageCollection = undefined;\n        this.isStreamCopied = undefined;\n        this.pageSettings = undefined;\n        this.pageTemplate = undefined;\n        this.pdfColorSpace = undefined;\n        this.sectionCollection = undefined;\n        PdfDocument.cache.destroy();\n        this.crossTable.pdfObjects.destroy();\n        PdfDocument.cache = undefined;\n        this.streamWriter.destroy();\n    };\n    /**\n     * `Font` used in complex objects to draw strings and text when it is not defined explicitly.\n     * @default null\n     * @private\n     */\n    PdfDocument.defaultStandardFont = null;\n    /**\n     * Indicates whether enable cache or not\n     * @default true\n     * @private\n     */\n    PdfDocument.isCacheEnabled = true;\n    return PdfDocument;\n}(PdfDocumentBase));\nexport { PdfDocument };\n", "/**\n * PdfBorders.ts class for EJ2-PDF\n */\nimport { PdfPen } from './../../../graphics/pdf-pen';\nimport { PdfDashStyle } from './../../../graphics/enum';\nimport { PdfColor } from './../../../graphics/pdf-color';\n/**\n * `PdfBorders` class used represents the cell border of the PDF grid.\n */\nvar PdfBorders = /** @class */ (function () {\n    // Constructor\n    /**\n     * Create a new instance for `PdfBorders` class.\n     * @private\n     */\n    function PdfBorders() {\n        var defaultBorderPenLeft = new PdfPen(new PdfColor(0, 0, 0));\n        defaultBorderPenLeft.dashStyle = PdfDashStyle.Solid;\n        var defaultBorderPenRight = new PdfPen(new PdfColor(0, 0, 0));\n        defaultBorderPenRight.dashStyle = PdfDashStyle.Solid;\n        var defaultBorderPenTop = new PdfPen(new PdfColor(0, 0, 0));\n        defaultBorderPenTop.dashStyle = PdfDashStyle.Solid;\n        var defaultBorderPenBottom = new PdfPen(new PdfColor(0, 0, 0));\n        defaultBorderPenBottom.dashStyle = PdfDashStyle.Solid;\n        this.leftPen = defaultBorderPenLeft;\n        this.rightPen = defaultBorderPenRight;\n        this.topPen = defaultBorderPenTop;\n        this.bottomPen = defaultBorderPenBottom;\n    }\n    Object.defineProperty(PdfBorders.prototype, \"left\", {\n        // Properties\n        /**\n         * Gets or sets the `Left`.\n         * @private\n         */\n        get: function () {\n            return this.leftPen;\n        },\n        set: function (value) {\n            this.leftPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders.prototype, \"right\", {\n        /**\n         * Gets or sets the `Right`.\n         * @private\n         */\n        get: function () {\n            return this.rightPen;\n        },\n        set: function (value) {\n            this.rightPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders.prototype, \"top\", {\n        /**\n         * Gets or sets the `Top`.\n         * @private\n         */\n        get: function () {\n            return this.topPen;\n        },\n        set: function (value) {\n            this.topPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders.prototype, \"bottom\", {\n        /**\n         * Gets or sets the `Bottom`.\n         * @private\n         */\n        get: function () {\n            return this.bottomPen;\n        },\n        set: function (value) {\n            this.bottomPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders.prototype, \"all\", {\n        /**\n         * sets the `All`.\n         * @private\n         */\n        set: function (value) {\n            this.leftPen = this.rightPen = this.topPen = this.bottomPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders.prototype, \"isAll\", {\n        /**\n         * Gets a value indicating whether this instance `is all`.\n         * @private\n         */\n        get: function () {\n            return ((this.leftPen === this.rightPen) && (this.leftPen === this.topPen) && (this.leftPen === this.bottomPen));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders, \"default\", {\n        /**\n         * Gets the `default`.\n         * @private\n         */\n        get: function () {\n            return new PdfBorders();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfBorders;\n}());\nexport { PdfBorders };\nvar PdfPaddings = /** @class */ (function () {\n    function PdfPaddings(left, right, top, bottom) {\n        /**\n         * The 'left' border padding set.\n         * @private\n         */\n        this.hasLeftPad = false;\n        /**\n         * The 'right' border padding set.\n         * @private\n         */\n        this.hasRightPad = false;\n        /**\n         * The 'top' border padding set.\n         * @private\n         */\n        this.hasTopPad = false;\n        /**\n         * The 'bottom' border padding set.\n         * @private\n         */\n        this.hasBottomPad = false;\n        if (typeof left === 'undefined') {\n            //0.5 is set for top and bottom by default.\n            this.bottomPad = this.topPad = this.leftPad = this.rightPad = 0.5;\n        }\n        else {\n            this.leftPad = left;\n            this.rightPad = right;\n            this.topPad = top;\n            this.bottomPad = bottom;\n            this.hasLeftPad = true;\n            this.hasRightPad = true;\n            this.hasTopPad = true;\n            this.hasBottomPad = true;\n        }\n    }\n    Object.defineProperty(PdfPaddings.prototype, \"left\", {\n        // Properties\n        /**\n         * Gets or sets the `left` value of the edge\n         * @private\n         */\n        get: function () {\n            return this.leftPad;\n        },\n        set: function (value) {\n            this.leftPad = value;\n            this.hasLeftPad = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPaddings.prototype, \"right\", {\n        /**\n         * Gets or sets the `right` value of the edge.\n         * @private\n         */\n        get: function () {\n            return this.rightPad;\n        },\n        set: function (value) {\n            this.rightPad = value;\n            this.hasRightPad = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPaddings.prototype, \"top\", {\n        /**\n         * Gets or sets the `top` value of the edge\n         * @private\n         */\n        get: function () {\n            return this.topPad;\n        },\n        set: function (value) {\n            this.topPad = value;\n            this.hasTopPad = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPaddings.prototype, \"bottom\", {\n        /**\n         * Gets or sets the `bottom` value of the edge.\n         * @private\n         */\n        get: function () {\n            return this.bottomPad;\n        },\n        set: function (value) {\n            this.bottomPad = value;\n            this.hasBottomPad = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPaddings.prototype, \"all\", {\n        /**\n         * Sets value to all sides `left,right,top and bottom`.s\n         * @private\n         */\n        set: function (value) {\n            this.leftPad = this.rightPad = this.topPad = this.bottomPad = value;\n            this.hasLeftPad = true;\n            this.hasRightPad = true;\n            this.hasTopPad = true;\n            this.hasBottomPad = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfPaddings;\n}());\nexport { PdfPaddings };\n", "/**\n * ElementLayouter.ts class for EJ2-PDF\n */\nimport { RectangleF } from './../../../drawing/pdf-drawing';\n/**\n * Base class for `elements lay outing`.\n * @private\n */\nvar ElementLayouter = /** @class */ (function () {\n    // Constructor\n    /**\n     * Initializes a new instance of the `ElementLayouter` class.\n     * @private\n     */\n    function ElementLayouter(element) {\n        this.layoutElement = element;\n    }\n    Object.defineProperty(ElementLayouter.prototype, \"elements\", {\n        // Properties\n        /**\n         * Gets the `element`.\n         * @private\n         */\n        get: function () {\n            return this.layoutElement;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the `element`.\n     * @private\n     */\n    ElementLayouter.prototype.getElement = function () {\n        return this.layoutElement;\n    };\n    // Implementation\n    /**\n     * `Layouts` the element.\n     * @private\n     */\n    ElementLayouter.prototype.layout = function (param) {\n        return this.layoutInternal(param);\n    };\n    ElementLayouter.prototype.Layouter = function (param) {\n        return this.layoutInternal(param);\n    };\n    /**\n     * Returns the `next page`.\n     * @private\n     */\n    ElementLayouter.prototype.getNextPage = function (currentPage) {\n        var section = currentPage.section;\n        var nextPage = section.add();\n        return nextPage;\n    };\n    ElementLayouter.prototype.getPaginateBounds = function (param) {\n        if ((param == null)) {\n            throw new Error('ArgumentNullException : param');\n        }\n        var result = param.format.usePaginateBounds ? param.format.paginateBounds\n            : new RectangleF(param.bounds.x, 0, param.bounds.width, param.bounds.height);\n        return result;\n    };\n    return ElementLayouter;\n}());\nexport { ElementLayouter };\nvar PdfLayoutFormat = /** @class */ (function () {\n    function PdfLayoutFormat(baseFormat) {\n        if (typeof baseFormat === 'undefined') {\n            //\n        }\n        else {\n            this.break = baseFormat.break;\n            this.layout = baseFormat.layout;\n            this.paginateBounds = baseFormat.paginateBounds;\n            this.boundsSet = baseFormat.usePaginateBounds;\n        }\n    }\n    Object.defineProperty(PdfLayoutFormat.prototype, \"layout\", {\n        // Properties\n        /**\n         * Gets or sets `layout` type of the element.\n         * @private\n         */\n        get: function () {\n            // if (typeof this.layoutType === 'undefined' || this.layoutType == null) {\n            //      this.layoutType = PdfLayoutType.Paginate;\n            // }\n            return this.layoutType;\n        },\n        set: function (value) {\n            this.layoutType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutFormat.prototype, \"break\", {\n        /**\n         * Gets or sets `break` type of the element.\n         * @private\n         */\n        get: function () {\n            // if (typeof this.breakType === 'undefined' || this.boundsSet == null) {\n            //      this.breakType = PdfLayoutBreakType.FitPage;\n            // }\n            return this.breakType;\n        },\n        set: function (value) {\n            this.breakType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutFormat.prototype, \"paginateBounds\", {\n        /**\n         * Gets or sets the `bounds` on the next page.\n         * @private\n         */\n        get: function () {\n            if (typeof this.layoutPaginateBounds === 'undefined' && this.layoutPaginateBounds == null) {\n                this.layoutPaginateBounds = new RectangleF(0, 0, 0, 0);\n            }\n            return this.layoutPaginateBounds;\n        },\n        set: function (value) {\n            this.layoutPaginateBounds = value;\n            this.boundsSet = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutFormat.prototype, \"usePaginateBounds\", {\n        /**\n         * Gets a value indicating whether [`use paginate bounds`].\n         * @private\n         */\n        get: function () {\n            // if (typeof this.boundsSet === 'undefined' || this.boundsSet == null) {\n            //      this.boundsSet = false;\n            // }\n            return this.boundsSet;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfLayoutFormat;\n}());\nexport { PdfLayoutFormat };\nvar PdfLayoutParams = /** @class */ (function () {\n    function PdfLayoutParams() {\n    }\n    Object.defineProperty(PdfLayoutParams.prototype, \"page\", {\n        // Properties\n        /**\n         * Gets or sets the layout `page` for the element.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        set: function (value) {\n            this.pdfPage = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutParams.prototype, \"bounds\", {\n        /**\n         * Gets or sets layout `bounds` for the element.\n         * @private\n         */\n        get: function () {\n            return new RectangleF(this.layoutBounds.x, this.layoutBounds.y, this.layoutBounds.width, this.layoutBounds.height);\n        },\n        set: function (value) {\n            this.layoutBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutParams.prototype, \"format\", {\n        /**\n         * Gets or sets `layout settings` for the element.\n         * @private\n         */\n        get: function () {\n            return this.layoutFormat;\n        },\n        set: function (value) {\n            this.layoutFormat = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfLayoutParams;\n}());\nexport { PdfLayoutParams };\nvar PdfLayoutResult = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes the new instance of `PdfLayoutResult` class.\n     * @private\n     */\n    function PdfLayoutResult(page, bounds) {\n        this.pdfPage = page;\n        this.layoutBounds = bounds;\n    }\n    Object.defineProperty(PdfLayoutResult.prototype, \"page\", {\n        // Properties\n        /**\n         * Gets the last `page` where the element was drawn.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutResult.prototype, \"bounds\", {\n        /**\n         * Gets the `bounds` of the element on the last page where it was drawn.\n         * @private\n         */\n        get: function () {\n            return this.layoutBounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfLayoutResult;\n}());\nexport { PdfLayoutResult };\n", "import { RectangleF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfLayoutParams, PdfLayoutFormat } from './base/element-layouter';\nimport { PdfBorders } from './../../structured-elements/grid/styles/pdf-borders';\n/**\n * `PdfLayoutElement` class represents the base class for all elements that can be layout on the pages.\n * @private\n */\nvar PdfLayoutElement = /** @class */ (function () {\n    function PdfLayoutElement() {\n    }\n    Object.defineProperty(PdfLayoutElement.prototype, \"raiseBeginPageLayout\", {\n        // Property\n        /**\n         * Gets a value indicating whether the `start page layout event` should be raised.\n         * @private\n         */\n        get: function () {\n            return (typeof this.beginPageLayout !== 'undefined');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutElement.prototype, \"raiseEndPageLayout\", {\n        /**\n         * Gets a value indicating whether the `ending page layout event` should be raised.\n         * @private\n         */\n        get: function () {\n            return (typeof this.endPageLayout !== 'undefined');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Event Handlers\n    PdfLayoutElement.prototype.onBeginPageLayout = function (args) {\n        if (this.beginPageLayout) {\n            this.beginPageLayout(this, args);\n        }\n    };\n    PdfLayoutElement.prototype.onEndPageLayout = function (args) {\n        if (this.endPageLayout) {\n            this.endPageLayout(this, args);\n        }\n    };\n    PdfLayoutElement.prototype.drawHelper = function (arg2, arg3, arg4, arg5) {\n        if (arg3 instanceof PointF && typeof arg3.width === 'undefined' && typeof arg4 === 'undefined') {\n            return this.drawHelper(arg2, arg3.x, arg3.y);\n        }\n        else if (typeof arg3 === 'number' && typeof arg4 === 'number' && typeof arg5 === 'undefined') {\n            return this.drawHelper(arg2, arg3, arg4, null);\n        }\n        else if (arg3 instanceof RectangleF && typeof arg3.width !== 'undefined' && typeof arg4 === 'undefined') {\n            return this.drawHelper(arg2, arg3, null);\n        }\n        else if (arg3 instanceof PointF && typeof arg3.width === 'undefined' && arg4 instanceof PdfLayoutFormat) {\n            return this.drawHelper(arg2, arg3.x, arg3.y, arg4);\n        }\n        else if (typeof arg3 === 'number' && typeof arg4 === 'number' && (arg5 instanceof PdfLayoutFormat || arg5 == null)) {\n            var width = (arg2.graphics.clientSize.width - arg3);\n            var layoutRectangle = new RectangleF(arg3, arg4, width, 0);\n            return this.drawHelper(arg2, layoutRectangle, arg5);\n        }\n        else if (arg3 instanceof RectangleF && typeof arg3.width !== 'undefined' && typeof arg4 === 'boolean') {\n            this.bEmbedFonts = arg4;\n            return this.drawHelper(arg2, arg3, null);\n        }\n        else {\n            var param = new PdfLayoutParams();\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            param.page = arg2;\n            param.bounds = temparg3;\n            if (param != null) {\n                var x = param.bounds.x;\n                var y = param.bounds.y;\n                if (param.bounds.x === 0) {\n                    x = PdfBorders.default.right.width / 2;\n                }\n                if (param.bounds.y === 0) {\n                    y = PdfBorders.default.top.width / 2;\n                }\n                var newBound = new RectangleF(x, y, param.bounds.width, param.bounds.height);\n                param.bounds = newBound;\n            }\n            param.format = (temparg4 != null) ? temparg4 : new PdfLayoutFormat();\n            var result = this.layout(param);\n            return result;\n        }\n    };\n    return PdfLayoutElement;\n}());\nexport { PdfLayoutElement };\n", "var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * TextLayouter.ts class for EJ2-PDF\n */\nimport { ElementLayouter, PdfLayoutResult } from './element-layouter';\nimport { RectangleF, SizeF } from './../../../drawing/pdf-drawing';\nimport { PdfStringLayouter } from './../../fonts/string-layouter';\nimport { PdfLayoutBreakType } from './../../figures/enum';\nimport { PdfColor } from './../../pdf-color';\nimport { PdfTextWebLink } from './../../../annotations/pdf-text-web-link';\n/**\n * Class that `layouts the text`.\n * @private\n */\nvar TextLayouter = /** @class */ (function (_super) {\n    __extends(TextLayouter, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `TextLayouter` class.\n     * @private\n     */\n    function TextLayouter(element) {\n        return _super.call(this, element) || this;\n    }\n    Object.defineProperty(TextLayouter.prototype, \"element\", {\n        /**\n         * Gets the layout `element`.\n         * @private\n         */\n        get: function () {\n            return _super.prototype.getElement.call(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Layouts` the element.\n     * @private\n     */\n    TextLayouter.prototype.layoutInternal = function (param) {\n        /* tslint:disable */\n        this.format = (this.element.stringFormat !== null && typeof this.element.stringFormat !== 'undefined') ? this.element.stringFormat : null;\n        var currentPage = param.page;\n        var currentBounds = param.bounds;\n        var text = this.element.value;\n        var result = null;\n        var pageResult = new TextPageLayoutResult();\n        pageResult.page = currentPage;\n        pageResult.remainder = text;\n        for (;;) {\n            pageResult = this.layoutOnPage(text, currentPage, currentBounds, param);\n            result = this.getLayoutResult(pageResult);\n            break;\n        }\n        /* tslint:enable */\n        return result;\n    };\n    /**\n     * Raises `PageLayout` event if needed.\n     * @private\n     */\n    TextLayouter.prototype.getLayoutResult = function (pageResult) {\n        var result = new PdfTextLayoutResult(pageResult.page, pageResult.bounds, pageResult.remainder, pageResult.lastLineBounds);\n        return result;\n    };\n    /* tslint:disable */\n    /**\n     * `Layouts` the text on the page.\n     * @private\n     */\n    TextLayouter.prototype.layoutOnPage = function (text, currentPage, currentBounds, param) {\n        var result = new TextPageLayoutResult();\n        result.remainder = text;\n        result.page = currentPage;\n        currentBounds = this.checkCorrectBounds(currentPage, currentBounds);\n        var layouter = new PdfStringLayouter();\n        var stringResult = layouter.layout(text, this.element.font, this.format, currentBounds, currentPage.getClientSize().height, false, new SizeF(0, 0));\n        var textFinished = (stringResult.remainder == null);\n        var doesntFit = (param.format.break === PdfLayoutBreakType.FitElement);\n        var canDraw = !(doesntFit || stringResult.empty);\n        // Draw the text.\n        var graphics = currentPage.graphics;\n        var brush = this.element.getBrush();\n        if (this.element instanceof PdfTextWebLink) {\n            brush.color = new PdfColor(0, 0, 255);\n        }\n        graphics.drawStringLayoutResult(stringResult, this.element.font, this.element.pen, brush, currentBounds, this.format);\n        var lineInfo = stringResult.lines[stringResult.lineCount - 1];\n        result.lastLineBounds = graphics.getLineBounds(stringResult.lineCount - 1, stringResult, this.element.font, currentBounds, this.format);\n        result.bounds = this.getTextPageBounds(currentPage, currentBounds, stringResult);\n        result.remainder = stringResult.remainder;\n        result.end = (textFinished);\n        return result;\n    };\n    /* tslint:enable */\n    /**\n     * `Corrects current bounds` on the page.\n     * @private\n     */\n    TextLayouter.prototype.checkCorrectBounds = function (currentPage, currentBounds) {\n        var pageSize = currentPage.graphics.clientSize;\n        currentBounds.height = (currentBounds.height > 0) ? currentBounds.height : pageSize.height - currentBounds.y;\n        return currentBounds;\n    };\n    /**\n     * Returns a `rectangle` where the text was printed on the page.\n     * @private\n     */\n    /* tslint:disable */\n    TextLayouter.prototype.getTextPageBounds = function (currentPage, currentBounds, stringResult) {\n        var textSize = stringResult.actualSize;\n        var x = currentBounds.x;\n        var y = currentBounds.y;\n        var width = (currentBounds.width > 0) ? currentBounds.width : textSize.width;\n        var height = textSize.height;\n        var shiftedRect = currentPage.graphics.checkCorrectLayoutRectangle(textSize, currentBounds.x, currentBounds.y, this.format);\n        // if (currentBounds.width <= 0) {\n        x = shiftedRect.x;\n        // }\n        var verticalShift = currentPage.graphics.getTextVerticalAlignShift(textSize.height, currentBounds.height, this.format);\n        y += verticalShift;\n        var bounds = new RectangleF(x, y, width, height);\n        return bounds;\n    };\n    return TextLayouter;\n}(ElementLayouter));\nexport { TextLayouter };\nvar TextPageLayoutResult = /** @class */ (function () {\n    function TextPageLayoutResult() {\n    }\n    return TextPageLayoutResult;\n}());\nexport { TextPageLayoutResult };\nvar PdfTextLayoutResult = /** @class */ (function (_super) {\n    __extends(PdfTextLayoutResult, _super);\n    // Constructors\n    /**\n     * Initializes the new instance of `PdfTextLayoutResult` class.\n     * @private\n     */\n    function PdfTextLayoutResult(page, bounds, remainder, lastLineBounds) {\n        var _this = _super.call(this, page, bounds) || this;\n        _this.remainderText = remainder;\n        _this.lastLineTextBounds = lastLineBounds;\n        return _this;\n    }\n    Object.defineProperty(PdfTextLayoutResult.prototype, \"remainder\", {\n        // Properties\n        /**\n         * Gets a value that contains the `text` that was not printed.\n         * @private\n         */\n        get: function () {\n            return this.remainderText;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextLayoutResult.prototype, \"lastLineBounds\", {\n        /**\n         * Gets a value that indicates the `bounds` of the last line that was printed on the page.\n         * @private\n         */\n        get: function () {\n            return this.lastLineTextBounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfTextLayoutResult;\n}(PdfLayoutResult));\nexport { PdfTextLayoutResult };\n", "var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfTextElement.ts class for EJ2-PDF\n */\nimport { PdfLayoutElement } from './../figures/layout-element';\nimport { PdfBrush } from './../brushes/pdf-brush';\nimport { PdfFont } from './../fonts/pdf-font';\nimport { PdfStandardFont } from './../fonts/pdf-standard-font';\nimport { PdfPen } from './../pdf-pen';\nimport { PdfLayoutParams } from './../figures/base/element-layouter';\nimport { TextLayouter } from './base/text-layouter';\nimport { PdfSolidBrush } from './../brushes/pdf-solid-brush';\nimport { PdfColor } from './../pdf-color';\nimport { RectangleF, SizeF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfLayoutFormat } from './base/element-layouter';\nimport { PdfStringLayouter } from './../fonts/string-layouter';\nimport { PdfTextAlignment } from './../enum';\n/**\n * `PdfTextElement` class represents the text area with the ability to span several pages\n * and inherited from the 'PdfLayoutElement' class.\n * @private\n */\nvar PdfTextElement = /** @class */ (function (_super) {\n    __extends(PdfTextElement, _super);\n    function PdfTextElement(arg1, arg2, arg3, arg4, arg5) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * `Text` data.\n         * @private\n         */\n        _this.content = '';\n        /**\n         * `Value` of text data.\n         * @private\n         */\n        _this.elementValue = '';\n        /**\n         * indicate whether the drawText with PointF overload is called or not.\n         * @default false\n         * @private\n         */\n        _this.hasPointOverload = false;\n        /**\n         * indicate whether the PdfGridCell value is `PdfTextElement`\n         * @default false\n         * @private\n         */\n        _this.isPdfTextElement = false;\n        if (typeof arg1 === 'undefined') {\n            //\n        }\n        else if (typeof arg1 === 'string' && typeof arg2 === 'undefined') {\n            _this.content = arg1;\n            _this.elementValue = arg1;\n        }\n        else if (typeof arg1 === 'string' && arg2 instanceof PdfFont && typeof arg3 === 'undefined') {\n            _this.content = arg1;\n            _this.elementValue = arg1;\n            _this.pdfFont = arg2;\n        }\n        else if (typeof arg1 === 'string' && arg2 instanceof PdfFont && arg3 instanceof PdfPen && typeof arg4 === 'undefined') {\n            _this.content = arg1;\n            _this.elementValue = arg1;\n            _this.pdfFont = arg2;\n            _this.pdfPen = arg3;\n        }\n        else if (typeof arg1 === 'string' && arg2 instanceof PdfFont && arg3 instanceof PdfBrush && typeof arg4 === 'undefined') {\n            _this.content = arg1;\n            _this.elementValue = arg1;\n            _this.pdfFont = arg2;\n            _this.pdfBrush = arg3;\n        }\n        else {\n            _this.content = arg1;\n            _this.elementValue = arg1;\n            _this.pdfFont = arg2;\n            _this.pdfPen = arg3;\n            _this.pdfBrush = arg4;\n            _this.format = arg5;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfTextElement.prototype, \"text\", {\n        // Properties\n        /**\n         * Gets or sets a value indicating the `text` that should be printed.\n         * ```typescript\n         * // create a new PDF document.\n         * let document : PdfDocument = new PdfDocument();\n         * // add a page to the document.\n         * let page1 : PdfPage = document.pages.add();\n         * // create the font\n         * let font : PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 12);\n         * // create the Text Web Link\n         * let textLink : PdfTextWebLink = new PdfTextWebLink();\n         * // set the hyperlink\n         * textLink.url = 'http://www.google.com';\n         * //\n         * // set the link text\n         * textLink.text = 'Google';\n         * //\n         * // set the font\n         * textLink.font = font;\n         * // draw the hyperlink in PDF page\n         * textLink.draw(page1, new PointF(10, 40));\n         * // save the document.\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.content;\n        },\n        set: function (value) {\n            this.elementValue = value;\n            this.content = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"value\", {\n        //get value\n        /**\n         * Gets or sets a `value` indicating the text that should be printed.\n         * @private\n         */\n        get: function () {\n            return this.elementValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"pen\", {\n        //get pen\n        /**\n         * Gets or sets a `PdfPen` that determines the color, width, and style of the text\n         * @private\n         */\n        get: function () {\n            return this.pdfPen;\n        },\n        //Set pen value\n        set: function (value) {\n            this.pdfPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"brush\", {\n        //get brush\n        /**\n         * Gets or sets the `PdfBrush` that will be used to draw the text with color and texture.\n         * @private\n         */\n        get: function () {\n            return this.pdfBrush;\n        },\n        //Set brush value\n        set: function (value) {\n            this.pdfBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"font\", {\n        //get font\n        /**\n         * Gets or sets a `PdfFont` that defines the text format.\n         * ```typescript\n         * // create a new PDF document.\n         * let document : PdfDocument = new PdfDocument();\n         * // add a page to the document.\n         * let page1 : PdfPage = document.pages.add();\n         * // create the font\n         * let font : PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 12);\n         * // create the Text Web Link\n         * let textLink : PdfTextWebLink = new PdfTextWebLink();\n         * // set the hyperlink\n         * textLink.url = 'http://www.google.com';\n         * // set the link text\n         * textLink.text = 'Google';\n         * //\n         * // set the font\n         * textLink.font = font;\n         * //\n         * // draw the hyperlink in PDF page\n         * textLink.draw(page1, new PointF(10, 40));\n         * // save the document.\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.pdfFont;\n        },\n        set: function (value) {\n            this.pdfFont = value;\n            if (this.pdfFont instanceof PdfStandardFont && this.content != null) {\n                this.elementValue = PdfStandardFont.convert(this.content);\n            }\n            else {\n                this.elementValue = this.content;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"stringFormat\", {\n        /**\n         * Gets or sets the `PdfStringFormat` that will be used to set the string format\n         * @private\n         */\n        get: function () {\n            return this.format;\n        },\n        set: function (value) {\n            this.format = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Gets a `brush` for drawing.\n     * @private\n     */\n    PdfTextElement.prototype.getBrush = function () {\n        return (this.pdfBrush == null || typeof this.pdfBrush === 'undefined') ? new PdfSolidBrush(new PdfColor(0, 0, 0)) : this.pdfBrush;\n    };\n    // /**\n    //  * `Draws` an element on the Graphics.\n    //  * @private\n    //  */\n    // public drawInternal(graphics : PdfGraphics) : void {\n    //     graphics.drawString(this.elementValue, this.pdfFont, this.pdfPen, this.getBrush(), 0, 0, this.stringFormat);\n    // }\n    /**\n     * `Layouts` the element.\n     * @private\n     */\n    PdfTextElement.prototype.layout = function (param) {\n        var layouter = new TextLayouter(this);\n        var result = layouter.layout(param);\n        return result;\n    };\n    PdfTextElement.prototype.drawText = function (arg2, arg3, arg4, arg5) {\n        if (arg3 instanceof PointF && typeof arg3.width === 'undefined' && typeof arg4 === 'undefined') {\n            this.hasPointOverload = true;\n            return this.drawText(arg2, arg3.x, arg3.y);\n        }\n        else if (typeof arg3 === 'number' && typeof arg4 === 'number' && typeof arg5 === 'undefined') {\n            this.hasPointOverload = true;\n            return this.drawText(arg2, arg3, arg4, null);\n        }\n        else if (arg3 instanceof RectangleF && typeof arg3.width !== 'undefined' && typeof arg4 === 'undefined') {\n            return this.drawText(arg2, arg3, null);\n        }\n        else if (arg3 instanceof PointF && typeof arg3.width === 'undefined' && arg4 instanceof PdfLayoutFormat) {\n            this.hasPointOverload = true;\n            return this.drawText(arg2, arg3.x, arg3.y, arg4);\n        }\n        else if (typeof arg3 === 'number' && typeof arg4 === 'number' && (arg5 instanceof PdfLayoutFormat || arg5 == null)) {\n            this.hasPointOverload = true;\n            var width = (arg2.graphics.clientSize.width - arg3);\n            var layoutRectangle = new RectangleF(arg3, arg4, width, 0);\n            return this.drawText(arg2, layoutRectangle, arg5);\n        }\n        else if (arg3 instanceof RectangleF && typeof arg3.width !== 'undefined' && typeof arg4 === 'boolean') {\n            return this.drawText(arg2, arg3, null);\n        }\n        else {\n            var layout = new PdfStringLayouter();\n            if (this.hasPointOverload) {\n                var stringLayoutResult = layout.layout(this.value, this.font, this.stringFormat, new SizeF((arg2.graphics.clientSize.width - arg3.x), 0), true, arg2.graphics.clientSize);\n                var layoutResult = void 0;\n                var param = new PdfLayoutParams();\n                var temparg3 = arg3;\n                var temparg4 = arg4;\n                param.page = arg2;\n                var previousPage = arg2;\n                param.bounds = temparg3;\n                param.format = (temparg4 != null) ? temparg4 : new PdfLayoutFormat();\n                if (stringLayoutResult.lines.length > 1) {\n                    this.text = stringLayoutResult.layoutLines[0].text;\n                    if (param.bounds.y <= param.page.graphics.clientSize.height) {\n                        var previousPosition = new PointF(param.bounds.x, param.bounds.y);\n                        layoutResult = this.layout(param);\n                        var bounds = new RectangleF(0, layoutResult.bounds.y + stringLayoutResult.lineHeight, arg2.graphics.clientSize.width, stringLayoutResult.lineHeight);\n                        var isPaginate = false;\n                        for (var i = 1; i < stringLayoutResult.lines.length; i++) {\n                            param.page = layoutResult.page;\n                            param.bounds = new RectangleF(new PointF(bounds.x, bounds.y), new SizeF(bounds.width, bounds.height));\n                            this.text = stringLayoutResult.layoutLines[i].text;\n                            if (bounds.y + stringLayoutResult.lineHeight > layoutResult.page.graphics.clientSize.height) {\n                                isPaginate = true;\n                                param.page = param.page.graphics.getNextPage();\n                                if (previousPosition.y > (layoutResult.page.graphics.clientSize.height - layoutResult.bounds.height)) {\n                                    bounds = new RectangleF(0, layoutResult.bounds.height, layoutResult.page.graphics.clientSize.width, stringLayoutResult.lineHeight);\n                                }\n                                else {\n                                    bounds = new RectangleF(0, 0, layoutResult.page.graphics.clientSize.width, stringLayoutResult.lineHeight);\n                                }\n                                param.bounds = bounds;\n                            }\n                            layoutResult = this.layout(param);\n                            if (i !== (stringLayoutResult.lines.length - 1)) {\n                                bounds = new RectangleF(0, layoutResult.bounds.y + stringLayoutResult.lineHeight, layoutResult.page.graphics.clientSize.width, stringLayoutResult.lineHeight);\n                            }\n                            else {\n                                var lineWidth = this.font.measureString(this.text, this.format).width;\n                                layoutResult = this.calculateResultBounds(layoutResult, lineWidth, layoutResult.page.graphics.clientSize.width, 0);\n                            }\n                        }\n                    }\n                    return layoutResult;\n                }\n                else {\n                    var lineSize = this.font.measureString(this.text, this.format);\n                    if (param.bounds.y <= param.page.graphics.clientSize.height) {\n                        layoutResult = this.layout(param);\n                        layoutResult = this.calculateResultBounds(layoutResult, lineSize.width, layoutResult.page.graphics.clientSize.width, 0);\n                    }\n                    return layoutResult;\n                }\n            }\n            else {\n                var layoutResult = layout.layout(this.value, this.font, this.stringFormat, new SizeF(arg3.width, 0), false, arg2.graphics.clientSize);\n                var result = void 0;\n                var param = new PdfLayoutParams();\n                var temparg3 = arg3;\n                var temparg4 = arg4;\n                param.page = arg2;\n                param.bounds = temparg3;\n                param.format = (temparg4 != null) ? temparg4 : new PdfLayoutFormat();\n                if (layoutResult.lines.length > 1) {\n                    this.text = layoutResult.layoutLines[0].text;\n                    if (param.bounds.y <= param.page.graphics.clientSize.height) {\n                        var previousPosition = new PointF(param.bounds.x, param.bounds.y);\n                        result = this.layout(param);\n                        var bounds = new RectangleF(temparg3.x, result.bounds.y + layoutResult.lineHeight, temparg3.width, layoutResult.lineHeight);\n                        var isPaginate = false;\n                        for (var i = 1; i < layoutResult.lines.length; i++) {\n                            param.page = result.page;\n                            param.bounds = new RectangleF(bounds.x, bounds.y, bounds.width, bounds.height);\n                            this.text = layoutResult.layoutLines[i].text;\n                            if (bounds.y + layoutResult.lineHeight > result.page.graphics.clientSize.height) {\n                                isPaginate = true;\n                                param.page = param.page.graphics.getNextPage();\n                                if (previousPosition.y > (result.page.graphics.clientSize.height - result.bounds.height)) {\n                                    bounds = new RectangleF(temparg3.x, layoutResult.lineHeight, temparg3.width, layoutResult.lineHeight);\n                                }\n                                else {\n                                    bounds = new RectangleF(temparg3.x, 0, temparg3.width, layoutResult.lineHeight);\n                                }\n                                param.bounds = bounds;\n                            }\n                            result = this.layout(param);\n                            if (i !== (layoutResult.lines.length - 1)) {\n                                bounds = new RectangleF(temparg3.x, result.bounds.y + layoutResult.lineHeight, temparg3.width, layoutResult.lineHeight);\n                            }\n                            else {\n                                var lineWidth = this.font.measureString(this.text, this.format).width;\n                                result = this.calculateResultBounds(result, lineWidth, temparg3.width, temparg3.x);\n                            }\n                        }\n                    }\n                    return result;\n                }\n                else {\n                    var lineSize = this.font.measureString(this.text, this.format);\n                    if (param.bounds.y <= param.page.graphics.clientSize.height) {\n                        result = this.layout(param);\n                        result = this.calculateResultBounds(result, lineSize.width, temparg3.width, temparg3.x);\n                    }\n                    return result;\n                }\n            }\n        }\n    };\n    PdfTextElement.prototype.calculateResultBounds = function (result, lineWidth, maximumWidth, startPosition) {\n        var shift = 0;\n        if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Center) {\n            result.bounds.x = startPosition + (maximumWidth - lineWidth) / 2;\n            result.bounds.width = lineWidth;\n        }\n        else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Right) {\n            result.bounds.x = startPosition + (maximumWidth - lineWidth);\n            result.bounds.width = lineWidth;\n        }\n        else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Justify) {\n            result.bounds.x = startPosition;\n            result.bounds.width = maximumWidth;\n        }\n        else {\n            result.bounds.width = startPosition;\n            result.bounds.width = lineWidth;\n        }\n        return result;\n    };\n    return PdfTextElement;\n}(PdfLayoutElement));\nexport { PdfTextElement };\n", "import { PdfColor } from './../graphics/pdf-color';\nimport { RectangleF, PointF } from './../drawing/pdf-drawing';\nimport { PdfDictionary, SaveAnnotationEventHandler } from './../primitives/pdf-dictionary';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfString } from './../primitives/pdf-string';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfSolidBrush } from './../graphics/brushes/pdf-solid-brush';\nimport { PdfStandardFont } from './../graphics/fonts/pdf-standard-font';\nimport { PdfFontFamily } from './../graphics/fonts/enum';\nimport { PdfStringFormat } from './../graphics/fonts/pdf-string-format';\nimport { PdfTextAlignment } from './../graphics/enum';\n/**\n * `PdfAnnotation` class represents the base class for annotation objects.\n * @private\n */\nvar PdfAnnotation = /** @class */ (function () {\n    function PdfAnnotation(arg1) {\n        // Fields\n        /**\n         * Specifies the Internal variable to store fields of `PdfDictionaryProperties`.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * `Color` of the annotation\n         * @private\n         */\n        this.pdfColor = new PdfColor(255, 255, 255);\n        /**\n         * `Bounds` of the annotation.\n         * @private\n         */\n        this.rectangle = new RectangleF(0, 0, 0, 0);\n        /**\n         * Parent `page` of the annotation.\n         * @private\n         */\n        this.pdfPage = null;\n        /**\n         * `Brush of the text` of the annotation.\n         * @default new PdfSolidBrush(new PdfColor(0, 0, 0))\n         * @private\n         */\n        this.textBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n        /**\n         * `Font of the text` of the annotation.\n         * @default new PdfStandardFont(PdfFontFamily.TimesRoman, 10)\n         * @private\n         */\n        this.textFont = new PdfStandardFont(PdfFontFamily.TimesRoman, 10);\n        /**\n         * `StringFormat of the text` of the annotation.\n         * @default new PdfStringFormat(PdfTextAlignment.Left)\n         * @private\n         */\n        this.format = new PdfStringFormat(PdfTextAlignment.Left);\n        /**\n         * `Text` of the annotation.\n         * @private\n         */\n        this.content = '';\n        /**\n         * Internal variable to store `dictionary`.\n         * @private\n         */\n        this.pdfDictionary = new PdfDictionary();\n        /**\n         * To specifying the `Inner color` with which to fill the annotation\n         * @private\n         */\n        this.internalColor = new PdfColor();\n        /**\n         * `opacity or darkness` of the annotation.\n         * @private\n         * @default 1.0\n         */\n        this.darkness = 1.0;\n        if (typeof arg1 === 'undefined') {\n            this.initialize();\n        }\n        else {\n            this.initialize();\n            this.bounds = arg1;\n        }\n    }\n    Object.defineProperty(PdfAnnotation.prototype, \"color\", {\n        // Properties\n        /**\n         * `Color` of the annotation\n         * @private\n         */\n        get: function () {\n            return this.pdfColor;\n        },\n        set: function (value) {\n            this.pdfColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"innerColor\", {\n        /**\n         * To specifying the `Inner color` with which to fill the annotation\n         * @private\n         */\n        get: function () {\n            return this.internalColor;\n        },\n        set: function (value) {\n            this.internalColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"bounds\", {\n        /**\n         * `bounds` of the annotation.\n         * @private\n         */\n        get: function () {\n            return this.rectangle;\n        },\n        set: function (value) {\n            this.rectangle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"page\", {\n        /**\n         * Parent `page` of the annotation.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"font\", {\n        /**\n         * To specifying the `Font of the text` in the annotation.\n         * @private\n         */\n        get: function () {\n            return this.textFont;\n        },\n        set: function (value) {\n            this.textFont = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"stringFormat\", {\n        /**\n         * To specifying the `StringFormat of the text` in the annotation.\n         * @private\n         */\n        get: function () {\n            return this.format;\n        },\n        set: function (value) {\n            this.format = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"brush\", {\n        /**\n         * To specifying the `Brush of the text` in the annotation.\n         * @private\n         */\n        get: function () {\n            return this.textBrush;\n        },\n        set: function (value) {\n            this.textBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"text\", {\n        /**\n         * `Text` of the annotation.\n         * @private\n         */\n        get: function () {\n            return this.content;\n        },\n        set: function (value) {\n            this.content = value;\n            this.dictionary.items.setValue(this.dictionaryProperties.contents, new PdfString(this.content));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"dictionary\", {\n        /**\n         * Internal variable to store `dictionary`.\n         * @hidden\n         */\n        get: function () {\n            return this.pdfDictionary;\n        },\n        set: function (value) {\n            this.pdfDictionary = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Initialize` the annotation event handler and specifies the type of the annotation.\n     * @private\n     */\n    PdfAnnotation.prototype.initialize = function () {\n        this.pdfDictionary.annotationBeginSave = new SaveAnnotationEventHandler(this);\n        this.pdfDictionary.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.annot));\n    };\n    /**\n     * Sets related `page` of the annotation.\n     * @private\n     */\n    PdfAnnotation.prototype.setPage = function (page) {\n        this.pdfPage = page;\n        this.pdfDictionary.items.setValue(this.dictionaryProperties.p, new PdfReferenceHolder(this.pdfPage));\n    };\n    /**\n     * Handles the `BeginSave` event of the Dictionary.\n     * @private\n     */\n    PdfAnnotation.prototype.beginSave = function () {\n        this.save();\n    };\n    /**\n     * `Saves` an annotation.\n     * @private\n     */\n    /* tslint:disable */\n    PdfAnnotation.prototype.save = function () {\n        var nativeRectangle = new RectangleF(this.rectangle.x, this.rectangle.y, this.rectangle.width, this.rectangle.height);\n        var section = this.pdfPage.section;\n        var initialHeight = nativeRectangle.height;\n        var tempLoacation = section.pointToNativePdf(this.page, new PointF(nativeRectangle.x, nativeRectangle.y));\n        nativeRectangle.x = tempLoacation.x;\n        nativeRectangle.width = tempLoacation.x + nativeRectangle.width;\n        nativeRectangle.y = (tempLoacation.y - this.page.document.pageSettings.margins.top);\n        nativeRectangle.height = nativeRectangle.y - initialHeight;\n        this.pdfDictionary.items.setValue(this.dictionaryProperties.rect, PdfArray.fromRectangle(nativeRectangle));\n        this.dictionary.items.setValue(this.dictionaryProperties.ca, new PdfNumber(this.darkness));\n    };\n    Object.defineProperty(PdfAnnotation.prototype, \"element\", {\n        /* tslint:enable */\n        // IPdfWrapper Members\n        /**\n         * Gets the `element`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAnnotation;\n}());\nexport { PdfAnnotation };\n", "var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfAnnotation } from './annotation';\nimport { PdfName } from './../primitives/pdf-name';\n/**\n * `PdfLinkAnnotation` class represents the ink annotation class.\n * @private\n */\nvar PdfLinkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfLinkAnnotation, _super);\n    function PdfLinkAnnotation(rectangle) {\n        return _super.call(this, rectangle) || this;\n    }\n    // Implementation\n    /**\n     * `Initializes` annotation object.\n     * @private\n     */\n    PdfLinkAnnotation.prototype.initialize = function () {\n        _super.prototype.initialize.call(this);\n        this.dictionary.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.link));\n    };\n    return PdfLinkAnnotation;\n}(PdfAnnotation));\nexport { PdfLinkAnnotation };\n", "var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfLinkAnnotation } from './link-annotation';\n/**\n * Represents base class for `link annotations` with associated action.\n * @private\n */\nvar PdfActionLinkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfActionLinkAnnotation, _super);\n    // Constructors\n    /**\n     * Specifies the constructor for `ActionLinkAnnotation`.\n     * @private\n     */\n    function PdfActionLinkAnnotation(rectangle) {\n        var _this = _super.call(this, rectangle) || this;\n        // Fields\n        /**\n         * Internal variable to store annotation's `action`.\n         * @default null\n         * @private\n         */\n        _this.pdfAction = null;\n        return _this;\n    }\n    //Public method\n    /**\n     * get and set the `action`.\n     * @hidden\n     */\n    PdfActionLinkAnnotation.prototype.getSetAction = function (value) {\n        if (typeof value === 'undefined') {\n            return this.pdfAction;\n        }\n        else {\n            this.pdfAction = value;\n        }\n    };\n    return PdfActionLinkAnnotation;\n}(PdfLinkAnnotation));\nexport { PdfActionLinkAnnotation };\n", "import { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfName } from './../primitives/pdf-name';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\n/**\n * `PdfAction` class represents base class for all action types.\n * @private\n */\nvar PdfAction = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initialize instance for `Action` class.\n     * @private\n     */\n    function PdfAction() {\n        /**\n         * Specifies the Next `action` to perform.\n         * @private\n         */\n        this.action = null;\n        /**\n         * Specifies the Internal variable to store `dictionary properties`.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        // super(); -> Object()\n        this.initialize();\n    }\n    Object.defineProperty(PdfAction.prototype, \"next\", {\n        // Properties\n        /**\n         * Gets and Sets the `Next` action to perform.\n         * @private\n         */\n        get: function () {\n            return this.action;\n        },\n        set: function (value) {\n            // if (this.action !== value) {\n            this.action = value;\n            this.dictionary.items.setValue(this.dictionaryProperties.next, new PdfReferenceHolder(this.action));\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAction.prototype, \"dictionary\", {\n        /**\n         * Gets and Sets the instance of PdfDictionary class for `Dictionary`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.pdfDictionary === 'undefined') {\n                this.pdfDictionary = new PdfDictionary();\n            }\n            return this.pdfDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Initialize` the action type.\n     * @private\n     */\n    PdfAction.prototype.initialize = function () {\n        this.dictionary.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.action));\n    };\n    Object.defineProperty(PdfAction.prototype, \"element\", {\n        // IPdfWrapper Members\n        /**\n         * Gets the `Element` as IPdfPrimitive class.\n         * @private\n         */\n        get: function () {\n            return this.dictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAction;\n}());\nexport { PdfAction };\n", "var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfAction } from './action';\nimport { PdfString } from './../primitives/pdf-string';\nimport { PdfName } from './../primitives/pdf-name';\n/**\n * `PdfUriAction` class for initialize the uri related internals.\n * @private\n */\nvar PdfUriAction = /** @class */ (function (_super) {\n    __extends(PdfUriAction, _super);\n    function PdfUriAction(uri) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Specifies the `uri` string.\n         * @default ''.\n         * @private\n         */\n        _this.uniformResourceIdentifier = '';\n        return _this;\n    }\n    Object.defineProperty(PdfUriAction.prototype, \"uri\", {\n        // Properties\n        /**\n         * Gets and Sets the value of `Uri`.\n         * @private\n         */\n        get: function () {\n            return this.uniformResourceIdentifier;\n        },\n        set: function (value) {\n            this.uniformResourceIdentifier = value;\n            this.dictionary.items.setValue(this.dictionaryProperties.uri, new PdfString(this.uniformResourceIdentifier));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Initialize` the internals.\n     * @private\n     */\n    PdfUriAction.prototype.initialize = function () {\n        _super.prototype.initialize.call(this);\n        this.dictionary.items.setValue(this.dictionaryProperties.s, new PdfName(this.dictionaryProperties.uri));\n    };\n    return PdfUriAction;\n}(PdfAction));\nexport { PdfUriAction };\n", "var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfActionLinkAnnotation } from './action-link-annotation';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfUriAction } from './../actions/uri-action';\n/**\n * `PdfUriAnnotation` class represents the Uri annotation.\n * @private\n */\nvar PdfUriAnnotation = /** @class */ (function (_super) {\n    __extends(PdfUriAnnotation, _super);\n    function PdfUriAnnotation(rectangle, uri) {\n        var _this = _super.call(this, rectangle) || this;\n        if (typeof uri !== 'undefined') {\n            _this.uri = uri;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfUriAnnotation.prototype, \"uriAction\", {\n        /**\n         * Get `action` of the annotation.\n         * @private\n         */\n        get: function () {\n            if (typeof this.pdfUriAction === 'undefined') {\n                this.pdfUriAction = new PdfUriAction();\n            }\n            return this.pdfUriAction;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfUriAnnotation.prototype, \"uri\", {\n        // Properties\n        /**\n         * Gets or sets the `Uri` address.\n         * @private\n         */\n        get: function () {\n            return this.uriAction.uri;\n        },\n        set: function (value) {\n            if (this.uriAction.uri !== value) {\n                this.uriAction.uri = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfUriAnnotation.prototype, \"action\", {\n        /**\n         * Gets or sets the `action`.\n         * @private\n         */\n        get: function () {\n            return this.getSetAction();\n        },\n        set: function (value) {\n            this.getSetAction(value);\n            this.uriAction.next = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Initializes` annotation object.\n     * @private\n     */\n    PdfUriAnnotation.prototype.initialize = function () {\n        _super.prototype.initialize.call(this);\n        this.dictionary.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.link));\n        var tempPrimitive = this.uriAction.element;\n        this.dictionary.items.setValue(this.dictionaryProperties.a, this.uriAction.element);\n    };\n    return PdfUriAnnotation;\n}(PdfActionLinkAnnotation));\nexport { PdfUriAnnotation };\n", "var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfPage } from './../pages/pdf-page';\nimport { PointF, RectangleF, SizeF } from './../drawing/pdf-drawing';\nimport { PdfTextElement } from './../graphics/figures/text-element';\nimport { PdfUriAnnotation } from './uri-annotation';\nimport { PdfStringLayouter } from './../graphics/fonts/string-layouter';\nimport { PdfFontStyle } from './../graphics/fonts/enum';\nimport { PdfTextAlignment } from './../graphics/enum';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfNumber } from './../primitives/pdf-number';\n/**\n * `PdfTextWebLink` class represents the class for text web link annotation.\n * ```typescript\n * // create a new PDF document.\n * let document : PdfDocument = new PdfDocument();\n * // add a page to the document.\n * let page1 : PdfPage = document.pages.add();\n * // create the font\n * let font : PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 12);\n * //\n * // create the Text Web Link\n * let textLink : PdfTextWebLink = new PdfTextWebLink();\n * // set the hyperlink\n * textLink.url = 'http://www.google.com';\n * // set the link text\n * textLink.text = 'Google';\n * // set the font\n * textLink.font = font;\n * // draw the hyperlink in PDF page\n * textLink.draw(page1, new PointF(10, 40));\n * //\n * // save the document.\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfTextWebLink = /** @class */ (function (_super) {\n    __extends(PdfTextWebLink, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `PdfTextWebLink` class.\n     * @private\n     */\n    function PdfTextWebLink() {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Internal variable to store `Url`.\n         * @default ''\n         * @private\n         */\n        _this.uniformResourceLocator = '';\n        /**\n         * Internal variable to store `Uri Annotation` object.\n         * @default null\n         * @private\n         */\n        _this.uriAnnotation = null;\n        /**\n         * Checks whether the drawTextWebLink method with `PointF` overload is called or not.\n         * If it set as true, then the start position of each lines excluding firest line is changed as (0, Y).\n         * @private\n         * @hidden\n         */\n        _this.recalculateBounds = false;\n        _this.defaultBorder = new PdfArray();\n        for (var i = 0; i < 3; i++) {\n            _this.defaultBorder.add(new PdfNumber(0));\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfTextWebLink.prototype, \"url\", {\n        // Properties\n        /**\n         * Gets or sets the `Uri address`.\n         * ```typescript\n         * // create a new PDF document.\n         * let document : PdfDocument = new PdfDocument();\n         * // add a page to the document.\n         * let page1 : PdfPage = document.pages.add();\n         * // create the font\n         * let font : PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 12);\n         * // create the Text Web Link\n         * let textLink : PdfTextWebLink = new PdfTextWebLink();\n         * //\n         * // set the hyperlink\n         * textLink.url = 'http://www.google.com';\n         * //\n         * // set the link text\n         * textLink.text = 'Google';\n         * // set the font\n         * textLink.font = font;\n         * // draw the hyperlink in PDF page\n         * textLink.draw(page1, new PointF(10, 40));\n         * // save the document.\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.uniformResourceLocator;\n        },\n        set: function (value) {\n            if (value.length === 0) {\n                throw new Error('ArgumentException : Url - string can not be empty');\n            }\n            this.uniformResourceLocator = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfTextWebLink.prototype.draw = function (arg1, arg2) {\n        if (arg1 instanceof PdfPage) {\n            var layout = new PdfStringLayouter();\n            var previousFontStyle = this.font.style;\n            if (arg2 instanceof PointF) {\n                this.recalculateBounds = true;\n                this.font.style = PdfFontStyle.Underline;\n                var layoutResult = layout.layout(this.value, this.font, this.stringFormat, new SizeF((arg1.graphics.clientSize.width - arg2.x), 0), true, arg1.graphics.clientSize);\n                if (layoutResult.lines.length === 1) {\n                    var textSize = this.font.measureString(this.value);\n                    var rect = new RectangleF(arg2, textSize);\n                    rect = this.calculateBounds(rect, textSize.width, arg1.graphics.clientSize.width, arg2.x);\n                    this.uriAnnotation = new PdfUriAnnotation(rect, this.url);\n                    this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);\n                    arg1.annotations.add(this.uriAnnotation);\n                    var result = this.drawText(arg1, arg2);\n                    this.font.style = previousFontStyle;\n                    return result;\n                }\n                else {\n                    var result = this.drawMultipleLineWithPoint(layoutResult, arg1, arg2);\n                    this.font.style = previousFontStyle;\n                    return result;\n                }\n            }\n            else {\n                var layoutResult = layout.layout(this.value, this.font, this.stringFormat, new SizeF(arg2.width, 0), false, new SizeF(0, 0));\n                this.font.style = PdfFontStyle.Underline;\n                if (layoutResult.lines.length === 1) {\n                    var textSize = this.font.measureString(this.value);\n                    var rect = new RectangleF(new PointF(arg2.x, arg2.y), textSize);\n                    rect = this.calculateBounds(rect, textSize.width, arg2.width, arg2.x);\n                    this.uriAnnotation = new PdfUriAnnotation(rect, this.url);\n                    this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);\n                    arg1.annotations.add(this.uriAnnotation);\n                    var returnValue = this.drawText(arg1, arg2);\n                    this.font.style = previousFontStyle;\n                    return returnValue;\n                }\n                else {\n                    var returnValue = this.drawMultipleLineWithBounds(layoutResult, arg1, arg2);\n                    this.font.style = previousFontStyle;\n                    return returnValue;\n                }\n            }\n        }\n        else {\n            var page = new PdfPage();\n            page = arg1.page;\n            return this.draw(page, arg2);\n        }\n    };\n    /* tslint:enable */\n    //Private methods\n    /**\n     * Helper method `Draw` a Multiple Line Text Web Link on the Graphics with the specified location.\n     * @private\n     */\n    PdfTextWebLink.prototype.drawMultipleLineWithPoint = function (result, page, location) {\n        var layoutResult;\n        for (var i = 0; i < result.layoutLines.length; i++) {\n            var size = this.font.measureString(result.lines[i].text);\n            var bounds = new RectangleF(location, size);\n            if (i !== 0) {\n                bounds.x = 0;\n            }\n            this.text = result.lines[i].text;\n            if (bounds.y + size.height > page.graphics.clientSize.height) {\n                if (i !== 0) {\n                    page = page.graphics.getNextPage();\n                    bounds = new RectangleF(0, 0, page.graphics.clientSize.width, size.height);\n                    location.y = 0;\n                }\n                else {\n                    break;\n                }\n            }\n            bounds = this.calculateBounds(bounds, size.width, page.graphics.clientSize.width, bounds.x);\n            this.uriAnnotation = new PdfUriAnnotation(bounds, this.url);\n            this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);\n            page.annotations.add(this.uriAnnotation);\n            if (i !== 0) {\n                layoutResult = this.drawText(page, new PointF(0, bounds.y));\n            }\n            else {\n                layoutResult = this.drawText(page, bounds.x, bounds.y);\n            }\n            location.y += size.height;\n        }\n        return layoutResult;\n    };\n    /**\n     * Helper method `Draw` a Multiple Line Text Web Link on the Graphics with the specified bounds.\n     * @private\n     */\n    PdfTextWebLink.prototype.drawMultipleLineWithBounds = function (result, page, bounds) {\n        var layoutResult;\n        for (var i = 0; i < result.layoutLines.length; i++) {\n            var size = this.font.measureString(result.lines[i].text);\n            var internalBounds = new RectangleF(new PointF(bounds.x, bounds.y), size);\n            internalBounds = this.calculateBounds(internalBounds, size.width, bounds.width, bounds.x);\n            this.text = result.lines[i].text;\n            if (bounds.y + size.height > page.graphics.clientSize.height) {\n                if (i !== 0) {\n                    page = page.graphics.getNextPage();\n                    bounds = new RectangleF(bounds.x, 0, bounds.width, size.height);\n                    internalBounds.y = 0;\n                }\n                else {\n                    break;\n                }\n            }\n            this.uriAnnotation = new PdfUriAnnotation(internalBounds, this.url);\n            this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);\n            page.annotations.add(this.uriAnnotation);\n            layoutResult = this.drawText(page, bounds);\n            bounds.y += size.height;\n        }\n        return layoutResult;\n    };\n    /* tslint:disable */\n    PdfTextWebLink.prototype.calculateBounds = function (currentBounds, lineWidth, maximumWidth, startPosition) {\n        var shift = 0;\n        if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Center) {\n            currentBounds.x = startPosition + (maximumWidth - lineWidth) / 2;\n            currentBounds.width = lineWidth;\n        }\n        else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Right) {\n            currentBounds.x = startPosition + (maximumWidth - lineWidth);\n            currentBounds.width = lineWidth;\n        }\n        else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Justify) {\n            currentBounds.x = startPosition;\n            currentBounds.width = maximumWidth;\n        }\n        else {\n            currentBounds.width = startPosition;\n            currentBounds.width = lineWidth;\n        }\n        return currentBounds;\n    };\n    return PdfTextWebLink;\n}(PdfTextElement));\nexport { PdfTextWebLink };\n", "/**\n * PdfNumbersConvertor.ts class for EJ2-PDF\n * @private\n */\nimport { PdfNumberStyle } from './../../pages/enum';\n/**\n * `PdfNumbersConvertor` for convert page number into numbers, roman letters, etc.,\n * @private\n */\nvar PdfNumbersConvertor = /** @class */ (function () {\n    function PdfNumbersConvertor() {\n    }\n    // Static methods\n    /**\n     * Convert string value from page number with correct format.\n     * @private\n     */\n    PdfNumbersConvertor.convert = function (intArabic, numberStyle) {\n        var result = '';\n        switch (numberStyle) {\n            case PdfNumberStyle.None:\n                result = '';\n                break;\n            case PdfNumberStyle.Numeric:\n                result = intArabic.toString();\n                break;\n            case PdfNumberStyle.LowerLatin:\n                result = this.arabicToLetter(intArabic).toLowerCase();\n                break;\n            case PdfNumberStyle.LowerRoman:\n                result = this.arabicToRoman(intArabic).toLowerCase();\n                break;\n            case PdfNumberStyle.UpperLatin:\n                result = this.arabicToLetter(intArabic);\n                break;\n            case PdfNumberStyle.UpperRoman:\n                result = this.arabicToRoman(intArabic);\n                break;\n        }\n        return result;\n    };\n    /**\n     * Converts `arabic to roman` letters.\n     * @private\n     */\n    PdfNumbersConvertor.arabicToRoman = function (intArabic) {\n        var retval = '';\n        var retvalM = this.generateNumber(intArabic, 1000, 'M');\n        retval += retvalM.returnValue;\n        intArabic = retvalM.intArabic;\n        var retvalCM = this.generateNumber(intArabic, 900, 'CM');\n        retval += retvalCM.returnValue;\n        intArabic = retvalCM.intArabic;\n        var retvalD = this.generateNumber(intArabic, 500, 'D');\n        retval += retvalD.returnValue;\n        intArabic = retvalD.intArabic;\n        var retvalCD = this.generateNumber(intArabic, 400, 'CD');\n        retval += retvalCD.returnValue;\n        intArabic = retvalCD.intArabic;\n        var retvalC = this.generateNumber(intArabic, 100, 'C');\n        retval += retvalC.returnValue;\n        intArabic = retvalC.intArabic;\n        var retvalXC = this.generateNumber(intArabic, 90, 'XC');\n        retval += retvalXC.returnValue;\n        intArabic = retvalXC.intArabic;\n        var retvalL = this.generateNumber(intArabic, 50, 'L');\n        retval += retvalL.returnValue;\n        intArabic = retvalL.intArabic;\n        var retvalXL = this.generateNumber(intArabic, 40, 'XL');\n        retval += retvalXL.returnValue;\n        intArabic = retvalXL.intArabic;\n        var retvalX = this.generateNumber(intArabic, 10, 'X');\n        retval += retvalX.returnValue;\n        intArabic = retvalX.intArabic;\n        var retvalIX = this.generateNumber(intArabic, 9, 'IX');\n        retval += retvalIX.returnValue;\n        intArabic = retvalIX.intArabic;\n        var retvalV = this.generateNumber(intArabic, 5, 'V');\n        retval += retvalV.returnValue;\n        intArabic = retvalV.intArabic;\n        var retvalIV = this.generateNumber(intArabic, 4, 'IV');\n        retval += retvalIV.returnValue;\n        intArabic = retvalIV.intArabic;\n        var retvalI = this.generateNumber(intArabic, 1, 'I');\n        retval += retvalI.returnValue;\n        intArabic = retvalI.intArabic;\n        return retval.toString();\n    };\n    /**\n     * Converts `arabic to normal letters`.\n     * @private\n     */\n    PdfNumbersConvertor.arabicToLetter = function (arabic) {\n        var stack = this.convertToLetter(arabic);\n        var result = '';\n        while (stack.length > 0) {\n            var num = stack.pop();\n            result = this.appendChar(result, num);\n        }\n        return result.toString();\n    };\n    /**\n     * Generate a string value of an input number.\n     * @private\n     */\n    PdfNumbersConvertor.generateNumber = function (value, magnitude, letter) {\n        var numberstring = '';\n        while (value >= magnitude) {\n            value -= magnitude;\n            numberstring += letter;\n        }\n        return { returnValue: numberstring.toString(), intArabic: value };\n    };\n    /**\n     * Convert a input number into letters.\n     * @private\n     */\n    PdfNumbersConvertor.convertToLetter = function (arabic) {\n        if (arabic <= 0) {\n            throw Error('ArgumentOutOfRangeException-arabic, Value can not be less 0');\n        }\n        var stack = [];\n        while (arabic > this.letterLimit) {\n            var remainder = arabic % this.letterLimit;\n            if (remainder === 0.0) {\n                arabic = arabic / this.letterLimit - 1;\n                remainder = this.letterLimit;\n            }\n            else {\n                arabic /= this.letterLimit;\n            }\n            stack.push(remainder);\n        }\n        stack.push(arabic);\n        return stack;\n    };\n    /**\n     * Convert number to actual string value.\n     * @private\n     */\n    PdfNumbersConvertor.appendChar = function (builder, value) {\n        var letter = String.fromCharCode(PdfNumbersConvertor.acsiiStartIndex + value);\n        builder += letter;\n        return builder;\n    };\n    // Fields\n    /**\n     * numbers of letters in english [readonly].\n     * @default = 26.0\n     * @private\n     */\n    PdfNumbersConvertor.letterLimit = 26.0;\n    /**\n     * Resturns `acsii start index` value.\n     * @default 64\n     * @private\n     */\n    PdfNumbersConvertor.acsiiStartIndex = (65 - 1);\n    return PdfNumbersConvertor;\n}());\nexport { PdfNumbersConvertor };\n", "/**\n * Represent class to store information about `template and value pairs`.\n * @private\n */\nvar PdfTemplateValuePair = /** @class */ (function () {\n    function PdfTemplateValuePair(template, value) {\n        // Fields\n        /**\n         * Internal variable to store template.\n         * @default null\n         * @private\n         */\n        this.pdfTemplate = null;\n        /**\n         * Intenal variable to store value.\n         * @private\n         */\n        this.content = '';\n        if (typeof template === 'undefined') {\n            //\n        }\n        else {\n            this.template = template;\n            this.value = value;\n        }\n    }\n    Object.defineProperty(PdfTemplateValuePair.prototype, \"template\", {\n        // Properties\n        /**\n         * Gets or sets the template.\n         * @private\n         */\n        get: function () {\n            return this.pdfTemplate;\n        },\n        set: function (value) {\n            this.pdfTemplate = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTemplateValuePair.prototype, \"value\", {\n        /**\n         * Gets or sets the value.\n         * @private\n         */\n        get: function () {\n            return this.content;\n        },\n        set: function (value) {\n            this.content = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfTemplateValuePair;\n}());\nexport { PdfTemplateValuePair };\n", "var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfAutomaticField.ts class for EJ2-PDF\n */\nimport { PdfAutomaticField } from './automatic-field';\nimport { TemporaryDictionary } from './../../collections/object-object-pair/dictionary';\nimport { PdfTemplateValuePair } from './pdf-template-value-pair';\nimport { SizeF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfTemplate } from './../../graphics/figures/pdf-template';\n/**\n * Represents automatic field which has the same value within the `PdfGraphics`.\n */\nvar PdfMultipleValueField = /** @class */ (function (_super) {\n    __extends(PdfMultipleValueField, _super);\n    function PdfMultipleValueField() {\n        var _this = _super.call(this) || this;\n        //  Fields\n        /**\n         * Stores the instance of dictionary values of `graphics and template value pair`.\n         * @private\n         */\n        _this.list = new TemporaryDictionary();\n        return _this;\n    }\n    // Implementation\n    /* tslint:disable */\n    PdfMultipleValueField.prototype.performDraw = function (graphics, location, scalingX, scalingY) {\n        _super.prototype.performDrawHelper.call(this, graphics, location, scalingX, scalingY);\n        var value = this.getValue(graphics);\n        var template = new PdfTemplate(this.getSize());\n        this.list.setValue(graphics, new PdfTemplateValuePair(template, value));\n        var g = template.graphics;\n        var size = this.getSize();\n        template.graphics.drawString(value, this.getFont(), this.pen, this.getBrush(), 0, 0, size.width, size.height, this.stringFormat);\n        var drawLocation = new PointF(location.x + this.location.x, location.y + this.location.y);\n        graphics.drawPdfTemplate(template, drawLocation, new SizeF(template.width * scalingX, template.height * scalingY));\n    };\n    return PdfMultipleValueField;\n}(PdfAutomaticField));\nexport { PdfMultipleValueField };\n", "var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfBrush } from './../../graphics/brushes/pdf-brush';\nimport { PdfNumberStyle } from './../../pages/enum';\nimport { PdfNumbersConvertor } from './pdf-numbers-convertor';\nimport { PdfMultipleValueField } from './multiple-value-field';\n/**\n * Represents PDF document `page number field`.\n * @public\n */\nvar PdfPageNumberField = /** @class */ (function (_super) {\n    __extends(PdfPageNumberField, _super);\n    function PdfPageNumberField(font, arg2) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Stores the number style of the page number field.\n         * @private\n         */\n        _this.internalNumberStyle = PdfNumberStyle.Numeric;\n        if (typeof arg2 === 'undefined') {\n            _this.font = font;\n        }\n        else if (arg2 instanceof PdfBrush) {\n            _this.font = font;\n            _this.brush = arg2;\n        }\n        else {\n            _this.font = font;\n            _this.bounds = arg2;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfPageNumberField.prototype, \"numberStyle\", {\n        // Properties\n        /**\n         * Gets and sets the number style of the page number field.\n         * @private\n         */\n        get: function () {\n            return this.internalNumberStyle;\n        },\n        set: function (value) {\n            this.internalNumberStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Return the `string` value of page number field.\n     * @public\n     */\n    PdfPageNumberField.prototype.getValue = function (graphics) {\n        var result = null;\n        var page = this.getPageFromGraphics(graphics);\n        result = this.internalGetValue(page);\n        return result;\n    };\n    /**\n     * Internal method to `get actual value of page number`.\n     * @private\n     */\n    PdfPageNumberField.prototype.internalGetValue = function (page) {\n        var document = page.document;\n        var pageIndex = document.pages.indexOf(page) + 1;\n        return PdfNumbersConvertor.convert(pageIndex, this.numberStyle);\n    };\n    return PdfPageNumberField;\n}(PdfMultipleValueField));\nexport { PdfPageNumberField };\n", "var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfCompositeField.ts class for EJ2-PDF\n */\nimport { PdfMultipleValueField } from './multiple-value-field';\n/**\n * Represents class which can concatenate multiple automatic fields into single string.\n */\nvar PdfCompositeField = /** @class */ (function (_super) {\n    __extends(PdfCompositeField, _super);\n    // Constructor\n    /**\n     * Initialize a new instance of `PdfCompositeField` class.\n     * @param font Font of the field.\n     * @param brush Color of the field.\n     * @param text Content of the field.\n     * @param list List of the automatic fields in specific order based on the text content.\n     */\n    function PdfCompositeField(font, brush, text) {\n        var list = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            list[_i - 3] = arguments[_i];\n        }\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Stores the array of automatic fields.\n         * @private\n         */\n        _this.internalAutomaticFields = null;\n        /**\n         * Stores the text value of the field.\n         * @private\n         */\n        _this.internalText = '';\n        _this.font = font;\n        _this.brush = brush;\n        _this.text = text;\n        _this.automaticFields = list;\n        return _this;\n    }\n    Object.defineProperty(PdfCompositeField.prototype, \"text\", {\n        // Properties\n        /**\n         * Gets and sets the content of the field.\n         * @public\n         */\n        get: function () {\n            return this.internalText;\n        },\n        set: function (value) {\n            this.internalText = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCompositeField.prototype, \"automaticFields\", {\n        /**\n         * Gets and sets the list of the field to drawn.\n         * @public\n         */\n        get: function () {\n            return this.internalAutomaticFields;\n        },\n        set: function (value) {\n            this.internalAutomaticFields = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Return the actual value generated from the list of automatic fields.\n     * @public\n     */\n    PdfCompositeField.prototype.getValue = function (graphics) {\n        var values = [];\n        var text = this.text.toString();\n        if (typeof this.automaticFields !== 'undefined' && this.automaticFields != null && this.automaticFields.length > 0) {\n            for (var i = 0; i < this.automaticFields.length; i++) {\n                var automaticField = this.automaticFields[i];\n                text = text.replace('{' + i + '}', automaticField.getValue(graphics));\n            }\n        }\n        return text;\n    };\n    return PdfCompositeField;\n}(PdfMultipleValueField));\nexport { PdfCompositeField };\n", "var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfSingleValueField.ts class for EJ2-PDF\n */\nimport { PdfAutomaticField } from './automatic-field';\nimport { TemporaryDictionary } from './../../collections/object-object-pair/dictionary';\nimport { PdfTemplateValuePair } from './pdf-template-value-pair';\nimport { PointF, SizeF } from './../../drawing/pdf-drawing';\nimport { PdfTemplate } from './../../graphics/figures/pdf-template';\n/**\n * Represents automatic field which has the same value in the whole document.\n */\nvar PdfSingleValueField = /** @class */ (function (_super) {\n    __extends(PdfSingleValueField, _super);\n    // Constructors\n    function PdfSingleValueField() {\n        var _this = _super.call(this) || this;\n        // Fields\n        /* tslint:disable */\n        _this.list = new TemporaryDictionary();\n        /* tslint:enable */\n        _this.painterGraphics = [];\n        return _this;\n    }\n    PdfSingleValueField.prototype.performDraw = function (graphics, location, scalingX, scalingY) {\n        _super.prototype.performDrawHelper.call(this, graphics, location, scalingX, scalingY);\n        var page = this.getPageFromGraphics(graphics);\n        var document = page.document;\n        var textValue = this.getValue(graphics);\n        /* tslint:disable */\n        if (this.list.containsKey(document)) {\n            var pair = this.list.getValue(document);\n            var drawLocation = new PointF(location.x + this.location.x, location.y + this.location.y);\n            graphics.drawPdfTemplate(pair.template, drawLocation, new SizeF(pair.template.width * scalingX, pair.template.height * scalingY));\n            this.painterGraphics.push(graphics);\n        }\n        else {\n            var size = this.getSize();\n            var template = new PdfTemplate(size);\n            this.list.setValue(document, new PdfTemplateValuePair(template, textValue));\n            template.graphics.drawString(textValue, this.getFont(), this.pen, this.getBrush(), 0, 0, size.width, size.height, this.stringFormat);\n            var drawLocation = new PointF(location.x + this.location.x, location.y + this.location.y);\n            graphics.drawPdfTemplate(template, drawLocation, new SizeF(template.width * scalingX, template.height * scalingY));\n            this.painterGraphics.push(graphics);\n        }\n        /* tslint:enable */\n    };\n    return PdfSingleValueField;\n}(PdfAutomaticField));\nexport { PdfSingleValueField };\n", "var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfPageCountField.ts class for EJ2-PDF\n */\nimport { PdfSingleValueField } from './single-value-field';\nimport { PdfNumberStyle } from './../../pages/enum';\nimport { PdfBrush } from './../../graphics/brushes/pdf-brush';\nimport { PdfNumbersConvertor } from './pdf-numbers-convertor';\n/**\n * Represents total PDF document page count automatic field.\n */\nvar PdfPageCountField = /** @class */ (function (_super) {\n    __extends(PdfPageCountField, _super);\n    function PdfPageCountField(font, arg2) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Stores the number style of the field.\n         * @private\n         */\n        _this.internalNumberStyle = PdfNumberStyle.Numeric;\n        if (typeof arg2 === 'undefined') {\n            _this.font = font;\n        }\n        else if (arg2 instanceof PdfBrush) {\n            _this.font = font;\n            _this.brush = arg2;\n        }\n        else {\n            _this.font = font;\n            _this.bounds = arg2;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfPageCountField.prototype, \"numberStyle\", {\n        // Properties\n        /**\n         * Gets and sets the number style of the field.\n         * @public\n         */\n        get: function () {\n            return this.internalNumberStyle;\n        },\n        set: function (value) {\n            this.internalNumberStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Return the actual value of the content to drawn.\n     * @public\n     */\n    PdfPageCountField.prototype.getValue = function (graphics) {\n        var result = null;\n        var page = this.getPageFromGraphics(graphics);\n        var document = page.section.parent.document;\n        var count = document.pages.count;\n        result = PdfNumbersConvertor.convert(count, this.numberStyle);\n        return result;\n    };\n    return PdfPageCountField;\n}(PdfSingleValueField));\nexport { PdfPageCountField };\n", "/**\n * public Enum for `PdfBorderOverlapStyle`.\n * @private\n */\nexport var PdfBorderOverlapStyle;\n(function (PdfBorderOverlapStyle) {\n    /**\n     * Specifies the type of `Overlap`.\n     * @private\n     */\n    PdfBorderOverlapStyle[PdfBorderOverlapStyle[\"Overlap\"] = 0] = \"Overlap\";\n    /**\n     * Specifies the type of `Inside`.\n     * @private\n     */\n    PdfBorderOverlapStyle[PdfBorderOverlapStyle[\"Inside\"] = 1] = \"Inside\";\n})(PdfBorderOverlapStyle || (PdfBorderOverlapStyle = {}));\n", "var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfBorders, PdfPaddings } from './pdf-borders';\nimport { PdfBorderOverlapStyle } from './../../tables/light-tables/enum';\n/**\n * Base class for the `grid style`,\n */\nvar PdfGridStyleBase = /** @class */ (function () {\n    function PdfGridStyleBase() {\n    }\n    Object.defineProperty(PdfGridStyleBase.prototype, \"backgroundBrush\", {\n        // Properties\n        /**\n         * Gets or sets the `background brush`.\n         * @private\n         */\n        get: function () {\n            return this.gridBackgroundBrush;\n        },\n        set: function (value) {\n            this.gridBackgroundBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyleBase.prototype, \"textBrush\", {\n        /**\n         * Gets or sets the `text brush`.\n         * @private\n         */\n        get: function () {\n            return this.gridTextBrush;\n        },\n        set: function (value) {\n            this.gridTextBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyleBase.prototype, \"textPen\", {\n        /**\n         * Gets or sets the `text pen`.\n         * @private\n         */\n        get: function () {\n            return this.gridTextPen;\n        },\n        set: function (value) {\n            this.gridTextPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyleBase.prototype, \"font\", {\n        /**\n         * Gets or sets the `font`.\n         * @private\n         */\n        get: function () {\n            return this.gridFont;\n        },\n        set: function (value) {\n            this.gridFont = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyleBase.prototype, \"backgroundImage\", {\n        /**\n         * Gets or sets the `background Image`.\n         * @private\n         */\n        get: function () {\n            return this.gridBackgroundImage;\n        },\n        set: function (value) {\n            this.gridBackgroundImage = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridStyleBase;\n}());\nexport { PdfGridStyleBase };\n/**\n * `PdfGridStyle` class provides customization of the appearance for the 'PdfGrid'.\n */\nvar PdfGridStyle = /** @class */ (function (_super) {\n    __extends(PdfGridStyle, _super);\n    //constructor\n    /**\n     * Initialize a new instance for `PdfGridStyle` class.\n     * @private\n     */\n    function PdfGridStyle() {\n        var _this = _super.call(this) || this;\n        _this.gridBorderOverlapStyle = PdfBorderOverlapStyle.Overlap;\n        _this.bAllowHorizontalOverflow = false;\n        _this.gridHorizontalOverflowType = PdfHorizontalOverflowType.LastPage;\n        return _this;\n    }\n    Object.defineProperty(PdfGridStyle.prototype, \"cellSpacing\", {\n        //Properties\n        /**\n         * Gets or sets the `cell spacing` of the 'PdfGrid'.\n         * @private\n         */\n        get: function () {\n            if (typeof this.gridCellSpacing === 'undefined') {\n                this.gridCellSpacing = 0;\n            }\n            return this.gridCellSpacing;\n        },\n        set: function (value) {\n            this.gridCellSpacing = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyle.prototype, \"horizontalOverflowType\", {\n        /**\n         * Gets or sets the type of the `horizontal overflow` of the 'PdfGrid'.\n         * @private\n         */\n        get: function () {\n            return this.gridHorizontalOverflowType;\n        },\n        set: function (value) {\n            this.gridHorizontalOverflowType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyle.prototype, \"allowHorizontalOverflow\", {\n        /**\n         * Gets or sets a value indicating whether to `allow horizontal overflow`.\n         * @private\n         */\n        get: function () {\n            return this.bAllowHorizontalOverflow;\n        },\n        set: function (value) {\n            this.bAllowHorizontalOverflow = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyle.prototype, \"cellPadding\", {\n        /**\n         * Gets or sets the `cell padding`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.gridCellPadding === 'undefined') {\n                this.gridCellPadding = new PdfPaddings();\n            }\n            return this.gridCellPadding;\n        },\n        set: function (value) {\n            if (typeof this.gridCellPadding === 'undefined') {\n                this.gridCellPadding = new PdfPaddings();\n                this.gridCellPadding = value;\n            }\n            else {\n                this.gridCellPadding = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyle.prototype, \"borderOverlapStyle\", {\n        /**\n         * Gets or sets the `border overlap style` of the 'PdfGrid'.\n         * @private\n         */\n        get: function () {\n            return this.gridBorderOverlapStyle;\n        },\n        set: function (value) {\n            this.gridBorderOverlapStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridStyle;\n}(PdfGridStyleBase));\nexport { PdfGridStyle };\n/**\n * `PdfGridCellStyle` class provides customization of the appearance for the 'PdfGridCell'.\n */\nvar PdfGridCellStyle = /** @class */ (function (_super) {\n    __extends(PdfGridCellStyle, _super);\n    /**\n     * Initializes a new instance of the `PdfGridCellStyle` class.\n     * @private\n     */\n    function PdfGridCellStyle() {\n        var _this = _super.call(this) || this;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.gridCellBorders = PdfBorders.default;\n        return _this;\n    }\n    Object.defineProperty(PdfGridCellStyle.prototype, \"stringFormat\", {\n        //Properties\n        /**\n         * Gets the `string format` of the 'PdfGridCell'.\n         * @private\n         */\n        get: function () {\n            return this.format;\n        },\n        set: function (value) {\n            this.format = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCellStyle.prototype, \"borders\", {\n        /**\n         * Gets or sets the `border` of the 'PdfGridCell'.\n         * @private\n         */\n        get: function () {\n            return this.gridCellBorders;\n        },\n        set: function (value) {\n            this.gridCellBorders = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCellStyle.prototype, \"cellPadding\", {\n        /**\n         * Gets or sets the `cell padding`.\n         * @private\n         */\n        get: function () {\n            return this.gridCellPadding;\n        },\n        set: function (value) {\n            if (this.gridCellPadding == null || typeof this.gridCellPadding === 'undefined') {\n                this.gridCellPadding = new PdfPaddings();\n            }\n            this.gridCellPadding = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridCellStyle;\n}(PdfGridStyleBase));\nexport { PdfGridCellStyle };\n/**\n * `PdfGridRowStyle` class provides customization of the appearance for the `PdfGridRow`.\n */\nvar PdfGridRowStyle = /** @class */ (function () {\n    // Constructor\n    /**\n     * Initializes a new instance of the `PdfGridRowStyle` class.\n     * @private\n     */\n    function PdfGridRowStyle() {\n        //\n    }\n    Object.defineProperty(PdfGridRowStyle.prototype, \"backgroundBrush\", {\n        // Properties\n        /**\n         * Gets or sets the `background brush`.\n         * @private\n         */\n        get: function () {\n            return this.gridRowBackgroundBrush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowStyle.prototype.setBackgroundBrush = function (value) {\n        this.gridRowBackgroundBrush = value;\n        if (typeof this.parent !== 'undefined') {\n            for (var i = 0; i < this.parent.cells.count; i++) {\n                this.parent.cells.getCell(i).style.backgroundBrush = value;\n            }\n        }\n    };\n    Object.defineProperty(PdfGridRowStyle.prototype, \"textBrush\", {\n        /**\n         * Gets or sets the `text brush`.\n         * @private\n         */\n        get: function () {\n            return this.gridRowTextBrush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowStyle.prototype.setTextBrush = function (value) {\n        this.gridRowTextBrush = value;\n        if (typeof this.parent !== 'undefined') {\n            for (var i = 0; i < this.parent.cells.count; i++) {\n                this.parent.cells.getCell(i).style.textBrush = value;\n            }\n        }\n    };\n    Object.defineProperty(PdfGridRowStyle.prototype, \"textPen\", {\n        /**\n         * Gets or sets the `text pen`.\n         * @private\n         */\n        get: function () {\n            return this.gridRowTextPen;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowStyle.prototype.setTextPen = function (value) {\n        this.gridRowTextPen = value;\n        if (typeof this.parent !== 'undefined') {\n            for (var i = 0; i < this.parent.cells.count; i++) {\n                this.parent.cells.getCell(i).style.textPen = value;\n            }\n        }\n    };\n    Object.defineProperty(PdfGridRowStyle.prototype, \"font\", {\n        /**\n         * Gets or sets the `font`.\n         * @private\n         */\n        get: function () {\n            return this.gridRowFont;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowStyle.prototype.setFont = function (value) {\n        this.gridRowFont = value;\n        if (typeof this.parent !== 'undefined') {\n            for (var i = 0; i < this.parent.cells.count; i++) {\n                this.parent.cells.getCell(i).style.font = value;\n            }\n        }\n    };\n    Object.defineProperty(PdfGridRowStyle.prototype, \"border\", {\n        /**\n         * Gets or sets the `border` of the current row.\n         * @private\n         */\n        get: function () {\n            if (typeof this.gridRowBorder === 'undefined') {\n                this.setBorder(new PdfBorders());\n            }\n            return this.gridRowBorder;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowStyle.prototype.setBorder = function (value) {\n        this.gridRowBorder = value;\n        if (typeof this.parent !== 'undefined') {\n            for (var i = 0; i < this.parent.cells.count; i++) {\n                this.parent.cells.getCell(i).style.borders = value;\n            }\n        }\n    };\n    /**\n     * sets the `parent row` of the current object.\n     * @private\n     */\n    PdfGridRowStyle.prototype.setParent = function (parent) {\n        this.parent = parent;\n    };\n    Object.defineProperty(PdfGridRowStyle.prototype, \"backgroundImage\", {\n        /**\n         * Gets or sets the `backgroundImage` of the 'PdfGridCell'.\n         * @private\n         */\n        get: function () {\n            return this.gridRowBackgroundImage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * sets the `backgroundImage` of the 'PdfGridCell'.\n     * @private\n     */\n    PdfGridRowStyle.prototype.setBackgroundImage = function (value) {\n        this.gridRowBackgroundImage = value;\n    };\n    return PdfGridRowStyle;\n}());\nexport { PdfGridRowStyle };\n/**\n * public Enum for `PdfHorizontalOverflowType`.\n * @private\n */\nexport var PdfHorizontalOverflowType;\n(function (PdfHorizontalOverflowType) {\n    /**\n     * Specifies the type of `NextPage`.\n     * @private\n     */\n    PdfHorizontalOverflowType[PdfHorizontalOverflowType[\"NextPage\"] = 0] = \"NextPage\";\n    /**\n     * Specifies the type of `LastPage`.\n     * @private\n     */\n    PdfHorizontalOverflowType[PdfHorizontalOverflowType[\"LastPage\"] = 1] = \"LastPage\";\n})(PdfHorizontalOverflowType || (PdfHorizontalOverflowType = {}));\n", "var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfGrid } from '../pdf-grid';\nimport { PdfStringFormat } from './../../../graphics/fonts/pdf-string-format';\nimport { SizeF, RectangleF, PointF } from './../../../drawing/pdf-drawing';\nimport { PdfBorders } from '../styles/pdf-borders';\nimport { PdfLayoutType, PdfLayoutBreakType } from './../../../graphics/figures/enum';\nimport { PdfLayoutResult, PdfLayoutFormat, ElementLayouter } from './../../../graphics/figures/base/element-layouter';\nimport { PdfHorizontalOverflowType } from '../styles/style';\nimport { TemporaryDictionary } from './../../../collections/object-object-pair/dictionary';\nimport { PdfStringLayouter } from './../../../graphics/fonts/string-layouter';\nimport { PdfDocument } from './../../../document/pdf-document';\n/**\n * Class `lay outing the text`.\n *\n */\nvar PdfGridLayouter = /** @class */ (function (_super) {\n    __extends(PdfGridLayouter, _super);\n    //constructor\n    /**\n     * Initialize a new instance for `PdfGrid` class.\n     * @private\n     */\n    function PdfGridLayouter(baseFormat) {\n        var _this = _super.call(this, baseFormat) || this;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.gridInitialWidth = 0;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.gridSize = new SizeF(0, 0);\n        _this.parentCellIndex = 0;\n        _this.tempWidth = 0;\n        _this.childheight = 0;\n        /**\n         * Check weather it is `child grid or not`.\n         * @private\n         */\n        _this.isChildGrid = false;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.hasRowSpanSpan = false;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.isRearranged = false;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.pageBounds = new RectangleF();\n        /**\n         * @hidden\n         * @private\n         */\n        _this.listOfNavigatePages = [];\n        /**\n         * @hidden\n         * @private\n         */\n        _this.flag = true;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.columnRanges = [];\n        /**\n         * @hidden\n         * @private\n         */\n        _this.currentLocation = new PointF(0, 0);\n        /**\n         * @hidden\n         * @private\n         */\n        _this.breakRow = true;\n        _this.slr = null;\n        _this.remainderText = null;\n        _this.isPaginate = false;\n        /**\n         * Checks whether the x co-ordinate is need to set as client size or not.\n         * @hidden\n         * @private\n         */\n        _this.isOverloadWithPosition = false;\n        return _this;\n    }\n    Object.defineProperty(PdfGridLayouter.prototype, \"Grid\", {\n        //Properties\n        get: function () {\n            return this.elements;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Constructors\n    /**\n     * Initializes a new instance of the `StringLayouter` class.\n     * @private\n     */\n    //Public methods\n    /**\n     * `Layouts` the text.\n     * @private\n     */\n    /**\n     * `Layouts` the specified graphics.\n     * @private\n     */\n    /**\n     * `Layouts` the specified graphics.\n     * @private\n     */\n    /*public layout(graphics : PdfLayoutParams) : PdfLayoutResult\n    public layout(graphics : PdfGraphics, bounds : RectangleF) : void\n    public layout(graphics : PdfGraphics, bounds : PointF) : void\n    public layout(graphics ?: PdfGraphics | PdfLayoutParams, bounds ?: PointF | RectangleF) : void | PdfLayoutResult  {\n        if (graphics instanceof PdfGraphics) {\n        if (bounds instanceof PointF) {\n            if (bounds.x === 0) {\n                bounds.x = PdfBorders.default.right.width / 2;\n            }\n            if (bounds.y === 0) {\n                bounds.y = PdfBorders.default.top.width / 2;\n            }\n            let boundaries : RectangleF = new RectangleF(bounds, new SizeF(0, 0));\n            this.layout(graphics, boundaries);\n        } else {\n            let width : number = graphics.clientSize.width;\n            let parameter : PdfLayoutParams = new PdfLayoutParams();\n            parameter.bounds = bounds;\n            this.currentGraphics = graphics;\n            if (graphics.layer != null) {\n                let index : number = 0;\n                if (this.currentGraphics.page instanceof PdfPage) {\n                    index = (this.currentGraphics.page as PdfPage).section.indexOf(this.currentGraphics.page as PdfPage);\n                } else {\n                    index = (this.currentGraphics.page as PdfPageBase).defaultLayerIndex;\n                }\n            } else {\n                this.layoutInternal(parameter);\n            }\n        }\n    }\n    }*/\n    /**\n     * Gets the `format`.\n     * @private\n     */\n    PdfGridLayouter.prototype.getFormat = function (format) {\n        var f = format;\n        return f;\n    };\n    /**\n     * `Layouts` the element.\n     * @private\n     */\n    PdfGridLayouter.prototype.layoutInternal = function (param) {\n        var format = this.getFormat(param.format);\n        this.gridLayoutFormat = this.getFormat(param.format);\n        this.currentPage = param.page;\n        if (this.currentPage !== null) {\n            var pageHeight = this.currentPage.getClientSize().height;\n            var pageWidth = this.currentPage.getClientSize().width;\n            this.currentPageBounds = this.currentPage.getClientSize();\n        }\n        else {\n            throw Error('Can not set page as null');\n            //this.currentPageBounds = this.currentGraphics.clientSize;\n        }\n        this.currentGraphics = this.currentPage.graphics;\n        //this.currentGraphics = (this.currentPage != null ) ? this.currentPage.graphics : this.currentGraphics;\n        // if (this.currentGraphics.layer !== null) {\n        //     let index : number = 0;\n        //     if (this.currentGraphics.page instanceof PdfPage) {\n        //         index = (this.currentGraphics.page as PdfPage).section.indexOf(this.currentGraphics.page as PdfPage);\n        //     } else {\n        //         index = (this.currentGraphics.page as PdfPageBase).defaultLayerIndex;\n        //     }\n        //     this.listOfNavigatePages.push(index);\n        // }\n        var index = 0;\n        index = this.currentGraphics.page.section.indexOf(this.currentGraphics.page);\n        this.listOfNavigatePages.push(index);\n        if (format != null && format.break === PdfLayoutBreakType.FitColumnsToPage) {\n            this.currentBounds = new RectangleF(new PointF(param.bounds.x, param.bounds.y), new SizeF(this.Grid.columns.width, this.currentGraphics.clientSize.height));\n        }\n        else {\n            this.currentBounds = new RectangleF(new PointF(param.bounds.x, param.bounds.y), this.currentGraphics.clientSize);\n        }\n        //this.currentBounds = new RectangleF(new PointF(param.bounds.x, param.bounds.y), this.currentGraphics.clientSize);\n        if (this.Grid.rows.count !== 0) {\n            this.currentBounds.width = (param.bounds.width > 0) ? param.bounds.width :\n                (this.currentBounds.width - this.Grid.rows.getRow(0).cells.getCell(0).style.borders.left.width / 2);\n        }\n        else if (this.Grid.headers.count !== 0) {\n            // this.currentBounds.width = (param.bounds.width > 0) ? param.bounds.width : (this.currentBounds.width -\n            //                                 this.Grid.headers.getHeader(0).cells.getCell(0).style.borders.left.width / 2);\n            this.currentBounds.width = param.bounds.width;\n        }\n        else {\n            throw Error('Please add row or header into grid');\n        }\n        this.startLocation = new PointF(param.bounds.x, param.bounds.y);\n        // if (this.Grid.style.allowHorizontalOverflow && this.currentBounds.width > this.currentGraphics.clientSize.width) {\n        //     this.currentBounds.width = this.currentGraphics.clientSize.width;\n        //     this.currentBounds.width -= this.currentBounds.x;\n        // }\n        // if (this.Grid.isChildGrid) {\n        //     this.childheight = param.bounds.height;\n        // }\n        // if (param.format !== null && param.format.usePaginateBounds) {\n        //     if (param.format.paginateBounds.height > 0) {\n        //         this.currentBounds.height = param.format.paginateBounds.height;\n        //     }\n        //} else \n        if (param.bounds.height > 0 && !this.Grid.isChildGrid) {\n            this.currentBounds.height = param.bounds.height;\n        }\n        if (!this.Grid.isChildGrid) {\n            this.hType = this.Grid.style.horizontalOverflowType;\n        }\n        if (!this.Grid.style.allowHorizontalOverflow) {\n            this.columnRanges = [];\n            if (typeof this.Grid.isChildGrid !== 'undefined' && typeof this.Grid.isChildGrid) {\n                this.Grid.measureColumnsWidth(this.currentBounds);\n            }\n            else {\n                this.Grid.measureColumnsWidth(new RectangleF(this.currentBounds.x, this.currentBounds.y, this.currentBounds.x + this.currentBounds.width, this.currentBounds.height));\n            }\n            this.columnRanges.push([0, this.Grid.columns.count - 1]);\n        }\n        else {\n            this.Grid.measureColumnsWidth();\n            this.determineColumnDrawRanges();\n        }\n        if (this.Grid.hasRowSpanSpan) {\n            for (var i = 0; i < this.Grid.rows.count; i++) {\n                if (this.Grid.rows.getRow(i).height !== -1 && !this.Grid.rows.getRow(i).isRowHeightSet) {\n                    this.Grid.rows.getRow(i).isRowHeightSet = true;\n                }\n            }\n        }\n        var result = this.layoutOnPage(param);\n        return result;\n    };\n    // /* tslint:enable */\n    /**\n     * `Determines the column draw ranges`.\n     * @private\n     */\n    PdfGridLayouter.prototype.determineColumnDrawRanges = function () {\n        var startColumn = 0;\n        var endColumn = 0;\n        var cellWidths = 0;\n        var availableWidth = this.currentGraphics.clientSize.width - this.currentBounds.x;\n        for (var i = 0; i < this.Grid.columns.count; i++) {\n            cellWidths += this.Grid.columns.getColumn(i).width;\n            if (cellWidths >= availableWidth) {\n                var subWidths = 0;\n                for (var j = startColumn; j <= i; j++) {\n                    subWidths += this.Grid.columns.getColumn(j).width;\n                    if (subWidths > availableWidth) {\n                        break;\n                    }\n                    endColumn = j;\n                }\n                this.columnRanges.push([startColumn, endColumn]);\n                startColumn = endColumn + 1;\n                endColumn = startColumn;\n                cellWidths = (endColumn <= i) ? this.Grid.columns.getColumn(i).width : 0;\n            }\n        }\n        // if (startColumn !== this.columns.Count) {\n        this.columnRanges.push([startColumn, this.Grid.columns.count - 1]);\n        // }\n    };\n    /**\n     * `Layouts the on page`.\n     * @private\n     */\n    PdfGridLayouter.prototype.layoutOnPage = function (param) {\n        /* tslint:disable */\n        this.pageBounds.x = param.bounds.x;\n        this.pageBounds.y = param.bounds.y;\n        this.pageBounds.height = param.bounds.height;\n        var format = this.getFormat(param.format);\n        var endArgs = null;\n        var result = null;\n        var layoutedPages = new TemporaryDictionary();\n        var startPage = param.page;\n        var isParentCell = false;\n        var cellBounds = [];\n        for (var index = 0; index < this.columnRanges.length; index++) {\n            var range = this.columnRanges[index];\n            this.cellStartIndex = range[0];\n            this.cellEndIndex = range[1];\n            var returnObject = this.raiseBeforePageLayout(this.currentPage, this.currentBounds, this.currentRowIndex);\n            this.currentBounds = returnObject.currentBounds;\n            this.currentRowIndex = returnObject.currentRowIndex;\n            // if (returnObject.returnValue) {\n            //     result = new PdfGridLayoutResult(this.currentPage, this.currentBounds);\n            //     break;\n            // }\n            //Draw Headers.\n            var drawHeader = void 0;\n            for (var i_1 = 0; i_1 < this.Grid.headers.count; i_1++) {\n                var row = this.Grid.headers.getHeader(i_1);\n                var headerHeight = this.currentBounds.y;\n                this.isHeader = true;\n                if (startPage != this.currentPage) {\n                    for (var k = this.cellStartIndex; k <= this.cellEndIndex; k++) {\n                        if (row.cells.getCell(k).isCellMergeContinue) {\n                            row.cells.getCell(k).isCellMergeContinue = false;\n                            row.cells.getCell(k).value = \"\";\n                        }\n                    }\n                }\n                // RowLayoutResult\n                var headerResult = this.drawRow(row);\n                if (headerHeight === this.currentBounds.y) {\n                    drawHeader = true;\n                    if (PdfGridLayouter.repeatRowIndex === -1) {\n                        PdfGridLayouter.repeatRowIndex = i_1;\n                    }\n                }\n                else {\n                    drawHeader = false;\n                }\n                if (!headerResult.isFinish && startPage !== null\n                    && format.layout !== PdfLayoutType.OnePage && drawHeader) {\n                    this.startLocation.x = this.currentBounds.x;\n                    this.currentPage = this.getNextPageformat(format);\n                    this.startLocation.y = this.currentBounds.y;\n                    if (typeof format.paginateBounds !== 'undefined' && format.paginateBounds.x === 0 && format.paginateBounds.y === 0 && format.paginateBounds.width === 0 && format.paginateBounds.height === 0)\n                        this.currentBounds.x += this.startLocation.x;\n                    this.drawRow(row);\n                }\n                this.isHeader = false;\n            }\n            var i = 0;\n            var length_1 = this.Grid.rows.count;\n            var repeatRow = void 0;\n            var startingHeight = 0;\n            var flag = true;\n            //Here is to draw parent Grid and Cells\n            cellBounds = [];\n            //Draw row by row with the specified cell range.\n            for (var j = 0; j < this.Grid.rows.count; j++) {\n                var row = this.Grid.rows.getRow(j);\n                i++;\n                this.currentRowIndex = i - 1;\n                var originalHeight = this.currentBounds.y;\n                startPage = this.currentPage;\n                PdfGridLayouter.repeatRowIndex = -1;\n                if (flag && row.grid.isChildGrid) {\n                    startingHeight = originalHeight;\n                    flag = false;\n                }\n                var rowResult = null;\n                ///rowResult = this.drawRow(row);\n                /*if(!row.isrowFinish) {\n                    if(!row.grid.isgridSplit){\n                        rowResult = this.drawRow(row);\n                        row.isrowFinish = true;\n                        row.isrowDraw = true;\n                    } else {\n                        if(!row.isrowDraw){\n                            rowResult = this.drawRow(row);\n                            row.isrowFinish = true;\n                            row.isrowDraw = true;\n                            row.grid.isgridSplit = false;\n                        } else {\n                            rowResult =  null;\n                            break;\n                        }\n                    }\n                }\n                else {\n                    //row.isrowFinish = false;\n                    //rowResult = this.drawRow(row);\n                    rowResult = null;\n                    break;\n                    \n                }             */\n                if (this.Grid.splitChildRowIndex == -1) {\n                    rowResult = this.drawRow(row);\n                    row.isrowFinish = true;\n                }\n                else {\n                    if (row.grid.ParentCell.row.grid.isGridSplit && this.Grid.splitChildRowIndex <= row.rowIndex) {\n                        rowResult = this.drawRow(row);\n                        row.isrowFinish = true;\n                    }\n                    else if (row.isrowFinish) {\n                        continue;\n                    }\n                    else {\n                        break;\n                    }\n                }\n                //rowResult = this.drawRow(row);\n                cellBounds.push(rowResult.bounds.width);\n                /*if (row.isRowBreaksNextPage)\n                    {\n                        let x : number  = 0;\n                        for (let l : number = 0; l < row.cells.count; l++)\n                        {\n                            let isNestedRowBreak : boolean = false;\n                            if (row.height == row.cells.getCell(l).height)\n                            {\n                                let n : number;\n                                let grid : PdfGrid = row.cells.getCell(l).value as PdfGrid;\n                                for (let m : number = grid.rows.count; 0 < m; m--)\n                                {\n                                    if ((grid.rows.getRow(m - 1).rowBreakHeight > 0))\n                                    {\n                                        isNestedRowBreak = true;\n                                        break;\n                                    }\n                                    if (grid.rows.getRow(m - 1).isRowBreaksNextPage)\n                                    {\n                                        row.rowBreakHeightValue = grid.rows.getRow(m - 1).rowBreakHeightValue;\n                                        break;\n                                    }\n                                    row.rowBreakHeightValue += grid.rows.getRow(m - 1).height;\n                                }\n                            }\n                            if (isNestedRowBreak)\n                                break;\n                        }\n                        for (let j : number = 0; j < row.cells.count; j++)\n                        {\n\n                            if (row.height > row.cells.getCell(j).height)\n                            {\n                                row.cells.getCell(j).value = \" \";\n                                let rect : RectangleF ;\n                                let page : PdfPage = this.getNextPage(this.currentPage);\n                                let section : PdfSection = this.currentPage.section;\n                                let index : number = section.indexOf(page);\n                                for (let k : number = 0; k < (section.count - 1) - index; k++)\n                                {\n                                    rect = new RectangleF(x, 0, row.grid.columns.getColumn(j).width, page.getClientSize().height);\n                                    PdfGridLayouter.repeatRowIndex = -1;\n                                    row.cells.getCell(j).draw(page.graphics, rect, false);\n                                    page = this.getNextPage(page);\n                                }\n                                rect = new RectangleF(x, 0, row.grid.columns.getColumn(j).width, row.rowBreakHeightValue);\n\n                                row.cells.getCell(j).draw(page.graphics, rect, false);\n                            }\n                            x += row.grid.columns.getColumn(j).width;\n                        }\n                    }*/\n                //if height remains same, it is understood that row is not drawn in the page\n                if (originalHeight === this.currentBounds.y) {\n                    repeatRow = true;\n                    PdfGridLayouter.repeatRowIndex = this.Grid.rows.rowCollection.indexOf(row);\n                }\n                else {\n                    repeatRow = false;\n                    PdfGridLayouter.repeatRowIndex = -1;\n                }\n                while (!rowResult.isFinish && startPage != null) {\n                    var tempResult = this.getLayoutResult();\n                    /*if (startPage != this.currentPage)\n                        {\n                            if (row.grid.isChildGrid && row.grid.ParentCell != null)\n                            {\n                                let bounds : RectangleF= new RectangleF(new PointF(format.paginateBounds.x,format.paginateBounds.y), new SizeF(param.bounds.width, tempResult.bounds.height));\n                                bounds.x += param.bounds.x;\n                                if (row.grid.ParentCell.row.grid.style.cellPadding != null)\n                                {\n                                    bounds.y += row.grid.ParentCell.row.grid.style.cellPadding.top;\n                                    if (bounds.height > this.currentPageBounds.height)\n                                    {\n                                        bounds.height = this.currentPageBounds.height - bounds.y;\n                                        bounds.height -= (row.grid.ParentCell.row.grid.style.cellPadding.bottom);\n                                    }\n                                }\n                                // Draw border for cells in the nested grid cell's row.\n                                for (let c : number = 0; c < row.cells.count; c++)\n                                {\n                                    let cell : PdfGridCell = row.cells.getCell(c);\n                                    let cellWidth :  number= 0;\n                                    if (cell.columnSpan > 1)\n                                    {\n                                        for (; c < cell.columnSpan; c++)\n                                            cellWidth += row.grid.columns.getColumn(c).width;\n                                    }\n                                    else\n                                        cellWidth = Math.max(cell.width, row.grid.columns.getColumn(c).width);\n                                    cell.drawCellBorders(this.currentGraphics, new RectangleF(new PointF(bounds.x,bounds.y), new SizeF(cellWidth, bounds.height)));\n                                    bounds.x += cellWidth;\n                                    c += (cell.columnSpan - 1);\n                                }\n                            }\n                        }\n                        */\n                    endArgs = this.raisePageLayouted(tempResult);\n                    if (endArgs.cancel || repeatRow)\n                        break;\n                    else if (this.Grid.allowRowBreakAcrossPages) {\n                        //If there is no space in the current page, add new page and then draw the remaining row.\n                        this.currentPage = this.getNextPageformat(format);\n                        originalHeight = this.currentBounds.y;\n                        var location_1 = new PointF(PdfBorders.default.right.width / 2, PdfBorders.default.top.width / 2);\n                        if ((format.paginateBounds.x === 0 && format.paginateBounds.y === 0 && format.paginateBounds.width === 0 &&\n                            format.paginateBounds.height === 0) && (this.startLocation.x === location_1.x && this.startLocation.y === location_1.y)) {\n                            this.currentBounds.x += this.startLocation.x;\n                            this.currentBounds.y += this.startLocation.y;\n                        }\n                        if (this.isPaginate) {\n                            this.startLocation.y = this.currentBounds.y;\n                            this.isPaginate = false;\n                        }\n                        if (this.Grid.isChildGrid && row.grid.ParentCell != null) {\n                            if (this.Grid.ParentCell.row.grid.style.cellPadding != null) {\n                                if (row.rowBreakHeight + this.Grid.ParentCell.row.grid.style.cellPadding.top < this.currentBounds.height) {\n                                    this.currentBounds.y = this.Grid.ParentCell.row.grid.style.cellPadding.top;\n                                }\n                            }\n                        }\n                        if (row.grid.ParentCell != null) {\n                            row.grid.ParentCell.row.isRowBreaksNextPage = true;\n                            row.grid.ParentCell.row.rowBreakHeightValue = row.rowBreakHeight + this.Grid.ParentCell.row.grid.style.cellPadding.top + this.Grid.ParentCell.row.grid.style.cellPadding.bottom;\n                            for (var i_2 = row.rowIndex + 1; i_2 < row.grid.rows.count; i_2++) {\n                                row.grid.ParentCell.row.rowBreakHeightValue += row.grid.rows.getRow(i_2).height;\n                            }\n                            //row.rowBreakHeight = row.grid.ParentCell.row.rowBreakHeightValue;\n                        }\n                        /*if (row.noOfPageCount > 1)\n                        {\n                            let temp : number = row.rowBreakHeightValue;\n                            for (let j : number = 1; j < row.noOfPageCount; j++)\n                            {\n                                row.rowBreakHeightValue = 0;\n                                row.height = ((row.noOfPageCount - 1) * this.currentPage.getClientSize().height);\n                                this.drawRow(row);\n                                this.currentPage = this.getNextPageformat(format);\n                                startPage = this.currentPage;\n                            }\n                            row.rowBreakHeightValue = temp;\n                            row.noOfPageCount = 1;\n                            rowResult = this.drawRow(row);\n                        } else {\n                            rowResult = this.drawRow(row);\n                        }\n                        /*if(row.grid.isChildGrid){\n                            row.isrowFinish = false;\n                            row.isrowDraw = false;\n                            row.grid.isgridSplit = true;\n                            row.grid.ParentCell.row.grid.isgridSplit = true;\n                            //rowResult.isFinish = false;\n                            break;\n                        }*/\n                        if (row.grid.isChildGrid) {\n                            //row.grid.isgridSplit = true;\n                            row.isrowFinish = false;\n                            //row.grid.ParentCell.row.grid.isgridSplit = true;\n                            row.grid.splitChildRowIndex = row.rowIndex;\n                            row.grid.ParentCell.row.grid.splitChildRowIndex = row.grid.ParentCell.row.rowIndex;\n                            if (row.grid.ParentCell.row.grid.isGridSplit) {\n                                row.grid.ParentCell.row.noOfPageCount += 1;\n                                row.grid.ParentCell.row.grid.isGridSplit = false;\n                            }\n                            break;\n                        }\n                        if (row.noOfPageCount < 1) {\n                            if (row.grid.splitChildRowIndex != -1) {\n                                row.grid.isGridSplit = true;\n                            }\n                            if (row.style.border != null && ((row.style.border.left != null && row.style.border.left.width !== 1)\n                                || (row.style.border.top != null && row.style.border.top.width !== 1))) {\n                                var x = row.style.border.left.width / 2;\n                                var y = row.style.border.top.width / 2;\n                                if (this.currentBounds.x === PdfBorders.default.right.width / 2 && this.currentBounds.y === PdfBorders.default.right.width / 2) {\n                                    var newBound = new RectangleF(x, y, this.currentBounds.width, this.currentBounds.height);\n                                    this.currentBounds = newBound;\n                                }\n                            }\n                            if (this.Grid.repeatHeader) {\n                                for (var j_1 = 0; j_1 < this.Grid.headers.count; j_1++) {\n                                    var headerRepeat = this.Grid.headers.getHeader(j_1);\n                                    this.drawRow(headerRepeat);\n                                }\n                            }\n                            rowResult = this.drawRow(row);\n                            if (row.noOfPageCount >= 1) {\n                                var temp = row.rowBreakHeightValue;\n                                for (var j_2 = 0; j_2 < row.noOfPageCount; j_2++) {\n                                    //this.currentPage.section.add();\n                                    var tempResult1 = this.getLayoutResult();\n                                    endArgs = this.raisePageLayouted(tempResult1);\n                                    this.currentPage = this.getNextPageformat(format);\n                                    originalHeight = this.currentBounds.y;\n                                    //row.rowBreakHeightValue = 0;\n                                    if (row.grid.splitChildRowIndex != -1) {\n                                        row.grid.isGridSplit = true;\n                                    }\n                                    this.currentBounds.y = 0.5;\n                                    if (this.Grid.repeatHeader) {\n                                        for (var i_3 = 0; i_3 < this.Grid.headers.count; i_3++) {\n                                            var header = this.Grid.headers.getHeader(i_3);\n                                            this.drawRow(header);\n                                        }\n                                    }\n                                    //row.height = ((row.noOfPageCount - 1) * this.currentPage.getClientSize().height);\n                                    this.drawRow(row);\n                                }\n                                // row.rowBreakHeight = temp;\n                                // row.noOfPageCount = 1;\n                                // rowResult = this.drawRow(row);\n                            }\n                            row.grid.splitChildRowIndex = -1;\n                            row.grid.isGridSplit = false;\n                            rowResult.isFinish = this.checkIsFisished(row);\n                            //row.NestedGridLayoutResult.bounds.height = row.rowBreakHeightValue;\n                            //this.currentBounds.y = rowResult.bounds.y;\n                            for (var i_4 = 0; i_4 < row.cells.count; i_4++) {\n                                if (row.cells.getCell(i_4).value instanceof PdfGrid) {\n                                    row.cells.getCell(i_4).value.splitChildRowIndex = -1;\n                                }\n                            }\n                        }\n                    }\n                    // else if (!this.Grid.allowRowBreakAcrossPages && i < length)\n                    // {\n                    //     this.currentPage = this.getNextPageformat(format);\n                    //     break;\n                    // }\n                    // else if (i >= length)\n                    //     break;\n                }\n                if (!rowResult.isFinish && startPage !== null && format.layout !== PdfLayoutType.OnePage && repeatRow) {\n                    // During pagination, cell position is maintained here.\n                    this.startLocation.x = this.currentBounds.x;\n                    var isAddNextPage = false;\n                    this.currentPage = this.getNextPageformat(format);\n                    /*if (!this.Grid.isSingleGrid)\n                    {\n                        for ( let j : number= 0; j < this.Grid.rows.count; j++)\n                        {\n                            let isWidthGreaterthanParent : boolean = false;\n                            for (let k : number = 0; k < this.Grid.rows.getRow(j).cells.count; k++)\n                            {\n                                if (this.Grid.rows.getRow(j).cells.getCell(k).width > this.currentPageBounds.width)\n                                    isWidthGreaterthanParent = true;\n                            }\n                            if (isWidthGreaterthanParent && this.Grid.rows.getRow(j).cells.getCell(this.rowBreakPageHeightCellIndex).pageCount > 0)\n                            {\n                                isAddNextPage = true;\n                            }\n                        }\n                    }\n                    if (!this.Grid.isRearranged && isAddNextPage)\n                         {\n                             let section : PdfSection = this.currentPage.section;\n                             \n                             //this.currentPage = section.add();\n                         \n                             this.currentGraphics = this.currentPage.graphics;\n                             this.currentBounds = new RectangleF(new PointF(0,0), this.currentPage.getClientSize());\n                          \n                             let pageindex  : number = (this.currentGraphics.page as PdfPage).section.indexOf(this.currentGraphics.page as PdfPage);\n                         }\n                         else\n                         {\n                             this.currentPage = this.getNextPageformat(format);\n                         }\n                         if (format.paginateBounds.y == 0)\n                             this.currentBounds.y = PdfBorders.default.top.width/2;\n                         else\n                         {\n                             this.currentBounds.y = format == null ? 0 : format.paginateBounds.y;\n                             \n                         }*/\n                    if (this.raiseBeforePageLayout(this.currentPage, this.currentBounds, this.currentRowIndex).returnValue) {\n                        break;\n                    }\n                    if ((param.format !== null) && !param.format.usePaginateBounds && param.bounds !== null &&\n                        param.bounds.height > 0 && !this.Grid.isChildGrid) {\n                        this.currentBounds.height = param.bounds.height;\n                    }\n                    if (typeof param.format !== 'undefined' && param.format != null && typeof param.format.usePaginateBounds !== 'undefined' && !param.format.usePaginateBounds && !(param.format.paginateBounds.x === 0 && param.format.paginateBounds.y === 0 && param.format.paginateBounds.width === 0 && param.format.paginateBounds.height === 0) && param.format.paginateBounds.y === 0) {\n                        this.currentBounds.y = PdfBorders.default.top.width / 2;\n                    }\n                    else {\n                        this.currentBounds.y = format == null ? 0 : format.paginateBounds.y;\n                        if (format != null && (format.paginateBounds.x !== 0 || format.paginateBounds.y !== 0 || format.paginateBounds.height !== 0 || format.paginateBounds.width !== 0)) {\n                            this.currentBounds.x = format.paginateBounds.x;\n                            this.currentBounds.width = format.paginateBounds.width;\n                            this.currentBounds.height = format.paginateBounds.height;\n                        }\n                    }\n                    if (typeof param.format !== 'undefined' && (param.format !== null) && typeof param.format.usePaginateBounds !== 'undefined' && !param.format.usePaginateBounds && param.bounds !== null &&\n                        param.bounds.y > 0 && !this.Grid.isChildGrid) {\n                        this.currentBounds.y = param.bounds.y;\n                    }\n                    this.startLocation.y = this.currentBounds.y;\n                    if ((format.paginateBounds.x === format.paginateBounds.y) &&\n                        (format.paginateBounds.y === format.paginateBounds.height) &&\n                        (format.paginateBounds.height === format.paginateBounds.width) && (format.paginateBounds.width === 0)) {\n                        this.currentBounds.x += this.startLocation.x;\n                    }\n                    if (this.currentBounds.x === PdfBorders.default.left.width / 2) {\n                        this.currentBounds.y += this.startLocation.x;\n                    }\n                    if (this.Grid.repeatHeader) {\n                        for (var i_5 = 0; i_5 < this.Grid.headers.count; i_5++) {\n                            var header = this.Grid.headers.getHeader(i_5);\n                            this.drawRow(header);\n                        }\n                    }\n                    this.drawRow(row);\n                    if (this.currentPage !== null && !layoutedPages.containsKey(this.currentPage)) {\n                        layoutedPages.add(this.currentPage, range);\n                    }\n                }\n                if (row.NestedGridLayoutResult != null) {\n                    // Position for next row in the grid.\n                    this.currentPage = row.NestedGridLayoutResult.page;\n                    this.currentGraphics = this.currentPage.graphics; //If not, next row will not be drawn in the layouted page.\n                    this.startLocation = new PointF(row.NestedGridLayoutResult.bounds.x, row.NestedGridLayoutResult.bounds.y);\n                    var recalHeight = this.ReCalculateHeight(row, row.NestedGridLayoutResult.bounds.height);\n                    this.currentBounds.y = recalHeight;\n                    //this.currentBounds.y = row.NestedGridLayoutResult.bounds.height;\n                    if (startPage != this.currentPage) {\n                        var section = this.currentPage.section;\n                        var startIndex = section.indexOf(startPage) + 1;\n                        var endIndex = section.indexOf(this.currentPage);\n                        for (var page = startIndex; page < endIndex + 1; page++) {\n                            var pageGraphics = section.getPages()[page].graphics;\n                            var location_2 = new PointF(format.paginateBounds.x, format.paginateBounds.y);\n                            var height = page == endIndex ? (row.NestedGridLayoutResult.bounds.height - param.bounds.y) :\n                                (this.currentBounds.height - location_2.y);\n                            if (height <= pageGraphics.clientSize.height)\n                                height += param.bounds.y;\n                            // if (row.grid.isChildGrid && row.grid.ParentCell != null)\n                            //     location.x += param.bounds.x;\n                            location_2.y = format == null ? 0.5 : format.paginateBounds.y;\n                            // Draw border for last paginated row containing nested grid.\n                            for (var c = 0; c < row.cells.count; c++) {\n                                var cell = row.cells.getCell(c);\n                                var cellWidth = 0;\n                                var totalwidth = 0;\n                                var childGridCell = void 0;\n                                if (cell.value instanceof PdfGrid) {\n                                    if (!childGridCell) {\n                                        childGridCell = cell;\n                                    }\n                                    for (var i_6 = 0; i_6 < cell.value.columns.count; i_6++) {\n                                        totalwidth += cell.value.columns.getColumn(i_6).columnWidth;\n                                    }\n                                }\n                                else {\n                                    totalwidth = cell.width;\n                                }\n                                if (cell.columnSpan > 1) {\n                                    for (; c < cell.columnSpan; c++)\n                                        cellWidth += row.grid.columns.getColumn(c).width;\n                                }\n                                else\n                                    cellWidth = Math.max(totalwidth, row.grid.columns.getColumn(c).width);\n                                var bottomPadding = void 0;\n                                if (childGridCell && childGridCell.style && childGridCell.style.cellPadding) {\n                                    bottomPadding = childGridCell.style.cellPadding.bottom;\n                                }\n                                else {\n                                    bottomPadding = this.Grid.style.cellPadding.bottom;\n                                }\n                                if (typeof bottomPadding === 'number' && (height + bottomPadding) < pageGraphics.clientSize.height) {\n                                    height += bottomPadding;\n                                    this.currentBounds.y += bottomPadding;\n                                }\n                                cell.drawCellBorders(pageGraphics, new RectangleF(location_2, new SizeF(cellWidth, height)));\n                                var rowWidth = this.Grid.rows.getRow(this.Grid.rows.count - 1).width;\n                                if (cellWidth !== rowWidth) {\n                                    cell.drawCellBorders(pageGraphics, new RectangleF(location_2, new SizeF(rowWidth, height)));\n                                }\n                                location_2.x += cellWidth;\n                                c += (cell.columnSpan - 1);\n                            }\n                        }\n                        // So, nested grid drawing is completed for the current row. Update page.\n                        // Otherwise, the next nested grid of the parent will draw borders from start.\n                        startPage = this.currentPage;\n                    }\n                }\n            }\n            var isPdfGrid = false;\n            var maximumCellBoundsWidth = 0;\n            if (cellBounds.length > 0) {\n                maximumCellBoundsWidth = cellBounds[0];\n            }\n            var largeNavigatePage = [[1, 2]];\n            for (var c = 0; c < this.Grid.rows.count; c++) {\n                if (this.cellEndIndex != -1 && this.Grid.rows.getRow(c).cells.getCell(this.cellEndIndex).value instanceof PdfGrid) {\n                    var grid = this.Grid.rows.getRow(c).cells.getCell(this.cellEndIndex).value;\n                    this.rowLayoutBoundsWidth = grid.rowLayoutBoundsWidth;\n                    isPdfGrid = true;\n                    // if (largeNavigatePage[0][0] < grid.listOfNavigatePages.length)\n                    // {\n                    //     largeNavigatePage[0][0] = grid.listOfNavigatePages.length;\n                    //     largeNavigatePage[0][1] = cellBounds[c];\n                    // }\n                    // else if ((largeNavigatePage[0][0] == grid.listOfNavigatePages.length) && (largeNavigatePage[0][1] < cellBounds[c]))\n                    // {\n                    //     largeNavigatePage[0][1] = cellBounds[c];\n                    // }\n                }\n            }\n            if (!isPdfGrid && cellBounds.length > 0) {\n                for (var c = 0; c < i - 1; c++) {\n                    if (maximumCellBoundsWidth < cellBounds[c]) {\n                        maximumCellBoundsWidth = cellBounds[c];\n                    }\n                }\n                this.rowLayoutBoundsWidth = maximumCellBoundsWidth;\n            }\n            else {\n                this.rowLayoutBoundsWidth = largeNavigatePage[0][1];\n            }\n            if (this.columnRanges.indexOf(range) < this.columnRanges.length - 1\n                && startPage != null && format.layout != PdfLayoutType.OnePage) {\n                isParentCell = this.Grid.isChildGrid;\n                if (largeNavigatePage[0][0] != 0) {\n                    var section = this.currentPage.section;\n                    var pageIndex = section.indexOf(this.currentPage);\n                    this.currentGraphics = this.currentPage.graphics;\n                    this.currentBounds = new RectangleF(new PointF(0, 0), this.currentPage.getClientSize());\n                    var pageindex = this.currentGraphics.page.section.indexOf(this.currentGraphics.page);\n                }\n                else {\n                    this.currentPage = this.getNextPageformat(format);\n                }\n                // let locationGrid : PointF= new PointF(PdfBorders.default.right.width / 2, PdfBorders.default.top.width / 2);\n                // if (format.paginateBounds == new RectangleF(0,0,0,0) && this.startLocation == locationGrid)\n                // {\n                //     this.currentBounds.x += this.startLocation.x;\n                //     this.currentBounds.y += this.startLocation.y;\n                // }\n            }\n            if (this.columnRanges.length - 1 !== index && this.columnRanges.length > 1 && format.layout !== PdfLayoutType.OnePage) {\n                this.currentPage = this.getNextPageformat(format);\n                if ((format.paginateBounds.x === format.paginateBounds.y) && (format.paginateBounds.y === format.paginateBounds.height)\n                    && (format.paginateBounds.height === format.paginateBounds.width) && (format.paginateBounds.width === 0)) {\n                    this.currentBounds.x += this.startLocation.x;\n                    this.currentBounds.y += this.startLocation.y;\n                    //this.currentBounds.height = this.pageBounds.height;\n                }\n            }\n        }\n        result = this.getLayoutResult();\n        if (this.Grid.style.allowHorizontalOverflow && this.Grid.style.horizontalOverflowType == PdfHorizontalOverflowType.NextPage) {\n            this.reArrangePages(layoutedPages);\n        }\n        this.raisePageLayouted(result);\n        return result;\n    };\n    PdfGridLayouter.prototype.checkIsFisished = function (row) {\n        var result = true;\n        for (var i = 0; i < row.cells.count; i++) {\n            if (!row.cells.getCell(i).FinishedDrawingCell) {\n                result = false;\n            }\n        }\n        return result;\n    };\n    /* tslint:enable */\n    /**\n     * Gets the `next page`.\n     * @private\n     */\n    PdfGridLayouter.prototype.getNextPageformat = function (format) {\n        var section = this.currentPage.section;\n        var nextPage = null;\n        var index = section.indexOf(this.currentPage);\n        this.flag = false;\n        if (index === section.count - 1) {\n            nextPage = section.add();\n        }\n        else {\n            nextPage = section.getPages()[index + 1];\n        }\n        this.currentGraphics = nextPage.graphics;\n        var pageindex = this.currentGraphics.page.section.indexOf(this.currentGraphics.page);\n        if (!(this.listOfNavigatePages.indexOf(pageindex) !== -1)) {\n            this.listOfNavigatePages.push(pageindex);\n        }\n        this.currentBounds = new RectangleF(new PointF(0, 0), nextPage.getClientSize());\n        if ((typeof format !== 'undefined') && format != null && format.usePaginateBounds && (typeof format.paginateBounds !== 'undefined') && format.paginateBounds != null && (format.paginateBounds.x !== format.paginateBounds.y) && (format.paginateBounds.y !== format.paginateBounds.height)\n            && (format.paginateBounds.height !== format.paginateBounds.width) && (format.paginateBounds.width !== 0)) {\n            this.currentBounds.x = format.paginateBounds.x;\n            this.currentBounds.y = format.paginateBounds.y;\n            this.currentBounds.height = format.paginateBounds.height;\n        }\n        return nextPage;\n    };\n    PdfGridLayouter.prototype.CheckIfDefaultFormat = function (format) {\n        var defaultFormat = new PdfStringFormat();\n        return (format.alignment === defaultFormat.alignment && format.characterSpacing === defaultFormat.characterSpacing &&\n            format.clipPath === defaultFormat.clipPath && format.firstLineIndent === defaultFormat.firstLineIndent &&\n            format.horizontalScalingFactor === defaultFormat.horizontalScalingFactor &&\n            format.lineAlignment === defaultFormat.lineAlignment\n            && format.lineLimit === defaultFormat.lineLimit && format.lineSpacing === defaultFormat.lineSpacing &&\n            format.measureTrailingSpaces === defaultFormat.measureTrailingSpaces && format.noClip === defaultFormat.noClip &&\n            format.paragraphIndent === defaultFormat.paragraphIndent && format.rightToLeft === defaultFormat.rightToLeft &&\n            format.subSuperScript === defaultFormat.subSuperScript && format.wordSpacing === defaultFormat.wordSpacing &&\n            format.wordWrap === defaultFormat.wordWrap);\n    };\n    /**\n     * `Raises BeforeCellDraw event`.\n     * @private\n     */\n    PdfGridLayouter.prototype.RaiseBeforeCellDraw = function (graphics, rowIndex, cellIndex, bounds, value, style) {\n        var args = null;\n        if (this.Grid.raiseBeginCellDraw) {\n            args = new PdfGridBeginCellDrawEventArgs(graphics, rowIndex, cellIndex, bounds, value, style);\n            this.Grid.onBeginCellDraw(args);\n            style = args.style;\n        }\n        return style;\n    };\n    /**\n     * `Raises AfterCellDraw event`.\n     * @private\n     */\n    PdfGridLayouter.prototype.raiseAfterCellDraw = function (graphics, rowIndex, cellIndex, bounds, value, cellstyle) {\n        var args = null;\n        if (this.Grid.raiseEndCellDraw) {\n            args = new PdfGridEndCellDrawEventArgs(graphics, rowIndex, cellIndex, bounds, value, cellstyle);\n            this.Grid.onEndCellDraw(args);\n        }\n    };\n    PdfGridLayouter.prototype.reArrangePages = function (layoutedPages) {\n        var document = this.currentPage.document;\n        var pages = [];\n        var keys = layoutedPages.keys();\n        var values = layoutedPages.values();\n        for (var i = 0; i < keys.length; i++) {\n            var page = keys[i];\n            page.section = null;\n            pages.push(page);\n            document.pages.remove(page);\n        }\n        /* tslint:disable */\n        for (var i = 0; i < layoutedPages.size(); i++) {\n            var count = 0;\n            for (var j = i, count_1 = (layoutedPages.size() / this.columnRanges.length); j < layoutedPages.size(); j += count_1) {\n                var page = pages[j];\n                if (typeof page !== 'undefined' && document.pages.indexOf(page) === -1) {\n                    document.pages.add(page);\n                }\n            }\n        }\n        /* tslint:enable */\n    };\n    /**\n     * Gets the `layout result`.\n     * @private\n     */\n    PdfGridLayouter.prototype.getLayoutResult = function () {\n        if (this.Grid.isChildGrid && this.Grid.allowRowBreakAcrossPages) {\n            for (var i = 0; i < this.Grid.rows.count; i++) {\n                var row = this.Grid.rows.getRow(i);\n                if (row.rowBreakHeight > 0 && row.repeatFlag) {\n                    this.startLocation.y = this.currentPage.origin.y;\n                }\n            }\n        }\n        var bounds;\n        if (!this.isChanged) {\n            bounds = new RectangleF(this.startLocation, new SizeF(this.currentBounds.width, this.currentBounds.y -\n                this.startLocation.y));\n        }\n        // else {\n        //     bounds = new RectangleF(this.currentLocation, new SizeF(this.currentBounds.width, this.currentBounds.y -\n        //                              this.currentLocation.y));\n        // }\n        /* tslint:enable */\n        return new PdfGridLayoutResult(this.currentPage, bounds);\n    };\n    /**\n     * `Recalculate row height` for the split cell to be drawn.\n     * @private\n     */\n    PdfGridLayouter.prototype.ReCalculateHeight = function (row, height) {\n        var newHeight = 0.0;\n        for (var i = this.cellStartIndex; i <= this.cellEndIndex; i++) {\n            if (!(row.cells.getCell(i).remainingString === null || row.cells.getCell(i).remainingString === '' ||\n                typeof row.cells.getCell(i).remainingString === 'undefined')) {\n                newHeight = Math.max(newHeight, row.cells.getCell(i).measureHeight());\n            }\n        }\n        return Math.max(height, newHeight);\n    };\n    /**\n     * `Raises BeforePageLayout event`.\n     * @private\n     */\n    PdfGridLayouter.prototype.raiseBeforePageLayout = function (currentPage, currentBounds, currentRow) {\n        var cancel = false;\n        if (this.Grid.raiseBeginPageLayout) {\n            var args = new PdfGridBeginPageLayoutEventArgs(currentBounds, currentPage, currentRow);\n            this.Grid.onBeginPageLayout(args);\n            // if (currentBounds !== args.Bounds) {\n            //     this.isChanged = true;\n            //     this.currentLocation = new PointF(args.Bounds.x, args.Bounds.y);\n            //     this.measureColumnsWidth(new RectangleF(new PointF(args.Bounds.x, args.Bounds.y) ,\n            //                                                  new SizeF(args.Bounds.width + args.Bounds.x ,\n            //                                                                 args.Bounds.height)));\n            // }\n            cancel = (typeof args.cancel === 'undefined' ? false : args.cancel);\n            currentBounds = args.bounds;\n            currentRow = args.startRowIndex;\n        }\n        return { returnValue: cancel, currentBounds: currentBounds, currentRowIndex: currentRow };\n    };\n    /**\n     * `Raises PageLayout event` if needed.\n     * @private\n     */\n    PdfGridLayouter.prototype.raisePageLayouted = function (result) {\n        var args = new PdfGridEndPageLayoutEventArgs(result);\n        if (this.Grid.raiseEndPageLayout) {\n            this.Grid.onEndPageLayout(args);\n        }\n        return args;\n    };\n    PdfGridLayouter.prototype.drawRow = function (row, result, height) {\n        if (typeof result === 'undefined') {\n            //.. Check if required space available.\n            //.....If the row conains spans which  falls through more than one page, then draw the row to next page.                        \n            var result_1 = new RowLayoutResult();\n            var rowHeightWithSpan = 0;\n            var location_3 = new PointF(0, 0);\n            var size = new SizeF(0, 0);\n            var isHeader = false;\n            if (row.rowSpanExists) {\n                var maxSpan = 0;\n                var currRowIndex = this.Grid.rows.rowCollection.indexOf(row);\n                if (currRowIndex === -1) {\n                    currRowIndex = this.Grid.headers.indexOf(row);\n                    if (currRowIndex !== -1) {\n                        isHeader = true;\n                    }\n                }\n                for (var i = 0; i < row.cells.count; i++) {\n                    var cell = row.cells.getCell(i);\n                    maxSpan = Math.max(maxSpan, cell.rowSpan);\n                }\n                for (var i = currRowIndex; i < currRowIndex + maxSpan; i++) {\n                    rowHeightWithSpan += (isHeader ? this.Grid.headers.getHeader(i).height : this.Grid.rows.getRow(i).height);\n                }\n                // let rowMaxHeight : number = rowHeightWithSpan;\n                // for (let i : number = 0; i < row.cells.count; i++ ) {\n                //     rowMaxHeight = rowMaxHeight > row.cells.getCell(i).height ? rowMaxHeight : row.cells.getCell(i).height;\n                // }\n                // let flag : boolean = true;\n                // let nextRow : PdfGridRow = this.Grid.headers.getHeader(this.Grid.headers.indexOf(row) + 1);\n                // for (let i : number = 0; i < nextRow.cells.count; i++ ) {\n                //     if (nextRow.cells.getCell(i).value !== '' && nextRow.cells.getCell(i).value !== undefined) {\n                //         flag = false;\n                //         break;\n                //     }\n                // }\n                // if ((rowMaxHeight > rowHeightWithSpan) && flag) {\n                //     row.height += (rowMaxHeight - rowHeightWithSpan);\n                // }                \n            }\n            var calculatedHeight = row.rowBreakHeight > 0.0 ? row.rowBreakHeight : row.height;\n            if (typeof this.Grid.isChildGrid !== 'undefined' && this.Grid.isChildGrid && typeof this.Grid.ParentCell !== 'undefined' && this.Grid.ParentCell != null) {\n                //Split row only if row height exceeds page height and AllowRowBreakAcrossPages is true.\n                // if (calculatedHeight + this.Grid.ParentCell.row.grid.style.cellPadding.bottom +\n                //             this.Grid.ParentCell.row.grid.style.cellPadding.top > this.currentPageBounds.height) {\n                //     if (this.Grid.allowRowBreakAcrossPages) {\n                //         result.isFinish = true;\n                //         if ( this.Grid.isChildGrid && row.rowBreakHeight > 0 ) {\n                //             if (this.Grid.ParentCell.row.grid.style.cellPadding !== null) {\n                //                 this.currentBounds.y += this.Grid.ParentCell.row.grid.style.cellPadding.top;\n                //             }\n                //             this.currentBounds.x = this.startLocation.x;\n                //         }\n                //         result.bounds = this.currentBounds ;\n                //         this.drawRowWithBreak(result, row, calculatedHeight);\n                //     } else {\n                //         //If AllowRowBreakAcrossPages is not true, draw the row till it fits the page.                       \n                //         if (this.Grid.ParentCell.row.grid.style.cellPadding != null) {\n                //             this.currentBounds.y += this.Grid.ParentCell.row.grid.style.cellPadding.top;\n                //             calculatedHeight = this.currentBounds.height - this.currentBounds.y -\n                //                     this.Grid.ParentCell.row.grid.style.cellPadding.bottom;\n                //         }\n                //         result.isFinish = false;\n                //         this.drawRow( row, result, calculatedHeight);\n                //     }\n                // } else\n                if (this.currentBounds.y + this.Grid.ParentCell.row.grid.style.cellPadding.bottom + calculatedHeight >\n                    this.currentPageBounds.height || this.currentBounds.y + this.Grid.ParentCell.row.grid.style.cellPadding.bottom\n                    + calculatedHeight > this.currentBounds.height || this.currentBounds.y +\n                    this.Grid.ParentCell.row.grid.style.cellPadding.bottom + rowHeightWithSpan > this.currentPageBounds.height) {\n                    //If a row is repeated and still cannot fit in page, proceed draw.\n                    if (typeof this.Grid.ParentCell.row.grid.LayoutFormat !== 'undefined' && this.Grid.ParentCell.row.grid.LayoutFormat.break === PdfLayoutBreakType.FitPage) {\n                        PdfGridLayouter.repeatRowIndex = this.Grid.rows.rowCollection.indexOf(row);\n                        this.Grid.splitChildRowIndex = this.Grid.rows.rowCollection.indexOf(row);\n                    }\n                    if (PdfGridLayouter.repeatRowIndex > -1 && PdfGridLayouter.repeatRowIndex === row.rowIndex) {\n                        if (this.Grid.allowRowBreakAcrossPages) {\n                            result_1.isFinish = true;\n                            // if (this.Grid.isChildGrid && row.rowBreakHeightValue > 0) {\n                            //     // if (this.Grid.ParentCell.row.grid.style.cellPadding != null) {\n                            //     //     this.currentBounds.y += this.Grid.ParentCell.row.grid.style.cellPadding.top;\n                            //     // }\n                            //     this.currentBounds.x = this.startLocation.x;\n                            // }\n                            result_1.bounds = this.currentBounds;\n                            this.drawRowWithBreak(result_1, row, calculatedHeight);\n                            row.repeatFlag = true;\n                            row.repeatRowNumber = PdfGridLayouter.repeatRowIndex;\n                        }\n                        // else {\n                        //     result.isFinish = false;\n                        //     row.repeatFlag = false;\n                        //     this.drawRow( row, result, calculatedHeight);\n                        // }\n                    }\n                    // else {\n                    //     result.isFinish = false;\n                    // }\n                }\n                else {\n                    result_1.isFinish = true;\n                    if (row.grid.ParentCell.row.rowBreakHeightValue > 0) {\n                        row.repeatFlag = true;\n                    }\n                    else {\n                        row.repeatFlag = false;\n                        calculatedHeight = row.height;\n                    }\n                    if (this.Grid.isChildGrid && row.rowBreakHeight > 0) {\n                        if (this.Grid.ParentCell.row.grid.style.cellPadding != null) {\n                            calculatedHeight += this.Grid.ParentCell.row.grid.style.cellPadding.bottom;\n                        }\n                    }\n                    this.drawRow(row, result_1, calculatedHeight);\n                }\n            }\n            else {\n                //Split row only if row height exceeds page height and AllowRowBreakAcrossPages is true.\n                if (calculatedHeight > this.currentPageBounds.height) {\n                    if (this.Grid.allowRowBreakAcrossPages) {\n                        result_1.isFinish = true;\n                        //result.bounds = this.currentBounds;\n                        this.drawRowWithBreak(result_1, row, calculatedHeight);\n                        row.isrowFinish = true;\n                        row.repeatFlag = true;\n                        if (row.grid.splitChildRowIndex !== -1) {\n                            result_1.isFinish = false;\n                        }\n                    }\n                    // else {\n                    //     //If AllowRowBreakAcrossPages is not true, draw the row till it fits the page.\n                    //     result.isFinish = false;\n                    //     this.drawRow( row, result, calculatedHeight);\n                    // }\n                }\n                else if (this.currentBounds.y + calculatedHeight > this.currentPageBounds.height ||\n                    this.currentBounds.y + calculatedHeight > (this.currentBounds.height + this.startLocation.y) ||\n                    this.currentBounds.y + rowHeightWithSpan > this.currentPageBounds.height) {\n                    // If a row is repeated and still cannot fit in page, proceed draw.\n                    var isFit = false;\n                    if ((this.Grid.allowRowBreakAcrossPages && !this.Grid.repeatHeader && !row.isRowHeightSet && !row.rowMergeComplete)) {\n                        if (this.Grid.LayoutFormat !== null && this.Grid.LayoutFormat.paginateBounds.height > 0) {\n                            isFit = this.isFitToCell((this.currentBounds.height + this.startLocation.y) - this.currentBounds.y, this.Grid, row);\n                        }\n                        else\n                            isFit = this.isFitToCell(this.currentPageBounds.height - this.currentBounds.y, this.Grid, row);\n                        if (isFit) {\n                            this.isPaginate = true;\n                        }\n                    }\n                    else if (this.Grid.allowRowBreakAcrossPages && this.Grid.LayoutFormat != null && this.Grid.LayoutFormat.layout == PdfLayoutType.Paginate && this.Grid.LayoutFormat.break != PdfLayoutBreakType.FitElement && row.isRowHeightSet && this.currentBounds.y + height > this.currentPageBounds.height) {\n                        isFit = this.isFitToCell(this.currentPageBounds.height - this.currentBounds.y, this.Grid, row);\n                        if (!isFit)\n                            isFit = !(this.slr !== null && this.slr.actualSize.height == 0 && this.slr.remainder != null && this.slr.remainder.length > 0 && this.remainderText == this.slr.remainder);\n                        if (isFit && this.slr != null && this.slr.lineCount > 1) {\n                            //It may text cutoff issue\n                            isFit = false;\n                        }\n                        this.remainderText = null;\n                    }\n                    if (PdfGridLayouter.repeatRowIndex > -1 && PdfGridLayouter.repeatRowIndex === row.rowIndex || isFit) {\n                        if (this.Grid.allowRowBreakAcrossPages) {\n                            result_1.isFinish = true;\n                            this.drawRowWithBreak(result_1, row, calculatedHeight);\n                            row.repeatFlag = true;\n                            row.repeatRowNumber = PdfGridLayouter.repeatRowIndex;\n                            if (row.grid.splitChildRowIndex !== -1) {\n                                result_1.isFinish = false;\n                            }\n                        }\n                        else {\n                            result_1.isFinish = false;\n                            this.drawRow(row, result_1, calculatedHeight);\n                        }\n                    }\n                    else {\n                        result_1.isFinish = false;\n                    }\n                }\n                else {\n                    result_1.isFinish = true;\n                    this.drawRow(row, result_1, calculatedHeight);\n                    row.repeatFlag = false;\n                }\n            }\n            return result_1;\n        }\n        else {\n            var skipcell = false;\n            var location_4 = new PointF(this.currentBounds.x, this.currentBounds.y);\n            // if (row.grid.isChildGrid && row.grid.allowRowBreakAcrossPages && this.startLocation.x !== this.currentBounds.x && row.width <\n            //                 this.currentPage.getClientSize().width) {\n            //     location.x = this.startLocation.x;\n            // }\n            result.bounds = new RectangleF(location_4, new SizeF(0, 0));\n            height = this.ReCalculateHeight(row, height);\n            for (var i = this.cellStartIndex; i <= this.cellEndIndex; i++) {\n                var cancelSpans = ((i > this.cellEndIndex + 1) && (row.cells.getCell(i).columnSpan > 1));\n                // let cancelSpans : boolean = false;\n                if (!cancelSpans) {\n                    for (var j = 1; j < row.cells.getCell(i).columnSpan; j++) {\n                        row.cells.getCell(i + j).isCellMergeContinue = true;\n                    }\n                }\n                var size = new SizeF(this.Grid.columns.getColumn(i).width, height);\n                // if (size.width > this.currentGraphics.clientSize.width) {\n                //     size.width = this.currentGraphics.clientSize.width;\n                // }\n                // if (this.Grid.isChildGrid && this.Grid.style.allowHorizontalOverflow) {\n                //     if (size.width >= this.currentGraphics.clientSize.width) {\n                //         size.width -= 2 * this.currentBounds.x;\n                //     }\n                // }\n                /* tslint:disable */\n                if (!this.CheckIfDefaultFormat(this.Grid.columns.getColumn(i).format) &&\n                    this.CheckIfDefaultFormat(row.cells.getCell(i).stringFormat)) {\n                    row.cells.getCell(i).stringFormat = this.Grid.columns.getColumn(i).format;\n                }\n                var cellstyle = row.cells.getCell(i).style;\n                var tempValue = ((typeof row.cells.getCell(i).value === 'string' &&\n                    row.cells.getCell(i).value !== null) ? row.cells.getCell(i).value : '');\n                row.cells.getCell(i).style = this.RaiseBeforeCellDraw(this.currentGraphics, this.currentRowIndex, i, new RectangleF(location_4, size), tempValue, cellstyle);\n                //row.cells.getCell(i).style = cellstyle;\n                if (!skipcell) {\n                    if (row.cells.getCell(i).value instanceof PdfGrid) {\n                        var grid = row.cells.getCell(i).value;\n                        grid.parentCellIndex = i;\n                    }\n                    var stringResult = row.cells.getCell(i).draw(this.currentGraphics, new RectangleF(location_4, size), cancelSpans);\n                    if (row.grid.style.allowHorizontalOverflow && (row.cells.getCell(i).columnSpan > this.cellEndIndex ||\n                        i + row.cells.getCell(i).columnSpan > this.cellEndIndex + 1) && this.cellEndIndex < row.cells.count - 1) {\n                        row.rowOverflowIndex = this.cellEndIndex;\n                    }\n                    if (row.grid.style.allowHorizontalOverflow && (row.rowOverflowIndex > 0 && (row.cells.getCell(i).columnSpan >\n                        this.cellEndIndex || i + row.cells.getCell(i).columnSpan > this.cellEndIndex + 1)) &&\n                        row.cells.getCell(i).columnSpan - this.cellEndIndex + i - 1 > 0) {\n                        row.cells.getCell(row.rowOverflowIndex + 1).value = stringResult !== null ? (stringResult.remainder !== undefined) ?\n                            stringResult.remainder : '' : '';\n                        row.cells.getCell(row.rowOverflowIndex + 1).stringFormat = row.cells.getCell(i).stringFormat;\n                        row.cells.getCell(row.rowOverflowIndex + 1).style = row.cells.getCell(i).style;\n                        row.cells.getCell(row.rowOverflowIndex + 1).columnSpan = row.cells.getCell(i).columnSpan - this.cellEndIndex + i - 1;\n                    }\n                }\n                /* tslint:enable */\n                tempValue = ((typeof row.cells.getCell(i).value === 'string' &&\n                    row.cells.getCell(i).value !== null) ? row.cells.getCell(i).value : '');\n                if (!cancelSpans) {\n                    this.raiseAfterCellDraw(this.currentGraphics, this.currentRowIndex, i, new RectangleF(location_4, size), tempValue, row.cells.getCell(i).style);\n                }\n                if (row.cells.getCell(i).value instanceof PdfGrid) {\n                    var grid = row.cells.getCell(i).value;\n                    if (this.Grid.columns.getColumn(i).width >= this.currentGraphics.clientSize.width) {\n                        location_4.x = grid.rowLayoutBoundsWidth;\n                        location_4.x += grid.style.cellSpacing;\n                    }\n                    else {\n                        location_4.x += this.Grid.columns.getColumn(i).width;\n                    }\n                }\n                else {\n                    location_4.x += this.Grid.columns.getColumn(i).width;\n                }\n            }\n            if (!row.rowMergeComplete || row.isRowHeightSet) {\n                this.currentBounds.y += height;\n            }\n            result.bounds = new RectangleF(new PointF(result.bounds.x, result.bounds.y), new SizeF(location_4.x, location_4.y));\n        }\n    };\n    PdfGridLayouter.prototype.isFitToCell = function (currentHeight, grid, gridRow) {\n        var isFit = false;\n        var layouter = new PdfStringLayouter();\n        for (var i = 0; i < gridRow.cells.count; i++) {\n            var cell = gridRow.cells.getCell(i);\n            if (typeof cell.value !== 'undefined' && cell.value !== null && typeof cell.value === 'string') {\n                var font = null;\n                if (typeof cell.style.font !== 'undefined' && cell.style.font != null) {\n                    font = cell.style.font;\n                }\n                else if (typeof cell.row.style.font !== 'undefined' && cell.row.style.font != null) {\n                    font = cell.row.style.font;\n                }\n                else if (typeof cell.row.grid.style.font !== 'undefined' && cell.row.grid.style.font != null) {\n                    font = cell.row.grid.style.font;\n                }\n                else {\n                    font = PdfDocument.defaultFont;\n                }\n                this.remainderText = cell.value;\n                var width = cell.width;\n                var column = grid.columns.getColumn(i);\n                if (column.isCustomWidth && cell.width > column.width) {\n                    width = column.width;\n                }\n                this.slr = layouter.layout(cell.value, font, cell.stringFormat, new SizeF(width, currentHeight), false, this.currentPageBounds);\n                var height = this.slr.actualSize.height;\n                if (cell.value !== '' && height === 0) {\n                    isFit = false;\n                    break;\n                }\n                if (cell.style !== null && cell.style.borders !== null && cell.style.borders.top !== null && cell.style.borders.bottom !== null) {\n                    height += (cell.style.borders.top.width + cell.style.borders.bottom.width) * 2;\n                }\n                if (this.slr.lineCount > 1 && cell.stringFormat != null && cell.stringFormat.lineSpacing != 0) {\n                    height += (this.slr.lineCount - 1) * (cell.style.stringFormat.lineSpacing);\n                }\n                if (cell.style.cellPadding === null) {\n                    height += (grid.style.cellPadding.top + grid.style.cellPadding.bottom);\n                }\n                else {\n                    height += (grid.style.cellPadding.top + grid.style.cellPadding.bottom);\n                }\n                height += grid.style.cellSpacing;\n                if (currentHeight > height || (typeof this.slr.remainder !== 'undefined' && this.slr.remainder !== null)) {\n                    isFit = true;\n                    break;\n                }\n            }\n        }\n        return isFit;\n    };\n    PdfGridLayouter.prototype.drawRowWithBreak = function (result, row, calculateHeight) {\n        var location = new PointF(this.currentBounds.x, this.currentBounds.y);\n        if (row.grid.isChildGrid && row.grid.allowRowBreakAcrossPages && this.startLocation.x !== this.currentBounds.x) {\n            location.x = this.startLocation.x;\n        }\n        result.bounds = new RectangleF(location, new SizeF(0, 0));\n        this.gridHeight = row.rowBreakHeight > 0 ? this.currentPageBounds.height : 0;\n        // Calculate the remaining height.\n        if (row.grid.style.cellPadding.top + this.currentBounds.y + row.grid.style.cellPadding.bottom < this.currentPageBounds.height) {\n            row.rowBreakHeight = this.currentBounds.y + calculateHeight - this.currentPageBounds.height;\n        }\n        // else {\n        //     row.rowBreakHeight = calculateHeight;\n        //     result.isFinish = false;\n        //     return;\n        // }\n        // No need to explicit break if the row height is equal to grid height.\n        for (var i = 0; i < row.cells.count; i++) {\n            var cell = row.cells.getCell(i);\n            var cellHeight = cell.measureHeight();\n            if (cellHeight === calculateHeight && cell.value instanceof PdfGrid) {\n                row.rowBreakHeight = 0;\n            }\n            // else if (cellHeight === calculateHeight && (cell.value as PdfGrid) === null) {\n            //     row.rowBreakHeight = this.currentBounds.y + calculateHeight - this.currentPageBounds.height;\n            // }\n        }\n        for (var i = this.cellStartIndex; i <= this.cellEndIndex; i++) {\n            var gridColumnWidth = this.Grid.columns.getColumn(i).width;\n            var cancelSpans = ((row.cells.getCell(i).columnSpan + i > this.cellEndIndex + 1) &&\n                (row.cells.getCell(i).columnSpan > 1));\n            if (!cancelSpans) {\n                for (var k = 1; k < row.cells.getCell(i).columnSpan; k++) {\n                    row.cells.getCell(i + k).isCellMergeContinue = true;\n                    gridColumnWidth += this.Grid.columns.getColumn(i + k).width;\n                }\n            }\n            var size = new SizeF(gridColumnWidth, this.gridHeight > 0.0 ? this.gridHeight :\n                this.currentPageBounds.height);\n            // if (size.width === 0) {\n            //     size = new SizeF(row.cells.getCell(i).width, size.height);\n            // }\n            // if (!this.CheckIfDefaultFormat(this.Grid.columns.getColumn(i).format) &&\n            //         this.CheckIfDefaultFormat((row.cells.getCell(i).stringFormat))) {\n            //     row.cells.getCell(i).stringFormat = this.Grid.columns.getColumn(i).format;\n            // }\n            var cellstyle1 = row.cells.getCell(i).style;\n            row.cells.getCell(i).style = cellstyle1;\n            var skipcell = false;\n            var stringResult = null;\n            if (!skipcell) {\n                row.cells.getCell(i)._rowHeight = row.height;\n                stringResult = row.cells.getCell(i).draw(this.currentGraphics, new RectangleF(location, size), cancelSpans);\n            }\n            //If still row is to be drawn, set cell finished drawing cell as false and update the text to be drawn.\n            if (row.rowBreakHeight > 0.0) {\n                if (stringResult != null && typeof stringResult.remainder !== 'undefined') {\n                    row.cells.getCell(i).FinishedDrawingCell = false;\n                    row.cells.getCell(i).remainingString = stringResult.remainder == null ? ' ' : stringResult.remainder;\n                    row.rowBreakHeight = calculateHeight - stringResult.actualSize.height;\n                }\n            }\n            result.isFinish = (!result.isFinish) ? result.isFinish : row.cells.getCell(i).FinishedDrawingCell;\n            // let tempValue : string = ((typeof row.cells.getCell(i).value === 'string' &&\n            //row.cells.getCell(i).value !== null) ? row.cells.getCell(i).value : '') as string;\n            // if (!cancelSpans) {\n            //     // this.raiseAfterCellDraw(this.currentGraphics, this.currentRowIndex, i,\n            //     //           new RectangleF(location, size), tempValue, row.cells.getCell(i).style);            \n            //     this.raiseAfterCellDraw(this.currentGraphics, this.currentRowIndex, i, new RectangleF(location, size),\n            //                             (row.cells.getCell(i).value as string) ? row.cells.getCell(i).value.toString() : ' ',\n            //                             row.cells.getCell(i).style);\n            //     }                \n            if (row.cells.getCell(i).value instanceof PdfGrid) {\n                var grid = row.cells.getCell(i).value;\n                this.rowBreakPageHeightCellIndex = i;\n                // row.cells.getCell(i).pageCount = grid.listOfNavigatePages.length;\n                // for (let j : number = 0;j<grid.listOfNavigatePages.length;j++){\n                //     let pageIndex : number =grid.listOfNavigatePages.indexOf(j);\n                //             this.Grid.listOfNavigatePages.push(pageIndex);\n                //     }\n                if (this.Grid.columns.getColumn(i).width >= this.currentGraphics.clientSize.width) {\n                    location.x = this.rowLayoutBoundsWidth;\n                    location.x += grid.style.cellSpacing;\n                }\n                else {\n                    location.x += this.Grid.columns.getColumn(i).width;\n                }\n            }\n            else {\n                location.x += this.Grid.columns.getColumn(i).width;\n            }\n        }\n        this.currentBounds.y += this.gridHeight > 0.0 ? this.gridHeight : calculateHeight;\n        result.bounds = new RectangleF(new PointF(result.bounds.x, result.bounds.y), new SizeF(location.x, location.y));\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    PdfGridLayouter.repeatRowIndex = -1;\n    return PdfGridLayouter;\n}(ElementLayouter));\nexport { PdfGridLayouter };\n// recalculateBounds : boolean, clientSize : SizeF\n//Implementation\n/**\n * `Initializes` internal data.\n * @private\n */\n//Internal declaration\nvar PdfGridLayoutResult = /** @class */ (function (_super) {\n    __extends(PdfGridLayoutResult, _super);\n    /**\n     * Constructor\n     * @private\n     */\n    function PdfGridLayoutResult(page, bounds) {\n        return _super.call(this, page, bounds) || this;\n    }\n    return PdfGridLayoutResult;\n}(PdfLayoutResult));\nexport { PdfGridLayoutResult };\n/**\n * `PdfGridLayoutFormat` class represents a flexible grid that consists of columns and rows.\n */\nvar PdfGridLayoutFormat = /** @class */ (function (_super) {\n    __extends(PdfGridLayoutFormat, _super);\n    /**\n     * Initializes a new instance of the `PdfGridLayoutFormat` class.\n     * @private\n     */\n    function PdfGridLayoutFormat(baseFormat) {\n        return _super.call(this, baseFormat) || this;\n    }\n    return PdfGridLayoutFormat;\n}(PdfLayoutFormat));\nexport { PdfGridLayoutFormat };\nvar GridCellEventArgs = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initialize a new instance for `GridCellEventArgs` class.\n     * @private\n     */\n    function GridCellEventArgs(graphics, rowIndex, cellIndex, bounds, value) {\n        this.gridRowIndex = rowIndex;\n        this.gridCellIndex = cellIndex;\n        this.internalValue = value;\n        this.gridBounds = bounds;\n        this.pdfGraphics = graphics;\n    }\n    Object.defineProperty(GridCellEventArgs.prototype, \"rowIndex\", {\n        // Properties\n        /**\n         * Gets the value of current `row index`.\n         * @private\n         */\n        get: function () {\n            return this.gridRowIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridCellEventArgs.prototype, \"cellIndex\", {\n        /**\n         * Gets the value of current `cell index`.\n         * @private\n         */\n        get: function () {\n            return this.gridCellIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridCellEventArgs.prototype, \"value\", {\n        /**\n         * Gets the actual `value` of current cell.\n         * @private\n         */\n        get: function () {\n            return this.internalValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridCellEventArgs.prototype, \"bounds\", {\n        /**\n         * Gets the `bounds` of current cell.\n         * @private\n         */\n        get: function () {\n            return this.gridBounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridCellEventArgs.prototype, \"graphics\", {\n        /**\n         * Gets the instance of `current graphics`.\n         * @private\n         */\n        get: function () {\n            return this.pdfGraphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return GridCellEventArgs;\n}());\nexport { GridCellEventArgs };\nvar PdfGridBeginCellDrawEventArgs = /** @class */ (function (_super) {\n    __extends(PdfGridBeginCellDrawEventArgs, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `StartCellLayoutEventArgs` class.\n     * @private\n     */\n    function PdfGridBeginCellDrawEventArgs(graphics, rowIndex, cellIndex, bounds, value, style) {\n        var _this = _super.call(this, graphics, rowIndex, cellIndex, bounds, value) || this;\n        _this.style = style;\n        return _this;\n    }\n    Object.defineProperty(PdfGridBeginCellDrawEventArgs.prototype, \"skip\", {\n        // Properties\n        /**\n         * Gets or sets a value indicating whether the value of this cell should be `skipped`.\n         * @private\n         */\n        get: function () {\n            return this.bSkip;\n        },\n        set: function (value) {\n            this.bSkip = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridBeginCellDrawEventArgs.prototype, \"style\", {\n        /**\n         * Gets or sets a `style` value of the cell.\n         * @private\n         */\n        get: function () {\n            return this.cellStyle;\n        },\n        set: function (value) {\n            this.cellStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridBeginCellDrawEventArgs;\n}(GridCellEventArgs));\nexport { PdfGridBeginCellDrawEventArgs };\nvar PdfGridEndCellDrawEventArgs = /** @class */ (function (_super) {\n    __extends(PdfGridEndCellDrawEventArgs, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `PdfGridEndCellLayoutEventArgs` class.\n     * @private\n     */\n    function PdfGridEndCellDrawEventArgs(graphics, rowIndex, cellIndex, bounds, value, style) {\n        var _this = _super.call(this, graphics, rowIndex, cellIndex, bounds, value) || this;\n        _this.cellStyle = style;\n        return _this;\n    }\n    Object.defineProperty(PdfGridEndCellDrawEventArgs.prototype, \"style\", {\n        // Propertise\n        /**\n         * Get the `PdfGridCellStyle`.\n         * @private\n         */\n        get: function () {\n            return this.cellStyle;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridEndCellDrawEventArgs;\n}(GridCellEventArgs));\nexport { PdfGridEndCellDrawEventArgs };\nvar PdfCancelEventArgs = /** @class */ (function () {\n    function PdfCancelEventArgs() {\n    }\n    Object.defineProperty(PdfCancelEventArgs.prototype, \"cancel\", {\n        // Properties\n        /**\n         * Gets and Sets the value of `cancel`.\n         * @private\n         */\n        get: function () {\n            return this.isCancel;\n        },\n        set: function (value) {\n            this.isCancel = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfCancelEventArgs;\n}());\nexport { PdfCancelEventArgs };\nvar BeginPageLayoutEventArgs = /** @class */ (function (_super) {\n    __extends(BeginPageLayoutEventArgs, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `BeginPageLayoutEventArgs` class with the specified rectangle and page.\n     * @private\n     */\n    function BeginPageLayoutEventArgs(bounds, page) {\n        var _this = _super.call(this) || this;\n        _this.bounds = bounds;\n        _this.pdfPage = page;\n        return _this;\n    }\n    Object.defineProperty(BeginPageLayoutEventArgs.prototype, \"bounds\", {\n        // Properties\n        /**\n         * Gets or sets value that indicates the lay outing `bounds` on the page.\n         * @private\n         */\n        get: function () {\n            return this.cellBounds;\n        },\n        set: function (value) {\n            this.cellBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BeginPageLayoutEventArgs.prototype, \"page\", {\n        /**\n         * Gets the `page` where the lay outing should start.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return BeginPageLayoutEventArgs;\n}(PdfCancelEventArgs));\nexport { BeginPageLayoutEventArgs };\n/**\n * `EndPageLayoutEventArgs` class is alternate for end page layout events.\n */\nvar EndPageLayoutEventArgs = /** @class */ (function (_super) {\n    __extends(EndPageLayoutEventArgs, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `EndPageLayoutEventArgs` class. with the specified 'PdfLayoutResult'.\n     * @private\n     */\n    function EndPageLayoutEventArgs(result) {\n        var _this = _super.call(this) || this;\n        _this.layoutResult = result;\n        return _this;\n    }\n    Object.defineProperty(EndPageLayoutEventArgs.prototype, \"result\", {\n        // Properties\n        /**\n         * Gets the lay outing `result` of the page.\n         * @private\n         */\n        get: function () {\n            return this.layoutResult;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EndPageLayoutEventArgs.prototype, \"nextPage\", {\n        /**\n         * Gets or sets a value indicating the `next page` where the element should be layout.\n         * @private\n         */\n        get: function () {\n            return this.nextPdfPage;\n        },\n        set: function (value) {\n            this.nextPdfPage = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return EndPageLayoutEventArgs;\n}(PdfCancelEventArgs));\nexport { EndPageLayoutEventArgs };\n/**\n * `PdfGridBeginPageLayoutEventArgs` class is alternate for begin page layout events.\n */\nvar PdfGridBeginPageLayoutEventArgs = /** @class */ (function (_super) {\n    __extends(PdfGridBeginPageLayoutEventArgs, _super);\n    // Constructors\n    /**\n     * Initialize a new instance of `PdfGridBeginPageLayoutEventArgs` class.\n     * @private\n     */\n    function PdfGridBeginPageLayoutEventArgs(bounds, page, startRow) {\n        var _this = _super.call(this, bounds, page) || this;\n        _this.startRow = startRow;\n        return _this;\n    }\n    Object.defineProperty(PdfGridBeginPageLayoutEventArgs.prototype, \"startRowIndex\", {\n        // Properties\n        /**\n         * Gets the `start row index`.\n         * @private\n         */\n        get: function () {\n            return this.startRow;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridBeginPageLayoutEventArgs;\n}(BeginPageLayoutEventArgs));\nexport { PdfGridBeginPageLayoutEventArgs };\n/**\n * `PdfGridEndPageLayoutEventArgs` class is alternate for begin page layout events.\n */\nvar PdfGridEndPageLayoutEventArgs = /** @class */ (function (_super) {\n    __extends(PdfGridEndPageLayoutEventArgs, _super);\n    // Constructors\n    /**\n     * Initialize a new instance of `PdfGridEndPageLayoutEventArgs` class.\n     * @private\n     */\n    function PdfGridEndPageLayoutEventArgs(result) {\n        return _super.call(this, result) || this;\n    }\n    return PdfGridEndPageLayoutEventArgs;\n}(EndPageLayoutEventArgs));\nexport { PdfGridEndPageLayoutEventArgs };\nvar RowLayoutResult = /** @class */ (function () {\n    //Constructors\n    /**\n     * Initializes a new instance of the `RowLayoutResult` class.\n     * @private\n     */\n    function RowLayoutResult() {\n        this.layoutedBounds = new RectangleF(0, 0, 0, 0);\n    }\n    Object.defineProperty(RowLayoutResult.prototype, \"isFinish\", {\n        /**\n         * Gets or sets a value indicating whether this instance `is finish`.\n         * @private\n         */\n        get: function () {\n            return this.bIsFinished;\n        },\n        set: function (value) {\n            this.bIsFinished = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RowLayoutResult.prototype, \"bounds\", {\n        /**\n         * Gets or sets the `bounds`.\n         * @private\n         */\n        get: function () {\n            return this.layoutedBounds;\n        },\n        set: function (value) {\n            this.layoutedBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return RowLayoutResult;\n}());\nexport { RowLayoutResult };\n", "import { PdfGrid } from './pdf-grid';\nimport { PdfGridCellStyle } from './styles/style';\nimport { PdfStringLayouter } from './../../graphics/fonts/string-layouter';\nimport { PdfDocument } from './../../document/pdf-document';\nimport { PdfStringFormat } from './../../graphics/fonts/pdf-string-format';\nimport { RectangleF, PointF, SizeF } from './../../drawing/pdf-drawing';\nimport { PdfDashStyle, PdfLineCap } from './../../graphics/enum';\nimport { PdfBorderOverlapStyle } from './../tables/light-tables/enum';\nimport { PdfSolidBrush } from './../../graphics/brushes/pdf-solid-brush';\nimport { PdfColor } from './../../graphics/pdf-color';\nimport { PdfImage } from './../../graphics/images/pdf-image';\nimport { PdfBitmap } from './../../graphics/images/pdf-bitmap';\nimport { PdfTextWebLink } from './../../annotations/pdf-text-web-link';\nimport { PdfLayoutType } from './../../graphics/figures/enum';\nimport { PdfGridLayouter, PdfGridLayoutFormat } from './../../structured-elements/grid/layout/grid-layouter';\nimport { PdfLayoutParams } from '../../../implementation/graphics/figures/base/element-layouter';\n/**\n * `PdfGridCell` class represents the schema of a cell in a 'PdfGrid'.\n */\nvar PdfGridCell = /** @class */ (function () {\n    function PdfGridCell(row) {\n        /**\n         * `Width` of the cell.\n         * @default 0\n         * @private\n         */\n        this.cellWidth = 0;\n        /**\n         * `Height` of the cell.\n         * @default 0\n         * @private\n         */\n        this.cellHeight = 0;\n        /**\n         * `tempval`to stores current width .\n         * @default 0\n         * @private\n         */\n        this.tempval = 0;\n        this.fontSpilt = false;\n        /**\n         * Specifies weather the `cell is drawn`.\n         * @default true\n         * @private\n         */\n        this.finsh = true;\n        /**\n         * The `remaining height` of row span.\n         * @default 0\n         * @private\n         */\n        this.rowSpanRemainingHeight = 0;\n        this.hasRowSpan = false;\n        this.hasColSpan = false;\n        /**\n         * the 'isFinish' is set to page finish\n         */\n        this.isFinish = true;\n        /**\n         * The `present' to store the current cell.\n         * @default false\n         * @private\n         */\n        this.present = false;\n        this.gridRowSpan = 1;\n        this.colSpan = 1;\n        if (typeof row !== 'undefined') {\n            this.gridRow = row;\n        }\n    }\n    Object.defineProperty(PdfGridCell.prototype, \"isCellMergeContinue\", {\n        //Properties\n        get: function () {\n            return this.internalIsCellMergeContinue;\n        },\n        set: function (value) {\n            this.internalIsCellMergeContinue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"isRowMergeContinue\", {\n        get: function () {\n            return this.internalIsRowMergeContinue;\n        },\n        set: function (value) {\n            this.internalIsRowMergeContinue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"isCellMergeStart\", {\n        get: function () {\n            return this.internalIsCellMergeStart;\n        },\n        set: function (value) {\n            this.internalIsCellMergeStart = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"isRowMergeStart\", {\n        get: function () {\n            return this.internalIsRowMergeStart;\n        },\n        set: function (value) {\n            this.internalIsRowMergeStart = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"remainingString\", {\n        /**\n         * Gets or sets the `remaining string` after the row split between pages.\n         * @private\n         */\n        get: function () {\n            return this.remaining;\n        },\n        set: function (value) {\n            this.remaining = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"FinishedDrawingCell\", {\n        /**\n         * Gets or sets the `FinishedDrawingCell` .\n         * @private\n         */\n        get: function () {\n            return this.isFinish;\n        },\n        set: function (value) {\n            this.isFinish = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"stringFormat\", {\n        /**\n         * Gets or sets the `string format`.\n         * @private\n         */\n        get: function () {\n            if (this.format == null) {\n                this.format = new PdfStringFormat();\n            }\n            return this.format;\n        },\n        set: function (value) {\n            this.format = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"row\", {\n        /**\n         * Gets or sets the parent `row`.\n         * @private\n         */\n        get: function () {\n            return this.gridRow;\n        },\n        set: function (value) {\n            this.gridRow = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"value\", {\n        /**\n         * Gets or sets the `value` of the cell.\n         * @private\n         */\n        get: function () {\n            return this.objectValue;\n        },\n        set: function (value) {\n            this.objectValue = value;\n            if (this.objectValue instanceof PdfGrid) {\n                this.row.grid.isSingleGrid = false;\n                var grid = this.objectValue;\n                grid.ParentCell = this;\n                this.objectValue.isChildGrid = true;\n                var rowCount = this.row.grid.rows.count;\n                for (var i = 0; i < rowCount; i++) {\n                    var row = this.row.grid.rows.getRow(i);\n                    var colCount = row.cells.count;\n                    for (var j = 0; j < colCount; j++) {\n                        var cell = row.cells.getCell(j);\n                        cell.parent = this;\n                    }\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"rowSpan\", {\n        /**\n         * Gets or sets a value that indicates the total number of rows that cell `spans` within a PdfGrid.\n         * @private\n         */\n        get: function () {\n            return this.gridRowSpan;\n        },\n        set: function (value) {\n            if (value < 1) {\n                throw new Error('ArgumentException : Invalid span specified, must be greater than or equal to 1');\n            }\n            else {\n                this.gridRowSpan = value;\n                this.row.rowSpanExists = true;\n                this.row.grid.hasRowSpanSpan = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"style\", {\n        /**\n         * Gets or sets the cell `style`.\n         * @private\n         */\n        get: function () {\n            if (this.cellStyle == null) {\n                this.cellStyle = new PdfGridCellStyle();\n            }\n            return this.cellStyle;\n        },\n        set: function (value) {\n            this.cellStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"height\", {\n        /**\n         * Gets the `height` of the PdfGrid cell.[Read-Only].\n         * @private\n         */\n        get: function () {\n            if (this.cellHeight === 0) {\n                this.cellHeight = this.measureHeight();\n            }\n            return this.cellHeight;\n        },\n        set: function (value) {\n            this.cellHeight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"columnSpan\", {\n        /**\n         * Gets or sets a value that indicates the total number of columns that cell `spans` within a PdfGrid.\n         * @private\n         */\n        get: function () {\n            return this.colSpan;\n        },\n        set: function (value) {\n            if (value < 1) {\n                throw Error('Invalid span specified, must be greater than or equal to 1');\n            }\n            else {\n                this.colSpan = value;\n                this.row.columnSpanExists = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"width\", {\n        /**\n         * Gets the `width` of the PdfGrid cell.[Read-Only].\n         * @private\n         */\n        get: function () {\n            if (this.cellWidth === 0 || this.row.grid.isComplete) {\n                this.cellWidth = this.measureWidth();\n            }\n            return Math.round(this.cellWidth);\n        },\n        set: function (value) {\n            this.cellWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * `Calculates the width`.\n     * @private\n     */\n    PdfGridCell.prototype.measureWidth = function () {\n        // .. Calculate the cell text width.\n        // .....Add border widths, cell spacings and paddings to the width.\n        var width = 0;\n        var layouter = new PdfStringLayouter();\n        if (typeof this.objectValue === 'string') {\n            /* tslint:disable */\n            var slr = layouter.layout(this.objectValue, this.getTextFont(), this.stringFormat, new SizeF(Number.MAX_VALUE, Number.MAX_VALUE), false, new SizeF(0, 0));\n            width += slr.actualSize.width;\n            width += (this.style.borders.left.width + this.style.borders.right.width) * 2;\n        }\n        else if (this.objectValue instanceof PdfGrid) {\n            width = this.objectValue.size.width;\n            //width += this.objectValue.style.cellSpacing;\n        }\n        else if (this.objectValue instanceof PdfImage || this.objectValue instanceof PdfBitmap) {\n            width += this.objectValue.width;\n        }\n        else if (this.objectValue instanceof PdfTextWebLink) {\n            var webLink = this.objectValue;\n            var result = layouter.layout(webLink.text, webLink.font, webLink.stringFormat, new SizeF(0, 0), false, new SizeF(0, 0));\n            /* tslint:enable */\n            width += result.actualSize.width;\n            width += (this.style.borders.left.width + this.style.borders.right.width) * 2;\n        }\n        if (!(this.objectValue instanceof PdfGrid)) {\n            if (this.style.cellPadding != null) {\n                width += (this.style.cellPadding.left + this.style.cellPadding.right);\n            }\n            else {\n                width += (this.row.grid.style.cellPadding.left + this.row.grid.style.cellPadding.right);\n            }\n        }\n        else {\n            if (this.style.cellPadding != null || typeof this.style.cellPadding !== 'undefined') {\n                if (typeof this.style.cellPadding.left !== 'undefined' && this.style.cellPadding.hasLeftPad) {\n                    width += this.style.cellPadding.left;\n                }\n                if (typeof this.style.cellPadding.right !== 'undefined' && this.style.cellPadding.hasRightPad) {\n                    width += this.style.cellPadding.right;\n                }\n            }\n            else {\n                if (typeof this.row.grid.style.cellPadding.left !== 'undefined' && this.row.grid.style.cellPadding.hasLeftPad) {\n                    width += this.row.grid.style.cellPadding.left;\n                }\n                if (typeof this.row.grid.style.cellPadding.right !== 'undefined' && this.row.grid.style.cellPadding.hasRightPad) {\n                    width += this.row.grid.style.cellPadding.right;\n                }\n            }\n        }\n        width += this.row.grid.style.cellSpacing;\n        return width;\n    };\n    /**\n     * Draw the `cell background`.\n     * @private\n     */\n    PdfGridCell.prototype.drawCellBackground = function (graphics, bounds) {\n        var backgroundBrush = this.getBackgroundBrush();\n        //graphics.isTemplateGraphics = true;\n        if (backgroundBrush != null) {\n            graphics.save();\n            graphics.drawRectangle(backgroundBrush, bounds.x, bounds.y, bounds.width, bounds.height);\n            graphics.restore();\n        }\n        if (this.style.backgroundImage != null) {\n            var image = this.getBackgroundImage();\n            graphics.drawImage(this.style.backgroundImage, bounds.x, bounds.y, bounds.width, bounds.height);\n        }\n    };\n    /**\n     * `Adjusts the text layout area`.\n     * @private\n     */\n    /* tslint:disable */\n    PdfGridCell.prototype.adjustContentLayoutArea = function (bounds) {\n        //Add Padding value to its Cell Bounds\n        var returnBounds = new RectangleF(bounds.x, bounds.y, bounds.width, bounds.height);\n        if (!(this.objectValue instanceof PdfGrid)) {\n            if (typeof this.style.cellPadding === 'undefined' || this.style.cellPadding == null) {\n                returnBounds.x += this.gridRow.grid.style.cellPadding.left + this.cellStyle.borders.left.width;\n                returnBounds.y += this.gridRow.grid.style.cellPadding.top + this.cellStyle.borders.top.width;\n                returnBounds.width -= (this.gridRow.grid.style.cellPadding.right + this.gridRow.grid.style.cellPadding.left);\n                returnBounds.height -= (this.gridRow.grid.style.cellPadding.bottom + this.gridRow.grid.style.cellPadding.top);\n                returnBounds.height -= (this.cellStyle.borders.top.width + this.cellStyle.borders.bottom.width);\n            }\n            else {\n                returnBounds.x += this.style.cellPadding.left + this.cellStyle.borders.left.width;\n                returnBounds.y += this.style.cellPadding.top + this.cellStyle.borders.top.width;\n                returnBounds.width -= (this.style.cellPadding.right + this.style.cellPadding.left);\n                returnBounds.width -= (this.cellStyle.borders.left.width + this.cellStyle.borders.right.width);\n                returnBounds.height -= (this.style.cellPadding.bottom + this.style.cellPadding.top);\n                returnBounds.height -= (this.cellStyle.borders.top.width + this.cellStyle.borders.bottom.width);\n                if (this.rowSpan === 1) {\n                    returnBounds.width -= (this.style.borders.left.width);\n                }\n            }\n        }\n        else {\n            if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {\n                if (this.gridRow.grid.style.cellPadding !== null && typeof this.gridRow.grid.style.cellPadding !== 'undefined') {\n                    var hasLeftPad = this.gridRow.grid.style.cellPadding.hasLeftPad;\n                    var hasTopPad = this.gridRow.grid.style.cellPadding.hasTopPad;\n                    var hasRightPad = this.gridRow.grid.style.cellPadding.hasRightPad;\n                    var hasBottomPad = this.gridRow.grid.style.cellPadding.hasBottomPad;\n                    if (hasLeftPad || hasTopPad || hasRightPad || hasBottomPad) {\n                        if (typeof this.gridRow.grid.style.cellPadding.left !== 'undefined' && hasLeftPad) {\n                            returnBounds.x += this.gridRow.grid.style.cellPadding.left + this.cellStyle.borders.left.width;\n                            returnBounds.width -= this.gridRow.grid.style.cellPadding.left;\n                        }\n                        if (typeof this.gridRow.grid.style.cellPadding.top !== 'undefined' && hasTopPad) {\n                            returnBounds.y += this.gridRow.grid.style.cellPadding.top + this.cellStyle.borders.top.width;\n                            returnBounds.height -= this.gridRow.grid.style.cellPadding.top;\n                        }\n                        if (typeof this.gridRow.grid.style.cellPadding.right !== 'undefined' && hasRightPad) {\n                            returnBounds.width -= this.gridRow.grid.style.cellPadding.right;\n                        }\n                        if (typeof this.gridRow.grid.style.cellPadding.bottom !== 'undefined' && hasBottomPad) {\n                            returnBounds.height -= this.gridRow.grid.style.cellPadding.bottom;\n                        }\n                    }\n                    else {\n                        var format = this.getStringFormat();\n                        if (format.alignment === null || typeof format.alignment === 'undefined') {\n                            returnBounds.x += this.row.grid.style.cellPadding.left;\n                            returnBounds.y += this.row.grid.style.cellPadding.top;\n                        }\n                    }\n                }\n                else {\n                    var format = this.getStringFormat();\n                    if (format.alignment === null || typeof format.alignment === 'undefined') {\n                        returnBounds.x += this.row.grid.style.cellPadding.left;\n                        returnBounds.y += this.row.grid.style.cellPadding.top;\n                    }\n                }\n            }\n            else {\n                if (typeof this.style.cellPadding.left !== 'undefined' && this.style.cellPadding.hasLeftPad) {\n                    returnBounds.x += this.style.cellPadding.left + this.cellStyle.borders.left.width;\n                    returnBounds.width -= this.style.cellPadding.left;\n                }\n                if (typeof this.style.cellPadding.top !== 'undefined' && this.style.cellPadding.hasTopPad) {\n                    returnBounds.y += this.style.cellPadding.top + this.cellStyle.borders.top.width;\n                    returnBounds.height -= this.style.cellPadding.top;\n                }\n                if (typeof this.style.cellPadding.right !== 'undefined' && this.style.cellPadding.hasRightPad) {\n                    returnBounds.width -= this.style.cellPadding.right;\n                }\n                if (typeof this.style.cellPadding.bottom !== 'undefined' && this.style.cellPadding.hasBottomPad) {\n                    returnBounds.height -= this.style.cellPadding.bottom;\n                }\n            }\n            returnBounds.width -= (this.cellStyle.borders.left.width + this.cellStyle.borders.right.width);\n            returnBounds.height -= (this.cellStyle.borders.top.width + this.cellStyle.borders.bottom.width);\n        }\n        return returnBounds;\n    };\n    /**\n     * `Draws` the specified graphics.\n     * @private\n     */\n    PdfGridCell.prototype.draw = function (graphics, bounds, cancelSubsequentSpans) {\n        var isrowbreak = false;\n        /*if (!this.row.grid.isSingleGrid)\n        {\n            //Check whether the Grid Span to Nextpage\n            if ((this.remainingString != null) || (PdfGridLayouter.repeatRowIndex != -1))\n            {\n                this.DrawParentCells(graphics, bounds, true);\n            }\n            else if (this.row.grid.rows.count > 1)\n            {\n                for (let i : number  = 0; i < this.row.grid.rows.count; i++)\n                {\n                    if (this.row == this.row.grid.rows.getRow(i))\n                    {\n                        if (this.row.grid.rows.getRow(i).rowBreakHeight > 0)\n                            isrowbreak = true;\n                        if ((i > 0) && (isrowbreak))\n                            this.DrawParentCells(graphics, bounds, false);\n                    }\n                }\n            }\n        } */\n        var result = null;\n        /*if (cancelSubsequentSpans)\n        {\n            //..Cancel all subsequent cell spans, if no space exists.\n            let currentCellIndex : number = this.row.cells.indexOf(this);\n            for (let i : number = currentCellIndex + 1; i <= currentCellIndex + this.colSpan; i++)\n            {\n                this.row.cells.getCell(i).isCellMergeContinue = false;\n                this.row.cells.getCell(i).isRowMergeContinue = false;\n            }\n            this.colSpan = 1;\n        }*/\n        //..Skip cells which were already covered by spanmap.\n        if (this.internalIsCellMergeContinue || this.internalIsRowMergeContinue) {\n            if (this.internalIsCellMergeContinue && this.row.grid.style.allowHorizontalOverflow) {\n                if ((this.row.rowOverflowIndex > 0 && (this.row.cells.indexOf(this) != this.row.rowOverflowIndex + 1)) || (this.row.rowOverflowIndex == 0 && this.internalIsCellMergeContinue)) {\n                    return result;\n                }\n            }\n            else {\n                return result;\n            }\n        }\n        //Adjust bounds with Row and Column Spacing\n        bounds = this.adjustOuterLayoutArea(bounds, graphics);\n        this.drawCellBackground(graphics, bounds);\n        var textPen = this.getTextPen();\n        var textBrush = this.getTextBrush();\n        if (typeof textPen === 'undefined' && typeof textBrush === 'undefined') {\n            textBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n        }\n        var font = this.getTextFont();\n        var strFormat = this.getStringFormat();\n        var innerLayoutArea = bounds;\n        if (innerLayoutArea.height >= graphics.clientSize.height) {\n            // If to break row to next page.\n            if (this.row.grid.allowRowBreakAcrossPages) {\n                innerLayoutArea.height -= innerLayoutArea.y;\n                if (typeof this._rowHeight !== 'undefined' && this._rowHeight !== null && innerLayoutArea.height > this._rowHeight) {\n                    innerLayoutArea.height = this._rowHeight;\n                }\n                //bounds.height -= bounds.y;\n                // if(this.row.grid.isChildGrid)\n                // {\n                //     innerLayoutArea.height -= this.row.grid.ParentCell.row.grid.style.cellPadding.bottom;\n                // }\n            }\n            // if user choose to cut the row whose height is more than page height.\n            // else\n            // {\n            //     innerLayoutArea.height = graphics.clientSize.height;\n            //     bounds.height = graphics.clientSize.height;\n            // }\n        }\n        innerLayoutArea = this.adjustContentLayoutArea(innerLayoutArea);\n        if (typeof this.objectValue === 'string' || typeof this.remaining === 'string') {\n            var temp = void 0;\n            var layoutRectangle = void 0;\n            if (innerLayoutArea.height < font.height)\n                layoutRectangle = new RectangleF(innerLayoutArea.x, innerLayoutArea.y, innerLayoutArea.width, font.height);\n            else\n                layoutRectangle = innerLayoutArea;\n            if (innerLayoutArea.height < font.height && this.row.grid.isChildGrid && this.row.grid.ParentCell != null) {\n                var height = layoutRectangle.height - this.row.grid.ParentCell.row.grid.style.cellPadding.bottom - this.row.grid.style.cellPadding.bottom;\n                if (this.row.grid.splitChildRowIndex != -1) {\n                    this.fontSpilt = true;\n                    this.row.rowFontSplit = true;\n                }\n                if (height > 0 && height < font.height)\n                    layoutRectangle.height = height;\n                // else if (height + this.row.grid.style.cellPadding.bottom > 0 && height + this.row.grid.style.cellPadding.bottom < font.height)\n                //     layoutRectangle.height = height + this.row.grid.style.cellPadding.bottom;\n                // else if (bounds.height < font.height)\n                //     layoutRectangle.height = bounds.height;\n                // else if (bounds.height - this.row.grid.ParentCell.row.grid.style.cellPadding.bottom < font.height)\n                //     layoutRectangle.height = bounds.height - this.row.grid.ParentCell.row.grid.style.cellPadding.bottom;                        \n            }\n            if (this.gridRow.grid.style.cellSpacing != 0) {\n                layoutRectangle.width -= this.gridRow.grid.style.cellSpacing;\n                bounds.width -= this.gridRow.grid.style.cellSpacing;\n            }\n            if (this.isFinish) {\n                // if (this.row.grid.splitChildRowIndex != -1 && !this.row.grid.isChildGrid && typeof this.remaining === 'undefined'){\n                //     this.remaining = '';\n                //     graphics.drawString(this.remaining, font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);\n                // } else {\n                temp = this.remaining === '' ? this.remaining : this.objectValue;\n                graphics.drawString(temp, font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);\n                if (this.row.grid.splitChildRowIndex != -1 && !this.row.grid.isChildGrid && typeof this.remaining === 'undefined') {\n                    this.remaining = '';\n                    //graphics.drawString(this.remaining, font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);\n                }\n            }\n            else {\n                if (typeof this.remaining == 'undefined' || this.remaining === null) {\n                    this.remaining = '';\n                }\n                if (this.row.repeatFlag) {\n                    graphics.drawString(this.remaining, font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);\n                }\n                //  else {\n                //     if(this.row.grid.ParentCell.row.repeatFlag) {\n                //         graphics.drawString((this.remaining as string), font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);                    \n                //     } else {\n                //         layoutRectangle.height = this.row.height;\n                //         graphics.drawString((this.objectValue as string), font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);\n                //         bounds.height = this.row.height;\n                //     }\n                //  }\n                this.isFinish = true;\n                //graphics.drawString((this.remaining as string), font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);\n            }\n            result = graphics.stringLayoutResult;\n            // if(this.row.grid.isChildGrid && this.row.rowBreakHeight > 0 && result !=null) {\n            //     bounds.height -= this.row.grid.ParentCell.row.grid.style.cellPadding.bottom;\n            // }\n        }\n        else if (this.objectValue instanceof PdfGrid) {\n            var childGrid = this.objectValue;\n            childGrid.isChildGrid = true;\n            childGrid.ParentCell = this;\n            var layoutRect = void 0;\n            layoutRect = innerLayoutArea;\n            if (this.gridRow.grid.style.cellSpacing != 0) {\n                bounds.width -= this.gridRow.grid.style.cellSpacing;\n            }\n            // layoutRect = bounds;\n            // if (this.style.cellPadding != null){\n            //     layoutRect = bounds;            \n            // } else if((this.row.grid.style.cellPadding != null) && (childGrid.style.cellPadding.bottom === 0.5) && (childGrid.style.cellPadding.top === 0.5)\n            //                               && (childGrid.style.cellPadding.left === 5.76) && (childGrid.style.cellPadding.right === 5.76)\n            //                               && (this.gridRow.grid.style.cellSpacing === 0) && (childGrid.style.cellSpacing === 0)) {\n            //     layoutRect = innerLayoutArea;\n            // }\n            // if(this.objectValue.style.cellPadding != null && typeof this.objectValue.style.cellPadding !== 'undefined'){\n            //     layoutRect = bounds;\n            // }           \n            var layouter = new PdfGridLayouter(childGrid);\n            var format = new PdfGridLayoutFormat();\n            if (this.row.grid.LayoutFormat != null)\n                format = this.row.grid.LayoutFormat;\n            else\n                format.layout = PdfLayoutType.Paginate;\n            var param = new PdfLayoutParams();\n            if (graphics.layer != null) {\n                // Define layout parameters.\n                param.page = graphics.page;\n                param.bounds = layoutRect;\n                param.format = format;\n                //Set the span \n                childGrid.setSpan();\n                childGrid.checkSpan();\n                // Draw the child grid.\n                var childGridResult = layouter.Layouter(param);\n                //let childGridResult : PdfLayoutResult = layouter.innerLayout(param);\n                this.value = childGrid;\n                if (this.row.grid.splitChildRowIndex !== -1) {\n                    this.height = this.row.rowBreakHeightValue;\n                }\n                if (param.page != childGridResult.page) //&& (isWidthGreaterthanParent != true))\n                 {\n                    if (this.row.rowBreakHeightValue !== null && typeof this.row.rowBreakHeightValue !== 'undefined')\n                        childGridResult.bounds.height = this.row.rowBreakHeightValue;\n                    if (this.row.rowBreakHeight == 0)\n                        this.row.NestedGridLayoutResult = childGridResult;\n                    else\n                        this.row.rowBreakHeight = this.row.rowBreakHeightValue;\n                    //bounds.height = this.row.rowBreakHeight;\n                    //After drawing paginated nested grid, the bounds of the parent grid in start page should be corrected for borders.\n                    //bounds.height = graphics.clientSize.height - bounds.y;\n                }\n            }\n        }\n        else if (this.objectValue instanceof PdfImage || this.objectValue instanceof PdfBitmap) {\n            var imageBounds = new RectangleF(innerLayoutArea.x, innerLayoutArea.y, innerLayoutArea.width, innerLayoutArea.height);\n            var image = this.objectValue;\n            if (image.width <= innerLayoutArea.width) {\n                imageBounds.width = image.width;\n            }\n            if (image.height <= innerLayoutArea.height) {\n                imageBounds.height = image.height;\n            }\n            graphics.drawImage(this.objectValue, imageBounds.x, imageBounds.y, imageBounds.width, imageBounds.height);\n        }\n        else if (this.objectValue instanceof PdfTextWebLink) {\n            this.objectValue.draw(graphics.currentPage, innerLayoutArea);\n        }\n        else if (typeof this.objectValue === 'undefined') {\n            this.objectValue = \"\";\n            graphics.drawString(this.objectValue, font, textPen, textBrush, innerLayoutArea.x, innerLayoutArea.y, innerLayoutArea.width, innerLayoutArea.height, strFormat);\n            if (this.style.cellPadding != null && this.style.cellPadding.bottom == 0 && this.style.cellPadding.left == 0 && this.style.cellPadding.right == 0 && this.style.cellPadding.top == 0) {\n                bounds.width -= (this.style.borders.left.width + this.style.borders.right.width);\n            }\n            if (this.gridRow.grid.style.cellSpacing != 0) {\n                bounds.width -= this.gridRow.grid.style.cellSpacing;\n            }\n        }\n        if (this.style.borders != null) {\n            if (!this.fontSpilt)\n                this.drawCellBorders(graphics, bounds);\n            else {\n                if (this.row.grid.ParentCell.row.grid.splitChildRowIndex != -1) {\n                    this.row.rowFontSplit = false;\n                    this.drawCellBorders(graphics, bounds);\n                }\n            }\n        }\n        return result;\n    };\n    /* tslint:enable */\n    /**\n     * Draws the `cell border` constructed by drawing lines.\n     * @private\n     */\n    PdfGridCell.prototype.drawCellBorders = function (graphics, bounds) {\n        if (this.row.grid.style.borderOverlapStyle === PdfBorderOverlapStyle.Inside) {\n            bounds.x += this.style.borders.left.width;\n            bounds.y += this.style.borders.top.width;\n            bounds.width -= this.style.borders.right.width;\n            bounds.height -= this.style.borders.bottom.width;\n        }\n        var p1 = new PointF(bounds.x, bounds.y + bounds.height);\n        var p2 = new PointF(bounds.x, bounds.y);\n        var pen = this.cellStyle.borders.left;\n        if (this.cellStyle.borders.left.dashStyle === PdfDashStyle.Solid) {\n            pen.lineCap = PdfLineCap.Square;\n        }\n        // SetTransparency(ref graphics, pen);\n        if (pen.width !== 0) {\n            graphics.drawLine(pen, p1, p2);\n        }\n        p1 = new PointF(bounds.x + bounds.width, bounds.y);\n        p2 = new PointF(bounds.x + bounds.width, bounds.y + bounds.height);\n        pen = this.cellStyle.borders.right;\n        if ((bounds.x + bounds.width) > (graphics.clientSize.width - (pen.width / 2))) {\n            p1 = new PointF(graphics.clientSize.width - (pen.width / 2), bounds.y);\n            p2 = new PointF(graphics.clientSize.width - (pen.width / 2), bounds.y + bounds.height);\n        }\n        if (this.cellStyle.borders.right.dashStyle === PdfDashStyle.Solid) {\n            pen.lineCap = PdfLineCap.Square;\n        }\n        if (pen.width !== 0) {\n            graphics.drawLine(pen, p1, p2);\n        }\n        p1 = new PointF(bounds.x, bounds.y);\n        p2 = new PointF(bounds.x + bounds.width, bounds.y);\n        pen = this.cellStyle.borders.top;\n        if (this.cellStyle.borders.top.dashStyle === PdfDashStyle.Solid) {\n            pen.lineCap = PdfLineCap.Square;\n        }\n        if (pen.width !== 0) {\n            graphics.drawLine(pen, p1, p2);\n        }\n        p1 = new PointF(bounds.x + bounds.width, bounds.y + bounds.height);\n        p2 = new PointF(bounds.x, bounds.y + bounds.height);\n        pen = this.cellStyle.borders.bottom;\n        if ((bounds.y + bounds.height) > (graphics.clientSize.height - (pen.width / 2))) {\n            p1 = new PointF((bounds.x + bounds.width), (graphics.clientSize.height - (pen.width / 2)));\n            p2 = new PointF(bounds.x, (graphics.clientSize.height - (pen.width / 2)));\n        }\n        if (this.cellStyle.borders.bottom.dashStyle === PdfDashStyle.Solid) {\n            pen.lineCap = PdfLineCap.Square;\n        }\n        if (pen.width !== 0) {\n            graphics.drawLine(pen, p1, p2);\n        }\n    };\n    // private setTransparency(graphics : PdfGraphics, pen : PdfPen) : void {\n    //     let alpha : number = (pen.color.a / 255) as number;\n    //     graphics.save();\n    //     graphics.setTransparency(alpha);\n    // }\n    /**\n     * `Adjusts the outer layout area`.\n     * @private\n     */\n    /* tslint:disable */\n    PdfGridCell.prototype.adjustOuterLayoutArea = function (bounds, g) {\n        var isHeader = false;\n        var cellSpacing = this.row.grid.style.cellSpacing;\n        if (cellSpacing > 0) {\n            bounds = new RectangleF(bounds.x + cellSpacing, bounds.y + cellSpacing, bounds.width - cellSpacing, bounds.height - cellSpacing);\n        }\n        var currentColIndex = this.row.cells.indexOf(this);\n        if (this.columnSpan > 1 || (this.row.rowOverflowIndex > 0 && (currentColIndex == this.row.rowOverflowIndex + 1) && this.isCellMergeContinue)) {\n            var span = this.columnSpan;\n            if (span == 1 && this.isCellMergeContinue) {\n                for (var j = currentColIndex + 1; j < this.row.grid.columns.count; j++) {\n                    if (this.row.cells.getCell(j).isCellMergeContinue)\n                        span++;\n                    else\n                        break;\n                }\n            }\n            var totalWidth = 0;\n            for (var i = currentColIndex; i < currentColIndex + span; i++) {\n                if (this.row.grid.style.allowHorizontalOverflow) {\n                    var width = void 0;\n                    var compWidth = this.row.grid.size.width < g.clientSize.width ? this.row.grid.size.width : g.clientSize.width;\n                    if (this.row.grid.size.width > g.clientSize.width) {\n                        width = bounds.x + totalWidth + this.row.grid.columns.getColumn(i).width;\n                    }\n                    else {\n                        width = totalWidth + this.row.grid.columns.getColumn(i).width;\n                    }\n                    if (width > compWidth) {\n                        break;\n                    }\n                }\n                totalWidth += this.row.grid.columns.getColumn(i).width;\n            }\n            totalWidth -= this.row.grid.style.cellSpacing;\n            bounds.width = totalWidth;\n        }\n        if (this.rowSpan > 1 || this.row.rowSpanExists) {\n            var span = this.rowSpan;\n            var currentRowIndex = this.row.grid.rows.rowCollection.indexOf(this.row);\n            if (currentRowIndex == -1) {\n                currentRowIndex = this.row.grid.headers.indexOf(this.row);\n                if (currentRowIndex != -1) {\n                    isHeader = true;\n                }\n            }\n            // if (span == 1 && this.isCellMergeContinue) {\n            //         for (let j : number = currentRowIndex + 1; j < this.row.grid.rows.count; j++)\n            //         {\n            //             let flag : boolean = (isHeader ? this.row.grid.headers.getHeader(j).cells.getCell(currentColIndex).isCellMergeContinue : this.row.grid.rows.getRow(j).cells.getCell(currentColIndex).isCellMergeContinue);\n            //             if (flag)\n            //                 span++;\n            //             else\n            //                 break;\n            //         }\n            // }\n            var totalHeight = 0;\n            var max = 0;\n            for (var i = currentRowIndex; i < currentRowIndex + span; i++) {\n                totalHeight += (isHeader ? this.row.grid.headers.getHeader(i).height : this.row.grid.rows.getRow(i).height);\n                var row = this.row.grid.rows.getRow(i);\n                var rowIndex = this.row.grid.rows.rowCollection.indexOf(row);\n                /*if (this.rowSpan > 1)\n                    {\n                        for (let k : number = 0; k < this.row.cells.count; k++) {\n                            let cell : PdfGridCell = this.row.cells.getCell(k);\n                            if(cell.rowSpan>1)\n                            {\n                                let tempHeight : number =0;\n                                \n                                for (let j :number = i; j < i +cell.rowSpan; j++)\n                                {\n                                    if (!this.row.grid.rows.getRow(j).isRowSpanRowHeightSet)\n                                        this.row.grid.rows.getRow(j).isRowHeightSet = false;\n                                    tempHeight += this.row.grid.rows.getRow(j).height;\n                                    if (!this.row.grid.rows.getRow(j).isRowSpanRowHeightSet)\n                                        this.row.grid.rows.getRow(j).isRowHeightSet = true;\n                                }\n                                //To check the Row spanned cell height is greater than the total spanned row height.\n                                if(cell.height>tempHeight)\n                                {\n                                    if (max < (cell.height - tempHeight))\n                                    {\n                                        max = cell.height - tempHeight;\n                                        if (this.rowSpanRemainingHeight != 0 && max > this.rowSpanRemainingHeight)\n                                        {\n                                            max += this.rowSpanRemainingHeight;\n                                        }\n                                        let index :number = row.cells.indexOf(cell);\n                                        //set the m_rowspanRemainingHeight to last rowspanned row.\n                                        this.row.grid.rows.getRow((rowIndex +cell.rowSpan) - 1).cells.getCell(index).rowSpanRemainingHeight = max;\n                                        this.rowSpanRemainingHeight = this.row.grid.rows.getRow((rowIndex + cell.rowSpan) - 1).cells.getCell(index).rowSpanRemainingHeight;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    if (!this.row.grid.rows.getRow(i).isRowSpanRowHeightSet)\n                    this.row.grid.rows.getRow(i).isRowHeightSet = true;*/\n            }\n            var cellIndex = this.row.cells.indexOf(this);\n            totalHeight -= this.row.grid.style.cellSpacing;\n            // if (this.row.cells.getCell(cellIndex).height > totalHeight && (!this.row.grid.rows.getRow((currentRowIndex + span) - 1).isRowHeightSet)) {\n            //      this.row.grid.rows.getRow((currentRowIndex + span) - 1).cells.getCell(cellIndex).rowSpanRemainingHeight = this.row.cells.getCell(cellIndex).height - totalHeight;\n            //      totalHeight = this.row.cells.getCell(cellIndex).height;\n            //      bounds.height = totalHeight;\n            // } else {\n            bounds.height = totalHeight;\n            //  }\n            if (!this.row.rowMergeComplete) {\n                bounds.height = totalHeight;\n            }\n        }\n        return bounds;\n    };\n    /* tslint:enable */\n    /**\n     * Gets the `text font`.\n     * @private\n     */\n    PdfGridCell.prototype.getTextFont = function () {\n        if (typeof this.style.font !== 'undefined' && this.style.font != null) {\n            return this.style.font;\n        }\n        else if (typeof this.row.style.font !== 'undefined' && this.row.style.font != null) {\n            return this.row.style.font;\n        }\n        else if (typeof this.row.grid.style.font !== 'undefined' && this.row.grid.style.font != null) {\n            return this.row.grid.style.font;\n        }\n        else {\n            return PdfDocument.defaultFont;\n        }\n    };\n    /**\n     * Gets the `text brush`.\n     * @private\n     */\n    PdfGridCell.prototype.getTextBrush = function () {\n        if (typeof this.style.textBrush !== 'undefined' && this.style.textBrush != null) {\n            return this.style.textBrush;\n        }\n        else if (typeof this.row.style.textBrush !== 'undefined' && this.row.style.textBrush != null) {\n            return this.row.style.textBrush;\n        }\n        else {\n            return this.row.grid.style.textBrush;\n        }\n    };\n    /**\n     * Gets the `text pen`.\n     * @private\n     */\n    PdfGridCell.prototype.getTextPen = function () {\n        if (typeof this.style.textPen !== 'undefined' && this.style.textPen != null) {\n            return this.style.textPen;\n        }\n        else if (typeof this.row.style.textPen !== 'undefined' && this.row.style.textPen != null) {\n            return this.row.style.textPen;\n        }\n        else {\n            return this.row.grid.style.textPen;\n        }\n    };\n    /**\n     * Gets the `background brush`.\n     * @private\n     */\n    PdfGridCell.prototype.getBackgroundBrush = function () {\n        if (typeof this.style.backgroundBrush !== 'undefined' && this.style.backgroundBrush != null) {\n            return this.style.backgroundBrush;\n        }\n        else if (typeof this.row.style.backgroundBrush !== 'undefined' && this.row.style.backgroundBrush != null) {\n            return this.row.style.backgroundBrush;\n        }\n        else {\n            return this.row.grid.style.backgroundBrush;\n        }\n    };\n    /**\n     * Gets the `background image`.\n     * @private\n     */\n    PdfGridCell.prototype.getBackgroundImage = function () {\n        if (typeof this.style.backgroundImage !== 'undefined' && this.style.backgroundImage != null) {\n            return this.style.backgroundImage;\n        }\n        else if (typeof this.row.style.backgroundImage !== 'undefined' && this.row.style.backgroundImage != null) {\n            return this.row.style.backgroundImage;\n        }\n        else {\n            return this.row.grid.style.backgroundImage;\n        }\n    };\n    /**\n     * Gets the current `StringFormat`.\n     * @private\n     */\n    PdfGridCell.prototype.getStringFormat = function () {\n        if (typeof this.style.stringFormat !== 'undefined' && this.style.stringFormat != null) {\n            return this.style.stringFormat;\n        }\n        else {\n            return this.stringFormat;\n        }\n    };\n    /**\n     * Calculates the `height`.\n     * @private\n     */\n    PdfGridCell.prototype.measureHeight = function () {\n        // .. Calculate the cell text height.\n        // .....Add border widths, cell spacings and paddings to the height.\n        var width = this.calculateWidth();\n        // //check whether the Current PdfGridCell has padding\n        if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {\n            width -= (this.gridRow.grid.style.cellPadding.right + this.gridRow.grid.style.cellPadding.left);\n            //width -= (this.style.borders.left.width + this.style.borders.right.width);\n        }\n        else {\n            width -= (this.style.cellPadding.right + this.style.cellPadding.left);\n            width -= (this.style.borders.left.width + this.style.borders.right.width);\n        }\n        var height = 0;\n        var layouter = new PdfStringLayouter();\n        if (typeof this.objectValue === 'string' || typeof this.remaining === 'string') {\n            var currentValue = this.objectValue;\n            /* tslint:disable */\n            if (!this.isFinish)\n                currentValue = !(this.remaining === null || this.remaining === '' ||\n                    typeof this.remaining === 'undefined') ? this.remaining : this.objectValue;\n            var slr = null;\n            var cellIndex = this.row.cells.indexOf(this);\n            if (this.gridRow.grid.style.cellSpacing != 0) {\n                width -= this.gridRow.grid.style.cellSpacing * 2;\n            }\n            if (!this.row.cells.getCell(cellIndex).hasColSpan && !this.row.cells.getCell(cellIndex).hasRowSpan) {\n                if (this.gridRow.grid.isChildGrid) {\n                    if (width < 0) {\n                        this.tempval = width;\n                        if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {\n                            this.tempval += (this.gridRow.grid.style.cellPadding.right + this.gridRow.grid.style.cellPadding.left);\n                        }\n                        else {\n                            this.tempval += (this.style.cellPadding.right + this.style.cellPadding.left);\n                            this.tempval += (this.style.borders.left.width + this.style.borders.right.width);\n                        }\n                    }\n                    else {\n                        this.tempval = width;\n                    }\n                    slr = layouter.layout(currentValue, this.getTextFont(), this.stringFormat, new SizeF(this.tempval, 0), false, new SizeF(0, 0));\n                    height += slr.actualSize.height;\n                }\n                else {\n                    slr = layouter.layout(currentValue, this.getTextFont(), this.stringFormat, new SizeF(width, 0), false, new SizeF(0, 0));\n                    height += slr.actualSize.height;\n                }\n            }\n            /* tslint:enable */\n            height += (this.style.borders.top.width + this.style.borders.bottom.width) * 2;\n        }\n        else if (this.objectValue instanceof PdfGrid) {\n            var cellIndex = this.row.cells.indexOf(this);\n            var internalWidth = 0;\n            if ((this.style.cellPadding != null || typeof this.style.cellPadding !== 'undefined')) {\n                internalWidth = this.calculateWidth();\n                if (typeof this.style.cellPadding.left !== 'undefined' && this.style.cellPadding.hasLeftPad) {\n                    internalWidth -= this.style.cellPadding.left;\n                }\n                if (typeof this.style.cellPadding.right !== 'undefined' && this.style.cellPadding.hasRightPad) {\n                    internalWidth -= this.style.cellPadding.right;\n                }\n            }\n            else if ((this.row.grid.style.cellPadding != null || typeof this.row.grid.style.cellPadding !== 'undefined')) {\n                internalWidth = this.calculateWidth();\n                if (typeof this.row.grid.style.cellPadding.left !== 'undefined' && this.row.grid.style.cellPadding.hasLeftPad) {\n                    internalWidth -= this.row.grid.style.cellPadding.left;\n                }\n                if (typeof this.row.grid.style.cellPadding.right !== 'undefined' && this.row.grid.style.cellPadding.hasRightPad) {\n                    internalWidth -= this.row.grid.style.cellPadding.right;\n                }\n            }\n            else {\n                internalWidth = this.calculateWidth();\n            }\n            this.objectValue.tempWidth = internalWidth;\n            if (!this.row.cells.getCell(cellIndex).hasColSpan && !this.row.cells.getCell(cellIndex).hasRowSpan) {\n                height = this.objectValue.size.height;\n            }\n            else {\n                height += (this.style.borders.top.width + this.style.borders.bottom.width) * 2;\n            }\n            if (this.gridRow.grid.style.cellSpacing !== 0) {\n                width -= this.gridRow.grid.style.cellSpacing * 2;\n                //height += (this.row.grid.style.cellPadding.top + this.row.grid.style.cellPadding.bottom);\n            }\n            if (this.style.cellPadding != null || typeof this.style.cellPadding !== 'undefined') {\n                if (typeof this.row.grid.style.cellPadding.top !== 'undefined' && this.row.grid.style.cellPadding.hasTopPad) {\n                    height += this.row.grid.style.cellPadding.top;\n                }\n                if (this.row.grid.style.cellPadding.hasBottomPad && typeof this.row.grid.style.cellPadding.bottom !== 'undefined') {\n                    height += this.row.grid.style.cellPadding.bottom;\n                }\n            }\n            height += this.objectValue.style.cellSpacing;\n        }\n        else if (this.objectValue instanceof PdfImage || this.objectValue instanceof PdfBitmap) {\n            height += this.objectValue.height;\n        }\n        else if (this.objectValue instanceof PdfTextWebLink) {\n            var webLink = this.objectValue;\n            /* tslint:disable */\n            var slr = layouter.layout(webLink.text, webLink.font, webLink.stringFormat, new SizeF(width, 0), false, new SizeF(0, 0));\n            /* tslint:enable */\n            height += slr.actualSize.height;\n            height += (this.style.borders.top.width + this.style.borders.bottom.width) * 2;\n        }\n        else if (typeof this.objectValue === 'undefined') {\n            if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {\n                width -= (this.gridRow.grid.style.cellPadding.right + this.gridRow.grid.style.cellPadding.left);\n            }\n            else {\n                width -= (this.style.cellPadding.right + this.style.cellPadding.left);\n                width -= (this.style.borders.left.width + this.style.borders.right.width);\n            }\n            height += (this.style.borders.top.width + this.style.borders.bottom.width) * 2;\n        }\n        //Add padding top and bottom value to height\n        if (!(this.objectValue instanceof PdfGrid)) {\n            if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {\n                height += (this.row.grid.style.cellPadding.top + this.row.grid.style.cellPadding.bottom);\n            }\n            else {\n                height += (this.style.cellPadding.top + this.style.cellPadding.bottom);\n            }\n        }\n        else {\n            if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {\n                if (typeof this.row.grid.style.cellPadding.top !== 'undefined' && this.row.grid.style.cellPadding.hasTopPad) {\n                    height += this.row.grid.style.cellPadding.top;\n                }\n                if (typeof this.row.grid.style.cellPadding.bottom !== 'undefined' && this.row.grid.style.cellPadding.hasBottomPad) {\n                    height += this.row.grid.style.cellPadding.bottom;\n                }\n            }\n            else {\n                if (typeof this.style.cellPadding.top !== 'undefined' && this.style.cellPadding.hasTopPad) {\n                    height += this.style.cellPadding.top;\n                }\n                if (typeof this.style.cellPadding.bottom !== 'undefined' && this.style.cellPadding.hasBottomPad) {\n                    height += this.style.cellPadding.bottom;\n                }\n            }\n        }\n        height += this.row.grid.style.cellSpacing;\n        return height;\n    };\n    /**\n     * return the calculated `width` of the cell.\n     * @private\n     */\n    PdfGridCell.prototype.calculateWidth = function () {\n        var cellIndex = this.row.cells.indexOf(this);\n        var rowindex = this.row.grid.rows.rowCollection.indexOf(this.row);\n        var columnSpan = this.columnSpan;\n        var width = 0;\n        if (columnSpan === 1) {\n            for (var i = 0; i < columnSpan; i++) {\n                width += this.row.grid.columns.getColumn(cellIndex + i).width;\n            }\n        }\n        else if (columnSpan > 1) {\n            for (var i = 0; i < columnSpan; i++) {\n                width += this.row.grid.columns.getColumn(cellIndex + i).width;\n                if ((i + 1) < columnSpan) {\n                    this.row.cells.getCell(cellIndex + i + 1).hasColSpan = true;\n                }\n            }\n        }\n        if (this.parent != null && this.parent.row.width > 0) {\n            if ((this.row.grid.isChildGrid) && this.parent != null && (this.row.width > this.parent.row.width)) {\n                width = 0;\n                for (var j = 0; j < this.parent.columnSpan; j++) {\n                    width += this.parent.row.grid.columns.getColumn(j).width;\n                }\n                width = width / this.row.cells.count;\n            }\n        }\n        return width;\n    };\n    return PdfGridCell;\n}());\nexport { PdfGridCell };\n/**\n * `PdfGridCellCollection` class provides access to an ordered,\n * strongly typed collection of 'PdfGridCell' objects.\n * @private\n */\nvar PdfGridCellCollection = /** @class */ (function () {\n    //Constructor\n    /**\n     * Initializes a new instance of the `PdfGridCellCollection` class with the row.\n     * @private\n     */\n    function PdfGridCellCollection(row) {\n        /**\n         * @hidden\n         * @private\n         */\n        this.cells = [];\n        this.gridRow = row;\n    }\n    //Properties\n    /**\n     * Gets the current `cell`.\n     * @private\n     */\n    PdfGridCellCollection.prototype.getCell = function (index) {\n        if (index < 0 || index >= this.count) {\n            throw new Error('IndexOutOfRangeException');\n        }\n        return this.cells[index];\n    };\n    Object.defineProperty(PdfGridCellCollection.prototype, \"count\", {\n        /**\n         * Gets the cells `count`.[Read-Only].\n         * @private\n         */\n        get: function () {\n            return this.cells.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridCellCollection.prototype.add = function (cell) {\n        if (typeof cell === 'undefined') {\n            var tempcell = new PdfGridCell();\n            this.add(tempcell);\n            return cell;\n        }\n        else {\n            cell.row = this.gridRow;\n            this.cells.push(cell);\n        }\n    };\n    /**\n     * Returns the `index of` a particular cell in the collection.\n     * @private\n     */\n    PdfGridCellCollection.prototype.indexOf = function (cell) {\n        return this.cells.indexOf(cell);\n    };\n    return PdfGridCellCollection;\n}());\nexport { PdfGridCellCollection };\n", "import { PdfGridCell } from './pdf-grid-cell';\nimport { PdfStringFormat } from './../../graphics/fonts/pdf-string-format';\n/**\n * `PdfGridColumn` class represents the schema of a column in a 'PdfGrid'.\n */\nvar PdfGridColumn = /** @class */ (function () {\n    //Constructors\n    /**\n     * Initializes a new instance of the `PdfGridColumn` class with the parent grid.\n     * @private\n     */\n    function PdfGridColumn(grid) {\n        /**\n         * The `width` of the column.\n         * @default 0\n         * @private\n         */\n        this.columnWidth = 0;\n        this.grid = grid;\n    }\n    Object.defineProperty(PdfGridColumn.prototype, \"width\", {\n        /**\n         * Gets or sets the `width` of the 'PdfGridColumn'.\n         * @private\n         */\n        get: function () {\n            return this.columnWidth;\n        },\n        set: function (value) {\n            this.isCustomWidth = true;\n            this.columnWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridColumn.prototype, \"format\", {\n        /**\n         * Gets or sets the information about the text `formatting`.\n         * @private\n         */\n        get: function () {\n            if (this.stringFormat == null) {\n                this.stringFormat = new PdfStringFormat(); //GetDefaultFormat();\n            }\n            return this.stringFormat;\n        },\n        set: function (value) {\n            this.stringFormat = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridColumn;\n}());\nexport { PdfGridColumn };\n/**\n * `PdfGridColumnCollection` class provides access to an ordered,\n * strongly typed collection of 'PdfGridColumn' objects.\n * @private\n */\nvar PdfGridColumnCollection = /** @class */ (function () {\n    //properties\n    //Constructors\n    /**\n     * Initializes a new instance of the `PdfGridColumnCollection` class with the parent grid.\n     * @private\n     */\n    function PdfGridColumnCollection(grid) {\n        /**\n         * @hidden\n         * @private\n         */\n        this.internalColumns = [];\n        /**\n         * @hidden\n         * @private\n         */\n        this.columnWidth = 0;\n        this.grid = grid;\n        this.internalColumns = [];\n    }\n    //Iplementation\n    /**\n     * `Add` a new column to the 'PdfGrid'.\n     * @private\n     */\n    PdfGridColumnCollection.prototype.add = function (count) {\n        // public add(column : PdfGridColumn) : void\n        // public add(arg : number|PdfGridColumn) : void {\n        // if (typeof arg === 'number') {\n        for (var i = 0; i < count; i++) {\n            this.internalColumns.push(new PdfGridColumn(this.grid));\n            for (var index = 0; index < this.grid.rows.count; index++) {\n                var row = this.grid.rows.getRow(index);\n                var cell = new PdfGridCell();\n                cell.value = '';\n                row.cells.add(cell);\n            }\n        }\n        // } else {\n        //     let column : PdfGridColumn = new PdfGridColumn(this.grid);\n        //     this.columns.push(column);\n        //     return column;\n        // }\n    };\n    Object.defineProperty(PdfGridColumnCollection.prototype, \"count\", {\n        /**\n         * Gets the `number of columns` in the 'PdfGrid'.[Read-Only].\n         * @private\n         */\n        get: function () {\n            return this.internalColumns.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridColumnCollection.prototype, \"width\", {\n        /**\n         * Gets the `widths`.\n         * @private\n         */\n        get: function () {\n            if (this.columnWidth === 0) {\n                this.columnWidth = this.measureColumnsWidth();\n            }\n            if (this.grid.initialWidth !== 0 && this.columnWidth !== this.grid.initialWidth && !this.grid.style.allowHorizontalOverflow) {\n                this.columnWidth = this.grid.initialWidth;\n                this.grid.isPageWidth = true;\n            }\n            return this.columnWidth;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridColumnCollection.prototype, \"columns\", {\n        /**\n         * Gets the `array of PdfGridColumn`.[Read-Only]\n         * @private\n         */\n        get: function () {\n            return this.internalColumns;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the `PdfGridColumn` from the specified index.[Read-Only]\n     * @private\n     */\n    PdfGridColumnCollection.prototype.getColumn = function (index) {\n        if (index >= 0 && index <= this.columns.length) {\n            return this.columns[index];\n        }\n        else {\n            throw Error('can not get the column from the index: ' + index);\n        }\n    };\n    //Implementation\n    /**\n     * `Calculates the column widths`.\n     * @private\n     */\n    PdfGridColumnCollection.prototype.measureColumnsWidth = function () {\n        var totalWidth = 0;\n        this.grid.measureColumnsWidth();\n        for (var i = 0, count = this.internalColumns.length; i < count; i++) {\n            totalWidth += this.internalColumns[i].width;\n        }\n        return totalWidth;\n    };\n    /**\n     * Gets the `widths of the columns`.\n     * @private\n     */\n    PdfGridColumnCollection.prototype.getDefaultWidths = function (totalWidth) {\n        var widths = [];\n        var summ = 0.0;\n        var subFactor = this.count;\n        for (var i = 0; i < this.count; i++) {\n            if (this.grid.isPageWidth && totalWidth >= 0 && !this.internalColumns[i].isCustomWidth) {\n                this.internalColumns[i].width = 0;\n            }\n            else {\n                widths[i] = this.internalColumns[i].width;\n                if (this.internalColumns[i].width > 0 && this.internalColumns[i].isCustomWidth) {\n                    totalWidth -= this.internalColumns[i].width;\n                    subFactor--;\n                }\n                else {\n                    widths[i] = 0;\n                }\n            }\n        }\n        for (var i = 0; i < this.count; i++) {\n            var width = totalWidth / subFactor;\n            if (widths[i] <= 0) {\n                widths[i] = width;\n            }\n        }\n        return widths;\n    };\n    return PdfGridColumnCollection;\n}());\nexport { PdfGridColumnCollection };\n", "import { PdfGridCell, PdfGridCellCollection } from './pdf-grid-cell';\nimport { PdfGridRowStyle } from './styles/style';\n/**\n * `PdfGridRow` class provides customization of the settings for the particular row.\n */\nvar PdfGridRow = /** @class */ (function () {\n    //Constructor\n    /**\n     * Initializes a new instance of the `PdfGridRow` class with the parent grid.\n     * @private\n     */\n    function PdfGridRow(grid) {\n        /**\n         * Stores the index of the overflowing row.\n         * @private\n         */\n        this.gridRowOverflowIndex = 0;\n        /**\n         * The `height` of the row.\n         * @private\n         */\n        this.rowHeight = 0;\n        /**\n         * The `width` of the row.\n         * @private\n         */\n        this.rowWidth = 0;\n        /**\n         * The `isFinish` of the row.\n         * @private\n         */\n        this.isrowFinish = false;\n        /**\n         * Check whether the Row span row height `is set explicitly`.\n         * @default false\n         * @public\n         */\n        this.isRowSpanRowHeightSet = false;\n        /**\n         * The `page count` of the row.\n         * @public\n         */\n        this.noOfPageCount = 0;\n        /**\n         * Check whether the row height `is set explicitly`.\n         * @default false\n         * @private\n         */\n        this.isRowHeightSet = false;\n        this.isPageBreakRowSpanApplied = false;\n        /**\n         * Check weather the row merge `is completed` or not.\n         * @default true\n         * @private\n         */\n        this.isRowMergeComplete = true;\n        this.repeatFlag = false;\n        this.rowFontSplit = false;\n        this.isHeaderRow = false;\n        this.pdfGrid = grid;\n    }\n    Object.defineProperty(PdfGridRow.prototype, \"rowSpanExists\", {\n        //Properties\n        /**\n         * Gets or sets a value indicating [`row span exists`].\n         * @private\n         */\n        get: function () {\n            return this.bRowSpanExists;\n        },\n        set: function (value) {\n            this.bRowSpanExists = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"cells\", {\n        /**\n         * Gets the `cells` from the selected row.[Read-Only].\n         * @private\n         */\n        get: function () {\n            if (this.gridCells == null) {\n                this.gridCells = new PdfGridCellCollection(this);\n            }\n            return this.gridCells;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"grid\", {\n        /**\n         * Gets or sets the parent `grid`.\n         * @private\n         */\n        get: function () {\n            return this.pdfGrid;\n        },\n        set: function (value) {\n            this.pdfGrid = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"style\", {\n        /**\n         * Gets or sets the row `style`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.rowStyle === 'undefined') {\n                this.rowStyle = new PdfGridRowStyle();\n                this.rowStyle.setParent(this);\n            }\n            return this.rowStyle;\n        },\n        set: function (value) {\n            this.rowStyle = value;\n            for (var i = 0; i < this.cells.count; i++) {\n                this.cells.getCell(i).style.borders = value.border;\n                if (typeof value.font !== 'undefined') {\n                    this.cells.getCell(i).style.font = value.font;\n                }\n                if (typeof value.backgroundBrush !== 'undefined') {\n                    this.cells.getCell(i).style.backgroundBrush = value.backgroundBrush;\n                }\n                if (typeof value.backgroundImage !== 'undefined') {\n                    this.cells.getCell(i).style.backgroundImage = value.backgroundImage;\n                }\n                if (typeof value.textBrush !== 'undefined') {\n                    this.cells.getCell(i).style.textBrush = value.textBrush;\n                }\n                if (typeof value.textPen !== 'undefined') {\n                    this.cells.getCell(i).style.textPen = value.textPen;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"rowBreakHeight\", {\n        /**\n         * `Height` of the row yet to be drawn after split.\n         * @private\n         */\n        get: function () {\n            if (typeof this.gridRowBreakHeight === 'undefined') {\n                this.gridRowBreakHeight = 0;\n            }\n            return this.gridRowBreakHeight;\n        },\n        set: function (value) {\n            this.gridRowBreakHeight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"rowOverflowIndex\", {\n        /**\n         * `over flow index` of the row.\n         * @private\n         */\n        get: function () {\n            return this.gridRowOverflowIndex;\n        },\n        set: function (value) {\n            this.gridRowOverflowIndex = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"height\", {\n        /**\n         * Gets or sets the `height` of the row.\n         * @private\n         */\n        get: function () {\n            if (!this.isRowHeightSet) {\n                this.rowHeight = this.measureHeight();\n            }\n            return this.rowHeight;\n        },\n        set: function (value) {\n            this.rowHeight = value;\n            this.isRowHeightSet = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"width\", {\n        /**\n         * Gets or sets the `width` of the row.\n         * @private\n         */\n        get: function () {\n            if (this.rowWidth === 0 || typeof this.rowWidth === 'undefined') {\n                this.rowWidth = this.measureWidth();\n            }\n            return this.rowWidth;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"NestedGridLayoutResult\", {\n        /**\n         * Gets or sets the row `Nested grid Layout Result`.\n         * @private\n         */\n        get: function () {\n            return this.gridResult;\n        },\n        set: function (value) {\n            this.gridResult = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"columnSpanExists\", {\n        /**\n         * Gets or sets a value indicating [`column span exists`].\n         * @private\n         */\n        get: function () {\n            return this.bColumnSpanExists;\n        },\n        set: function (value) {\n            this.bColumnSpanExists = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"rowMergeComplete\", {\n        /**\n         * Check whether the Row `has row span or row merge continue`.\n         * @private\n         */\n        get: function () {\n            return this.isRowMergeComplete;\n        },\n        set: function (value) {\n            this.isRowMergeComplete = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"rowIndex\", {\n        /**\n         * Returns `index` of the row.\n         * @private\n         */\n        get: function () {\n            return this.grid.rows.rowCollection.indexOf(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * `Calculates the height`.\n     * @private\n     */\n    PdfGridRow.prototype.measureHeight = function () {\n        var rowSpanRemainingHeight = 0;\n        var rowHeight;\n        var maxHeight = 0;\n        if (this.cells.getCell(0).rowSpan > 1) {\n            rowHeight = 0;\n        }\n        else {\n            rowHeight = this.cells.getCell(0).height;\n        }\n        for (var i = 0; i < this.cells.count; i++) {\n            var cell = this.cells.getCell(i);\n            //get the maximum rowspan remaining height.\n            if (cell.rowSpanRemainingHeight > rowSpanRemainingHeight) {\n                rowSpanRemainingHeight = cell.rowSpanRemainingHeight;\n            }\n            //skip the cell if row spanned.\n            // if (cell.isRowMergeContinue) {\n            //     continue;\n            // }\n            // if (!cell.isRowMergeContinue) {\n            //     this.rowMergeComplete = false;\n            // }\n            this.rowMergeComplete = false;\n            if (cell.rowSpan > 1) {\n                var cellIn = i;\n                var rowin = this.isHeaderRow ? this.grid.headers.indexOf(this) : this.grid.rows.rowCollection.indexOf(this);\n                for (var j = 0; j < cell.rowSpan; j++) {\n                    if ((j + 1) < cell.rowSpan) {\n                        (this.isHeaderRow ? this.grid.headers.getHeader(rowin + j + 1) : this.grid.rows.getRow(rowin + j + 1)).cells.getCell(cellIn).hasRowSpan = true;\n                    }\n                }\n                if (maxHeight < cell.height) {\n                    maxHeight = cell.height;\n                }\n                continue;\n            }\n            rowHeight = Math.max(rowHeight, cell.height);\n        }\n        if (maxHeight > rowHeight) {\n            rowHeight = maxHeight;\n        }\n        if (rowHeight === 0) {\n            rowHeight = maxHeight;\n        }\n        else if (rowSpanRemainingHeight > 0) {\n            rowHeight += rowSpanRemainingHeight;\n        }\n        return rowHeight;\n    };\n    PdfGridRow.prototype.measureWidth = function () {\n        var rowWid = 0;\n        for (var i = 0; i < this.grid.columns.count; i++) {\n            var column = this.grid.columns.getColumn(i);\n            rowWid += column.width;\n        }\n        return rowWid;\n    };\n    return PdfGridRow;\n}());\nexport { PdfGridRow };\n/**\n * `PdfGridRowCollection` class provides access to an ordered, strongly typed collection of 'PdfGridRow' objects.\n * @private\n */\nvar PdfGridRowCollection = /** @class */ (function () {\n    // Constructor\n    /**\n     * Initializes a new instance of the `PdfGridRowCollection` class with the parent grid.\n     * @private\n     */\n    function PdfGridRowCollection(grid) {\n        this.rows = [];\n        this.grid = grid;\n    }\n    Object.defineProperty(PdfGridRowCollection.prototype, \"count\", {\n        //Properties\n        /**\n         * Gets the number of header in the `PdfGrid`.[Read-Only].\n         * @private\n         */\n        get: function () {\n            return this.rows.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRowCollection.prototype, \"rowCollection\", {\n        //Implementation\n        /**\n         * Return the row collection of the `grid`.\n         * @private\n         */\n        get: function () {\n            return this.rows;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowCollection.prototype.addRow = function (arg) {\n        if (typeof arg === 'undefined') {\n            var temprow = new PdfGridRow(this.grid);\n            this.addRow(temprow);\n            return temprow;\n        }\n        else {\n            arg.style.setBackgroundBrush(this.grid.style.backgroundBrush);\n            arg.style.setFont(this.grid.style.font);\n            arg.style.setTextBrush(this.grid.style.textBrush);\n            arg.style.setTextPen(this.grid.style.textPen);\n            if (arg.cells.count === 0) {\n                for (var i = 0; i < this.grid.columns.count; i++) {\n                    arg.cells.add(new PdfGridCell());\n                }\n            }\n            this.rows.push(arg);\n        }\n    };\n    /**\n     * Return the row by index.\n     * @private\n     */\n    PdfGridRowCollection.prototype.getRow = function (index) {\n        return this.rows[index];\n    };\n    return PdfGridRowCollection;\n}());\nexport { PdfGridRowCollection };\n/**\n * `PdfGridHeaderCollection` class provides customization of the settings for the header.\n * @private\n */\nvar PdfGridHeaderCollection = /** @class */ (function () {\n    //constructor\n    /**\n     * Initializes a new instance of the `PdfGridHeaderCollection` class with the parent grid.\n     * @private\n     */\n    function PdfGridHeaderCollection(grid) {\n        /**\n         * The array to store the `rows` of the grid header.\n         * @private\n         */\n        this.rows = [];\n        this.grid = grid;\n        this.rows = [];\n    }\n    //Properties\n    /**\n     * Gets a 'PdfGridRow' object that represents the `header` row in a 'PdfGridHeaderCollection' control.[Read-Only].\n     * @private\n     */\n    PdfGridHeaderCollection.prototype.getHeader = function (index) {\n        // if (index < 0 || index >= Count) {\n        //     throw new IndexOutOfRangeException();\n        // }\n        return (this.rows[index]);\n    };\n    Object.defineProperty(PdfGridHeaderCollection.prototype, \"count\", {\n        /**\n         * Gets the `number of header` in the 'PdfGrid'.[Read-Only]\n         * @private\n         */\n        get: function () {\n            return this.rows.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridHeaderCollection.prototype.add = function (arg) {\n        if (typeof arg === 'number') {\n            var row = void 0;\n            for (var i = 0; i < arg; i++) {\n                row = new PdfGridRow(this.grid);\n                row.isHeaderRow = true;\n                for (var j = 0; j < this.grid.columns.count; j++) {\n                    row.cells.add(new PdfGridCell());\n                }\n                this.rows.push(row);\n            }\n            return this.rows;\n        }\n        else {\n            this.rows.push(arg);\n        }\n    };\n    PdfGridHeaderCollection.prototype.indexOf = function (row) {\n        return this.rows.indexOf(row);\n    };\n    return PdfGridHeaderCollection;\n}());\nexport { PdfGridHeaderCollection };\n", "var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfGrid.ts class for EJ2-PDF\n */\nimport { PdfGridColumnCollection } from './pdf-grid-column';\nimport { PdfGridRowCollection, PdfGridHeaderCollection } from './pdf-grid-row';\nimport { RectangleF, SizeF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfLayoutElement } from './../../graphics/figures/layout-element';\nimport { PdfLayoutFormat } from './../../graphics/figures/base/element-layouter';\nimport { PdfGridStyle } from './styles/style';\nimport { PdfBorders } from './styles/pdf-borders';\nimport { PdfGridLayouter } from './../../structured-elements/grid/layout/grid-layouter';\nvar PdfGrid = /** @class */ (function (_super) {\n    __extends(PdfGrid, _super);\n    //constructor\n    /**\n     * Initialize a new instance for `PdfGrid` class.\n     * @private\n     */\n    function PdfGrid() {\n        var _this = _super.call(this) || this;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.gridSize = new SizeF(0, 0);\n        /**\n         * Check the child grid is ' split or not'\n         */\n        _this.isGridSplit = false;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.isRearranged = false;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.pageBounds = new RectangleF();\n        /**\n         * @hidden\n         * @private\n         */\n        _this.listOfNavigatePages = [];\n        /**\n         * @hidden\n         * @private\n         */\n        _this.parentCellIndex = 0;\n        _this.tempWidth = 0;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.breakRow = true;\n        _this.splitChildRowIndex = -1;\n        /**\n         * The event raised on `begin cell lay outing`.\n         * @event\n         * @private\n         */\n        //public beginPageLayout : Function;\n        /**\n         * The event raised on `end cell lay outing`.\n         * @event\n         * @private\n         */\n        //public endPageLayout : Function;\n        _this.hasRowSpanSpan = false;\n        _this.hasColumnSpan = false;\n        _this.isSingleGrid = true;\n        return _this;\n    }\n    Object.defineProperty(PdfGrid.prototype, \"raiseBeginCellDraw\", {\n        //Properties\n        /**\n         * Gets a value indicating whether the `start cell layout event` should be raised.\n         * @private\n         */\n        get: function () {\n            return (typeof this.beginCellDraw !== 'undefined' && typeof this.beginCellDraw !== null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"raiseEndCellDraw\", {\n        /**\n         * Gets a value indicating whether the `end cell layout event` should be raised.\n         * @private\n         */\n        get: function () {\n            return (typeof this.endCellDraw !== 'undefined' && typeof this.endCellDraw !== null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"repeatHeader\", {\n        /**\n         * Gets or sets a value indicating whether to `repeat header`.\n         * @private\n         */\n        get: function () {\n            if (this.bRepeatHeader == null || typeof this.bRepeatHeader === 'undefined') {\n                this.bRepeatHeader = false;\n            }\n            return this.bRepeatHeader;\n        },\n        set: function (value) {\n            this.bRepeatHeader = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"allowRowBreakAcrossPages\", {\n        /**\n         * Gets or sets a value indicating whether to split or cut rows that `overflow a page`.\n         * @private\n         */\n        get: function () {\n            return this.breakRow;\n        },\n        set: function (value) {\n            this.breakRow = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"columns\", {\n        /**\n         * Gets the `column` collection of the PdfGrid.[Read-Only]\n         * @private\n         */\n        get: function () {\n            if (this.gridColumns == null || typeof this.gridColumns === 'undefined') {\n                this.gridColumns = new PdfGridColumnCollection(this);\n            }\n            return this.gridColumns;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"rows\", {\n        /**\n         * Gets the `row` collection from the PdfGrid.[Read-Only]\n         * @private\n         */\n        get: function () {\n            if (this.gridRows == null) {\n                this.gridRows = new PdfGridRowCollection(this);\n            }\n            return this.gridRows;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"headers\", {\n        /**\n         * Gets the `headers` collection from the PdfGrid.[Read-Only]\n         * @private\n         */\n        get: function () {\n            if (this.gridHeaders == null || typeof this.gridHeaders === 'undefined') {\n                this.gridHeaders = new PdfGridHeaderCollection(this);\n            }\n            return this.gridHeaders;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"initialWidth\", {\n        /**\n         * Indicating `initial width` of the page.\n         * @private\n         */\n        get: function () {\n            return this.gridInitialWidth;\n        },\n        set: function (value) {\n            this.gridInitialWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"style\", {\n        /**\n         * Gets or sets the `grid style`.\n         * @private\n         */\n        get: function () {\n            if (this.gridStyle == null) {\n                this.gridStyle = new PdfGridStyle();\n            }\n            return this.gridStyle;\n        },\n        set: function (value) {\n            if (this.gridStyle == null) {\n                this.gridStyle = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"isPageWidth\", {\n        /**\n         * Gets a value indicating whether the grid column width is considered to be `page width`.\n         * @private\n         */\n        get: function () {\n            return this.ispageWidth;\n        },\n        set: function (value) {\n            this.ispageWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"isChildGrid\", {\n        /**\n         * Gets or set if grid `is nested grid`.\n         * @private\n         */\n        get: function () {\n            return this.ischildGrid;\n        },\n        set: function (value) {\n            this.ischildGrid = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"size\", {\n        /**\n         * Gets or set if grid ' is split or not'\n         * @public\n         */\n        // public get isGridSplit() : boolean {\n        //     return this.isgridSplit;\n        // }\n        // public set isGridSplit(value : boolean) {\n        //     this.isgridSplit = value;\n        // }public get isGridSplit() : boolean {\n        //     return this.isgridSplit;\n        // }\n        // public set isGridSplit(value : boolean) {\n        //     this.isgridSplit = value;\n        // }\n        /**\n         * Gets the `size`.\n         * @private\n         */\n        get: function () {\n            if ((this.gridSize.width === 0 || typeof this.gridSize.width === 'undefined') && this.gridSize.height === 0) {\n                this.gridSize = this.measure();\n            }\n            return this.gridSize;\n            // } else {\n            //     return this.gridSize;\n            // }\n        },\n        set: function (value) {\n            this.gridSize = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"ParentCell\", {\n        get: function () {\n            return this.parentCell;\n        },\n        set: function (value) {\n            this.parentCell = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"LayoutFormat\", {\n        get: function () {\n            return this.layoutFormat;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGrid.prototype.draw = function (arg1, arg2, arg3, arg4) {\n        if (arg2 instanceof PointF && typeof arg2.width === 'undefined' && typeof arg3 === 'undefined') {\n            return this.drawHelper(arg1, arg2.x, arg2.y);\n        }\n        else if (typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'undefined') {\n            return this.drawHelper(arg1, arg2, arg3, null);\n        }\n        else if (arg2 instanceof RectangleF && typeof arg2.width !== 'undefined' && typeof arg3 === 'undefined') {\n            return this.drawHelper(arg1, arg2, null);\n        }\n        else if (arg2 instanceof PointF && typeof arg2.width === 'undefined' && arg3 instanceof PdfLayoutFormat) {\n            return this.drawHelper(arg1, arg2.x, arg2.y, arg3);\n        }\n        else if (typeof arg2 === 'number' && typeof arg3 === 'number' && (arg4 instanceof PdfLayoutFormat || arg4 == null)) {\n            var width = (arg1.graphics.clientSize.width - arg2);\n            var layoutRectangle = new RectangleF(arg2, arg3, width, 0);\n            return this.drawHelper(arg1, layoutRectangle, arg4);\n        }\n        else if (arg2 instanceof RectangleF && typeof arg2.width !== 'undefined' && typeof arg3 === 'boolean') {\n            return this.drawHelper(arg1, arg2, null);\n        }\n        else {\n            return this.drawHelper(arg1, arg2, arg3);\n        }\n    };\n    /**\n     * `measures` this instance.\n     * @private\n     */\n    PdfGrid.prototype.measure = function () {\n        var height = 0;\n        var width = this.columns.width;\n        for (var i = 0; i < this.headers.count; i++) {\n            var row = this.headers.getHeader(i);\n            height += row.height;\n        }\n        for (var i = 0; i < this.rows.count; i++) {\n            var row = this.rows.getRow(i);\n            height += row.height;\n        }\n        return new SizeF(width, height);\n    };\n    PdfGrid.prototype.onBeginCellDraw = function (args) {\n        if (this.raiseBeginCellDraw) {\n            this.beginCellDraw(this, args);\n        }\n    };\n    PdfGrid.prototype.onEndCellDraw = function (args) {\n        if (this.raiseEndCellDraw) {\n            this.endCellDraw(this, args);\n        }\n    };\n    /**\n     * `Layouts` the specified graphics.\n     * @private\n     */\n    PdfGrid.prototype.layout = function (param) {\n        var width = param.bounds.width;\n        var height = param.bounds.height;\n        var hasChanged = false;\n        if (typeof param.bounds.width === 'undefined' || param.bounds.width === 0) {\n            width = param.page.getClientSize().width - param.bounds.x;\n            hasChanged = true;\n        }\n        if (typeof param.bounds.height === 'undefined' || param.bounds.height === 0) {\n            height = param.page.getClientSize().height - param.bounds.y;\n            hasChanged = true;\n        }\n        if (hasChanged) {\n            param.bounds = new RectangleF(param.bounds.x, param.bounds.y, width, height);\n        }\n        if (this.rows.count !== 0) {\n            var currentRow = this.rows.getRow(0).cells.getCell(0).style;\n            if (currentRow.borders != null && ((currentRow.borders.left != null && currentRow.borders.left.width !== 1) ||\n                (currentRow.borders.top != null && currentRow.borders.top.width !== 1))) {\n                var x = currentRow.borders.left.width / 2;\n                var y = currentRow.borders.top.width / 2;\n                if (param.bounds.x === PdfBorders.default.right.width / 2 && param.bounds.y === PdfBorders.default.right.width / 2) {\n                    var newBound = new RectangleF(x, y, this.gridSize.width, this.gridSize.height);\n                    param.bounds = newBound;\n                }\n            }\n        }\n        this.setSpan();\n        this.checkSpan();\n        this.layoutFormat = param.format;\n        this.gridLocation = param.bounds;\n        var layouter = new PdfGridLayouter(this);\n        var result = (layouter.Layouter(param));\n        return result;\n    };\n    PdfGrid.prototype.setSpan = function () {\n        var colSpan = 1;\n        var rowSpan = 1;\n        var currentCellIndex = 0;\n        var currentRowIndex = 0;\n        var maxSpan = 0;\n        var rowCount = this.headers.count;\n        for (var i = 0; i < rowCount; i++) {\n            var row = this.headers.getHeader(i);\n            maxSpan = 0;\n            var colCount = row.cells.count;\n            for (var j = 0; j < colCount; j++) {\n                var cell = row.cells.getCell(j);\n                maxSpan = Math.max(maxSpan, cell.rowSpan);\n                //Skip setting span map for already coverted rows/columns.\n                if (!cell.isCellMergeContinue && !cell.isRowMergeContinue && (cell.columnSpan > 1 || cell.rowSpan > 1)) {\n                    if (cell.columnSpan + j > row.cells.count) {\n                        throw new Error('Invalid span specified at row ' + j.toString() + ' column ' + i.toString());\n                    }\n                    if (cell.rowSpan + i > this.headers.count) {\n                        throw new Error('Invalid span specified at Header ' + j.toString() + ' column ' + i.toString());\n                    }\n                    // if (this.rows.count !== 0 && cell.rowSpan + i > this.rows.count) {\n                    //     throw new Error('Invalid span specified at row ' + j.toString() + ' column ' + i.toString());\n                    // }\n                    if (cell.columnSpan > 1 && cell.rowSpan > 1) {\n                        colSpan = cell.columnSpan;\n                        rowSpan = cell.rowSpan;\n                        currentCellIndex = j;\n                        currentRowIndex = i;\n                        cell.isCellMergeStart = true;\n                        cell.isRowMergeStart = true;\n                        //Set Column merges for first row\n                        while (colSpan > 1) {\n                            currentCellIndex++;\n                            row.cells.getCell(currentCellIndex).isCellMergeContinue = true;\n                            row.cells.getCell(currentCellIndex).isRowMergeContinue = true;\n                            row.cells.getCell(currentCellIndex).rowSpan = rowSpan;\n                            colSpan--;\n                        }\n                        currentCellIndex = j;\n                        colSpan = cell.columnSpan;\n                        //Set Row Merges and column merges foreach subsequent rows.\n                        while (rowSpan > 1) {\n                            currentRowIndex++;\n                            this.headers.getHeader(currentRowIndex).cells.getCell(j).isRowMergeContinue = true;\n                            this.headers.getHeader(currentRowIndex).cells.getCell(currentCellIndex).isRowMergeContinue = true;\n                            rowSpan--;\n                            while (colSpan > 1) {\n                                currentCellIndex++;\n                                this.headers.getHeader(currentRowIndex).cells.getCell(currentCellIndex).isCellMergeContinue = true;\n                                this.headers.getHeader(currentRowIndex).cells.getCell(currentCellIndex).isRowMergeContinue = true;\n                                colSpan--;\n                            }\n                            colSpan = cell.columnSpan;\n                            currentCellIndex = j;\n                        }\n                    }\n                    else if (cell.columnSpan > 1 && cell.rowSpan === 1) {\n                        colSpan = cell.columnSpan;\n                        currentCellIndex = j;\n                        cell.isCellMergeStart = true;\n                        //Set Column merges.\n                        while (colSpan > 1) {\n                            currentCellIndex++;\n                            row.cells.getCell(currentCellIndex).isCellMergeContinue = true;\n                            colSpan--;\n                        }\n                    }\n                    else if (cell.columnSpan === 1 && cell.rowSpan > 1) {\n                        rowSpan = cell.rowSpan;\n                        currentRowIndex = i;\n                        //Set row Merges.\n                        while (rowSpan > 1) {\n                            currentRowIndex++;\n                            this.headers.getHeader(currentRowIndex).cells.getCell(j).isRowMergeContinue = true;\n                            rowSpan--;\n                        }\n                    }\n                }\n            }\n            row.maximumRowSpan = maxSpan;\n        }\n    };\n    PdfGrid.prototype.checkSpan = function () {\n        var cellcolSpan;\n        var cellrowSpan = 1;\n        var cellmaxSpan = 0;\n        var currentCellIndex;\n        var currentRowIndex = 0;\n        cellcolSpan = cellrowSpan = 1;\n        currentCellIndex = currentRowIndex = 0;\n        if (this.hasRowSpanSpan || this.hasColumnSpan) {\n            var rowCount = this.rows.count;\n            for (var i = 0; i < rowCount; i++) {\n                var row = this.rows.getRow(i);\n                cellmaxSpan = 0;\n                var colCount = row.cells.count;\n                for (var j = 0; j < colCount; j++) {\n                    var cell = row.cells.getCell(j);\n                    cellmaxSpan = Math.max(cellmaxSpan, cell.rowSpan);\n                    //Skip setting span map for already coverted rows/columns.\n                    if (!cell.isCellMergeContinue && !cell.isRowMergeContinue\n                        && (cell.columnSpan > 1 || cell.rowSpan > 1)) {\n                        if (cell.columnSpan + j > row.cells.count) {\n                            throw new Error('Invalid span specified at row  ' + j.toString() + ' column ' + i.toString());\n                        }\n                        if (cell.rowSpan + i > this.rows.count) {\n                            throw new Error('Invalid span specified at row  ' + j.toString() + ' column ' + i.toString());\n                        }\n                        if (cell.columnSpan > 1 && cell.rowSpan > 1) {\n                            cellcolSpan = cell.columnSpan;\n                            cellrowSpan = cell.rowSpan;\n                            currentCellIndex = j;\n                            currentRowIndex = i;\n                            cell.isCellMergeStart = true;\n                            cell.isRowMergeStart = true;\n                            //Set Column merges for first row\n                            while (cellcolSpan > 1) {\n                                currentCellIndex++;\n                                row.cells.getCell(currentCellIndex).isCellMergeContinue = true;\n                                row.cells.getCell(currentCellIndex).isRowMergeContinue = true;\n                                cellcolSpan--;\n                            }\n                            currentCellIndex = j;\n                            cellcolSpan = cell.columnSpan;\n                            //Set Row Merges and column merges foreach subsequent rows.\n                            while (cellrowSpan > 1) {\n                                currentRowIndex++;\n                                this.rows.getRow(currentRowIndex).cells.getCell(j).isRowMergeContinue = true;\n                                this.rows.getRow(currentRowIndex).cells.getCell(currentCellIndex).isRowMergeContinue = true;\n                                cellrowSpan--;\n                                while (cellcolSpan > 1) {\n                                    currentCellIndex++;\n                                    this.rows.getRow(currentRowIndex).cells.getCell(currentCellIndex).isCellMergeContinue = true;\n                                    this.rows.getRow(currentRowIndex).cells.getCell(currentCellIndex).isRowMergeContinue = true;\n                                    cellcolSpan--;\n                                }\n                                cellcolSpan = cell.columnSpan;\n                                currentCellIndex = j;\n                            }\n                        }\n                        else if (cell.columnSpan > 1 && cell.rowSpan === 1) {\n                            cellcolSpan = cell.columnSpan;\n                            currentCellIndex = j;\n                            cell.isCellMergeStart = true;\n                            //Set Column merges.\n                            while (cellcolSpan > 1) {\n                                currentCellIndex++;\n                                row.cells.getCell(currentCellIndex).isCellMergeContinue = true;\n                                cellcolSpan--;\n                            }\n                        }\n                        else if (cell.columnSpan === 1 && cell.rowSpan > 1) {\n                            cellrowSpan = cell.rowSpan;\n                            currentRowIndex = i;\n                            //Set row Merges.\n                            while (cellrowSpan > 1) {\n                                currentRowIndex++;\n                                this.rows.getRow(currentRowIndex).cells.getCell(j).isRowMergeContinue = true;\n                                cellrowSpan--;\n                            }\n                        }\n                    }\n                }\n                row.maximumRowSpan = cellmaxSpan;\n            }\n        }\n    };\n    PdfGrid.prototype.measureColumnsWidth = function (bounds) {\n        if (typeof bounds !== 'undefined') {\n            this.isPageWidth = false;\n            var widths = this.columns.getDefaultWidths(bounds.width - bounds.x);\n            //let tempWidth : number = this.columns.getColumn(0).width;\n            for (var i = 0, count = this.columns.count; i < count; i++) {\n                // if (this.columns.getColumn(i).width < 0)\n                //     this.columns.getColumn(i).columnWidth = widths[i];\n                // else if (this.columns.getColumn(i).width > 0 && !this.columns.getColumn(i).isCustomWidth && widths[i]>0 && this.isComplete)\n                this.columns.getColumn(i).columnWidth = widths[i];\n                this.tempWidth = widths[i];\n            }\n            if (this.ParentCell != null && this.style.allowHorizontalOverflow == false && this.ParentCell.row.grid.style.allowHorizontalOverflow == false) {\n                var padding = 0;\n                var columnWidth = 0;\n                var columnCount = this.columns.count;\n                var childGridColumnWidth = 0;\n                if (this.ParentCell.style.cellPadding != null || typeof this.ParentCell.style.cellPadding !== 'undefined') {\n                    if (typeof this.ParentCell.style.cellPadding.left != 'undefined' && this.ParentCell.style.cellPadding.hasLeftPad) {\n                        padding += this.ParentCell.style.cellPadding.left;\n                    }\n                    if (typeof this.ParentCell.style.cellPadding.right != 'undefined' && this.ParentCell.style.cellPadding.hasRightPad) {\n                        padding += this.ParentCell.style.cellPadding.right;\n                    }\n                }\n                for (var i = 0; i < this.ParentCell.columnSpan; i++) {\n                    columnWidth += this.ParentCell.row.grid.columns.getColumn(this.parentCellIndex + i).width;\n                }\n                for (var j = 0; j < this.columns.count; j++) {\n                    if (this.gridColumns.getColumn(j).width > 0 && this.gridColumns.getColumn(j).isCustomWidth) {\n                        columnWidth -= this.gridColumns.getColumn(j).width;\n                        columnCount--;\n                    }\n                }\n                if ((this.ParentCell.row.grid.style.cellPadding != null || typeof this.ParentCell.row.grid.style.cellPadding != 'undefined')) {\n                    if (typeof this.ParentCell.row.grid.style.cellPadding.top != 'undefined' && this.ParentCell.row.grid.style.cellPadding.hasTopPad) {\n                        padding += this.ParentCell.row.grid.style.cellPadding.top;\n                    }\n                    if (typeof this.ParentCell.row.grid.style.cellPadding.bottom != 'undefined' && this.ParentCell.row.grid.style.cellPadding.hasBottomPad) {\n                        padding += this.ParentCell.row.grid.style.cellPadding.bottom;\n                    }\n                }\n                if (this.ParentCell.row.grid.style.cellSpacing != 0) {\n                    columnWidth -= this.ParentCell.row.grid.style.cellSpacing * 2;\n                }\n                if (columnWidth > padding) {\n                    childGridColumnWidth = (columnWidth - padding) / columnCount;\n                    this.tempWidth = childGridColumnWidth;\n                    if (this.ParentCell != null) {\n                        for (var j = 0; j < this.columns.count; j++) {\n                            if (!this.columns.getColumn(j).isCustomWidth)\n                                this.columns.getColumn(j).columnWidth = childGridColumnWidth;\n                        }\n                    }\n                }\n            }\n            // if (this.ParentCell != null && this.ParentCell.row.width > 0)\n            // {\n            //     if (this.isChildGrid && this.gridSize.width > this.ParentCell.row.width)\n            //     {\n            //         widths = this.columns.getDefaultWidths(bounds.width);\n            //         for (let i : number = 0; i < this.columns.count; i++)\n            //         {\n            //             this.columns.getColumn(i).width = widths[i];\n            //         }\n            //     }\n            // }\n        }\n        else {\n            var widths = [this.columns.count];\n            for (var n = 0; n < this.columns.count; n++) {\n                widths[n] = 0;\n            }\n            var cellWidth = 0;\n            var cellWidths = 0;\n            if ((typeof this.isChildGrid === 'undefined' && typeof this.gridLocation !== 'undefined') || (this.isChildGrid === null && typeof this.gridLocation !== 'undefined')) {\n                this.initialWidth = this.gridLocation.width;\n            }\n            if (this.headers.count > 0) {\n                var colCount_1 = this.headers.getHeader(0).cells.count;\n                var rowCount = this.headers.count;\n                for (var i = 0; i < colCount_1; i++) {\n                    cellWidth = 0;\n                    for (var j = 0; j < rowCount; j++) {\n                        var rowWidth = Math.min(this.initialWidth, this.headers.getHeader(j).cells.getCell(i).width);\n                        cellWidth = Math.max(cellWidth, rowWidth);\n                    }\n                    widths[i] = cellWidth;\n                }\n            }\n            // else {\n            //     let colCount : number = this.rows.getRow(0).cells.count;\n            //     let rowCount : number = this.rows.count;\n            //     for (let i : number = 0; i < colCount; i++) {\n            //         cellWidth = 0;\n            //         for (let j : number = 0; j < rowCount; j++) {\n            //             let rowWidth : number = Math.min(this.initialWidth, this.rows.getRow(j).cells.getCell(i).width);\n            //             cellWidth = Math.max(cellWidth, rowWidth);\n            //         }\n            //         widths[i] = cellWidth;\n            //     }\n            // }\n            cellWidth = 0;\n            for (var i = 0, colCount_2 = this.columns.count; i < colCount_2; i++) {\n                for (var j = 0, rowCount = this.rows.count; j < rowCount; j++) {\n                    if ((this.rows.getRow(j).cells.getCell(i).columnSpan == 1 && !this.rows.getRow(j).cells.getCell(i).isCellMergeContinue) || this.rows.getRow(j).cells.getCell(i).value != null) {\n                        if (this.rows.getRow(j).cells.getCell(i).value != null && !this.rows.getRow(j).grid.style.allowHorizontalOverflow) {\n                            var value = this.rows.getRow(j).grid.style.cellPadding.right +\n                                this.rows.getRow(j).grid.style.cellPadding.left\n                                + this.rows.getRow(j).cells.getCell(i).style.borders.left.width / 2;\n                            //  if (this.initialWidth != 0 )\n                            //         (this.rows.getRow(j).cells.getCell(i).value as PdfGrid).initialWidth = this.initialWidth - value;\n                        }\n                        var rowWidth = 0;\n                        rowWidth = this.initialWidth > 0.0 ? Math.min(this.initialWidth, this.rows.getRow(j).cells.getCell(i).width) : this.rows.getRow(j).cells.getCell(i).width;\n                        // let internalWidth : number = this.rows.getRow(j).cells.getCell(i).width;\n                        // internalWidth += this.rows.getRow(j).cells.getCell(i).style.borders.left.width;\n                        // internalWidth += this.rows.getRow(j).cells.getCell(i).style.borders.right.width;\n                        // let internalHeight : number = this.rows.getRow(j).cells.getCell(i).height;\n                        // internalHeight += (this.rows.getRow(j).cells.getCell(i).style.borders.top.width);\n                        // internalHeight += (this.rows.getRow(j).cells.getCell(i).style.borders.bottom.width);\n                        // let isCorrectWidth : boolean = (internalWidth + this.gridLocation.x) > this.currentGraphics.clientSize.width;\n                        // let isCorrectHeight : boolean = (internalHeight + this.gridLocation.y) > this.currentGraphics.clientSize.height;\n                        // if (isCorrectWidth || isCorrectHeight) {\n                        //     throw Error('Image size exceeds client size of the page. Can not insert this image');\n                        // }\n                        // rowWidth = Math.min(this.initialWidth, this.rows.getRow(j).cells.getCell(i).width);\n                        cellWidth = Math.max(widths[i], Math.max(cellWidth, rowWidth));\n                        cellWidth = Math.max(this.columns.getColumn(i).width, cellWidth);\n                    }\n                }\n                if (this.rows.count != 0)\n                    widths[i] = cellWidth;\n                cellWidth = 0;\n            }\n            for (var i = 0, RowCount = this.rows.count; i < RowCount; i++) {\n                for (var j = 0, ColCount = this.columns.count; j < ColCount; j++) {\n                    if (this.rows.getRow(i).cells.getCell(j).columnSpan > 1) {\n                        var total = widths[j];\n                        for (var k = 1; k < this.rows.getRow(i).cells.getCell(j).columnSpan; k++) {\n                            total += widths[j + k];\n                        }\n                        // if (this.rows.getRow(i).cells.getCell(j).width > total)\n                        // {\n                        //     let extendedWidth : number = this.rows.getRow(i).cells.getCell(j).width - total;\n                        //     extendedWidth = extendedWidth / this.rows.getRow(i).cells.getCell(j).columnSpan;\n                        //     for (let k : number = j; k < j + this.rows.getRow(i).cells.getCell(j).columnSpan; k++)\n                        //         widths[k] += extendedWidth;\n                        // }\n                    }\n                }\n            }\n            // if (this.isChildGrid && this.initialWidth != 0)\n            // {\n            //     widths = this.columns.getDefaultWidths(this.initialWidth);\n            // }\n            for (var i = 0, count = this.columns.count; i < count; i++) {\n                if (this.columns.getColumn(i).width <= 0)\n                    this.columns.getColumn(i).columnWidth = widths[i];\n                else if (this.columns.getColumn(i).width > 0 && !this.columns.getColumn(i).isCustomWidth)\n                    this.columns.getColumn(i).columnWidth = widths[i];\n            }\n            var padding = 0;\n            var colWidth = 0;\n            var colCount = this.columns.count;\n            var childGridColWidth = 0;\n            colWidth = this.tempWidth;\n            for (var j = 0; j < this.columns.count; j++) {\n                if (this.gridColumns.getColumn(j).width > 0 && this.gridColumns.getColumn(j).isCustomWidth) {\n                    colWidth -= this.gridColumns.getColumn(j).width;\n                    colCount--;\n                }\n            }\n            // if (this.style.cellSpacing != 0){\n            //     colWidth -= this.style.cellSpacing * 2;\n            // }\n            if (colWidth > 0) {\n                if (this.ParentCell.row.grid.style.cellSpacing != 0) {\n                    colWidth -= this.ParentCell.row.grid.style.cellSpacing * 2;\n                }\n            }\n            if (colWidth > padding) {\n                childGridColWidth = (colWidth) / colCount;\n                if (this.ParentCell != null) {\n                    for (var j = 0; j < this.columns.count; j++) {\n                        if (!this.columns.getColumn(j).isCustomWidth)\n                            this.columns.getColumn(j).columnWidth = childGridColWidth;\n                    }\n                }\n            }\n        }\n    };\n    return PdfGrid;\n}(PdfLayoutElement));\nexport { PdfGrid };\n", "var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfTrueTypeFont.ts class for EJ2-PDF\n */\nimport { UnicodeTrueTypeFont } from './unicode-true-type-font';\nimport { PdfFont } from './pdf-font';\nimport { PdfFontStyle } from './enum';\nimport { PdfDocument } from './../../document/pdf-document';\nimport { PdfTextDirection } from './../enum';\nimport { RtlRenderer } from './rtl-renderer';\n//https://www.giftofspeed.com/base64-encoder/\nvar PdfTrueTypeFont = /** @class */ (function (_super) {\n    __extends(PdfTrueTypeFont, _super);\n    function PdfTrueTypeFont(base64String, size, style) {\n        var _this = _super.call(this, size) || this;\n        /**\n         * Indicates whether the font is embedded or not.\n         * @private\n         */\n        _this.isEmbedFont = false;\n        /**\n         * Indicates whether the font is unicoded or not.\n         * @private\n         */\n        _this.isUnicode = true;\n        if (style !== undefined) {\n            _this.createFontInternal(base64String, style);\n        }\n        else {\n            _this.createFontInternal(base64String, PdfFontStyle.Regular);\n        }\n        return _this;\n    }\n    PdfTrueTypeFont.prototype.equalsToFont = function (font) {\n        var result = false;\n        //let result : boolean = this.fontInternal.equalsToFont(font);\n        return result;\n    };\n    PdfTrueTypeFont.prototype.getLineWidth = function (line, format) {\n        var width = 0;\n        if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.None) {\n            var returnValue = this.getUnicodeLineWidth(line, /*out*/ width, format);\n            width = returnValue.width;\n        }\n        else {\n            width = this.fontInternal.getLineWidth(line);\n        }\n        var size = this.metrics.getSize(format);\n        width *= (PdfFont.charSizeMultiplier * size);\n        width = this.applyFormatSettings(line, format, width);\n        return width;\n    };\n    /**\n     * Returns width of the char.\n     */\n    PdfTrueTypeFont.prototype.getCharWidth = function (charCode, format) {\n        var codeWidth = this.fontInternal.getCharWidth(charCode);\n        var size = this.metrics.getSize(format);\n        codeWidth *= (0.001 * size);\n        return codeWidth;\n    };\n    //Implementation\n    PdfTrueTypeFont.prototype.createFontInternal = function (base64String, style) {\n        this.fontInternal = new UnicodeTrueTypeFont(base64String, this.size);\n        this.calculateStyle(style);\n        this.initializeInternals();\n    };\n    PdfTrueTypeFont.prototype.calculateStyle = function (style) {\n        var iStyle = this.fontInternal.ttfMetrics.macStyle;\n        if ((style & PdfFontStyle.Underline) !== 0) {\n            iStyle |= PdfFontStyle.Underline;\n        }\n        if ((style & PdfFontStyle.Strikeout) !== 0) {\n            iStyle |= PdfFontStyle.Strikeout;\n        }\n        this.setStyle(iStyle);\n    };\n    PdfTrueTypeFont.prototype.initializeInternals = function () {\n        var equalFont = null;\n        if (PdfDocument.enableCache) {\n            // Search for the similar fonts.\n            equalFont = PdfDocument.cache.search(this);\n        }\n        var internals = null;\n        // There is not equal font in the cache.\n        if (equalFont !== null && equalFont !== undefined) {\n            // Get the settings from the cached font.\n            internals = equalFont.getInternals();\n            var metrics = equalFont.metrics;\n            metrics = metrics.clone();\n            metrics.size = this.size;\n            this.metrics = metrics;\n            this.fontInternal = equalFont.fontInternal;\n        }\n        else {\n            if (equalFont == null) {\n                if (this.fontInternal instanceof UnicodeTrueTypeFont) {\n                    this.fontInternal.isEmbed = this.isEmbedFont;\n                }\n                this.fontInternal.createInternals();\n                internals = this.fontInternal.getInternals();\n                this.metrics = this.fontInternal.metrics;\n            }\n        }\n        this.metrics.isUnicodeFont = true;\n        this.setInternals(internals);\n        //this.ttfReader = (this.fontInternal as UnicodeTrueTypeFont).ttfReader;\n    };\n    /**\n     * Stores used symbols.\n     */\n    PdfTrueTypeFont.prototype.setSymbols = function (text) {\n        var internalFont = this.fontInternal;\n        if (internalFont != null) {\n            internalFont.setSymbols(text);\n        }\n    };\n    Object.defineProperty(PdfTrueTypeFont.prototype, \"Unicode\", {\n        /**\n         * Property\n         *\n         */\n        get: function () {\n            return this.isUnicode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // public get Font() : UnicodeTrueTypeFont {\n    //     return this.fontInternal as UnicodeTrueTypeFont;\n    // }\n    PdfTrueTypeFont.prototype.getUnicodeLineWidth = function (line, /*out*/ width, format) {\n        // if (line == null) {\n        //     throw new Error('ArgumentNullException : line');\n        // }\n        width = 0;\n        var glyphIndices = null;\n        var rtlRender = new RtlRenderer();\n        /* tslint:disable-next-line:max-line-length */\n        var result = rtlRender.getGlyphIndex(line, this, (format.textDirection === PdfTextDirection.RightToLeft) ? true : false, /*out*/ glyphIndices, true);\n        var resultGlyph = result.success;\n        glyphIndices = result.glyphs;\n        if (resultGlyph && glyphIndices !== null) {\n            var ttfReader = this.fontInternal.ttfReader;\n            for (var i = 0, len = glyphIndices.length; i < len; i++) {\n                var glyphIndex = glyphIndices[i];\n                var glyph = ttfReader.getGlyph(glyphIndex);\n                if (glyph !== null && typeof glyph !== 'undefined') {\n                    width += glyph.width;\n                }\n            }\n        }\n        return { success: resultGlyph, width: width };\n    };\n    return PdfTrueTypeFont;\n}(PdfFont));\nexport { PdfTrueTypeFont };\n", "/**\n * PdfPageTemplateElement.ts class for EJ2-Pdf\n */\nimport { PdfDockStyle, PdfAlignmentStyle, TemplateType } from './enum';\nimport { PointF, SizeF } from './../drawing/pdf-drawing';\nimport { PdfTemplate } from './../graphics/figures/pdf-template';\nimport { PdfPage } from './pdf-page';\nimport { RectangleF } from './../drawing/pdf-drawing';\n/**\n * Describes a `page template` object that can be used as header/footer, watermark or stamp.\n */\nvar PdfPageTemplateElement = /** @class */ (function () {\n    /* tslint:disable */\n    function PdfPageTemplateElement(arg1, arg2, arg3, arg4, arg5) {\n        if (arg1 instanceof RectangleF && typeof arg2 === 'undefined') {\n            this.InitiateBounds(arg1.x, arg1.y, arg1.width, arg1.height, null);\n        }\n        else if (arg1 instanceof RectangleF && arg2 instanceof PdfPage && typeof arg3 === 'undefined') {\n            this.InitiateBounds(arg1.x, arg1.y, arg1.width, arg1.height, arg2);\n        }\n        else if (arg1 instanceof PointF && arg2 instanceof SizeF && typeof arg3 === 'undefined') {\n            this.InitiateBounds(arg1.x, arg1.y, arg2.width, arg2.height, null);\n        }\n        else if (arg1 instanceof PointF && arg2 instanceof SizeF && arg3 instanceof PdfPage && typeof arg4 === 'undefined') {\n            this.InitiateBounds(arg1.x, arg1.y, arg2.width, arg2.height, arg3);\n        }\n        else if (arg1 instanceof SizeF && typeof arg2 === 'undefined') {\n            this.InitiateBounds(0, 0, arg1.width, arg1.height, null);\n        }\n        else if (typeof arg1 === 'number' && typeof arg2 === 'number' && typeof arg3 === 'undefined') {\n            this.InitiateBounds(0, 0, arg1, arg2, null);\n        }\n        else if (typeof arg1 === 'number' && typeof arg2 === 'number' && arg3 instanceof PdfPage && typeof arg4 === 'undefined') {\n            this.InitiateBounds(0, 0, arg1, arg2, arg3);\n        }\n        else if (typeof arg1 === 'number' && typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'number' && typeof arg5 === 'undefined') {\n            this.InitiateBounds(arg1, arg2, arg3, arg4, null);\n        }\n        else {\n            this.InitiateBounds(arg1, arg2, arg3, arg4, null);\n            // this.graphics.colorSpace = this.page.document.colorSpace;\n        }\n        /* tslint:enable */\n    }\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"dock\", {\n        // Properties\n        /**\n         * Gets or sets the `dock style` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.dockStyle;\n        },\n        set: function (value) {\n            // if (this.dockStyle !== value && this.Type === TemplateType.None) {\n            this.dockStyle = value;\n            // Reset alignment.\n            this.resetAlignment();\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"alignment\", {\n        /**\n         * Gets or sets `alignment` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.alignmentStyle;\n        },\n        set: function (value) {\n            // if (this.alignmentStyle !== value) {\n            this.setAlignment(value);\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"foreground\", {\n        /**\n         * Indicates whether the page template is located `in front of the page layers or behind of it`.\n         * @private\n         */\n        get: function () {\n            return this.isForeground;\n        },\n        set: function (value) {\n            // if (this.foreground !== value) {\n            this.isForeground = value;\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"background\", {\n        /**\n         * Indicates whether the page template is located `behind of the page layers or in front of it`.\n         * @private\n         */\n        get: function () {\n            return !this.isForeground;\n        },\n        set: function (value) {\n            this.isForeground = !value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"location\", {\n        /**\n         * Gets or sets `location` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.currentLocation;\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.currentLocation = value;\n            }\n            else {\n                //\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"x\", {\n        /**\n         * Gets or sets `X` co-ordinate of the template element on the page.\n         * @private\n         */\n        get: function () {\n            var value = (typeof this.currentLocation !== 'undefined') ? this.currentLocation.x : 0;\n            return value;\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.currentLocation.x = value;\n            }\n            else {\n                //\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"y\", {\n        /**\n         * Gets or sets `Y` co-ordinate of the template element on the page.\n         * @private\n         */\n        get: function () {\n            var value = (typeof this.currentLocation !== 'undefined') ? this.currentLocation.y : 0;\n            return value;\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.currentLocation.y = value;\n            }\n            else {\n                //\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"size\", {\n        /**\n         * Gets or sets `size` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.template.size;\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.template.reset(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"width\", {\n        /**\n         * Gets or sets `width` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.template.width;\n        },\n        set: function (value) {\n            if (this.template.width !== value && this.type === TemplateType.None) {\n                var size = this.template.size;\n                size.width = value;\n                this.template.reset(size);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"height\", {\n        /**\n         * Gets or sets `height` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.template.height;\n        },\n        set: function (value) {\n            if (this.template.height !== value && this.type === TemplateType.None) {\n                var size = this.template.size;\n                size.height = value;\n                this.template.reset(size);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"graphics\", {\n        /**\n         * Gets `graphics` context of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.template.graphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"template\", {\n        /**\n         * Gets Pdf `template` object.\n         * @private\n         */\n        get: function () {\n            // if (typeof this.pdfTemplate === 'undefined' || this.pdfTemplate == null) {\n            //     this.pdfTemplate = new PdfTemplate(this.size);\n            // }\n            return this.pdfTemplate;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"type\", {\n        /**\n         * Gets or sets `type` of the usage of this page template.\n         * @private\n         */\n        get: function () {\n            return this.templateType;\n        },\n        set: function (value) {\n            this.updateDocking(value);\n            this.templateType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"bounds\", {\n        /**\n         * Gets or sets `bounds` of the page template.\n         * @public\n         */\n        get: function () {\n            return new RectangleF(new PointF(this.x, this.y), this.size);\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.location = new PointF(value.x, value.y);\n                this.size = new SizeF(value.width, value.height);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Initialize Bounds` Initialize the bounds value of the template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.InitiateBounds = function (arg1, arg2, arg3, arg4, arg5) {\n        this.x = arg1;\n        this.y = arg2;\n        this.pdfTemplate = new PdfTemplate(arg3, arg4);\n        // this.graphics.colorSpace = this.page.document.colorSpace;\n    };\n    /**\n     * `Updates Dock` property if template is used as header/footer.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.updateDocking = function (type) {\n        if (type !== TemplateType.None) {\n            switch (type) {\n                case TemplateType.Top:\n                    this.dock = PdfDockStyle.Top;\n                    break;\n                case TemplateType.Bottom:\n                    this.dock = PdfDockStyle.Bottom;\n                    break;\n                case TemplateType.Left:\n                    this.dock = PdfDockStyle.Left;\n                    break;\n                case TemplateType.Right:\n                    this.dock = PdfDockStyle.Right;\n                    break;\n            }\n            this.resetAlignment();\n        }\n    };\n    /**\n     * `Resets alignment` of the template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.resetAlignment = function () {\n        this.alignment = PdfAlignmentStyle.None;\n    };\n    /**\n     * `Sets alignment` of the template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.setAlignment = function (alignment) {\n        if (this.dock === PdfDockStyle.None) {\n            this.alignmentStyle = alignment;\n        }\n        else {\n            // Template is docked and alignment has been changed.\n            var canBeSet = false;\n            switch (this.dock) {\n                case PdfDockStyle.Left:\n                    canBeSet = (alignment === PdfAlignmentStyle.TopLeft || alignment === PdfAlignmentStyle.MiddleLeft ||\n                        alignment === PdfAlignmentStyle.BottomLeft || alignment === PdfAlignmentStyle.None);\n                    break;\n                case PdfDockStyle.Top:\n                    canBeSet = (alignment === PdfAlignmentStyle.TopLeft || alignment === PdfAlignmentStyle.TopCenter ||\n                        alignment === PdfAlignmentStyle.TopRight || alignment === PdfAlignmentStyle.None);\n                    break;\n                case PdfDockStyle.Right:\n                    canBeSet = (alignment === PdfAlignmentStyle.TopRight || alignment === PdfAlignmentStyle.MiddleRight ||\n                        alignment === PdfAlignmentStyle.BottomRight || alignment === PdfAlignmentStyle.None);\n                    break;\n                case PdfDockStyle.Bottom:\n                    canBeSet = (alignment === PdfAlignmentStyle.BottomLeft || alignment === PdfAlignmentStyle.BottomCenter\n                        || alignment === PdfAlignmentStyle.BottomRight || alignment === PdfAlignmentStyle.None);\n                    break;\n                case PdfDockStyle.Fill:\n                    canBeSet = (alignment === PdfAlignmentStyle.MiddleCenter || alignment === PdfAlignmentStyle.None);\n                    break;\n            }\n            if (canBeSet) {\n                this.alignmentStyle = alignment;\n            }\n        }\n    };\n    /**\n     * Draws the template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.draw = function (layer, document) {\n        var page = layer.page;\n        var bounds = this.calculateBounds(page, document);\n        layer.graphics.drawPdfTemplate(this.template, new PointF(bounds.x, bounds.y), new SizeF(bounds.width, bounds.height));\n    };\n    /**\n     * Calculates bounds of the page template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.calculateBounds = function (page, document) {\n        var result = this.bounds;\n        if (this.alignmentStyle !== PdfAlignmentStyle.None) {\n            result = this.getAlignmentBounds(page, document);\n        }\n        else if (this.dockStyle !== PdfDockStyle.None) {\n            result = this.getDockBounds(page, document);\n        }\n        return result;\n    };\n    /**\n     * Calculates bounds according to the alignment.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getAlignmentBounds = function (page, document) {\n        var result = this.bounds;\n        if (this.type === TemplateType.None) {\n            result = this.getSimpleAlignmentBounds(page, document);\n        }\n        else {\n            result = this.getTemplateAlignmentBounds(page, document);\n        }\n        return result;\n    };\n    /**\n     * Calculates bounds according to the alignment.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getSimpleAlignmentBounds = function (page, document) {\n        var bounds = this.bounds;\n        var pdfSection = page.section;\n        var actualBounds = pdfSection.getActualBounds(document, page, false);\n        var x = this.x;\n        var y = this.y;\n        switch (this.alignmentStyle) {\n            case PdfAlignmentStyle.TopLeft:\n                x = 0;\n                y = 0;\n                break;\n            case PdfAlignmentStyle.TopCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = 0;\n                break;\n            case PdfAlignmentStyle.TopRight:\n                x = actualBounds.width - this.width;\n                y = 0;\n                break;\n            case PdfAlignmentStyle.MiddleLeft:\n                x = 0;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.MiddleCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.MiddleRight:\n                x = actualBounds.width - this.width;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.BottomLeft:\n                x = 0;\n                y = actualBounds.height - this.height;\n                break;\n            case PdfAlignmentStyle.BottomCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = actualBounds.height - this.height;\n                break;\n            case PdfAlignmentStyle.BottomRight:\n                x = actualBounds.width - this.width;\n                y = actualBounds.height - this.height;\n                break;\n        }\n        bounds.x = x;\n        bounds.y = y;\n        return bounds;\n    };\n    /**\n     * Calculates bounds according to the alignment.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getTemplateAlignmentBounds = function (page, document) {\n        var result = this.bounds;\n        var section = page.section;\n        var actualBounds = section.getActualBounds(document, page, false);\n        var x = this.x;\n        var y = this.y;\n        switch (this.alignmentStyle) {\n            case PdfAlignmentStyle.TopLeft:\n                if (this.type === TemplateType.Left) {\n                    x = this.convertSign(actualBounds.x);\n                    y = 0;\n                }\n                else if (this.type === TemplateType.Top) {\n                    x = this.convertSign(actualBounds.x);\n                    y = this.convertSign(actualBounds.y);\n                }\n                break;\n            case PdfAlignmentStyle.TopCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = this.convertSign(actualBounds.y);\n                break;\n            case PdfAlignmentStyle.TopRight:\n                if (this.type === TemplateType.Right) {\n                    x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                    y = 0;\n                }\n                else if (this.type === TemplateType.Top) {\n                    x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                    y = this.convertSign(actualBounds.y);\n                }\n                break;\n            case PdfAlignmentStyle.MiddleLeft:\n                x = this.convertSign(actualBounds.x);\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.MiddleCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.MiddleRight:\n                x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.BottomLeft:\n                if (this.type === TemplateType.Left) {\n                    x = this.convertSign(actualBounds.x);\n                    y = actualBounds.height - this.height;\n                }\n                else if (this.type === TemplateType.Bottom) {\n                    x = this.convertSign(actualBounds.x);\n                    y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;\n                }\n                break;\n            case PdfAlignmentStyle.BottomCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;\n                break;\n            case PdfAlignmentStyle.BottomRight:\n                if (this.type === TemplateType.Right) {\n                    x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                    y = actualBounds.height - this.height;\n                }\n                else if (this.type === TemplateType.Bottom) {\n                    x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                    y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;\n                }\n                break;\n        }\n        result.x = x;\n        result.y = y;\n        return result;\n    };\n    /**\n     * Calculates bounds according to the docking.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getDockBounds = function (page, document) {\n        var result = this.bounds;\n        if (this.type === TemplateType.None) {\n            result = this.getSimpleDockBounds(page, document);\n        }\n        else {\n            result = this.getTemplateDockBounds(page, document);\n        }\n        return result;\n    };\n    /**\n     * Calculates bounds according to the docking.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getSimpleDockBounds = function (page, document) {\n        var result = this.bounds;\n        var section = page.section;\n        var actualBounds = section.getActualBounds(document, page, false);\n        var x = this.x;\n        var y = this.y;\n        var width = this.width;\n        var height = this.height;\n        switch (this.dockStyle) {\n            case PdfDockStyle.Left:\n                x = 0;\n                y = 0;\n                width = this.width;\n                height = actualBounds.height;\n                break;\n            case PdfDockStyle.Top:\n                x = 0;\n                y = 0;\n                width = actualBounds.width;\n                height = this.height;\n                break;\n            case PdfDockStyle.Right:\n                x = actualBounds.width - this.width;\n                y = 0;\n                width = this.width;\n                height = actualBounds.height;\n                break;\n            case PdfDockStyle.Bottom:\n                x = 0;\n                y = actualBounds.height - this.height;\n                width = actualBounds.width;\n                height = this.height;\n                break;\n            case PdfDockStyle.Fill:\n                x = 0;\n                x = 0;\n                width = actualBounds.width;\n                height = actualBounds.height;\n                break;\n        }\n        result = new RectangleF(x, y, width, height);\n        return result;\n    };\n    /**\n     * Calculates template bounds basing on docking if template is a page template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getTemplateDockBounds = function (page, document) {\n        var result = this.bounds;\n        var section = page.section;\n        var actualBounds = section.getActualBounds(document, page, false);\n        var actualSize = section.pageSettings.getActualSize();\n        var x = this.x;\n        var y = this.y;\n        var width = this.width;\n        var height = this.height;\n        switch (this.dockStyle) {\n            case PdfDockStyle.Left:\n                x = this.convertSign(actualBounds.x);\n                y = 0;\n                width = this.width;\n                height = actualBounds.height;\n                break;\n            case PdfDockStyle.Top:\n                x = this.convertSign(actualBounds.x);\n                y = this.convertSign(actualBounds.y);\n                width = actualSize.width;\n                height = this.height;\n                if (actualBounds.height < 0) {\n                    y = actualSize.height - actualBounds.y;\n                }\n                break;\n            case PdfDockStyle.Right:\n                x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                y = 0;\n                width = this.width;\n                height = actualBounds.height;\n                break;\n            case PdfDockStyle.Bottom:\n                x = this.convertSign(actualBounds.x);\n                y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;\n                width = actualSize.width;\n                height = this.height;\n                if (actualBounds.height < 0) {\n                    y -= actualSize.height;\n                }\n                break;\n            case PdfDockStyle.Fill:\n                x = 0;\n                x = 0;\n                width = actualBounds.width;\n                height = actualBounds.height;\n                break;\n        }\n        result = new RectangleF(x, y, width, height);\n        return result;\n    };\n    /**\n     * Ignore value zero, otherwise convert sign.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.convertSign = function (value) {\n        return (value !== 0 || (value === 0 && 1 / value === -Infinity)) ? -value : value;\n    };\n    return PdfPageTemplateElement;\n}());\nexport { PdfPageTemplateElement };\n", "var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfLinkAnnotation } from './link-annotation';\n/**\n * `PdfDocumentLinkAnnotation` class represents an annotation object with holds link on another location within a document.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // create new pages\n * let page1 : PdfPage = document.pages.add();\n * let page2 : PdfPage = document.pages.add();\n * // create a new rectangle\n * let bounds : RectangleF = new RectangleF({x : 10, y : 200}, {width : 300, height : 25});\n * //\n * // create a new document link annotation\n * let documentLinkAnnotation : PdfDocumentLinkAnnotation = new PdfDocumentLinkAnnotation(bounds);\n * // set the annotation text\n * documentLinkAnnotation.text = 'Document link annotation';\n * // set the destination\n * documentLinkAnnotation.destination = new PdfDestination(page2);\n * // set the documentlink annotation location\n * documentLinkAnnotation.destination.location = new PointF(10, 0);\n * // add this annotation to a new page\n * page1.annotations.add(documentLinkAnnotation);\n * //\n * // save the document to disk\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfDocumentLinkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfDocumentLinkAnnotation, _super);\n    function PdfDocumentLinkAnnotation(rectangle, destination) {\n        var _this = _super.call(this, rectangle) || this;\n        // Fields\n        /**\n         * `Destination` of the annotation.\n         * @default null\n         * @private\n         */\n        _this.pdfDestination = null;\n        if (typeof destination !== 'undefined') {\n            _this.destination = destination;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfDocumentLinkAnnotation.prototype, \"destination\", {\n        // Properties\n        /**\n         * Gets or sets the `destination` of the annotation.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // create new pages\n         * let page1 : PdfPage = document.pages.add();\n         * let page2 : PdfPage = document.pages.add();\n         * // create a new rectangle\n         * let bounds : RectangleF = new RectangleF({x : 10, y : 200}, {width : 300, height : 25});\n         * //\n         * // create a new document link annotation\n         * let documentLinkAnnotation : PdfDocumentLinkAnnotation = new PdfDocumentLinkAnnotation(bounds);\n         * // set the annotation text\n         * documentLinkAnnotation.text = 'Document link annotation';\n         * // set the destination\n         * documentLinkAnnotation.destination = new PdfDestination(page2);\n         * // set the documentlink annotation location\n         * documentLinkAnnotation.destination.location = new PointF(10, 0);\n         * // add this annotation to a new page\n         * page1.annotations.add(documentLinkAnnotation);\n         * //\n         * // save the document to disk\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         * @default null\n         */\n        get: function () {\n            return this.pdfDestination;\n        },\n        set: function (value) {\n            // if (this.pdfDestination !== value) {\n            this.pdfDestination = value;\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Saves` annotation object.\n     * @private\n     */\n    PdfDocumentLinkAnnotation.prototype.save = function () {\n        _super.prototype.save.call(this);\n        if (this.pdfDestination != null) {\n            this.dictionary.items.setValue(this.dictionaryProperties.dest, this.pdfDestination.element);\n        }\n    };\n    /**\n     * `Clone` the document link annotation.\n     * @private\n     */\n    PdfDocumentLinkAnnotation.prototype.clone = function () {\n        var annot = new PdfDocumentLinkAnnotation(this.bounds, this.destination);\n        annot.color = this.color;\n        annot.brush = this.brush;\n        annot.destination = this.destination;\n        annot.font = this.font;\n        return annot;\n    };\n    return PdfDocumentLinkAnnotation;\n}(PdfLinkAnnotation));\nexport { PdfDocumentLinkAnnotation };\n", "/**\n * public Enum for `PdfDestinationMode`.\n * @private\n */\nexport var PdfDestinationMode;\n(function (PdfDestinationMode) {\n    /**\n     * Specifies the type of `Location`.\n     * @private\n     */\n    PdfDestinationMode[PdfDestinationMode[\"Location\"] = 0] = \"Location\";\n    /**\n     * Specifies the type of `FitToPage`.\n     * @private\n     */\n    PdfDestinationMode[PdfDestinationMode[\"FitToPage\"] = 1] = \"FitToPage\";\n    /**\n     * Specifies the type of `FitR`.\n     * @private\n     */\n    PdfDestinationMode[PdfDestinationMode[\"FitR\"] = 2] = \"FitR\";\n})(PdfDestinationMode || (PdfDestinationMode = {}));\n", "import { PointF, RectangleF } from './../drawing/pdf-drawing';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfPageRotateAngle } from './../pages/enum';\nimport { PdfDestinationMode } from './../general/enum';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\n/**\n * `PdfDestination` class represents an anchor in the document\n * where bookmarks or annotations can direct when clicked.\n */\nvar PdfDestination = /** @class */ (function () {\n    function PdfDestination(arg1, arg2) {\n        // Fields\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Type of the `destination`.\n         * @private\n         */\n        this.destinationMode = PdfDestinationMode.Location;\n        /**\n         * `Zoom` factor.\n         * @private\n         * @default 0\n         */\n        this.zoomFactor = 0;\n        /**\n         * `Location` of the destination.\n         * @default new PointF() with 0 ,0 as co-ordinates\n         * @private\n         */\n        this.destinationLocation = new PointF(0, 0);\n        /**\n         * `Bounds` of the destination as RectangleF.\n         * @default RectangleF.Empty\n         * @private\n         */\n        this.bounds = new RectangleF();\n        /**\n         * Pdf primitive representing `this` object.\n         * @private\n         */\n        this.array = new PdfArray();\n        var angle = PdfPageRotateAngle.RotateAngle0;\n        this.destinationLocation = new PointF(0, this.destinationLocation.y);\n        this.pdfPage = arg1;\n        if (arg2 instanceof PointF) {\n            this.destinationLocation = arg2;\n        }\n        else {\n            this.bounds = arg2;\n        }\n    }\n    Object.defineProperty(PdfDestination.prototype, \"zoom\", {\n        // Properties\n        /**\n         * Gets and Sets the `zoom` factor.\n         * @private\n         */\n        get: function () {\n            return this.zoomFactor;\n        },\n        set: function (value) {\n            this.zoomFactor = value;\n            this.initializePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"page\", {\n        /**\n         * Gets and Sets the `page` object.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        set: function (value) {\n            this.pdfPage = value;\n            this.initializePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"mode\", {\n        /**\n         * Gets and Sets the destination `mode`.\n         * @private\n         */\n        get: function () {\n            return this.destinationMode;\n        },\n        set: function (value) {\n            this.destinationMode = value;\n            this.initializePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"location\", {\n        /**\n         * Gets and Sets the `location`.\n         * @private\n         */\n        get: function () {\n            return this.destinationLocation;\n        },\n        set: function (value) {\n            this.destinationLocation = value;\n            this.initializePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Translates` co-ordinates to PDF co-ordinate system (lower/left).\n     * @private\n     */\n    PdfDestination.prototype.pointToNativePdf = function (page, point) {\n        var section = page.section;\n        return section.pointToNativePdf(page, point);\n    };\n    /**\n     * `In fills` array by correct values.\n     * @private\n     */\n    PdfDestination.prototype.initializePrimitive = function () {\n        this.array.clear();\n        this.array.add(new PdfReferenceHolder(this.pdfPage));\n        switch (this.destinationMode) {\n            case PdfDestinationMode.Location:\n                var simplePage = this.pdfPage;\n                var point = new PointF();\n                point = this.pointToNativePdf(simplePage, this.destinationLocation);\n                this.array.add(new PdfName(this.dictionaryProperties.xyz));\n                this.array.add(new PdfNumber(point.x));\n                this.array.add(new PdfNumber(point.y));\n                this.array.add(new PdfNumber(this.zoomFactor));\n                break;\n            case PdfDestinationMode.FitToPage:\n                this.array.add(new PdfName(this.dictionaryProperties.fit));\n                break;\n        }\n    };\n    Object.defineProperty(PdfDestination.prototype, \"element\", {\n        /**\n         * Gets the `element` representing this object.\n         * @private\n         */\n        get: function () {\n            this.initializePrimitive();\n            return this.array;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfDestination;\n}());\nexport { PdfDestination };\n", "import { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nvar PdfFunction = /** @class */ (function () {\n    //Constructor\n    /**\n     * Initializes a new instance of the `PdfFunction` class.\n     * @public\n     */\n    function PdfFunction(dictionary) {\n        //Field\n        /**\n         * Internal variable to store dictionary.\n         * @private\n         */\n        this.mDictionary = null;\n        /**\n         * Local variable to store the dictionary properties.\n         * @private\n         */\n        this.mDictionaryProperties = new DictionaryProperties();\n        this.mDictionary = dictionary;\n    }\n    Object.defineProperty(PdfFunction.prototype, \"domain\", {\n        //Properties\n        /**\n         * Gets or sets the domain of the function.\n         * @public\n         */\n        get: function () {\n            var domain = this.mDictionary.items.getValue(this.mDictionaryProperties.domain);\n            return domain;\n        },\n        set: function (value) {\n            this.mDictionary.items.setValue(this.mDictionaryProperties.domain, value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFunction.prototype, \"range\", {\n        /**\n         * Gets or sets the range.\n         * @public\n         */\n        get: function () {\n            var range = (this.mDictionary.items.getValue(this.mDictionaryProperties.range));\n            return range;\n        },\n        set: function (value) {\n            this.mDictionary.items.setValue(this.mDictionaryProperties.range, value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFunction.prototype, \"dictionary\", {\n        /**\n         * Gets the dictionary.\n         */\n        get: function () {\n            return this.mDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFunction.prototype, \"element\", {\n        //IPdfWrapper Members\n        /**\n         * Gets the element.\n         */\n        get: function () {\n            return this.mDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfFunction;\n}());\nexport { PdfFunction };\n", "var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfSampledFunction.ts class for EJ2-PDF\n * Implements PDF Sampled Function.\n */\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfFunction } from './pdf-function';\nimport { PdfStream } from './../../primitives/pdf-stream';\nimport { PdfNumber } from './../../primitives/pdf-number';\nvar PdfSampledFunction = /** @class */ (function (_super) {\n    __extends(PdfSampledFunction, _super);\n    /**\n     * Initializes a new instance of the `PdfSampledFunction` class.\n     * @public\n     */\n    function PdfSampledFunction(domain, range, sizes, samples) {\n        var _this = _super.call(this, new PdfStream()) || this;\n        if (typeof domain === 'undefined') {\n            _this.dictionary.items.setValue(_this.mDictionaryProperties.functionType, new PdfNumber(0));\n        }\n        else {\n            _this.dictionary.items.setValue(_this.mDictionaryProperties.functionType, new PdfNumber(0));\n            _this.checkParams(domain, range, sizes, samples);\n            _this.setDomainAndRange(domain, range);\n            _this.setSizeAndValues(sizes, samples);\n        }\n        return _this;\n    }\n    // Helper methods\n    /**\n     * Checks the input parameters.\n     */\n    PdfSampledFunction.prototype.checkParams = function (domain, range, sizes, samples) {\n        var rLength = range.length;\n        var dLength = domain.length;\n        var sLength = samples.length;\n        var frameLength = (rLength * (dLength / 4));\n    };\n    /**\n     * Sets the domain and range.\n     */\n    PdfSampledFunction.prototype.setDomainAndRange = function (domain, range) {\n        this.domain = new PdfArray(domain);\n        this.range = new PdfArray(range);\n    };\n    /**\n     * Sets the size and values.\n     */\n    PdfSampledFunction.prototype.setSizeAndValues = function (sizes, samples) {\n        var s = (this.dictionary);\n        s.isResource = true;\n        this.dictionary.items.setValue(this.mDictionaryProperties.size, new PdfArray(sizes));\n        this.dictionary.items.setValue(this.mDictionaryProperties.bitsPerSample, new PdfNumber(8));\n        s.writeBytes(samples);\n    };\n    return PdfSampledFunction;\n}(PdfFunction));\nexport { PdfSampledFunction };\n", "/**\n * Specifies the constant values specifying whether to extend the shading\n * beyond the starting and ending points of the axis.\n */\nexport var PdfExtend;\n(function (PdfExtend) {\n    /**\n     * Do not extend any point.\n     */\n    PdfExtend[PdfExtend[\"None\"] = 0] = \"None\";\n    /**\n     * Extend start point.\n     */\n    PdfExtend[PdfExtend[\"Start\"] = 1] = \"Start\";\n    /**\n     * Extend end point.\n     */\n    PdfExtend[PdfExtend[\"End\"] = 2] = \"End\";\n    /**\n     * Extend both start and end points.\n     */\n    PdfExtend[PdfExtend[\"Both\"] = 3] = \"Both\";\n})(PdfExtend || (PdfExtend = {}));\n/**\n * Specifies the gradient direction of the linear gradient brush.\n */\nexport var PdfLinearGradientMode;\n(function (PdfLinearGradientMode) {\n    /**\n     * Specifies a gradient from upper right to lower left.\n     */\n    PdfLinearGradientMode[PdfLinearGradientMode[\"BackwardDiagonal\"] = 0] = \"BackwardDiagonal\";\n    /**\n     * Specifies a gradient from upper left to lower right.\n     */\n    PdfLinearGradientMode[PdfLinearGradientMode[\"ForwardDiagonal\"] = 1] = \"ForwardDiagonal\";\n    /**\n     * Specifies a gradient from left to right.\n     */\n    PdfLinearGradientMode[PdfLinearGradientMode[\"Horizontal\"] = 2] = \"Horizontal\";\n    /**\n     * Specifies a gradient from top to bottom.\n     */\n    PdfLinearGradientMode[PdfLinearGradientMode[\"Vertical\"] = 3] = \"Vertical\";\n})(PdfLinearGradientMode || (PdfLinearGradientMode = {}));\n/**\n * Shading type constants.\n */\nexport var ShadingType;\n(function (ShadingType) {\n    /**\n     * Function-based shading.\n     */\n    ShadingType[ShadingType[\"Function\"] = 1] = \"Function\";\n    /**\n     * Axial shading.\n     */\n    ShadingType[ShadingType[\"Axial\"] = 2] = \"Axial\";\n    /**\n     * Radial shading.\n     */\n    ShadingType[ShadingType[\"Radial\"] = 3] = \"Radial\";\n})(ShadingType || (ShadingType = {}));\nexport var KnownColor;\n(function (KnownColor) {\n    KnownColor[KnownColor[\"ActiveBorder\"] = 1] = \"ActiveBorder\";\n    KnownColor[KnownColor[\"ActiveCaption\"] = 2] = \"ActiveCaption\";\n    KnownColor[KnownColor[\"ActiveCaptionText\"] = 3] = \"ActiveCaptionText\";\n    KnownColor[KnownColor[\"AppWorkspace\"] = 4] = \"AppWorkspace\";\n    KnownColor[KnownColor[\"Control\"] = 5] = \"Control\";\n    KnownColor[KnownColor[\"ControlDark\"] = 6] = \"ControlDark\";\n    KnownColor[KnownColor[\"ControlDarkDark\"] = 7] = \"ControlDarkDark\";\n    KnownColor[KnownColor[\"ControlLight\"] = 8] = \"ControlLight\";\n    KnownColor[KnownColor[\"ControlLightLight\"] = 9] = \"ControlLightLight\";\n    KnownColor[KnownColor[\"ControlText\"] = 10] = \"ControlText\";\n    KnownColor[KnownColor[\"Desktop\"] = 11] = \"Desktop\";\n    KnownColor[KnownColor[\"GrayText\"] = 12] = \"GrayText\";\n    KnownColor[KnownColor[\"Highlight\"] = 13] = \"Highlight\";\n    KnownColor[KnownColor[\"HighlightText\"] = 14] = \"HighlightText\";\n    KnownColor[KnownColor[\"HotTrack\"] = 15] = \"HotTrack\";\n    KnownColor[KnownColor[\"InactiveBorder\"] = 16] = \"InactiveBorder\";\n    KnownColor[KnownColor[\"InactiveCaption\"] = 17] = \"InactiveCaption\";\n    KnownColor[KnownColor[\"InactiveCaptionText\"] = 18] = \"InactiveCaptionText\";\n    KnownColor[KnownColor[\"Info\"] = 19] = \"Info\";\n    KnownColor[KnownColor[\"InfoText\"] = 20] = \"InfoText\";\n    KnownColor[KnownColor[\"Menu\"] = 21] = \"Menu\";\n    KnownColor[KnownColor[\"MenuText\"] = 22] = \"MenuText\";\n    KnownColor[KnownColor[\"ScrollBar\"] = 23] = \"ScrollBar\";\n    KnownColor[KnownColor[\"Window\"] = 24] = \"Window\";\n    KnownColor[KnownColor[\"WindowFrame\"] = 25] = \"WindowFrame\";\n    KnownColor[KnownColor[\"WindowText\"] = 26] = \"WindowText\";\n    KnownColor[KnownColor[\"Transparent\"] = 27] = \"Transparent\";\n    KnownColor[KnownColor[\"AliceBlue\"] = 28] = \"AliceBlue\";\n    KnownColor[KnownColor[\"AntiqueWhite\"] = 29] = \"AntiqueWhite\";\n    KnownColor[KnownColor[\"Aqua\"] = 30] = \"Aqua\";\n    KnownColor[KnownColor[\"Aquamarine\"] = 31] = \"Aquamarine\";\n    KnownColor[KnownColor[\"Azure\"] = 32] = \"Azure\";\n    KnownColor[KnownColor[\"Beige\"] = 33] = \"Beige\";\n    KnownColor[KnownColor[\"Bisque\"] = 34] = \"Bisque\";\n    KnownColor[KnownColor[\"Black\"] = 35] = \"Black\";\n    KnownColor[KnownColor[\"BlanchedAlmond\"] = 36] = \"BlanchedAlmond\";\n    KnownColor[KnownColor[\"Blue\"] = 37] = \"Blue\";\n    KnownColor[KnownColor[\"BlueViolet\"] = 38] = \"BlueViolet\";\n    KnownColor[KnownColor[\"Brown\"] = 39] = \"Brown\";\n    KnownColor[KnownColor[\"BurlyWood\"] = 40] = \"BurlyWood\";\n    KnownColor[KnownColor[\"CadetBlue\"] = 41] = \"CadetBlue\";\n    KnownColor[KnownColor[\"Chartreuse\"] = 42] = \"Chartreuse\";\n    KnownColor[KnownColor[\"Chocolate\"] = 43] = \"Chocolate\";\n    KnownColor[KnownColor[\"Coral\"] = 44] = \"Coral\";\n    KnownColor[KnownColor[\"CornflowerBlue\"] = 45] = \"CornflowerBlue\";\n    KnownColor[KnownColor[\"Cornsilk\"] = 46] = \"Cornsilk\";\n    KnownColor[KnownColor[\"Crimson\"] = 47] = \"Crimson\";\n    KnownColor[KnownColor[\"Cyan\"] = 48] = \"Cyan\";\n    KnownColor[KnownColor[\"DarkBlue\"] = 49] = \"DarkBlue\";\n    KnownColor[KnownColor[\"DarkCyan\"] = 50] = \"DarkCyan\";\n    KnownColor[KnownColor[\"DarkGoldenrod\"] = 51] = \"DarkGoldenrod\";\n    KnownColor[KnownColor[\"DarkGray\"] = 52] = \"DarkGray\";\n    KnownColor[KnownColor[\"DarkGreen\"] = 53] = \"DarkGreen\";\n    KnownColor[KnownColor[\"DarkKhaki\"] = 54] = \"DarkKhaki\";\n    KnownColor[KnownColor[\"DarkMagenta\"] = 55] = \"DarkMagenta\";\n    KnownColor[KnownColor[\"DarkOliveGreen\"] = 56] = \"DarkOliveGreen\";\n    KnownColor[KnownColor[\"DarkOrange\"] = 57] = \"DarkOrange\";\n    KnownColor[KnownColor[\"DarkOrchid\"] = 58] = \"DarkOrchid\";\n    KnownColor[KnownColor[\"DarkRed\"] = 59] = \"DarkRed\";\n    KnownColor[KnownColor[\"DarkSalmon\"] = 60] = \"DarkSalmon\";\n    KnownColor[KnownColor[\"DarkSeaGreen\"] = 61] = \"DarkSeaGreen\";\n    KnownColor[KnownColor[\"DarkSlateBlue\"] = 62] = \"DarkSlateBlue\";\n    KnownColor[KnownColor[\"DarkSlateGray\"] = 63] = \"DarkSlateGray\";\n    KnownColor[KnownColor[\"DarkTurquoise\"] = 64] = \"DarkTurquoise\";\n    KnownColor[KnownColor[\"DarkViolet\"] = 65] = \"DarkViolet\";\n    KnownColor[KnownColor[\"DeepPink\"] = 66] = \"DeepPink\";\n    KnownColor[KnownColor[\"DeepSkyBlue\"] = 67] = \"DeepSkyBlue\";\n    KnownColor[KnownColor[\"DimGray\"] = 68] = \"DimGray\";\n    KnownColor[KnownColor[\"DodgerBlue\"] = 69] = \"DodgerBlue\";\n    KnownColor[KnownColor[\"Firebrick\"] = 70] = \"Firebrick\";\n    KnownColor[KnownColor[\"FloralWhite\"] = 71] = \"FloralWhite\";\n    KnownColor[KnownColor[\"ForestGreen\"] = 72] = \"ForestGreen\";\n    KnownColor[KnownColor[\"Fuchsia\"] = 73] = \"Fuchsia\";\n    KnownColor[KnownColor[\"Gainsboro\"] = 74] = \"Gainsboro\";\n    KnownColor[KnownColor[\"GhostWhite\"] = 75] = \"GhostWhite\";\n    KnownColor[KnownColor[\"Gold\"] = 76] = \"Gold\";\n    KnownColor[KnownColor[\"Goldenrod\"] = 77] = \"Goldenrod\";\n    KnownColor[KnownColor[\"Gray\"] = 78] = \"Gray\";\n    KnownColor[KnownColor[\"Green\"] = 79] = \"Green\";\n    KnownColor[KnownColor[\"GreenYellow\"] = 80] = \"GreenYellow\";\n    KnownColor[KnownColor[\"Honeydew\"] = 81] = \"Honeydew\";\n    KnownColor[KnownColor[\"HotPink\"] = 82] = \"HotPink\";\n    KnownColor[KnownColor[\"IndianRed\"] = 83] = \"IndianRed\";\n    KnownColor[KnownColor[\"Indigo\"] = 84] = \"Indigo\";\n    KnownColor[KnownColor[\"Ivory\"] = 85] = \"Ivory\";\n    KnownColor[KnownColor[\"Khaki\"] = 86] = \"Khaki\";\n    KnownColor[KnownColor[\"Lavender\"] = 87] = \"Lavender\";\n    KnownColor[KnownColor[\"LavenderBlush\"] = 88] = \"LavenderBlush\";\n    KnownColor[KnownColor[\"LawnGreen\"] = 89] = \"LawnGreen\";\n    KnownColor[KnownColor[\"LemonChiffon\"] = 90] = \"LemonChiffon\";\n    KnownColor[KnownColor[\"LightBlue\"] = 91] = \"LightBlue\";\n    KnownColor[KnownColor[\"LightCoral\"] = 92] = \"LightCoral\";\n    KnownColor[KnownColor[\"LightCyan\"] = 93] = \"LightCyan\";\n    KnownColor[KnownColor[\"LightGoldenrodYellow\"] = 94] = \"LightGoldenrodYellow\";\n    KnownColor[KnownColor[\"LightGray\"] = 95] = \"LightGray\";\n    KnownColor[KnownColor[\"LightGreen\"] = 96] = \"LightGreen\";\n    KnownColor[KnownColor[\"LightPink\"] = 97] = \"LightPink\";\n    KnownColor[KnownColor[\"LightSalmon\"] = 98] = \"LightSalmon\";\n    KnownColor[KnownColor[\"LightSeaGreen\"] = 99] = \"LightSeaGreen\";\n    KnownColor[KnownColor[\"LightSkyBlue\"] = 100] = \"LightSkyBlue\";\n    KnownColor[KnownColor[\"LightSlateGray\"] = 101] = \"LightSlateGray\";\n    KnownColor[KnownColor[\"LightSteelBlue\"] = 102] = \"LightSteelBlue\";\n    KnownColor[KnownColor[\"LightYellow\"] = 103] = \"LightYellow\";\n    KnownColor[KnownColor[\"Lime\"] = 104] = \"Lime\";\n    KnownColor[KnownColor[\"LimeGreen\"] = 105] = \"LimeGreen\";\n    KnownColor[KnownColor[\"Linen\"] = 106] = \"Linen\";\n    KnownColor[KnownColor[\"Magenta\"] = 107] = \"Magenta\";\n    KnownColor[KnownColor[\"Maroon\"] = 108] = \"Maroon\";\n    KnownColor[KnownColor[\"MediumAquamarine\"] = 109] = \"MediumAquamarine\";\n    KnownColor[KnownColor[\"MediumBlue\"] = 110] = \"MediumBlue\";\n    KnownColor[KnownColor[\"MediumOrchid\"] = 111] = \"MediumOrchid\";\n    KnownColor[KnownColor[\"MediumPurple\"] = 112] = \"MediumPurple\";\n    KnownColor[KnownColor[\"MediumSeaGreen\"] = 113] = \"MediumSeaGreen\";\n    KnownColor[KnownColor[\"MediumSlateBlue\"] = 114] = \"MediumSlateBlue\";\n    KnownColor[KnownColor[\"MediumSpringGreen\"] = 115] = \"MediumSpringGreen\";\n    KnownColor[KnownColor[\"MediumTurquoise\"] = 116] = \"MediumTurquoise\";\n    KnownColor[KnownColor[\"MediumVioletRed\"] = 117] = \"MediumVioletRed\";\n    KnownColor[KnownColor[\"MidnightBlue\"] = 118] = \"MidnightBlue\";\n    KnownColor[KnownColor[\"MintCream\"] = 119] = \"MintCream\";\n    KnownColor[KnownColor[\"MistyRose\"] = 120] = \"MistyRose\";\n    KnownColor[KnownColor[\"Moccasin\"] = 121] = \"Moccasin\";\n    KnownColor[KnownColor[\"NavajoWhite\"] = 122] = \"NavajoWhite\";\n    KnownColor[KnownColor[\"Navy\"] = 123] = \"Navy\";\n    KnownColor[KnownColor[\"OldLace\"] = 124] = \"OldLace\";\n    KnownColor[KnownColor[\"Olive\"] = 125] = \"Olive\";\n    KnownColor[KnownColor[\"OliveDrab\"] = 126] = \"OliveDrab\";\n    KnownColor[KnownColor[\"Orange\"] = 127] = \"Orange\";\n    KnownColor[KnownColor[\"OrangeRed\"] = 128] = \"OrangeRed\";\n    KnownColor[KnownColor[\"Orchid\"] = 129] = \"Orchid\";\n    KnownColor[KnownColor[\"PaleGoldenrod\"] = 130] = \"PaleGoldenrod\";\n    KnownColor[KnownColor[\"PaleGreen\"] = 131] = \"PaleGreen\";\n    KnownColor[KnownColor[\"PaleTurquoise\"] = 132] = \"PaleTurquoise\";\n    KnownColor[KnownColor[\"PaleVioletRed\"] = 133] = \"PaleVioletRed\";\n    KnownColor[KnownColor[\"PapayaWhip\"] = 134] = \"PapayaWhip\";\n    KnownColor[KnownColor[\"PeachPuff\"] = 135] = \"PeachPuff\";\n    KnownColor[KnownColor[\"Peru\"] = 136] = \"Peru\";\n    KnownColor[KnownColor[\"Pink\"] = 137] = \"Pink\";\n    KnownColor[KnownColor[\"Plum\"] = 138] = \"Plum\";\n    KnownColor[KnownColor[\"PowderBlue\"] = 139] = \"PowderBlue\";\n    KnownColor[KnownColor[\"Purple\"] = 140] = \"Purple\";\n    KnownColor[KnownColor[\"Red\"] = 141] = \"Red\";\n    KnownColor[KnownColor[\"RosyBrown\"] = 142] = \"RosyBrown\";\n    KnownColor[KnownColor[\"RoyalBlue\"] = 143] = \"RoyalBlue\";\n    KnownColor[KnownColor[\"SaddleBrown\"] = 144] = \"SaddleBrown\";\n    KnownColor[KnownColor[\"Salmon\"] = 145] = \"Salmon\";\n    KnownColor[KnownColor[\"SandyBrown\"] = 146] = \"SandyBrown\";\n    KnownColor[KnownColor[\"SeaGreen\"] = 147] = \"SeaGreen\";\n    KnownColor[KnownColor[\"SeaShell\"] = 148] = \"SeaShell\";\n    KnownColor[KnownColor[\"Sienna\"] = 149] = \"Sienna\";\n    KnownColor[KnownColor[\"Silver\"] = 150] = \"Silver\";\n    KnownColor[KnownColor[\"SkyBlue\"] = 151] = \"SkyBlue\";\n    KnownColor[KnownColor[\"SlateBlue\"] = 152] = \"SlateBlue\";\n    KnownColor[KnownColor[\"SlateGray\"] = 153] = \"SlateGray\";\n    KnownColor[KnownColor[\"Snow\"] = 154] = \"Snow\";\n    KnownColor[KnownColor[\"SpringGreen\"] = 155] = \"SpringGreen\";\n    KnownColor[KnownColor[\"SteelBlue\"] = 156] = \"SteelBlue\";\n    KnownColor[KnownColor[\"Tan\"] = 157] = \"Tan\";\n    KnownColor[KnownColor[\"Teal\"] = 158] = \"Teal\";\n    KnownColor[KnownColor[\"Thistle\"] = 159] = \"Thistle\";\n    KnownColor[KnownColor[\"Tomato\"] = 160] = \"Tomato\";\n    KnownColor[KnownColor[\"Turquoise\"] = 161] = \"Turquoise\";\n    KnownColor[KnownColor[\"Violet\"] = 162] = \"Violet\";\n    KnownColor[KnownColor[\"Wheat\"] = 163] = \"Wheat\";\n    KnownColor[KnownColor[\"White\"] = 164] = \"White\";\n    KnownColor[KnownColor[\"WhiteSmoke\"] = 165] = \"WhiteSmoke\";\n    KnownColor[KnownColor[\"Yellow\"] = 166] = \"Yellow\";\n    KnownColor[KnownColor[\"YellowGreen\"] = 167] = \"YellowGreen\";\n    KnownColor[KnownColor[\"ButtonFace\"] = 168] = \"ButtonFace\";\n    KnownColor[KnownColor[\"ButtonHighlight\"] = 169] = \"ButtonHighlight\";\n    KnownColor[KnownColor[\"ButtonShadow\"] = 170] = \"ButtonShadow\";\n    KnownColor[KnownColor[\"GradientActiveCaption\"] = 171] = \"GradientActiveCaption\";\n    KnownColor[KnownColor[\"GradientInactiveCaption\"] = 172] = \"GradientInactiveCaption\";\n    KnownColor[KnownColor[\"MenuBar\"] = 173] = \"MenuBar\";\n    KnownColor[KnownColor[\"MenuHighlight\"] = 174] = \"MenuHighlight\";\n})(KnownColor || (KnownColor = {}));\n", "/**\n * PdfBrushes.ts class for EJ2-PDF\n */\nimport { PdfColor } from './../pdf-color';\nimport { Dictionary } from './../../collections/dictionary';\nimport { KnownColor } from './enum';\nimport { PdfSolidBrush } from './pdf-solid-brush';\n/**\n * `PdfBrushes` class provides objects used to fill the interiors of graphical shapes such as rectangles,\n * ellipses, pies, polygons, and paths.\n * @private\n */\nvar PdfBrushes = /** @class */ (function () {\n    function PdfBrushes() {\n    }\n    Object.defineProperty(PdfBrushes, \"AliceBlue\", {\n        //Static Properties\n        /**\n         * Gets the AliceBlue brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.AliceBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.AliceBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.AliceBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"AntiqueWhite\", {\n        /**\n         * Gets the antique white brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.AntiqueWhite)) {\n                brush = (this.sBrushes.getValue(KnownColor.AntiqueWhite));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.AntiqueWhite);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Aqua\", {\n        /**\n         * Gets the Aqua default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Aqua)) {\n                brush = (this.sBrushes.getValue(KnownColor.Aqua));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Aqua);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Aquamarine\", {\n        /**\n         * Gets the Aquamarine default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Aquamarine)) {\n                brush = (this.sBrushes.getValue(KnownColor.Aquamarine));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Aquamarine);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Azure\", {\n        /**\n         * Gets the Azure default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Azure)) {\n                brush = (this.sBrushes.getValue(KnownColor.Azure));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Azure);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Beige\", {\n        /**\n         * Gets the Beige default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Beige)) {\n                brush = (this.sBrushes.getValue(KnownColor.Beige));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Beige);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Bisque\", {\n        /**\n         * Gets the Bisque default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Bisque)) {\n                brush = (this.sBrushes.getValue(KnownColor.Bisque));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Bisque);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Black\", {\n        /**\n         * Gets the Black default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Black)) {\n                brush = (this.sBrushes.getValue(KnownColor.Black));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Black);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"BlanchedAlmond\", {\n        /**\n         * Gets the BlanchedAlmond default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.BlanchedAlmond)) {\n                brush = (this.sBrushes.getValue(KnownColor.BlanchedAlmond));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.BlanchedAlmond);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Blue\", {\n        /**\n         * Gets the Blue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Blue)) {\n                brush = (this.sBrushes.getValue(KnownColor.Blue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Blue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"BlueViolet\", {\n        /**\n         * Gets the BlueViolet default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.BlueViolet)) {\n                brush = (this.sBrushes.getValue(KnownColor.BlueViolet));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.BlueViolet);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Brown\", {\n        /**\n         * Gets the Brown default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Brown)) {\n                brush = (this.sBrushes.getValue(KnownColor.Brown));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Brown);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"BurlyWood\", {\n        /**\n         * Gets the BurlyWood default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.BurlyWood)) {\n                brush = (this.sBrushes.getValue(KnownColor.BurlyWood));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.BurlyWood);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"CadetBlue\", {\n        /**\n         * Gets the CadetBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.CadetBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.CadetBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.CadetBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Chartreuse\", {\n        /**\n         * Gets the Chartreuse default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Chartreuse)) {\n                brush = (this.sBrushes.getValue(KnownColor.Chartreuse));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Chartreuse);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Chocolate\", {\n        /**\n         * Gets the Chocolate default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Chocolate)) {\n                brush = (this.sBrushes.getValue(KnownColor.Chocolate));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Chocolate);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Coral\", {\n        /**\n         * Gets the Coral default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Coral)) {\n                brush = (this.sBrushes.getValue(KnownColor.Coral));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Coral);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"CornflowerBlue\", {\n        /**\n         * Gets the CornflowerBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.CornflowerBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.CornflowerBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.CornflowerBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Cornsilk\", {\n        /**\n         * Gets the Corn silk default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Cornsilk)) {\n                brush = (this.sBrushes.getValue(KnownColor.Cornsilk));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Cornsilk);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Crimson\", {\n        /**\n         *  Gets the Crimson default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Crimson)) {\n                brush = (this.sBrushes.getValue(KnownColor.Crimson));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Crimson);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Cyan\", {\n        /**\n         * Gets the Cyan default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Cyan)) {\n                brush = (this.sBrushes.getValue(KnownColor.Cyan));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Cyan);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkBlue\", {\n        /**\n         * Gets the DarkBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkCyan\", {\n        /**\n         * Gets the DarkCyan default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkCyan)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkCyan));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkCyan);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkGoldenrod\", {\n        /**\n         * Gets the DarkGoldenrod default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkGoldenrod)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkGoldenrod));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkGoldenrod);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkGray\", {\n        /**\n         * Gets the DarkGray default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkGray)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkGray));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkGray);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkGreen\", {\n        /**\n         * Gets the DarkGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkKhaki\", {\n        /**\n         * Gets the DarkKhaki default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkKhaki)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkKhaki));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkKhaki);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkMagenta\", {\n        /**\n         * Gets the DarkMagenta default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkMagenta)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkMagenta));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkMagenta);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkOliveGreen\", {\n        /**\n         * Gets the DarkOliveGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkOliveGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkOliveGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkOliveGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkOrange\", {\n        /**\n         * Gets the DarkOrange default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkOrange)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkOrange));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkOrange);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkOrchid\", {\n        /**\n         * Gets the DarkOrchid default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkOrchid)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkOrchid));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkOrchid);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkRed\", {\n        /**\n         * Gets the DarkRed default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkRed)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkRed));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkRed);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkSalmon\", {\n        /**\n         * Gets the DarkSalmon default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkSalmon)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkSalmon));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkSalmon);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkSeaGreen\", {\n        /**\n         * Gets the DarkSeaGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkSeaGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkSeaGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkSeaGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkSlateBlue\", {\n        /**\n         * Gets the DarkSlateBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkSlateBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkSlateBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkSlateBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkSlateGray\", {\n        /**\n         * Gets the DarkSlateGray default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkSlateGray)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkSlateGray));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkSlateGray);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkTurquoise\", {\n        /**\n         * Gets the DarkTurquoise default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkTurquoise)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkTurquoise));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkTurquoise);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkViolet\", {\n        /**\n         * Gets the DarkViolet default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkViolet)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkViolet));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkViolet);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DeepPink\", {\n        /**\n         * Gets the DeepPink default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DeepPink)) {\n                brush = (this.sBrushes.getValue(KnownColor.DeepPink));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DeepPink);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DeepSkyBlue\", {\n        /**\n         * Gets the DeepSkyBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DeepSkyBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.DeepSkyBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DeepSkyBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DimGray\", {\n        /**\n         * Gets the DimGray default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DimGray)) {\n                brush = (this.sBrushes.getValue(KnownColor.DimGray));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DimGray);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DodgerBlue\", {\n        /**\n         * Gets the DodgerBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DodgerBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.DodgerBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DodgerBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Firebrick\", {\n        /**\n         * Gets the Firebrick default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Firebrick)) {\n                brush = (this.sBrushes.getValue(KnownColor.Firebrick));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Firebrick);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"FloralWhite\", {\n        /**\n         * Gets the FloralWhite default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.FloralWhite)) {\n                brush = (this.sBrushes.getValue(KnownColor.FloralWhite));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.FloralWhite);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"ForestGreen\", {\n        /**\n         * Gets the ForestGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.ForestGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.ForestGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.ForestGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Fuchsia\", {\n        /**\n         * Gets the Fuchsia default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Fuchsia)) {\n                brush = (this.sBrushes.getValue(KnownColor.Fuchsia));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Fuchsia);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Gainsboro\", {\n        /**\n         * Gets the Gainsborough default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Gainsboro)) {\n                brush = (this.sBrushes.getValue(KnownColor.Gainsboro));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Gainsboro);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"GhostWhite\", {\n        /**\n         * Gets the GhostWhite default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.GhostWhite)) {\n                brush = (this.sBrushes.getValue(KnownColor.GhostWhite));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.GhostWhite);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Gold\", {\n        /**\n         * Gets the Gold default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Gold)) {\n                brush = (this.sBrushes.getValue(KnownColor.Gold));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Gold);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Goldenrod\", {\n        /**\n         * Gets the Goldenrod default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Goldenrod)) {\n                brush = (this.sBrushes.getValue(KnownColor.Goldenrod));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Goldenrod);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Gray\", {\n        /**\n         * Gets the Gray default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Gray)) {\n                brush = (this.sBrushes.getValue(KnownColor.Gray));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Gray);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Green\", {\n        /**\n         * Gets the Green default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Green)) {\n                brush = (this.sBrushes.getValue(KnownColor.Green));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Green);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"GreenYellow\", {\n        /**\n         * Gets the GreenYellow default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.GreenYellow)) {\n                brush = (this.sBrushes.getValue(KnownColor.GreenYellow));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.GreenYellow);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Honeydew\", {\n        /**\n         * Gets the Honeydew default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Honeydew)) {\n                brush = (this.sBrushes.getValue(KnownColor.Honeydew));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Honeydew);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"HotPink\", {\n        /**\n         * Gets the HotPink default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.HotPink)) {\n                brush = (this.sBrushes.getValue(KnownColor.HotPink));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.HotPink);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"IndianRed\", {\n        /**\n         * Gets the IndianRed default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.IndianRed)) {\n                brush = (this.sBrushes.getValue(KnownColor.IndianRed));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.IndianRed);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Indigo\", {\n        /**\n         * Gets the Indigo default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Indigo)) {\n                brush = (this.sBrushes.getValue(KnownColor.Indigo));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Indigo);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Ivory\", {\n        /**\n         * Gets the Ivory default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Ivory)) {\n                brush = (this.sBrushes.getValue(KnownColor.Ivory));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Ivory);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Khaki\", {\n        /**\n         * Gets the Khaki default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Khaki)) {\n                brush = (this.sBrushes.getValue(KnownColor.Khaki));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Khaki);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Lavender\", {\n        /**\n         * Gets the Lavender default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Lavender)) {\n                brush = (this.sBrushes.getValue(KnownColor.Lavender));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Lavender);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LavenderBlush\", {\n        /**\n         * Gets the LavenderBlush default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LavenderBlush)) {\n                brush = (this.sBrushes.getValue(KnownColor.LavenderBlush));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LavenderBlush);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LawnGreen\", {\n        /**\n         * Gets the LawnGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LawnGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.LawnGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LawnGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LemonChiffon\", {\n        /**\n         * Gets the LemonChiffon default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LemonChiffon)) {\n                brush = (this.sBrushes.getValue(KnownColor.LemonChiffon));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LemonChiffon);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightBlue\", {\n        /**\n         * Gets the LightBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightCoral\", {\n        /**\n         * Gets the LightCoral default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightCoral)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightCoral));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightCoral);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightCyan\", {\n        /**\n         * Gets the LightCyan default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightCyan)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightCyan));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightCyan);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightGoldenrodYellow\", {\n        /**\n         * Gets the LightGoldenrodYellow default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightGoldenrodYellow)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightGoldenrodYellow));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightGoldenrodYellow);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightGray\", {\n        /**\n         * Gets the LightGray default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightGray)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightGray));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightGray);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightGreen\", {\n        /**\n         * Gets the LightGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightPink\", {\n        /**\n         * Gets the LightPink default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightPink)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightPink));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightPink);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightSalmon\", {\n        /**\n         * Gets the LightSalmon default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightSalmon)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightSalmon));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightSalmon);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightSeaGreen\", {\n        /**\n         * Gets the LightSeaGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightSeaGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightSeaGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightSeaGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightSkyBlue\", {\n        /**\n         * Gets the LightSkyBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightSkyBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightSkyBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightSkyBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightSlateGray\", {\n        /**\n         * Gets the LightSlateGray default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightSlateGray)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightSlateGray));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightSlateGray);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightSteelBlue\", {\n        /**\n         * Gets the LightSteelBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightSteelBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightSteelBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightSteelBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightYellow\", {\n        /**\n         * Gets the LightYellow default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightYellow)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightYellow));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightYellow);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Lime\", {\n        /**\n         * Gets the Lime default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Lime)) {\n                brush = (this.sBrushes.getValue(KnownColor.Lime));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Lime);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LimeGreen\", {\n        /**\n         * Gets the LimeGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LimeGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.LimeGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LimeGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Linen\", {\n        /**\n         * Gets the Linen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Linen)) {\n                brush = (this.sBrushes.getValue(KnownColor.Linen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Linen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Magenta\", {\n        /**\n         * Gets the Magenta default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Magenta)) {\n                brush = (this.sBrushes.getValue(KnownColor.Magenta));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Magenta);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Maroon\", {\n        /**\n         * Gets the Maroon default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Maroon)) {\n                brush = (this.sBrushes.getValue(KnownColor.Maroon));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Maroon);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumAquamarine\", {\n        /**\n         * Gets the MediumAquamarine default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumAquamarine)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumAquamarine));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumAquamarine);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumBlue\", {\n        /**\n         * Gets the MediumBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumOrchid\", {\n        /**\n         * Gets the MediumOrchid default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumOrchid)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumOrchid));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumOrchid);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumPurple\", {\n        /**\n         * Gets the MediumPurple default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumPurple)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumPurple));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumPurple);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumSeaGreen\", {\n        /**\n         * Gets the MediumSeaGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumSeaGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumSeaGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumSeaGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumSlateBlue\", {\n        /**\n         * Gets the MediumSlateBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumSlateBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumSlateBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumSlateBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumSpringGreen\", {\n        /**\n         * Gets the MediumSpringGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumSpringGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumSpringGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumSpringGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumTurquoise\", {\n        /**\n         * Gets the MediumTurquoise default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumTurquoise)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumTurquoise));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumTurquoise);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumVioletRed\", {\n        /**\n         * Gets the MediumVioletRed default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumVioletRed)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumVioletRed));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumVioletRed);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MidnightBlue\", {\n        /**\n         * Gets the MidnightBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MidnightBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.MidnightBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MidnightBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MintCream\", {\n        /**\n         * Gets the MintCream default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MintCream)) {\n                brush = (this.sBrushes.getValue(KnownColor.MintCream));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MintCream);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MistyRose\", {\n        /**\n         * Gets the MistyRose default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MistyRose)) {\n                brush = (this.sBrushes.getValue(KnownColor.MistyRose));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MistyRose);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Moccasin\", {\n        /**\n         * Gets the Moccasin default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Moccasin)) {\n                brush = (this.sBrushes.getValue(KnownColor.Moccasin));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Moccasin);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"NavajoWhite\", {\n        /**\n         * Gets the NavajoWhite default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.NavajoWhite)) {\n                brush = (this.sBrushes.getValue(KnownColor.NavajoWhite));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.NavajoWhite);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Navy\", {\n        /**\n         * Gets the Navy default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Navy)) {\n                brush = (this.sBrushes.getValue(KnownColor.Navy));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Navy);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"OldLace\", {\n        /**\n         * Gets the OldLace default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.OldLace)) {\n                brush = (this.sBrushes.getValue(KnownColor.OldLace));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.OldLace);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Olive\", {\n        /**\n         * Gets the Olive default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Olive)) {\n                brush = (this.sBrushes.getValue(KnownColor.Olive));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Olive);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"OliveDrab\", {\n        /**\n         * Gets the OliveDrab default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.OliveDrab)) {\n                brush = (this.sBrushes.getValue(KnownColor.OliveDrab));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.OliveDrab);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Orange\", {\n        /**\n         * Gets the Orange default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Orange)) {\n                brush = (this.sBrushes.getValue(KnownColor.Orange));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Orange);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"OrangeRed\", {\n        /**\n         * Gets the OrangeRed default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.OrangeRed)) {\n                brush = (this.sBrushes.getValue(KnownColor.OrangeRed));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.OrangeRed);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Orchid\", {\n        /**\n         * Gets the Orchid default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Orchid)) {\n                brush = (this.sBrushes.getValue(KnownColor.Orchid));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Orchid);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"PaleGoldenrod\", {\n        /**\n         * Gets the PaleGoldenrod default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.PaleGoldenrod)) {\n                brush = (this.sBrushes.getValue(KnownColor.PaleGoldenrod));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.PaleGoldenrod);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"PaleGreen\", {\n        /**\n         * Gets the PaleGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.PaleGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.PaleGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.PaleGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"PaleTurquoise\", {\n        /**\n         * Gets the PaleTurquoise default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.PaleTurquoise)) {\n                brush = (this.sBrushes.getValue(KnownColor.PaleTurquoise));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.PaleTurquoise);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"PaleVioletRed\", {\n        /**\n         * Gets the PaleVioletRed default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.PaleVioletRed)) {\n                brush = (this.sBrushes.getValue(KnownColor.PaleVioletRed));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.PaleVioletRed);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"PapayaWhip\", {\n        /**\n         * Gets the PapayaWhip default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.PapayaWhip)) {\n                brush = (this.sBrushes.getValue(KnownColor.PapayaWhip));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.PapayaWhip);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"PeachPuff\", {\n        /**\n         * Gets the PeachPuff default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.PeachPuff)) {\n                brush = (this.sBrushes.getValue(KnownColor.PeachPuff));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.PeachPuff);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Peru\", {\n        /**\n         * Gets the Peru default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Peru)) {\n                brush = (this.sBrushes.getValue(KnownColor.Peru));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Peru);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Pink\", {\n        /**\n         * Gets the Pink default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Pink)) {\n                brush = (this.sBrushes.getValue(KnownColor.Pink));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Pink);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Plum\", {\n        /**\n         * Gets the Plum default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Plum)) {\n                brush = (this.sBrushes.getValue(KnownColor.Plum));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Plum);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"PowderBlue\", {\n        /**\n         * Gets the PowderBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.PowderBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.PowderBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.PowderBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Purple\", {\n        /**\n         * Gets the Purple default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Purple)) {\n                brush = (this.sBrushes.getValue(KnownColor.Purple));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Purple);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Red\", {\n        /**\n         * Gets the Red default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Red)) {\n                brush = (this.sBrushes.getValue(KnownColor.Red));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Red);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"RosyBrown\", {\n        /**\n         * Gets the RosyBrown default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.RosyBrown)) {\n                brush = (this.sBrushes.getValue(KnownColor.RosyBrown));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.RosyBrown);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"RoyalBlue\", {\n        /**\n         * Gets the RoyalBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.RoyalBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.RoyalBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.RoyalBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SaddleBrown\", {\n        /**\n         * Gets the SaddleBrown default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SaddleBrown)) {\n                brush = (this.sBrushes.getValue(KnownColor.SaddleBrown));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SaddleBrown);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Salmon\", {\n        /**\n         * Gets the Salmon default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Salmon)) {\n                brush = (this.sBrushes.getValue(KnownColor.Salmon));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Salmon);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SandyBrown\", {\n        /**\n         * Gets the SandyBrown default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SandyBrown)) {\n                brush = (this.sBrushes.getValue(KnownColor.SandyBrown));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SandyBrown);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SeaGreen\", {\n        /**\n         * Gets the SeaGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SeaGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.SeaGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SeaGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SeaShell\", {\n        /**\n         * Gets the SeaShell default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SeaShell)) {\n                brush = (this.sBrushes.getValue(KnownColor.SeaShell));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SeaShell);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Sienna\", {\n        /**\n         * Gets the Sienna default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Sienna)) {\n                brush = (this.sBrushes.getValue(KnownColor.Sienna));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Sienna);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Silver\", {\n        /**\n         * Gets the Silver default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Silver)) {\n                brush = (this.sBrushes.getValue(KnownColor.Silver));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Silver);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SkyBlue\", {\n        /**\n         * Gets the SkyBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SkyBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.SkyBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SkyBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SlateBlue\", {\n        /**\n         * Gets the SlateBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SlateBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.SlateBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SlateBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SlateGray\", {\n        /**\n         * Gets the SlateGray default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SlateGray)) {\n                brush = (this.sBrushes.getValue(KnownColor.SlateGray));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SlateGray);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Snow\", {\n        /**\n         * Gets the Snow default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Snow)) {\n                brush = (this.sBrushes.getValue(KnownColor.Snow));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Snow);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SpringGreen\", {\n        /**\n         * Gets the SpringGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SpringGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.SpringGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SpringGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SteelBlue\", {\n        /**\n         * Gets the SteelBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SteelBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.SteelBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SteelBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Tan\", {\n        /**\n         * Gets the Tan default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Tan)) {\n                brush = (this.sBrushes.getValue(KnownColor.Tan));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Tan);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Teal\", {\n        /**\n         * Gets the Teal default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Teal)) {\n                brush = (this.sBrushes.getValue(KnownColor.Teal));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Teal);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Thistle\", {\n        /**\n         * Gets the Thistle default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Thistle)) {\n                brush = (this.sBrushes.getValue(KnownColor.Thistle));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Thistle);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Tomato\", {\n        /**\n         * Gets the Tomato default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Tomato)) {\n                brush = (this.sBrushes.getValue(KnownColor.Tomato));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Tomato);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Transparent\", {\n        /**\n         * Gets the Transparent default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Transparent)) {\n                brush = (this.sBrushes.getValue(KnownColor.Transparent));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Transparent);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Turquoise\", {\n        /**\n         * Gets the Turquoise default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Turquoise)) {\n                brush = (this.sBrushes.getValue(KnownColor.Turquoise));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Turquoise);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Violet\", {\n        /**\n         * Gets the Violet default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Violet)) {\n                brush = (this.sBrushes.getValue(KnownColor.Violet));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Violet);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Wheat\", {\n        /**\n         * Gets the Wheat default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Wheat)) {\n                brush = (this.sBrushes.getValue(KnownColor.Wheat));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Wheat);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"White\", {\n        /**\n         * Gets the White default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.White)) {\n                brush = (this.sBrushes.getValue(KnownColor.White));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.White);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"WhiteSmoke\", {\n        /**\n         * Gets the WhiteSmoke default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.WhiteSmoke)) {\n                brush = (this.sBrushes.getValue(KnownColor.WhiteSmoke));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.WhiteSmoke);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Yellow\", {\n        /**\n         * Gets the Yellow default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Yellow)) {\n                brush = (this.sBrushes.getValue(KnownColor.Yellow));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Yellow);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"YellowGreen\", {\n        /**\n         * Gets the YellowGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.YellowGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.YellowGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.YellowGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Get the brush.\n     */\n    PdfBrushes.getBrush = function (colorName) {\n        var pdfColor = this.getColorValue(colorName);\n        var brush = new PdfSolidBrush(pdfColor);\n        this.sBrushes.setValue(colorName, brush);\n        return brush;\n    };\n    /**\n     * Get the color value.\n     * @param colorName The KnownColor name.\n     */\n    /* tslint:disable */\n    PdfBrushes.getColorValue = function (colorName) {\n        var color = new PdfColor();\n        switch (colorName) {\n            case KnownColor.Transparent:\n                color = new PdfColor(0, 255, 255, 255);\n                break;\n            case KnownColor.AliceBlue:\n                color = new PdfColor(255, 240, 248, 255);\n                break;\n            case KnownColor.AntiqueWhite:\n                color = new PdfColor(255, 250, 235, 215);\n                break;\n            case KnownColor.Aqua:\n                color = new PdfColor(255, 0, 255, 255);\n                break;\n            case KnownColor.Aquamarine:\n                color = new PdfColor(255, 127, 255, 212);\n                break;\n            case KnownColor.Azure:\n                color = new PdfColor(255, 240, 255, 255);\n                break;\n            case KnownColor.Beige:\n                color = new PdfColor(255, 245, 245, 220);\n                break;\n            case KnownColor.Bisque:\n                color = new PdfColor(255, 255, 228, 196);\n                break;\n            case KnownColor.Black:\n                color = new PdfColor(255, 0, 0, 0);\n                break;\n            case KnownColor.BlanchedAlmond:\n                color = new PdfColor(255, 255, 235, 205);\n                break;\n            case KnownColor.Blue:\n                color = new PdfColor(255, 0, 0, 255);\n                break;\n            case KnownColor.BlueViolet:\n                color = new PdfColor(255, 138, 43, 226);\n                break;\n            case KnownColor.Brown:\n                color = new PdfColor(255, 165, 42, 42);\n                break;\n            case KnownColor.BurlyWood:\n                color = new PdfColor(255, 222, 184, 135);\n                break;\n            case KnownColor.CadetBlue:\n                color = new PdfColor(255, 95, 158, 160);\n                break;\n            case KnownColor.Chartreuse:\n                color = new PdfColor(255, 127, 255, 0);\n                break;\n            case KnownColor.Chocolate:\n                color = new PdfColor(255, 210, 105, 30);\n                break;\n            case KnownColor.Coral:\n                color = new PdfColor(255, 255, 127, 80);\n                break;\n            case KnownColor.CornflowerBlue:\n                color = new PdfColor(255, 100, 149, 237);\n                break;\n            case KnownColor.Cornsilk:\n                color = new PdfColor(255, 255, 248, 220);\n                break;\n            case KnownColor.Crimson:\n                color = new PdfColor(255, 220, 20, 60);\n                break;\n            case KnownColor.Cyan:\n                color = new PdfColor(255, 0, 255, 255);\n                break;\n            case KnownColor.DarkBlue:\n                color = new PdfColor(255, 0, 0, 139);\n                break;\n            case KnownColor.DarkCyan:\n                color = new PdfColor(255, 0, 139, 139);\n                break;\n            case KnownColor.DarkGoldenrod:\n                color = new PdfColor(255, 184, 134, 11);\n                break;\n            case KnownColor.DarkGray:\n                color = new PdfColor(255, 169, 169, 169);\n                break;\n            case KnownColor.DarkGreen:\n                color = new PdfColor(255, 0, 100, 0);\n                break;\n            case KnownColor.DarkKhaki:\n                color = new PdfColor(255, 189, 183, 107);\n                break;\n            case KnownColor.DarkMagenta:\n                color = new PdfColor(255, 139, 0, 139);\n                break;\n            case KnownColor.DarkOliveGreen:\n                color = new PdfColor(255, 85, 107, 47);\n                break;\n            case KnownColor.DarkOrange:\n                color = new PdfColor(255, 255, 140, 0);\n                break;\n            case KnownColor.DarkOrchid:\n                color = new PdfColor(255, 153, 50, 204);\n                break;\n            case KnownColor.DarkRed:\n                color = new PdfColor(255, 139, 0, 0);\n                break;\n            case KnownColor.DarkSalmon:\n                color = new PdfColor(255, 233, 150, 122);\n                break;\n            case KnownColor.DarkSeaGreen:\n                color = new PdfColor(255, 143, 188, 139);\n                break;\n            case KnownColor.DarkSlateBlue:\n                color = new PdfColor(255, 72, 61, 139);\n                break;\n            case KnownColor.DarkSlateGray:\n                color = new PdfColor(255, 47, 79, 79);\n                break;\n            case KnownColor.DarkTurquoise:\n                color = new PdfColor(255, 0, 206, 209);\n                break;\n            case KnownColor.DarkViolet:\n                color = new PdfColor(255, 148, 0, 211);\n                break;\n            case KnownColor.DeepPink:\n                color = new PdfColor(255, 255, 20, 147);\n                break;\n            case KnownColor.DeepSkyBlue:\n                color = new PdfColor(255, 0, 191, 255);\n                break;\n            case KnownColor.DimGray:\n                color = new PdfColor(255, 105, 105, 105);\n                break;\n            case KnownColor.DodgerBlue:\n                color = new PdfColor(255, 30, 144, 255);\n                break;\n            case KnownColor.Firebrick:\n                color = new PdfColor(255, 178, 34, 34);\n                break;\n            case KnownColor.FloralWhite:\n                color = new PdfColor(255, 255, 250, 240);\n                break;\n            case KnownColor.ForestGreen:\n                color = new PdfColor(255, 34, 139, 34);\n                break;\n            case KnownColor.Fuchsia:\n                color = new PdfColor(255, 255, 0, 255);\n                break;\n            case KnownColor.Gainsboro:\n                color = new PdfColor(255, 220, 220, 220);\n                break;\n            case KnownColor.GhostWhite:\n                color = new PdfColor(255, 248, 248, 255);\n                break;\n            case KnownColor.Gold:\n                color = new PdfColor(255, 255, 215, 0);\n                break;\n            case KnownColor.Goldenrod:\n                color = new PdfColor(255, 218, 165, 32);\n                break;\n            case KnownColor.Gray:\n                color = new PdfColor(255, 128, 128, 128);\n                break;\n            case KnownColor.Green:\n                color = new PdfColor(255, 0, 128, 0);\n                break;\n            case KnownColor.GreenYellow:\n                color = new PdfColor(255, 173, 255, 47);\n                break;\n            case KnownColor.Honeydew:\n                color = new PdfColor(255, 240, 255, 240);\n                break;\n            case KnownColor.HotPink:\n                color = new PdfColor(255, 255, 105, 180);\n                break;\n            case KnownColor.IndianRed:\n                color = new PdfColor(255, 205, 92, 92);\n                break;\n            case KnownColor.Indigo:\n                color = new PdfColor(255, 75, 0, 130);\n                break;\n            case KnownColor.Ivory:\n                color = new PdfColor(255, 255, 255, 240);\n                break;\n            case KnownColor.Khaki:\n                color = new PdfColor(255, 240, 230, 140);\n                break;\n            case KnownColor.Lavender:\n                color = new PdfColor(255, 230, 230, 250);\n                break;\n            case KnownColor.LavenderBlush:\n                color = new PdfColor(255, 255, 240, 245);\n                break;\n            case KnownColor.LawnGreen:\n                color = new PdfColor(255, 124, 252, 0);\n                break;\n            case KnownColor.LemonChiffon:\n                color = new PdfColor(255, 255, 250, 205);\n                break;\n            case KnownColor.LightBlue:\n                color = new PdfColor(255, 173, 216, 230);\n                break;\n            case KnownColor.LightCoral:\n                color = new PdfColor(255, 240, 128, 128);\n                break;\n            case KnownColor.LightCyan:\n                color = new PdfColor(255, 224, 255, 255);\n                break;\n            case KnownColor.LightGoldenrodYellow:\n                color = new PdfColor(255, 250, 250, 210);\n                break;\n            case KnownColor.LightGreen:\n                color = new PdfColor(255, 144, 238, 144);\n                break;\n            case KnownColor.LightGray:\n                color = new PdfColor(255, 211, 211, 211);\n                break;\n            case KnownColor.LightPink:\n                color = new PdfColor(255, 255, 182, 193);\n                break;\n            case KnownColor.LightSalmon:\n                color = new PdfColor(255, 255, 160, 122);\n                break;\n            case KnownColor.LightSeaGreen:\n                color = new PdfColor(255, 32, 178, 170);\n                break;\n            case KnownColor.LightSkyBlue:\n                color = new PdfColor(255, 135, 206, 250);\n                break;\n            case KnownColor.LightSlateGray:\n                color = new PdfColor(255, 119, 136, 153);\n                break;\n            case KnownColor.LightSteelBlue:\n                color = new PdfColor(255, 176, 196, 222);\n                break;\n            case KnownColor.LightYellow:\n                color = new PdfColor(255, 255, 255, 224);\n                break;\n            case KnownColor.Lime:\n                color = new PdfColor(255, 0, 255, 0);\n                break;\n            case KnownColor.LimeGreen:\n                color = new PdfColor(255, 50, 205, 50);\n                break;\n            case KnownColor.Linen:\n                color = new PdfColor(255, 250, 240, 230);\n                break;\n            case KnownColor.Magenta:\n                color = new PdfColor(255, 255, 0, 255);\n                break;\n            case KnownColor.Maroon:\n                color = new PdfColor(255, 128, 0, 0);\n                break;\n            case KnownColor.MediumAquamarine:\n                color = new PdfColor(255, 102, 205, 170);\n                break;\n            case KnownColor.MediumBlue:\n                color = new PdfColor(255, 0, 0, 205);\n                break;\n            case KnownColor.MediumOrchid:\n                color = new PdfColor(255, 186, 85, 211);\n                break;\n            case KnownColor.MediumPurple:\n                color = new PdfColor(255, 147, 112, 219);\n                break;\n            case KnownColor.MediumSeaGreen:\n                color = new PdfColor(255, 60, 179, 113);\n                break;\n            case KnownColor.MediumSlateBlue:\n                color = new PdfColor(255, 123, 104, 238);\n                break;\n            case KnownColor.MediumSpringGreen:\n                color = new PdfColor(255, 0, 250, 154);\n                break;\n            case KnownColor.MediumTurquoise:\n                color = new PdfColor(255, 72, 209, 204);\n                break;\n            case KnownColor.MediumVioletRed:\n                color = new PdfColor(255, 199, 21, 133);\n                break;\n            case KnownColor.MidnightBlue:\n                color = new PdfColor(255, 25, 25, 112);\n                break;\n            case KnownColor.MintCream:\n                color = new PdfColor(255, 245, 255, 250);\n                break;\n            case KnownColor.MistyRose:\n                color = new PdfColor(255, 255, 228, 225);\n                break;\n            case KnownColor.Moccasin:\n                color = new PdfColor(255, 255, 228, 181);\n                break;\n            case KnownColor.NavajoWhite:\n                color = new PdfColor(255, 255, 222, 173);\n                break;\n            case KnownColor.Navy:\n                color = new PdfColor(255, 0, 0, 128);\n                break;\n            case KnownColor.OldLace:\n                color = new PdfColor(255, 253, 245, 230);\n                break;\n            case KnownColor.Olive:\n                color = new PdfColor(255, 128, 128, 0);\n                break;\n            case KnownColor.OliveDrab:\n                color = new PdfColor(255, 107, 142, 35);\n                break;\n            case KnownColor.Orange:\n                color = new PdfColor(255, 255, 165, 0);\n                break;\n            case KnownColor.OrangeRed:\n                color = new PdfColor(255, 255, 69, 0);\n                break;\n            case KnownColor.Orchid:\n                color = new PdfColor(255, 218, 112, 214);\n                break;\n            case KnownColor.PaleGoldenrod:\n                color = new PdfColor(255, 238, 232, 170);\n                break;\n            case KnownColor.PaleGreen:\n                color = new PdfColor(255, 152, 251, 152);\n                break;\n            case KnownColor.PaleTurquoise:\n                color = new PdfColor(255, 175, 238, 238);\n                break;\n            case KnownColor.PaleVioletRed:\n                color = new PdfColor(255, 219, 112, 147);\n                break;\n            case KnownColor.PapayaWhip:\n                color = new PdfColor(255, 255, 239, 213);\n                break;\n            case KnownColor.PeachPuff:\n                color = new PdfColor(255, 255, 218, 185);\n                break;\n            case KnownColor.Peru:\n                color = new PdfColor(255, 205, 133, 63);\n                break;\n            case KnownColor.Pink:\n                color = new PdfColor(255, 255, 192, 203);\n                break;\n            case KnownColor.Plum:\n                color = new PdfColor(255, 221, 160, 221);\n                break;\n            case KnownColor.PowderBlue:\n                color = new PdfColor(255, 176, 224, 230);\n                break;\n            case KnownColor.Purple:\n                color = new PdfColor(255, 128, 0, 128);\n                break;\n            case KnownColor.Red:\n                color = new PdfColor(255, 255, 0, 0);\n                break;\n            case KnownColor.RosyBrown:\n                color = new PdfColor(255, 188, 143, 143);\n                break;\n            case KnownColor.RoyalBlue:\n                color = new PdfColor(255, 65, 105, 225);\n                break;\n            case KnownColor.SaddleBrown:\n                color = new PdfColor(255, 139, 69, 19);\n                break;\n            case KnownColor.Salmon:\n                color = new PdfColor(255, 250, 128, 114);\n                break;\n            case KnownColor.SandyBrown:\n                color = new PdfColor(255, 244, 164, 96);\n                break;\n            case KnownColor.SeaGreen:\n                color = new PdfColor(255, 46, 139, 87);\n                break;\n            case KnownColor.SeaShell:\n                color = new PdfColor(255, 255, 245, 238);\n                break;\n            case KnownColor.Sienna:\n                color = new PdfColor(255, 160, 82, 45);\n                break;\n            case KnownColor.Silver:\n                color = new PdfColor(255, 192, 192, 192);\n                break;\n            case KnownColor.SkyBlue:\n                color = new PdfColor(255, 135, 206, 235);\n                break;\n            case KnownColor.SlateBlue:\n                color = new PdfColor(255, 106, 90, 205);\n                break;\n            case KnownColor.SlateGray:\n                color = new PdfColor(255, 112, 128, 144);\n                break;\n            case KnownColor.Snow:\n                color = new PdfColor(255, 255, 250, 250);\n                break;\n            case KnownColor.SpringGreen:\n                color = new PdfColor(255, 0, 255, 127);\n                break;\n            case KnownColor.SteelBlue:\n                color = new PdfColor(255, 70, 130, 180);\n                break;\n            case KnownColor.Tan:\n                color = new PdfColor(255, 210, 180, 140);\n                break;\n            case KnownColor.Teal:\n                color = new PdfColor(255, 0, 128, 128);\n                break;\n            case KnownColor.Thistle:\n                color = new PdfColor(255, 216, 191, 216);\n                break;\n            case KnownColor.Tomato:\n                color = new PdfColor(255, 255, 99, 71);\n                break;\n            case KnownColor.Turquoise:\n                color = new PdfColor(255, 64, 224, 208);\n                break;\n            case KnownColor.Violet:\n                color = new PdfColor(255, 238, 130, 238);\n                break;\n            case KnownColor.Wheat:\n                color = new PdfColor(255, 245, 222, 179);\n                break;\n            case KnownColor.White:\n                color = new PdfColor(255, 255, 255, 255);\n                break;\n            case KnownColor.WhiteSmoke:\n                color = new PdfColor(255, 245, 245, 245);\n                break;\n            case KnownColor.Yellow:\n                color = new PdfColor(255, 255, 255, 0);\n                break;\n            case KnownColor.YellowGreen:\n                color = new PdfColor(255, 154, 205, 50);\n                break;\n        }\n        return color;\n    };\n    //Static Fields\n    /**\n     * Local variable to store the brushes.\n     */\n    PdfBrushes.sBrushes = new Dictionary();\n    return PdfBrushes;\n}());\nexport { PdfBrushes };\n", "/**\n * PdfBlend.ts class for EJ2-PDF\n */\nimport { PdfColorSpace } from './../enum';\nimport { PdfColor } from './../pdf-color';\nimport { PdfColorBlend } from './pdf-color-blend';\n/**\n * `PdfBlend` Represents the blend color space\n * @private\n */\nvar PdfBlend = /** @class */ (function () {\n    function PdfBlend(count) {\n        //Constants\n        /**\n         * precision of the GCD calculations.\n         * @private\n         */\n        this.precision = 1000;\n        //\n    }\n    Object.defineProperty(PdfBlend.prototype, \"factors\", {\n        //Properties\n        /**\n         * Gets or sets the array of factor to the blend.\n         * @public\n         */\n        get: function () {\n            return this.mFactors;\n        },\n        set: function (value) {\n            if ((value == null)) {\n                throw new Error('ArgumentNullException : Factors');\n            }\n            this.mFactors = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBlend.prototype, \"positions\", {\n        /**\n         * 'positions' Gets or sets the array of positions\n         * @public\n         */\n        get: function () {\n            return this.mPositions;\n        },\n        set: function (value) {\n            var positionarray = value;\n            for (var i = 0; i < positionarray.length; i++) {\n                if (((positionarray[i] < 0) || (positionarray[i] > 1))) {\n                    positionarray[i] = 0;\n                }\n            }\n            this.mPositions = positionarray;\n            this.mPositions = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBlend.prototype, \"count\", {\n        /**\n         * Gets the number of elements that specify the blend.\n         * @protected\n         */\n        get: function () {\n            return this.mCount;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * Generates a correct color blend.\n     * @param colours The colours.\n     * @param colorSpace The color space.\n     */\n    PdfBlend.prototype.generateColorBlend = function (colours, colorSpace) {\n        if ((colours == null)) {\n            throw new Error('ArgumentNullException : colours');\n        }\n        if ((this.positions == null)) {\n            this.positions = [0];\n        }\n        var cBlend = new PdfColorBlend(this.count);\n        var positions = this.positions;\n        var clrs = null;\n        if ((positions.length === 1)) {\n            positions = [3];\n            positions[0] = 0;\n            positions[1] = this.positions[0];\n            positions[2] = 1;\n            /* tslint:disable */\n            clrs = new Array(3);\n            clrs[0] = colours[0];\n            clrs[1] = colours[0];\n            clrs[2] = colours[1];\n        }\n        else {\n            var c1 = colours[0];\n            var c2 = colours[1];\n            /* tslint:disable */\n            clrs = new Array(this.count);\n            var i = 0;\n            var count = this.count;\n            for (i = 0; i < count; ++i) {\n                clrs[i] = this.interpolate(this.mFactors[i], c1, c2, colorSpace);\n            }\n        }\n        cBlend.positions = positions;\n        cBlend.colors = clrs;\n        return cBlend;\n    };\n    /**\n     * 'clonePdfBlend' Clones this instance.\n     * @public\n     */\n    PdfBlend.prototype.clonePdfBlend = function () {\n        var blend = this;\n        if ((this.mFactors != null)) {\n            blend.factors = (this.mFactors);\n        }\n        if ((this.positions != null)) {\n            blend.positions = (this.positions);\n        }\n        return blend;\n    };\n    PdfBlend.prototype.gcd = function (u, v) {\n        if (typeof u === 'number' && typeof v === 'number' && typeof v !== 'undefined') {\n            if (((u < 0) || (u > 1))) {\n                throw new Error('ArgumentOutOfRangeException : u');\n            }\n            if (((v < 0) || (v > 1))) {\n                throw new Error('ArgumentOutOfRangeException : v');\n            }\n            var iU = (Math.max(1, (u * this.precision)));\n            var iV = (Math.max(1, (v * this.precision)));\n            var iResult = this.gcdInt(iU, iV);\n            var result = ((iResult) / this.precision);\n            return result;\n        }\n        else {\n            var values = u;\n            if ((values == null)) {\n                throw new Error('ArgumentNullException : values');\n            }\n            if ((values.length < 1)) {\n                throw new Error('ArgumentException : Not enough values in the array. - values');\n            }\n            var gcd = values[0];\n            if ((values.length > 1)) {\n                var count = values.length;\n                for (var i = 1; i < count; ++i) {\n                    gcd = this.gcd(values[i], gcd);\n                    if ((gcd === (1 / this.precision))) {\n                        break;\n                    }\n                }\n            }\n            return gcd;\n        }\n    };\n    /**\n     * Calculate the GCD int of the specified values.\n     * @param u The u.\n     * @param v The v.\n     */\n    PdfBlend.prototype.gcdInt = function (u, v) {\n        if ((u <= 0)) {\n            throw new Error('ArgumentOutOfRangeException' + u + 'The arguments cannot be less or equal to zero.');\n        }\n        if ((v <= 0)) {\n            throw new Error('ArgumentOutOfRangeException' + v + 'The arguments cannot be less or equal to zero.');\n        }\n        if (((u === 1) || (v === 1))) {\n            return 1;\n        }\n        var shift = 0;\n        while (this.isEven(u, v)) {\n            ++shift;\n            u >>= 1;\n            v >>= 1;\n        }\n        while (((u & 1) <= 0)) {\n            u >>= 1;\n        }\n        do {\n            while ((v & 1) <= 0) {\n                v >>= 1;\n            }\n            if (u > v) {\n                var t = v;\n                v = u;\n                u = t;\n            }\n            v = v - u;\n        } while (v !== 0);\n        return (u << shift);\n    };\n    PdfBlend.prototype.isEven = function (arg1, arg2) {\n        if (typeof arg2 === 'number' && typeof arg2 !== 'undefined') {\n            var result = true;\n            result = (result && ((arg1 & 1) <= 0)); //  Is u even?\n            result = (result && ((arg2 & 1) <= 0)); //  Is v even?\n            return result;\n        }\n        else {\n            return ((arg1 & 1) <= 0);\n        }\n    };\n    PdfBlend.prototype.interpolate = function (t, color1, color2, colorSpace) {\n        if (color1 instanceof PdfColor) {\n            var color = new PdfColor();\n            switch (colorSpace) {\n                case PdfColorSpace.Rgb:\n                    var red = (this.interpolate(t, color1.red, color2.red));\n                    var green = (this.interpolate(t, color1.green, color2.green));\n                    var blue = (this.interpolate(t, color1.blue, color2.blue));\n                    color = new PdfColor(red, green, blue);\n                    break;\n                case PdfColorSpace.GrayScale:\n                    var gray = (this.interpolate(t, color1.gray, color2.gray));\n                    color = new PdfColor(gray);\n                    break;\n                case PdfColorSpace.Cmyk:\n                    var cyan = (this.interpolate(t, color1.c, color2.c));\n                    var magenta = (this.interpolate(t, color1.m, color2.m));\n                    var yellow = (this.interpolate(t, color1.y, color2.y));\n                    var black = (this.interpolate(t, color1.k, color2.k));\n                    color = new PdfColor(cyan, magenta, yellow, black);\n                    break;\n            }\n            return color;\n        }\n        else {\n            var t0 = 0;\n            var t1 = 1;\n            var result = 0;\n            if ((t === t0)) {\n                result = color1;\n            }\n            else if ((t === t1)) {\n                result = color2;\n            }\n            else {\n                result = (color1 + ((t - t0) * ((color2 - color1) / (t1 - t0))));\n            }\n            return result;\n        }\n    };\n    return PdfBlend;\n}());\nexport { PdfBlend };\n", "var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfColorBlend.ts class for EJ2-PDF\n */\nimport { PdfColorSpace } from './../enum';\nimport { PdfSampledFunction } from './../../general/functions/pdf-sampled-function';\nimport { PdfBlend } from './pdf-blend';\n/**\n * `PdfColorBlend` Represents the arrays of colors and positions used for\n *  interpolating color blending in a multicolor gradient.\n * @private\n */\nvar PdfColorBlend = /** @class */ (function (_super) {\n    __extends(PdfColorBlend, _super);\n    function PdfColorBlend(count) {\n        var _this = _super.call(this) || this;\n        if (typeof count === 'number') {\n            _this = _super.call(this, count) || this;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfColorBlend.prototype, \"colors\", {\n        //Properties\n        /**\n         * Gets or sets the array of colors.\n         * @public\n         */\n        get: function () {\n            return this.mcolors;\n        },\n        set: function (value) {\n            if ((value == null)) {\n                throw new Error('ArgumentNullException : Colors');\n            }\n            this.mcolors = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * Gets the function.\n     * @param colorSpace The color space.\n     * @public\n     */\n    PdfColorBlend.prototype.getFunction = function (colorSpace) {\n        var domain = [0, 1];\n        var colourComponents = this.getColorComponentsCount(colorSpace);\n        var maxComponentValue = this.getMaxComponentValue(colorSpace);\n        var range = this.setRange(colourComponents, maxComponentValue);\n        var func = null;\n        if ((this.mbrush == null && typeof this.mbrush === 'undefined')) {\n            var sizes = [1];\n            var samplesCount = void 0;\n            var step = 1;\n            if (this.positions.length === 2) {\n                samplesCount = 2;\n            }\n            else {\n                var positions = this.positions;\n                var intervals = this.getIntervals(positions);\n                var gcd = this.gcd(intervals);\n                step = gcd;\n                samplesCount = (((1 / gcd)) + 1);\n            }\n            sizes[0] = samplesCount;\n            var samples = this.getSamplesValues(colorSpace, samplesCount, maxComponentValue, step);\n            func = new PdfSampledFunction(domain, range, sizes, samples);\n            return func;\n        }\n        return func;\n    };\n    /**\n     * 'cloneColorBlend' Clones this instance.\n     * @public\n     */\n    PdfColorBlend.prototype.cloneColorBlend = function () {\n        var cBlend = this;\n        if ((this.mcolors != null && typeof this.mcolors !== 'undefined')) {\n            cBlend.colors = (this.mcolors);\n        }\n        if ((this.positions != null && typeof this.positions !== 'undefined')) {\n            cBlend.positions = (this.positions);\n        }\n        return cBlend;\n    };\n    /**\n     * Sets the range.\n     * @param colourComponents The colour components.\n     * @param maxValue The max value.\n     */\n    PdfColorBlend.prototype.setRange = function (colourComponents, maxValue) {\n        var range = [(colourComponents * 2)];\n        for (var i = 0; (i < colourComponents); ++i) {\n            range[(i * 2)] = 0;\n            range[((i * 2) + 1)] = 1;\n        }\n        return range;\n    };\n    /**\n     * Calculates the color components count according to colour space.\n     * @param colorSpace The color space.\n     */\n    PdfColorBlend.prototype.getColorComponentsCount = function (colorSpace) {\n        var count = 0;\n        switch (colorSpace) {\n            case PdfColorSpace.Rgb:\n                count = 3;\n                break;\n            case PdfColorSpace.Cmyk:\n                count = 4;\n                break;\n            case PdfColorSpace.GrayScale:\n                count = 1;\n                break;\n            default:\n                throw new Error('ArgumentException - Unsupported color space: ' + colorSpace + ' colorSpace');\n        }\n        return count;\n    };\n    /**\n     * Gets samples values for specified colour space.\n     * @param colorSpace The color space.\n     * @param sampleCount The sample count.\n     * @param maxComponentValue The max component value.\n     * @param step The step.\n     */\n    PdfColorBlend.prototype.getSamplesValues = function (colorSpace, sampleCount, maxComponentValue, step) {\n        var values;\n        switch (colorSpace) {\n            case PdfColorSpace.GrayScale:\n                values = this.getGrayscaleSamples(sampleCount, maxComponentValue, step);\n                break;\n            case PdfColorSpace.Cmyk:\n                values = this.getCmykSamples(sampleCount, maxComponentValue, step);\n                break;\n            case PdfColorSpace.Rgb:\n                values = this.getRgbSamples(sampleCount, maxComponentValue, step);\n                break;\n            default:\n                throw new Error('ArgumentException - Unsupported color space: ' + colorSpace + ' colorSpace');\n        }\n        return values;\n    };\n    /**\n     * Gets the grayscale samples.\n     * @param sampleCount The sample count.\n     * @param maxComponentValue The max component value.\n     * @param step The step.\n     */\n    PdfColorBlend.prototype.getGrayscaleSamples = function (sampleCount, maxComponentValue, step) {\n        var values = [(sampleCount * 2)];\n        for (var i = 0; (i < sampleCount); ++i) {\n            var color = this.getNextColor(i, step, PdfColorSpace.GrayScale);\n            var index = (i * 2);\n        }\n        return values;\n    };\n    /**\n     * Gets the RGB samples.\n     * @param sampleCount The sample count.\n     * @param maxComponentValue The max component value.\n     * @param step The step.\n     */\n    PdfColorBlend.prototype.getRgbSamples = function (sampleCount, maxComponentValue, step) {\n        var values = [(sampleCount * 3)];\n        for (var i = 0; (i < sampleCount); ++i) {\n            var color = this.getNextColor(i, step, PdfColorSpace.Rgb);\n            var index = (i * 3);\n            values[index] = color.r;\n            values[(index + 1)] = color.g;\n            values[(index + 2)] = color.b;\n        }\n        return values;\n    };\n    /**\n     * Gets the CMYK samples.\n     * @param sampleCount The sample count.\n     * @param maxComponentValue The max component value.\n     * @param step The step.\n     */\n    PdfColorBlend.prototype.getCmykSamples = function (sampleCount, maxComponentValue, step) {\n        var values = [(sampleCount * 4)];\n        for (var i = 0; (i < sampleCount); i++) {\n            var color = this.getNextColor(i, step, PdfColorSpace.Cmyk);\n            var index = (i * 4);\n            values[index] = ((color.c * maxComponentValue));\n            values[(index + 1)] = ((color.m * maxComponentValue));\n            values[(index + 2)] = ((color.y * maxComponentValue));\n            values[(index + 3)] = ((color.k * maxComponentValue));\n        }\n        return values;\n    };\n    /**\n     * Calculates the color that should be at the specified index.\n     * @param index The index.\n     * @param step The step.\n     * @param colorSpace The color space.\n     */\n    PdfColorBlend.prototype.getNextColor = function (index, step, colorSpace) {\n        var position = (step * index);\n        var indexHi;\n        var indexLow;\n        var result = this.getIndices(position, indexLow, indexHi);\n        indexLow = result.indexLow;\n        indexHi = result.indexHi;\n        var color;\n        if (indexLow === indexHi) {\n            color = this.mcolors[indexLow];\n        }\n        else {\n            var positionLow = this.positions[indexLow];\n            var positionHi = this.positions[indexHi];\n            var colorLow = this.mcolors[indexLow];\n            var colorHi = this.mcolors[indexHi];\n            var t = ((position - positionLow) / (positionHi - positionLow));\n            color = this.interpolate(t, colorLow, colorHi, colorSpace);\n        }\n        return color;\n    };\n    /**\n     * Gets the indices.\n     * @param position The position.\n     * @param indexLow The index low.\n     * @param indexHi The index hi.\n     */\n    PdfColorBlend.prototype.getIndices = function (position, indexLow, indexHi) {\n        var positions = this.positions;\n        indexLow = 0;\n        indexHi = 0;\n        for (var i = 0; (i < this.mcolors.length); ++i) {\n            var currPos = positions[i];\n            if ((currPos === position)) {\n                indexHi = i;\n                indexLow = i;\n                break;\n            }\n            else if ((currPos > position)) {\n                indexHi = i;\n                break;\n            }\n            indexLow = i;\n            indexHi = i;\n        }\n        return { indexLow: indexLow, indexHi: indexHi };\n    };\n    /**\n     * Calculates the max component value.\n     * @param colorSpace The color space.\n     */\n    PdfColorBlend.prototype.getMaxComponentValue = function (colorSpace) {\n        var result = 0;\n        switch (colorSpace) {\n            case PdfColorSpace.Cmyk:\n            case PdfColorSpace.Rgb:\n                result = 255;\n                break;\n            case PdfColorSpace.GrayScale:\n                result = 65535;\n                break;\n            default:\n                throw new Error('ArgumentException - Unsupported color space: ' + colorSpace + 'colorSpace');\n        }\n        return result;\n    };\n    /**\n     * Gets an intervals array from the positions array.\n     * @param positions The positions array.\n     */\n    PdfColorBlend.prototype.getIntervals = function (positions) {\n        var count = positions.length;\n        var intervals = [(count - 1)];\n        var prev = positions[0];\n        for (var i = 1; (i < count); ++i) {\n            var v = positions[i];\n            intervals[(i - 1)] = (v - prev);\n            prev = v;\n        }\n        return intervals;\n    };\n    return PdfColorBlend;\n}(PdfBlend));\nexport { PdfColorBlend };\n", "var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfLinearGradientBrush.ts class for EJ2-PDF\n */\nimport { PdfColorSpace } from './../enum';\nimport { PdfColor } from './../pdf-color';\nimport { PointF, Rectangle } from './../../drawing/pdf-drawing';\nimport { PdfDictionary } from '../../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfBoolean } from '../../primitives/pdf-boolean';\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfNumber } from './../../primitives/pdf-number';\nimport { PdfColorBlend } from './pdf-color-blend';\nimport { PdfGradientBrush } from './pdf-gradient-brush';\nimport { PdfExtend, PdfLinearGradientMode, ShadingType } from './enum';\n/**\n * `PdfLinearGradientBrush` Implements linear gradient brush by using PDF axial shading pattern.\n * @private\n */\nvar PdfLinearGradientBrush = /** @class */ (function (_super) {\n    __extends(PdfLinearGradientBrush, _super);\n    /**\n     * Initializes a new instance of the `PdfLinearGradientBrush` class.\n     * @public\n     */\n    /* tslint:disable-next-line:max-line-length */\n    function PdfLinearGradientBrush(arg1, arg2, arg3, arg4) {\n        var _this = _super.call(this, new PdfDictionary()) || this;\n        /**\n         * Local variable to store the dictionary properties.\n         * @private\n         */\n        _this.mDictionaryProperties = new DictionaryProperties();\n        if (arg1 instanceof PointF && arg2 instanceof PointF && arg3 instanceof PdfColor && arg4 instanceof PdfColor) {\n            _this.initialize(arg3, arg4);\n            _this.mPointStart = arg1;\n            _this.mPointEnd = arg2;\n            _this.setPoints(_this.mPointStart, _this.mPointEnd);\n        }\n        else if (arg1 instanceof Rectangle) {\n            _this.initialize(arg2, arg3);\n            /* tslint:disable-next-line:max-line-length */\n            if ((arg4 === PdfLinearGradientMode.BackwardDiagonal || arg4 === PdfLinearGradientMode.ForwardDiagonal || arg4 === PdfLinearGradientMode.Horizontal || arg4 === PdfLinearGradientMode.Vertical)) {\n                _this.mBoundaries = arg1;\n                switch (arg4) {\n                    case PdfLinearGradientMode.BackwardDiagonal:\n                        _this.mPointStart = new PointF(arg1.right, arg1.top);\n                        _this.mPointEnd = new PointF(arg1.left, arg1.bottom);\n                        break;\n                    case PdfLinearGradientMode.ForwardDiagonal:\n                        _this.mPointStart = new PointF(arg1.left, arg1.top);\n                        _this.mPointEnd = new PointF(arg1.right, arg1.bottom);\n                        break;\n                    case PdfLinearGradientMode.Horizontal:\n                        _this.mPointStart = new PointF(arg1.left, arg1.top);\n                        _this.mPointEnd = new PointF(arg1.right, arg1.top);\n                        break;\n                    case PdfLinearGradientMode.Vertical:\n                        _this.mPointStart = new PointF(arg1.left, arg1.top);\n                        _this.mPointEnd = new PointF(arg1.left, arg1.bottom);\n                        break;\n                    default:\n                        throw new Error('ArgumentException -- Unsupported linear gradient mode: ' + arg4 + ' mode');\n                }\n                _this.setPoints(_this.mPointStart, _this.mPointEnd);\n            }\n            else if (typeof arg4 === 'number' && typeof arg4 !== 'undefined') {\n                _this.mBoundaries = arg1;\n                arg4 = arg4 % 360;\n                if ((arg4 === 0)) {\n                    _this.mPointStart = new PointF(arg1.left, arg1.top);\n                    _this.mPointEnd = new PointF(arg1.right, arg1.top);\n                }\n                else if ((arg4 === 90)) {\n                    _this.mPointStart = new PointF(arg1.left, arg1.top);\n                    _this.mPointEnd = new PointF(arg1.left, arg1.bottom);\n                }\n                else if ((arg4 === 180)) {\n                    _this.mPointEnd = new PointF(arg1.left, arg1.top);\n                    _this.mPointStart = new PointF(arg1.right, arg1.top);\n                }\n                else if ((arg4 === 270)) {\n                    _this.mPointEnd = new PointF(arg1.left, arg1.top);\n                    _this.mPointStart = new PointF(arg1.left, arg1.bottom);\n                }\n                else {\n                    var d2r = (Math.PI / 180);\n                    var radAngle = (arg4 * d2r);\n                    var k = Math.tan(radAngle);\n                    var x = (_this.mBoundaries.left\n                        + ((_this.mBoundaries.right - _this.mBoundaries.left) / 2));\n                    var y = (_this.mBoundaries.top\n                        + ((_this.mBoundaries.bottom - _this.mBoundaries.top) / 2));\n                    var centre = new PointF(x, y);\n                    x = (_this.mBoundaries.width / (2 * (Math.cos(radAngle))));\n                    y = ((k * x));\n                    x = (x + centre.x);\n                    y = (y + centre.y);\n                    var p1 = new PointF(x, y);\n                    var cp1 = _this.subPoints(p1, centre);\n                    //  P1 - P0\n                    var p = _this.choosePoint(arg4);\n                    var coef = (_this.mulPoints(_this.subPoints(p, centre), cp1)\n                        / _this.mulPoints(cp1, cp1));\n                    _this.mPointEnd = _this.addPoints(centre, _this.mulPoint(cp1, coef));\n                    //  Parametric line equation.\n                    _this.mPointStart = _this.addPoints(centre, _this.mulPoint(cp1, (coef * -1)));\n                }\n                _this.setPoints(_this.mPointEnd, _this.mPointStart);\n            }\n        }\n        return _this;\n    }\n    /**\n     * Initializes a new instance of the `PdfLinearGradientBrush` class.\n     * @param color1 The starting color of the gradient.\n     * @param color2 The end color of the gradient.\n     */\n    PdfLinearGradientBrush.prototype.initialize = function (color1, color2) {\n        this.mColours = [color1, color2];\n        this.mColourBlend = new PdfColorBlend(2);\n        this.mColourBlend.positions = [0, 1];\n        this.mColourBlend.colors = this.mColours;\n        this.initShading();\n    };\n    Object.defineProperty(PdfLinearGradientBrush.prototype, \"blend\", {\n        //Properties\n        /**\n         * Gets or sets a PdfBlend that specifies positions\n         * and factors that define a custom falloff for the gradient.\n         * @public\n         */\n        get: function () {\n            return this.mBlend;\n        },\n        set: function (value) {\n            if ((value == null)) {\n                throw new Error('ArgumentNullException : Blend');\n            }\n            if ((this.mColours == null)) {\n                throw new Error('NotSupportedException : There is no starting and ending colours specified.');\n            }\n            this.mBlend = value;\n            //  TODO: generate correct colour blend.\n            this.mColourBlend = this.mBlend.generateColorBlend(this.mColours, this.colorSpace);\n            this.resetFunction();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLinearGradientBrush.prototype, \"interpolationColors\", {\n        /**\n         * Gets or sets a ColorBlend that defines a multicolor linear gradient.\n         * @public\n         */\n        get: function () {\n            return this.mColourBlend;\n        },\n        set: function (value) {\n            if ((value == null)) {\n                throw new Error('ArgumentNullException : InterpolationColors');\n            }\n            this.mBlend = null;\n            this.mColours = null;\n            this.mColourBlend = value;\n            this.resetFunction();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLinearGradientBrush.prototype, \"linearColors\", {\n        /**\n         * Gets or sets the starting and ending colors of the gradient.\n         * @public\n         */\n        get: function () {\n            return this.mColours;\n        },\n        set: function (value) {\n            if ((value == null)) {\n                throw new Error('ArgumentNullException : LinearColors');\n            }\n            if ((value.length < 2)) {\n                throw new Error('ArgumentException : The array is too small - LinearColors');\n            }\n            if ((this.mColours == null && typeof this.mColours === 'undefined')) {\n                this.mColours = [value[0], value[1]];\n            }\n            else {\n                this.mColours[0] = value[0];\n                this.mColours[1] = value[1];\n            }\n            if ((this.mBlend == null && typeof this.mBlend === 'undefined')) {\n                //  Set correct colour blend.\n                this.mColourBlend = new PdfColorBlend(2);\n                this.mColourBlend.colors = this.mColours;\n                this.mColourBlend.positions = [0, 1];\n            }\n            else {\n                this.mColourBlend = this.mBlend.generateColorBlend(this.mColours, this.colorSpace);\n            }\n            this.resetFunction();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLinearGradientBrush.prototype, \"rectangle\", {\n        /**\n         * Gets a rectangular region that defines the boundaries of the gradient.\n         * @public\n         */\n        get: function () {\n            return this.mBoundaries;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLinearGradientBrush.prototype, \"extend\", {\n        /**\n         * Gets or sets the value indicating whether the gradient should extend starting and ending points.\n         * @public\n         */\n        get: function () {\n            var result = PdfExtend.None;\n            var extend = (this.shading.items.getValue(this.mDictionaryProperties.extend));\n            if ((extend != null)) {\n                var extStart = (extend.items(0));\n                var extEnd = (extend.items(1));\n                if (extStart.value) {\n                    result = (result | PdfExtend.Start);\n                }\n                if (extEnd.value) {\n                    result = (result | PdfExtend.End);\n                }\n            }\n            return result;\n        },\n        set: function (value) {\n            var extend = (this.shading.items.getValue(this.mDictionaryProperties.extend));\n            var extStart;\n            var extEnd;\n            if ((extend == null)) {\n                extStart = new PdfBoolean(false);\n                extEnd = new PdfBoolean(false);\n                extend = new PdfArray();\n                extend.add(extStart);\n                extend.add(extEnd);\n                this.shading.items.setValue(this.mDictionaryProperties.extend, extend);\n            }\n            else {\n                extStart = (extend.items(0));\n                extEnd = (extend.items(1));\n            }\n            // extStart.value = ((value && PdfExtend.Start) > 0);\n            // extEnd.value = ((value && PdfExtend.End) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * Adds two points to each other.\n     * @param point1 The point1.\n     * @param point2 The point2.\n     */\n    PdfLinearGradientBrush.prototype.addPoints = function (point1, point2) {\n        var x = (point1.x + point2.x);\n        var y = (point1.y + point2.y);\n        var result = new PointF(x, y);\n        return result;\n    };\n    /**\n     * Subs the second point from the first one.\n     * @param point1 The point1.\n     * @param point2 The point2.\n     */\n    PdfLinearGradientBrush.prototype.subPoints = function (point1, point2) {\n        var x = (point1.x - point2.x);\n        var y = (point1.y - point2.y);\n        var result = new PointF(x, y);\n        return result;\n    };\n    /**\n     * Makes scalar multiplication of two points.\n     * @param point1 The point1.\n     * @param point2 The point2.\n     */\n    PdfLinearGradientBrush.prototype.mulPoints = function (point1, point2) {\n        var result = ((point1.x * point2.x) + (point1.y * point2.y));\n        return result;\n    };\n    /**\n     * Multiplies the point by the value specified.\n     * @param point The point1.\n     * @param value The value.\n     */\n    PdfLinearGradientBrush.prototype.mulPoint = function (point, value) {\n        point.x = (point.x * value);\n        point.y = (point.y * value);\n        return point;\n    };\n    /**\n     * Choose the point according to the angle.\n     * @param angle The angle.\n     */\n    PdfLinearGradientBrush.prototype.choosePoint = function (angle) {\n        var point = new PointF(0, 0);\n        //  Choose the correct point.\n        if ((angle < 90) && (angle > 0)) {\n            point = new PointF(this.mBoundaries.right, this.mBoundaries.bottom);\n        }\n        else if ((angle < 180) && (angle > 90)) {\n            point = new PointF(this.mBoundaries.left, this.mBoundaries.bottom);\n        }\n        else if ((angle < 270) && (angle > 180)) {\n            point = new PointF(this.mBoundaries.left, this.mBoundaries.top);\n        }\n        else if (angle > 270) {\n            point = new PointF(this.mBoundaries.right, this.mBoundaries.top);\n        }\n        else {\n            throw new Error('PdfException - Internal error.');\n        }\n        return point;\n    };\n    /**\n     * Sets the start and end points.\n     * @param point1 The point1.\n     * @param point2 The point2.\n     */\n    PdfLinearGradientBrush.prototype.setPoints = function (point1, point2) {\n        var points = new PdfArray();\n        points.add(new PdfNumber(point1.x));\n        points.add(new PdfNumber(this.updateY(point1.y)));\n        points.add(new PdfNumber(point2.x));\n        points.add(new PdfNumber(this.updateY(point2.y)));\n        this.shading.items.setValue(this.mDictionaryProperties.coords, points);\n    };\n    /**\n     * Updates y co-ordinate.\n     * @param y Y co-ordinate..\n     */\n    PdfLinearGradientBrush.prototype.updateY = function (y) {\n        if (y !== 0) {\n            return -y;\n        }\n        else {\n            return y;\n        }\n    };\n    //Overrides\n    /**\n     * Initializes the shading dictionary.\n     * @private\n     */\n    PdfLinearGradientBrush.prototype.initShading = function () {\n        this.colorSpace = PdfColorSpace.Rgb;\n        this.function = this.mColourBlend.getFunction(this.colorSpace);\n        this.shading.items.setValue(this.mDictionaryProperties.shadingType, new PdfNumber((ShadingType.Axial)));\n    };\n    //Overrides\n    /**\n     * Creates a new copy of a brush.\n     * @public\n     */\n    PdfLinearGradientBrush.prototype.clone = function () {\n        var brush = this;\n        brush.resetPatternDictionary(new PdfDictionary(this.patternDictionary));\n        brush.shading = new PdfDictionary();\n        brush.initShading();\n        brush.setPoints(brush.mPointStart, brush.mPointEnd);\n        if (brush !== null && brush instanceof PdfLinearGradientBrush) {\n            if ((this.matrix != null && typeof this.matrix !== 'undefined')) {\n                brush.matrix = this.matrix.clone();\n            }\n        }\n        if ((this.mColours != null && typeof this.mColours !== 'undefined')) {\n            brush.mColours = (this.mColours);\n        }\n        if ((this.blend != null && typeof this.blend !== 'undefined')) {\n            brush.blend = this.blend.clonePdfBlend();\n        }\n        else if ((this.interpolationColors != null && typeof this.interpolationColors !== 'undefined')) {\n            brush.interpolationColors = this.interpolationColors.cloneColorBlend();\n        }\n        brush.extend = this.extend;\n        this.cloneBackgroundValue(brush);\n        this.cloneAntiAliasingValue(brush);\n        return brush;\n    };\n    /**\n     * Resets the function.\n     * @public\n     */\n    PdfLinearGradientBrush.prototype.resetFunction = function () {\n        this.function = this.mColourBlend.getFunction(this.colorSpace);\n    };\n    return PdfLinearGradientBrush;\n}(PdfGradientBrush));\nexport { PdfLinearGradientBrush };\n", "var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfRadialGradientBrush.ts class for EJ2-PDF\n */\nimport { PdfColorSpace } from './../enum';\nimport { PdfDictionary } from '../../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfBoolean } from '../../primitives/pdf-boolean';\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfNumber } from './../../primitives/pdf-number';\nimport { PdfColorBlend } from './pdf-color-blend';\nimport { PdfGradientBrush } from './pdf-gradient-brush';\nimport { PdfExtend, ShadingType } from './enum';\n/**\n * `PdfRadialGradientBrush` Represent radial gradient brush.\n * @private\n */\nvar PdfRadialGradientBrush = /** @class */ (function (_super) {\n    __extends(PdfRadialGradientBrush, _super);\n    //Constructor\n    /**\n     * Initializes a new instance of the `PdfRadialGradientBrush` class.\n     * @public\n     */\n    /* tslint:disable-next-line:max-line-length */\n    function PdfRadialGradientBrush(centerStart, radiusStart, centerEnd, radiusEnd, colorStart, colorEnd) {\n        var _this = _super.call(this, new PdfDictionary()) || this;\n        /**\n         * Local varaible to store the dictionary properties.\n         */\n        _this.mDictionaryProperties = new DictionaryProperties();\n        _this.initialize(colorStart, colorEnd);\n        if (radiusStart < 0) {\n            throw new Error('ArgumentOutOfRangeException : radiusStart - The radius cannot be less then zero.');\n        }\n        if (radiusEnd < 0) {\n            throw new Error('ArgumentOutOfRangeException : radiusEnd - The radius cannpt be less then zero.');\n        }\n        _this.mPointEnd = centerEnd;\n        _this.mPointStart = centerStart;\n        _this.mRadiusStart = radiusStart;\n        _this.mRadiusEnd = radiusEnd;\n        _this.setPoints(_this.mPointStart, _this.mPointEnd, _this.mRadiusStart, _this.mRadiusEnd);\n        return _this;\n    }\n    /**\n     * Initializes a new instance of the `PdfRadialGradientBrush` class.\n     * @param color1 The color1.\n     * @param color2 The color2.\n     */\n    PdfRadialGradientBrush.prototype.initialize = function (color1, color2) {\n        this.mColour = [color1, color2];\n        this.mColourBlends = new PdfColorBlend(2);\n        this.mColourBlends.positions = [0, 1];\n        this.mColourBlends.colors = this.mColour;\n        this.initShading();\n    };\n    Object.defineProperty(PdfRadialGradientBrush.prototype, \"blend\", {\n        //Properties\n        /**\n         * Gets or sets a PdfBlend that specifies positions and factors that define a custom falloff for the gradient.\n         * @public\n         */\n        get: function () {\n            return this.mBlend;\n        },\n        set: function (value) {\n            if ((value == null)) {\n                throw new Error('ArgumentNullException : Blend');\n            }\n            if ((this.mColour == null && typeof this.mColour === 'undefined')) {\n                throw new Error('NotSupportedException : There is no starting and ending colours specified.');\n            }\n            this.mBlend = value;\n            this.mColourBlends = this.mBlend.generateColorBlend(this.mColour, this.colorSpace);\n            this.resetFunction();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRadialGradientBrush.prototype, \"interpolationColors\", {\n        /**\n         * Gets or sets a ColorBlend that defines a multicolor radial gradient.\n         * @public\n         */\n        get: function () {\n            return this.mColourBlends;\n        },\n        set: function (value) {\n            if (value == null) {\n                throw new Error('ArgumentNullException : InterpolationColors');\n            }\n            this.mBlend = null;\n            this.mColour = null;\n            this.mColourBlends = value;\n            this.resetFunction();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRadialGradientBrush.prototype, \"linearColors\", {\n        /**\n         * Gets or sets the starting and ending colors of the radial gradient.\n         * @public\n         */\n        get: function () {\n            return this.mColour;\n        },\n        set: function (value) {\n            if ((value == null)) {\n                throw new Error('ArgumentNullException : radial LinearColors');\n            }\n            if ((value.length < 2)) {\n                throw new Error('ArgumentException : The array is too small LinearColors');\n            }\n            if ((this.mColour == null && typeof this.mColour === 'undefined')) {\n                this.mColour = [value[0], value[1]];\n            }\n            else {\n                this.mColour[0] = value[0];\n                this.mColour[1] = value[1];\n            }\n            if ((this.mBlend == null && typeof this.mBlend === 'undefined')) {\n                //  Set correct colour blend.\n                this.mColourBlends = new PdfColorBlend(2);\n                this.mColourBlends.colors = this.mColour;\n                this.mColourBlends.positions = [0, 1];\n            }\n            else {\n                this.mColourBlends = this.mBlend.generateColorBlend(this.mColour, this.colorSpace);\n            }\n            this.resetFunction();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRadialGradientBrush.prototype, \"rectangle\", {\n        /**\n         * Gets or sets the rectangle.\n         * @public\n         */\n        get: function () {\n            return this.mBoundaries;\n        },\n        set: function (value) {\n            this.mBoundaries = value;\n            this.bBox = PdfArray.fromRectangle(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRadialGradientBrush.prototype, \"extend\", {\n        /**\n         * Gets or sets the value indicating whether the gradient\n         *  should extend starting and ending points.\n         * @public\n         */\n        get: function () {\n            var result1 = PdfExtend.None;\n            var extend1 = (this.shading.items.getValue(this.mDictionaryProperties.extend));\n            if (extend1 !== null && typeof extend1 !== 'undefined') {\n                var extStart = (extend1.items(0));\n                var extEnd = (extend1.items(1));\n                if (extStart.value) {\n                    result1 = (result1 | PdfExtend.Start);\n                }\n                if (extEnd.value) {\n                    result1 = (result1 | PdfExtend.End);\n                }\n            }\n            return result1;\n        },\n        set: function (value) {\n            var extend = (this.shading.items.getValue(this.mDictionaryProperties.extend));\n            var extStart;\n            var extEnd1;\n            if (extend == null && typeof extend === 'undefined') {\n                extStart = new PdfBoolean(false);\n                extEnd1 = new PdfBoolean(false);\n                extend = new PdfArray();\n                extend.add(extStart);\n                extend.add(extEnd1);\n                this.shading.items.setValue(this.mDictionaryProperties.extend, extend);\n            }\n            else {\n                extStart = (extend.items(0));\n                extEnd1 = (extend.items(1));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * Sets the points.\n     * @param pointStart The point start.\n     * @param pointEnd The point end.\n     * @param radiusStart The radius start.\n     * @param radiusEnd The radius end.\n     */\n    PdfRadialGradientBrush.prototype.setPoints = function (pointStart, pointEnd, radiusStart, radiusEnd) {\n        var points = new PdfArray();\n        points.add(new PdfNumber(pointStart.x));\n        points.add(new PdfNumber(this.updateY(pointStart.y)));\n        points.add(new PdfNumber(radiusStart));\n        points.add(new PdfNumber(pointEnd.x));\n        points.add(new PdfNumber(this.updateY(pointEnd.y)));\n        if ((radiusStart !== radiusEnd)) {\n            points.add(new PdfNumber(radiusEnd));\n        }\n        else {\n            points.add(new PdfNumber(0));\n        }\n        this.shading.items.setValue(this.mDictionaryProperties.coords, points);\n    };\n    /**\n     * Update y co-ordinate.\n     * @param y Y co-ordinate.\n     */\n    PdfRadialGradientBrush.prototype.updateY = function (y) {\n        if (y !== 0) {\n            return -y;\n        }\n        else {\n            return y;\n        }\n    };\n    /**\n     * Initializess the shading dictionary.\n     * @private\n     */\n    PdfRadialGradientBrush.prototype.initShading = function () {\n        this.colorSpace = PdfColorSpace.Rgb;\n        this.function = this.mColourBlends.getFunction(this.colorSpace);\n        this.shading.items.setValue(this.mDictionaryProperties.shadingType, new PdfNumber((ShadingType.Radial)));\n    };\n    //Overrides\n    /**\n     * Creates a new copy of a brush.\n     * @public\n     */\n    PdfRadialGradientBrush.prototype.clone = function () {\n        var rBrush = this;\n        rBrush.resetPatternDictionary(new PdfDictionary(this.patternDictionary));\n        rBrush.shading = new PdfDictionary();\n        rBrush.initShading();\n        rBrush.setPoints(this.mPointStart, this.mPointEnd, this.mRadiusStart, this.mRadiusEnd);\n        if (rBrush instanceof PdfRadialGradientBrush) {\n            if ((this.matrix !== null && typeof this.matrix !== 'undefined')) {\n                rBrush.matrix = this.matrix.clone();\n            }\n        }\n        if ((this.mColour !== null && typeof this.mColour !== 'undefined')) {\n            rBrush.mColour = (this.mColour);\n        }\n        if ((this.blend !== null && typeof this.blend !== 'undefined')) {\n            rBrush.blend = this.blend.clonePdfBlend();\n        }\n        else if ((this.interpolationColors !== null && typeof this.interpolationColors !== 'undefined')) {\n            rBrush.interpolationColors = this.interpolationColors.cloneColorBlend();\n        }\n        rBrush.extend = this.extend;\n        this.cloneBackgroundValue(rBrush);\n        this.cloneAntiAliasingValue(rBrush);\n        return rBrush;\n    };\n    /**\n     * Resets the function.\n     * @public\n     */\n    PdfRadialGradientBrush.prototype.resetFunction = function () {\n        this.function = this.mColourBlends.getFunction(this.colorSpace);\n    };\n    return PdfRadialGradientBrush;\n}(PdfGradientBrush));\nexport { PdfRadialGradientBrush };\n", "var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * ShapeLayouter.ts class for EJ2-PDF\n * @private\n */\nimport { ElementLayouter, PdfLayoutResult } from './element-layouter';\nimport { RectangleF, PointF } from './../../../drawing/pdf-drawing';\nimport { PdfLayoutBreakType, PdfLayoutType } from './../../figures/enum';\nimport { BeginPageLayoutEventArgs, EndPageLayoutEventArgs } from './../../../structured-elements/grid/layout/grid-layouter';\n/**\n * ShapeLayouter class.\n * @private\n */\nvar ShapeLayouter = /** @class */ (function (_super) {\n    __extends(ShapeLayouter, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `ShapeLayouter` class.\n     * @private\n     */\n    function ShapeLayouter(element) {\n        var _this = _super.call(this, element) || this;\n        // Fields\n        /**\n         * Initializes the object to store `older form elements` of previous page.\n         * @default 0\n         * @private\n         */\n        _this.olderPdfForm = 0;\n        /**\n         * The `bounds` of the shape element.\n         * * @default new RectangleF()\n         * @private\n         */\n        _this.shapeBounds = new RectangleF();\n        /**\n         * Total Page size of the web page.\n         * * @default 0\n         * @private\n         */\n        _this.totalPageSize = 0;\n        return _this;\n    }\n    Object.defineProperty(ShapeLayouter.prototype, \"element\", {\n        // Properties\n        /**\n         * Gets shape element.\n         * @private\n         */\n        get: function () {\n            return this.elements;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Layouts the element.\n     * @private\n     */\n    ShapeLayouter.prototype.layoutInternal = function (param) {\n        var currentPage = param.page;\n        var currentBounds = param.bounds;\n        var shapeLayoutBounds = this.element.getBounds();\n        shapeLayoutBounds.x = 0;\n        shapeLayoutBounds.y = 0;\n        /* tslint:disable */\n        var isEmpty = (this.shapeBounds.x === this.shapeBounds.y && this.shapeBounds.y === this.shapeBounds.width && this.shapeBounds.width === this.shapeBounds.height && this.shapeBounds.height === 0) ? true : false;\n        /* tslint:enable */\n        if ((this.isPdfGrid) && (!(isEmpty))) {\n            shapeLayoutBounds = this.shapeBounds;\n        }\n        var result = null;\n        var pageResult = new ShapeLayoutResult();\n        pageResult.page = currentPage;\n        /*tslint:disable:no-constant-condition */\n        while (true) {\n            // Raise event.\n            var result1 = this.raiseBeforePageLayout(currentPage, currentBounds);\n            currentBounds = result1.currentBounds;\n            var endArgs = null;\n            if (!result1.cancel) {\n                pageResult = this.layoutOnPage(currentPage, currentBounds, shapeLayoutBounds, param);\n                // Raise event.\n                endArgs = this.raiseEndPageLayout(pageResult);\n                result1.cancel = (endArgs === null) ? false : endArgs.cancel;\n            }\n            if (!pageResult.end && !result1.cancel) {\n                currentBounds = this.getPaginateBounds(param);\n                shapeLayoutBounds = this.getNextShapeBounds(shapeLayoutBounds, pageResult);\n                currentPage = (endArgs === null || endArgs.nextPage === null) ?\n                    this.getNextPage(currentPage) : endArgs.nextPage;\n                if (this.isPdfGrid) {\n                    result = this.getLayoutResult(pageResult);\n                    break;\n                }\n            }\n            else {\n                result = this.getLayoutResult(pageResult);\n                break;\n            }\n        }\n        return result;\n    };\n    /**\n     * Raises BeforePageLayout event.\n     * @private\n     */\n    ShapeLayouter.prototype.raiseBeforePageLayout = function (currentPage, currentBounds) {\n        var cancel = false;\n        if (this.element.raiseBeginPageLayout) {\n            var args = new BeginPageLayoutEventArgs(currentBounds, currentPage);\n            this.element.onBeginPageLayout(args);\n            cancel = args.cancel;\n            currentBounds = args.bounds;\n        }\n        return { currentBounds: currentBounds, cancel: cancel };\n    };\n    /**\n     * Raises PageLayout event if needed.\n     * @private\n     */\n    ShapeLayouter.prototype.raiseEndPageLayout = function (pageResult) {\n        var args = null;\n        if (this.element.raiseEndPageLayout) {\n            var res = this.getLayoutResult(pageResult);\n            args = new EndPageLayoutEventArgs(res);\n            this.element.onEndPageLayout(args);\n        }\n        return args;\n    };\n    /**\n     * Creates layout result.\n     * @private\n     */\n    ShapeLayouter.prototype.getLayoutResult = function (pageResult) {\n        var result = new PdfLayoutResult(pageResult.page, pageResult.bounds);\n        return result;\n    };\n    /**\n     * Calculates the next active shape bounds.\n     * @private\n     */\n    ShapeLayouter.prototype.getNextShapeBounds = function (shapeLayoutBounds, pageResult) {\n        var layoutedBounds = pageResult.bounds;\n        shapeLayoutBounds.y = (shapeLayoutBounds.y + layoutedBounds.height);\n        shapeLayoutBounds.height = (shapeLayoutBounds.height - layoutedBounds.height);\n        return shapeLayoutBounds;\n    };\n    /**\n     * Layouts the element on the current page.\n     * @private\n     */\n    ShapeLayouter.prototype.layoutOnPage = function (currentPage, curBounds, sBounds, param) {\n        var result = new ShapeLayoutResult();\n        curBounds = this.checkCorrectCurrentBounds(currentPage, curBounds, param);\n        var fitToPage = this.fitsToBounds(curBounds, sBounds);\n        var canDraw = !((param.format.break === PdfLayoutBreakType.FitElement)\n            && (!fitToPage && (currentPage === param.page)));\n        var shapeFinished = false;\n        if (canDraw) {\n            var drawRectangle = this.getDrawBounds(curBounds, sBounds);\n            this.drawShape(currentPage.graphics, curBounds, drawRectangle);\n            result.bounds = this.getPageResultBounds(curBounds, sBounds);\n            shapeFinished = ((curBounds.height) >= (sBounds.height));\n        }\n        result.end = (shapeFinished || (param.format.layout === PdfLayoutType.OnePage));\n        result.page = currentPage;\n        return result;\n    };\n    /**\n     * Returns Rectangle for element drawing on the page.\n     * @private\n     */\n    ShapeLayouter.prototype.getDrawBounds = function (currentBounds, shapeLayoutBounds) {\n        var result = currentBounds;\n        result.y = (result.y - shapeLayoutBounds.y);\n        result.height = (result.height + shapeLayoutBounds.y);\n        return result;\n    };\n    /**\n     * Draws the shape.\n     * @private\n     */\n    ShapeLayouter.prototype.drawShape = function (g, currentBounds, drawRectangle) {\n        var gState = g.save();\n        try {\n            g.setClip(currentBounds);\n            this.element.drawGraphicsHelper(g, new PointF(drawRectangle.x, drawRectangle.y));\n        }\n        finally {\n            g.restore(gState);\n        }\n    };\n    /**\n     * Corrects current bounds on the page.\n     * @protected\n     */\n    ShapeLayouter.prototype.checkCorrectCurrentBounds = function (currentPage, curBounds, param) {\n        var pageSize = currentPage.graphics.clientSize;\n        curBounds.width = (curBounds.width > 0) ? curBounds.width : (pageSize.width - curBounds.x);\n        curBounds.height = (curBounds.height > 0) ? curBounds.height : (pageSize.height - curBounds.y);\n        if (this.isPdfGrid) {\n            curBounds.height = (curBounds.height - this.bottomCellPadding);\n        }\n        return curBounds;\n    };\n    /**\n     * Calculates bounds where the shape was layout on the page.\n     * @private\n     */\n    ShapeLayouter.prototype.getPageResultBounds = function (currentBounds, shapeLayoutBounds) {\n        var result = currentBounds;\n        result.height = Math.min(result.height, shapeLayoutBounds.height);\n        return result;\n    };\n    /**\n     * Checks whether shape rectangle fits to the lay outing bounds.\n     * @private\n     */\n    ShapeLayouter.prototype.fitsToBounds = function (currentBounds, shapeLayoutBounds) {\n        var fits = (shapeLayoutBounds.height <= currentBounds.height);\n        return fits;\n    };\n    /**\n     * Initializes the offset `index`.\n     * * @default 0\n     * @private\n     */\n    ShapeLayouter.index = 0;\n    /**\n     * Initializes the `difference in page height`.\n     * * @default 0\n     * @private\n     */\n    ShapeLayouter.splitDiff = 0;\n    /**\n     * Determines the `end of Vertical offset` values.\n     * * @default false\n     * @private\n     */\n    ShapeLayouter.last = false;\n    /**\n     * Determines the document link annotation `border width`.\n     * * @default 0\n     * @private\n     */\n    ShapeLayouter.borderWidth = 0;\n    return ShapeLayouter;\n}(ElementLayouter));\nexport { ShapeLayouter };\n/**\n * Contains lay outing result settings.\n * @private\n */\nvar ShapeLayoutResult = /** @class */ (function () {\n    function ShapeLayoutResult() {\n    }\n    return ShapeLayoutResult;\n}());\n", "var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfLayoutElement } from './../layout-element';\nimport { ShapeLayouter } from './shape-layouter';\n/**\n * Base class for the main shapes.\n * @private\n */\nvar PdfShapeElement = /** @class */ (function (_super) {\n    __extends(PdfShapeElement, _super);\n    function PdfShapeElement() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    // methods\n    /**\n     * Gets the bounds.\n     * @private\n     */\n    PdfShapeElement.prototype.getBounds = function () {\n        var rect = this.getBoundsInternal();\n        return rect;\n    };\n    /**\n     * `drawGraphicsHelper` the graphics.\n     * @public\n     */\n    PdfShapeElement.prototype.drawGraphicsHelper = function (graphics, location) {\n        if ((graphics == null)) {\n            throw new Error('ArgumentNullException :graphics');\n        }\n        this.drawShapeHelper(graphics, location.x, location.y);\n    };\n    /**\n     * `drawShapeHelper` the graphics.\n     * @private\n     */\n    PdfShapeElement.prototype.drawShapeHelper = function (graphics, x, y) {\n        var bNeedSave = (x !== 0.5 || y !== 0.5);\n        var gState = null;\n        // Translate co-ordinates.\n        if (bNeedSave) {\n            // Save state.\n            gState = graphics.save();\n            graphics.translateTransform(x, y);\n        }\n        this.drawInternal(graphics);\n        if (bNeedSave) {\n            // Restore state.\n            graphics.restore(gState);\n        }\n    };\n    /**\n     * Layouts the element.\n     * @private\n     */\n    PdfShapeElement.prototype.layout = function (param) {\n        var layouter = new ShapeLayouter(this);\n        var result = layouter.layout(param);\n        return result;\n    };\n    return PdfShapeElement;\n}(PdfLayoutElement));\nexport { PdfShapeElement };\n", "var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfDrawElement.ts class for EJ2-PDF\n */\nimport { PdfShapeElement } from './pdf-shape-element';\n/**\n * Represents a base class for all page graphics elements.\n */\nvar PdfDrawElement = /** @class */ (function (_super) {\n    __extends(PdfDrawElement, _super);\n    /**\n     * Initializes a new instance of the `PdfDrawElement` class.\n     * @protected\n     */\n    function PdfDrawElement(pen) {\n        var _this = _super.call(this) || this;\n        if (typeof pen !== 'undefined') {\n            _this.mpen = pen;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfDrawElement.prototype, \"pen\", {\n        // Properties\n        /**\n         * Gets or sets a pen that will be used to draw the element.\n         * @public\n         */\n        get: function () {\n            return this.mpen;\n        },\n        set: function (value) {\n            this.mpen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfDrawElement;\n}(PdfShapeElement));\nexport { PdfDrawElement };\n", "var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfFillElement.ts class for EJ2-PDF\n */\nimport { PdfDrawElement } from './draw-element';\nimport { PdfPen } from './../../pdf-pen';\nimport { PdfColor } from './../../pdf-color';\n/**\n * Represents a base class for all page graphics elements.\n */\nvar PdfFillElement = /** @class */ (function (_super) {\n    __extends(PdfFillElement, _super);\n    /**\n     * Initializes a new instance of the `PdfFillElement` class.\n     * @protected\n     */\n    function PdfFillElement(arg1, arg2) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Internal variable to store pen.\n         * @private\n         */\n        _this.mbrush = null;\n        if (typeof arg1 === 'undefined') {\n            //\n        }\n        else if (arg1 instanceof PdfPen) {\n            _this = _super.call(this, arg1) || this;\n        }\n        else {\n            _this.mbrush = arg2;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfFillElement.prototype, \"brush\", {\n        // Properties\n        /**\n         * Gets or sets a brush of the element.\n         * @public\n         */\n        get: function () {\n            return this.mbrush;\n        },\n        set: function (value) {\n            this.mbrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Gets the pen. If both pen and brush are not explicitly defined, default pen will be used.\n     * @protected\n     */\n    PdfFillElement.prototype.obtainPen = function () {\n        return ((this.mbrush == null) && (this.pen == null)) ? new PdfPen(new PdfColor(0, 0, 0)) : this.pen;\n    };\n    return PdfFillElement;\n}(PdfDrawElement));\nexport { PdfFillElement };\n", "var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * Path.ts class for EJ2-PDF\n */\nimport { PdfBrush } from './../brushes/pdf-brush';\nimport { PdfPen } from './../pdf-pen';\nimport { PdfLayoutFormat } from './../figures/base/element-layouter';\nimport { RectangleF, PointF } from './../../drawing/pdf-drawing';\nimport { PathPointType } from './enum';\nimport { PdfFillElement } from './../figures/base/fill-element';\nimport { PdfFillMode } from './../enum';\n/**\n * `PdfPath` class Implements graphics path, which is a sequence of primitive graphics elements.\n * @private\n */\nvar PdfPath = /** @class */ (function (_super) {\n    __extends(PdfPath, _super);\n    /**\n     * Initializes a new instance of the `PdfPath` class.\n     * @public\n     */\n    /* tslint:disable-next-line:max-line-length */\n    function PdfPath(arg1, arg2, arg3, arg4) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Local variable to store the points.\n         * @private\n         */\n        _this.mpoints = null;\n        /**\n         * Local variable to store the path Types.\n         * @private\n         */\n        _this.mpathTypes = null;\n        /**\n         * Local variable to store the Start Figure.\n         * @private\n         */\n        _this.mStartFigure = true;\n        /**\n         * Local variable to store the fill Mode.\n         * @private\n         */\n        _this.mfillMode = PdfFillMode.Alternate;\n        /**\n         * Local variable to store the Beziers.\n         * @private\n         */\n        _this.isBeziers3 = false;\n        /**\n         * Local variable to store the xps.\n         * @private\n         */\n        _this.isXps = false;\n        if (typeof arg1 === 'undefined') {\n            //\n        }\n        else if (arg1 instanceof PdfPen) {\n            _this = _super.call(this, arg1) || this;\n            if (arg2 instanceof PdfBrush) {\n                _this = _super.call(this, arg1, arg2) || this;\n                _this.fillMode = arg3;\n            }\n            else if (arg2 !== null && typeof arg2 !== 'undefined' && arg3 !== null && typeof arg3 !== 'undefined') {\n                _this.addPath(arg2, arg3);\n            }\n        }\n        else if (arg1 instanceof PdfBrush) {\n            _this = _super.call(this, arg1) || this;\n            if (arg2 !== null && typeof arg2 !== 'undefined') {\n                _this.fillMode = arg2;\n            }\n            if (arg3 !== null && typeof arg3 !== 'undefined' && arg4 !== null && typeof arg4 !== 'undefined') {\n                _this.addPath(arg3, arg4);\n            }\n        }\n        else {\n            _this.addPath(arg1, arg2);\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfPath.prototype, \"fillMode\", {\n        // Properties\n        /**\n         * Gets or sets the fill mode.\n         * @public\n         */\n        get: function () {\n            return this.mfillMode;\n        },\n        set: function (value) {\n            this.mfillMode = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPath.prototype, \"pathPoints\", {\n        /**\n         * Gets the path points.\n         * @public\n         */\n        get: function () {\n            return this.points;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPath.prototype, \"pathTypes\", {\n        /**\n         * Gets the path point types.\n         * @public\n         */\n        get: function () {\n            return this.types;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPath.prototype, \"pointCount\", {\n        /**\n         * Gets the point count.\n         * @public\n         */\n        get: function () {\n            var count = 0;\n            if ((this.mpoints != null)) {\n                count = this.mpoints.length;\n            }\n            return count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPath.prototype, \"lastPoint\", {\n        /**\n         * Gets the last points.\n         * @public\n         */\n        get: function () {\n            return this.getLastPoint();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPath.prototype, \"points\", {\n        /**\n         * Gets the points list.\n         * @private\n         */\n        get: function () {\n            if ((this.mpoints == null)) {\n                this.mpoints = [];\n            }\n            return this.mpoints;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPath.prototype, \"types\", {\n        /**\n         * Gets the types.\n         * @private\n         */\n        get: function () {\n            if ((this.mpathTypes == null)) {\n                this.mpathTypes = [];\n            }\n            return this.mpathTypes;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfPath.prototype.draw = function (arg1, arg2, arg3, arg4) {\n        if (arg2 instanceof PointF && typeof arg2.width === 'undefined' && typeof arg3 === 'undefined') {\n            return this.drawHelper(arg1, arg2.x, arg2.y);\n        }\n        else if (arg2 instanceof RectangleF && typeof arg2.width !== 'undefined' && typeof arg3 === 'undefined') {\n            return this.drawHelper(arg1, arg2, null);\n        }\n        else if (typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'undefined') {\n            return this.drawHelper(arg1, arg2, arg3, null);\n        }\n        else if (arg2 instanceof PointF && arg3 instanceof PdfLayoutFormat) {\n            return this.drawHelper(arg1, arg2.x, arg2.y, arg3);\n        }\n        else if (typeof arg2 === 'number' && (arg4 instanceof PdfLayoutFormat || arg4 == null) && typeof arg3 === 'number') {\n            var widthValue = (arg1.graphics.clientSize.width - arg2);\n            var layoutRect = new RectangleF(arg2, arg3, widthValue, 0);\n            return this.drawHelper(arg1, layoutRect, arg4);\n        }\n        else if (arg2 instanceof RectangleF && arg3 instanceof PdfLayoutFormat) {\n            return this.drawHelper(arg1, arg2, arg3);\n        }\n        else {\n            return this.drawHelper(arg1, arg2, arg3);\n        }\n    };\n    PdfPath.prototype.addArc = function (arg1, arg2, arg3, arg4, arg5, arg6) {\n        if (arg1 instanceof RectangleF) {\n            this.addArc(arg1.x, arg1.y, arg1.width, arg1.height, arg2, arg3);\n        }\n        else {\n            var points = this.getBezierArcPoints(arg1, arg2, (arg2 + arg3), (arg2 + arg4), arg5, arg6);\n            for (var i = 0; i < points.length; i = i + 8) {\n                /* tslint:disable-next-line:max-line-length */\n                var point = [points[i], points[i + 1], points[i + 2], points[i + 3], points[i + 4], points[i + 5], points[i + 6], points[i + 7]];\n                this.addPoints(point, PathPointType.Bezier3);\n            }\n        }\n    };\n    /* tslint:disable-next-line:max-line-length */\n    PdfPath.prototype.addBezier = function (arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8) {\n        if (arg1 instanceof PointF && arg2 instanceof PointF && arg3 instanceof PointF && arg4 instanceof PointF) {\n            this.addBezier(arg1.x, arg1.y, arg2.x, arg2.y, arg3.x, arg3.y, arg4.x, arg4.y);\n        }\n        else {\n            var points = [];\n            points.push(arg1);\n            points.push(arg2);\n            points.push(arg3);\n            points.push(arg4);\n            points.push(arg5);\n            points.push(arg6);\n            points.push(arg7);\n            points.push(arg8);\n            this.addPoints(points, PathPointType.Bezier3);\n        }\n    };\n    PdfPath.prototype.addEllipse = function (arg1, arg2, arg3, arg4) {\n        if (arg1 instanceof RectangleF) {\n            this.addEllipse(arg1.x, arg1.y, arg1.width, arg1.height);\n        }\n        else {\n            this.startFigure();\n            this.addArc(arg1, arg2, arg3, arg4, 0, 360);\n            this.closeFigure();\n        }\n    };\n    PdfPath.prototype.addLine = function (arg1, arg2, arg3, arg4) {\n        if (arg1 instanceof PointF && arg2 instanceof PointF) {\n            this.addLine(arg1.x, arg1.y, arg2.x, arg2.y);\n        }\n        else {\n            var points = [];\n            points.push(arg1);\n            points.push(arg2);\n            points.push(arg3);\n            points.push(arg4);\n            this.addPoints(points, PathPointType.Line);\n        }\n    };\n    PdfPath.prototype.addPath = function (arg1, arg2) {\n        if (arg1 instanceof PdfPath) {\n            this.addPath(arg1.pathPoints, arg1.pathTypes);\n        }\n        else {\n            if ((arg1 == null)) {\n                throw new Error('ArgumentNullException:pathPoints');\n            }\n            if ((arg2 == null)) {\n                throw new Error('ArgumentNullException:pathTypes');\n            }\n            var count = arg1.length;\n            if ((count !== arg2.length)) {\n                throw new Error('The argument arrays should be of equal length.');\n            }\n        }\n    };\n    PdfPath.prototype.addPie = function (arg1, arg2, arg3, arg4, arg5, arg6) {\n        if (arg1 instanceof RectangleF) {\n            this.addPie(arg1.x, arg1.y, arg1.width, arg1.height, arg2, arg3);\n        }\n        else {\n            this.startFigure();\n            this.addArc(arg1, arg2, arg3, arg4, arg5, arg6);\n            this.addPoint(new PointF((arg1 + (arg3 / 2)), (arg2 + (arg4 / 2))), PathPointType.Line);\n            this.closeFigure();\n        }\n    };\n    /**\n     * `add a polygon` specified by points.\n     * @param points The points of the polygon\n     */\n    PdfPath.prototype.addPolygon = function (points) {\n        var count = (points.length * 2);\n        var p = [];\n        this.startFigure();\n        for (var i = 0; i < points.length; i++) {\n            p.push(points[i].x);\n            p.push(points[i].y);\n        }\n        this.addPoints(p, PathPointType.Line);\n        this.closeFigure();\n    };\n    PdfPath.prototype.addRectangle = function (arg1, y, width, height) {\n        if (arg1 instanceof RectangleF) {\n            this.addRectangle(arg1.x, arg1.y, arg1.width, arg1.height);\n        }\n        else {\n            var points = [];\n            this.startFigure();\n            points.push(arg1);\n            points.push(y);\n            points.push((arg1 + width));\n            points.push(y);\n            points.push((arg1 + width));\n            points.push((y + height));\n            points.push(arg1);\n            points.push((y + height));\n            this.addPoints(points, PathPointType.Line);\n            this.closeFigure();\n        }\n    };\n    /**\n     * Starts a new figure.\n     * @public\n     */\n    PdfPath.prototype.startFigure = function () {\n        this.mStartFigure = true;\n    };\n    /**\n     * Closed all non-closed figures.\n     * @public\n     */\n    PdfPath.prototype.closeAllFigures = function () {\n        var startPath = this.pathPoints[0];\n        for (var i = 0; i < this.mpathTypes.length; i++) {\n            var pt = ((this.types[i]));\n            var flag = false;\n            if (((i !== 0) && (pt === PathPointType.Start))) {\n                this.closeFigure((i - 1));\n                flag = true;\n            }\n            else if (((i === (this.mpathTypes.length - 1)) && (!flag && this.isXps))) {\n                if ((startPath.x === this.pathPoints[i].y)) {\n                    this.closeFigure(i);\n                }\n            }\n        }\n    };\n    /**\n     * Gets the last point.\n     * @public\n     */\n    PdfPath.prototype.getLastPoint = function () {\n        var lastPoint = new PointF(0, 0);\n        var count = this.pointCount;\n        if (((count > 0) && (this.mpoints != null))) {\n            lastPoint.x = this.mpoints[(count - 1)].x;\n            lastPoint.y = this.mpoints[(count - 1)].y;\n        }\n        return lastPoint;\n    };\n    /**\n     * Gets the bezier points for arc constructing.\n     * @public\n     */\n    PdfPath.prototype.getBezierArcPoints = function (x1, y1, x2, y2, s1, e1) {\n        if ((x1 > x2)) {\n            var tmp = void 0;\n            tmp = x1;\n            x1 = x2;\n            x2 = tmp;\n        }\n        if ((y2 > y1)) {\n            var tmp = void 0;\n            tmp = y1;\n            y1 = y2;\n            y2 = tmp;\n        }\n        var fragAngle;\n        var numFragments;\n        if ((Math.abs(e1) <= 90)) {\n            fragAngle = e1;\n            numFragments = 1;\n        }\n        else {\n            numFragments = (Math.ceil((Math.abs(e1) / 90)));\n            fragAngle = (e1 / numFragments);\n        }\n        var xcen = ((x1 + x2) / 2);\n        var ycen = ((y1 + y2) / 2);\n        var rx = ((x2 - x1) / 2);\n        var ry = ((y2 - y1) / 2);\n        var halfAng = ((fragAngle * (Math.PI / 360)));\n        var kappa = (Math.abs(4.0 / 3.0 * (1.0 - Math.cos(halfAng)) / Math.sin(halfAng)));\n        var pointList = [];\n        for (var i = 0; (i < numFragments); i++) {\n            var theta0 = (((s1 + (i * fragAngle)) * (Math.PI / 180)));\n            var theta1 = (((s1 + ((i + 1) * fragAngle)) * (Math.PI / 180)));\n            var cos0 = (Math.cos(theta0));\n            var cos1 = (Math.cos(theta1));\n            var sin0 = (Math.sin(theta0));\n            var sin1 = (Math.sin(theta1));\n            if ((fragAngle > 0)) {\n                /* tslint:disable-next-line:max-line-length */\n                pointList.push((xcen + (rx * cos0)), (ycen - (ry * sin0)), (xcen + (rx * (cos0 - (kappa * sin0)))), (ycen - (ry * (sin0 + (kappa * cos0)))), (xcen + (rx * (cos1 + (kappa * sin1)))), (ycen - (ry * (sin1 - (kappa * cos1)))), (xcen + (rx * cos1)), (ycen - (ry * sin1)));\n            }\n            else {\n                /* tslint:disable-next-line:max-line-length */\n                pointList.push((xcen + (rx * cos0)), (ycen - (ry * sin0)), (xcen + (rx * (cos0 + (kappa * sin0)))), (ycen - (ry * (sin0 - (kappa * cos0)))), (xcen + (rx * (cos1 - (kappa * sin1)))), (ycen - (ry * (sin1 + (kappa * cos1)))), (xcen + (rx * cos1)), (ycen - (ry * sin1)));\n            }\n        }\n        return pointList;\n    };\n    /**\n     * `getBoundsInternal` Returns a rectangle that bounds this element.\n     * @public\n     */\n    PdfPath.prototype.getBoundsInternal = function () {\n        var points = this.pathPoints;\n        var bounds = new RectangleF(0, 0, 0, 0);\n        if ((points.length > 0)) {\n            var xmin = points[0].x;\n            var xmax = points[0].x;\n            var ymin = points[0].y;\n            var ymax = points[0].y;\n            for (var i = 1; i < points.length; i++) {\n                var point = points[i];\n                xmin = Math.min(point.x, xmin);\n                xmax = Math.max(point.x, xmax);\n                ymin = Math.min(point.y, ymin);\n                ymax = Math.max(point.y, ymax);\n            }\n            bounds = new RectangleF(xmin, ymin, (xmax - xmin), (ymax - ymin));\n        }\n        return bounds;\n    };\n    /**\n     * `drawInternal` Draws an element on the Graphics.\n     * @param graphics Graphics context where the element should be printed.\n     * @public\n     */\n    PdfPath.prototype.drawInternal = function (graphics) {\n        if ((graphics == null)) {\n            throw new Error('ArgumentNullException :graphics');\n        }\n        graphics.drawPath(this.obtainPen(), this.brush, this);\n    };\n    PdfPath.prototype.addPoints = function (points, pointType, startIndex, endIndex) {\n        if (typeof startIndex === 'undefined' && typeof endIndex === 'undefined') {\n            this.addPoints(points, pointType, 0, points.length);\n        }\n        else {\n            for (var i = startIndex; i < endIndex; i++) {\n                var point = new PointF(points[i], points[(i + 1)]);\n                if ((i === startIndex)) {\n                    if (((this.pointCount <= 0) || this.mStartFigure)) {\n                        this.addPoint(point, PathPointType.Start);\n                        this.mStartFigure = false;\n                    }\n                    else if (((point.x !== this.lastPoint.x) && (point.y !== this.lastPoint.y) && !this.isBeziers3)) {\n                        this.addPoint(point, PathPointType.Line);\n                    }\n                    else if ((point.x !== this.lastPoint.x) && (point.y !== this.lastPoint.y)) {\n                        this.addPoint(point, PathPointType.Bezier3);\n                    }\n                }\n                else {\n                    this.addPoint(point, pointType);\n                }\n                i++;\n            }\n        }\n    };\n    /**\n     * `add a point` Adds the point and its type\n     * @param points The points.\n     * @param pointType Type of the points.\n     * @private\n     */\n    PdfPath.prototype.addPoint = function (point, pointType) {\n        this.points.push(point);\n        this.types.push((pointType));\n    };\n    PdfPath.prototype.closeFigure = function (index) {\n        if (typeof index === 'undefined') {\n            if ((this.pointCount > 0)) {\n                this.closeFigure(this.pointCount - 1);\n            }\n            this.startFigure();\n        }\n        else {\n            if ((index < 0)) {\n                throw new Error('IndexOutOfRangeException()');\n            }\n            var pt = ((this.types[index]));\n            pt = (pt | PathPointType.CloseSubpath);\n            this.types[index] = (pt);\n        }\n    };\n    return PdfPath;\n}(PdfFillElement));\nexport { PdfPath };\n", "var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfPen } from './../pdf-pen';\nimport { RectangleF } from './../../drawing/pdf-drawing';\nimport { PdfFillElement } from './../figures/base/fill-element';\n/**\n * `PdfRectangleArea` class Implements graphics rectangle area, which is a sequence of primitive graphics elements.\n * @private\n */\nvar PdfRectangleArea = /** @class */ (function (_super) {\n    __extends(PdfRectangleArea, _super);\n    /* tslint:disable-next-line:max-line-length */\n    function PdfRectangleArea(arg1, arg2, arg3, arg4, arg5, arg6) {\n        var _this = _super.call(this) || this;\n        //Fields\n        /**\n         * public variable to store the rectangle.\n         * @public\n         */\n        _this.bounds = new RectangleF(0, 0, 0, 0);\n        if (typeof arg1 === 'undefined') {\n            //\n        }\n        else if (arg1 instanceof PdfPen) {\n            _this = _super.call(this, arg1, arg2) || this;\n            if (arg3 instanceof RectangleF) {\n                _this.bounds = arg3;\n            }\n            else {\n                _this.bounds = new RectangleF(arg3, arg4, arg5, arg6);\n            }\n        }\n        else if (arg1 instanceof RectangleF) {\n            _this.bounds = arg1;\n        }\n        else {\n            _this.bounds = new RectangleF(arg1, arg2, arg3, arg4);\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfRectangleArea.prototype, \"x\", {\n        //Properties\n        /**\n         * Gets or sets the X co-ordinate of the upper-left corner of this the element.\n         * @public\n         */\n        get: function () {\n            return this.bounds.x;\n        },\n        set: function (value) {\n            this.bounds.x = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRectangleArea.prototype, \"y\", {\n        /**\n         * Gets or sets the Y co-ordinate of the upper-left corner of this the element.\n         * @public\n         */\n        get: function () {\n            return this.bounds.y;\n        },\n        set: function (value) {\n            this.bounds.y = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRectangleArea.prototype, \"width\", {\n        /**\n         * Gets or sets the width of this element.\n         * @public\n         */\n        get: function () {\n            return this.bounds.width;\n        },\n        set: function (value) {\n            this.bounds.width = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRectangleArea.prototype, \"height\", {\n        /**\n         * Gets or sets the height of this element.\n         * @public\n         */\n        get: function () {\n            return this.bounds.height;\n        },\n        set: function (value) {\n            this.bounds.height = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    PdfRectangleArea.prototype.getBoundsInternal = function () {\n        return this.bounds;\n    };\n    return PdfRectangleArea;\n}(PdfFillElement));\nexport { PdfRectangleArea };\n", "var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfPen } from './../pdf-pen';\nimport { RectangleF } from './../../drawing/pdf-drawing';\nimport { PdfRectangleArea } from './rectangle-area';\n/**\n * `PdfEllipsePart` class Implements graphics ellipse part, which is a sequence of primitive graphics elements.\n * @private\n */\nvar PdfEllipsePart = /** @class */ (function (_super) {\n    __extends(PdfEllipsePart, _super);\n    /* tslint:disable-next-line:max-line-length */\n    function PdfEllipsePart(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * public variable to store the start angle.\n         * @public\n         */\n        _this.startAngle = 0;\n        /**\n         * public variable to store the sweep angle.\n         * @public\n         */\n        _this.sweepAngle = 0;\n        if (typeof arg1 === 'undefined') {\n            //\n        }\n        else if (arg1 instanceof RectangleF && typeof arg2 !== 'undefined' && typeof arg3 !== 'undefined') {\n            _this = _super.call(this, arg1) || this;\n            _this.startAngle = arg2;\n            _this.sweepAngle = arg3;\n        }\n        else if (arg1 instanceof PdfPen) {\n            if (arg3 instanceof RectangleF) {\n                _this = _super.call(this, arg1, arg2, arg3) || this;\n                _this.startAngle = arg4;\n                _this.sweepAngle = arg5;\n            }\n            else {\n                _this = _super.call(this, arg1, arg2, arg3, arg4, arg5, arg6) || this;\n                _this.startAngle = arg7;\n                _this.sweepAngle = arg8;\n            }\n        }\n        else {\n            _this = _super.call(this, arg1, arg2, arg3, arg4) || this;\n            _this.startAngle = arg5;\n            _this.sweepAngle = arg6;\n        }\n        return _this;\n    }\n    return PdfEllipsePart;\n}(PdfRectangleArea));\nexport { PdfEllipsePart };\n", "var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * arc.ts class for EJ2-PDF\n */\nimport { PdfPen } from './../pdf-pen';\nimport { PdfLayoutFormat } from './../figures/base/element-layouter';\nimport { RectangleF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfEllipsePart } from './../figures/ellipse-part';\n/**\n * `PdfArc` class Implements graphics arc, which is a sequence of primitive graphics elements.\n * @private\n */\nvar PdfArc = /** @class */ (function (_super) {\n    __extends(PdfArc, _super);\n    /* tslint:disable-next-line:max-line-length */\n    function PdfArc(arg1, arg2, arg3, arg4, arg5, arg6, arg7) {\n        var _this = this;\n        if (typeof arg1 === 'undefined') {\n            _this = _super.call(this) || this;\n        }\n        else if (arg1 instanceof RectangleF) {\n            _this = _super.call(this, arg1, arg2, arg3) || this;\n        }\n        else if (arg1 instanceof PdfPen) {\n            if (arg2 instanceof RectangleF) {\n                _this = _super.call(this, arg1, null, arg2, arg3, arg4) || this;\n            }\n            else if (typeof arg6 === 'undefined' && typeof arg7 === 'undefined') {\n                _this = _super.call(this, arg1, null, 0, 0, arg2, arg3, arg4, arg5) || this;\n            }\n            else if (typeof arg6 !== 'undefined' && typeof arg7 !== 'undefined') {\n                _this = _super.call(this, arg1, null, arg2, arg3, arg4, arg5, arg6, arg7) || this;\n            }\n        }\n        else if (typeof arg1 !== 'undefined' && typeof arg5 === 'undefined' && typeof arg6 === 'undefined') {\n            _this = _super.call(this, 0, 0, arg1, arg2, arg3, arg4) || this;\n        }\n        else if (typeof arg1 !== 'undefined' && typeof arg5 !== 'undefined' && typeof arg6 !== 'undefined') {\n            _this = _super.call(this, arg1, arg2, arg3, arg4, arg5, arg6) || this;\n        }\n        return _this;\n    }\n    PdfArc.prototype.draw = function (argu1, arg2, arg3, arg4) {\n        if (arg2 instanceof PointF && typeof arg2.width === 'undefined' && typeof arg3 === 'undefined') {\n            return this.drawHelper(argu1, arg2.x, arg2.y);\n        }\n        else if (arg2 instanceof RectangleF && typeof arg2.width !== 'undefined' && typeof arg3 === 'undefined') {\n            return this.drawHelper(argu1, arg2, null);\n        }\n        else if (typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'undefined') {\n            return this.drawHelper(argu1, arg2, arg3, null);\n        }\n        else if (arg2 instanceof PointF && arg3 instanceof PdfLayoutFormat) {\n            return this.drawHelper(argu1, arg2.x, arg2.y, arg3);\n        }\n        else if (typeof arg2 === 'number' && (arg4 instanceof PdfLayoutFormat || arg4 == null) && typeof arg3 === 'number') {\n            var widthValue = (argu1.graphics.clientSize.width - arg2);\n            var layoutRect = new RectangleF(arg2, arg3, widthValue, 0);\n            return this.drawHelper(argu1, layoutRect, arg4);\n        }\n        else {\n            return this.drawHelper(argu1, arg2, arg3);\n        }\n    };\n    // Implementation\n    /**\n     * `drawInternal` Draws an element on the Graphics.\n     * @param graphics Graphics context where the element should be printed.\n     *\n     */\n    PdfArc.prototype.drawInternal = function (graphics) {\n        if ((graphics == null)) {\n            throw new Error('ArgumentNullException : graphics');\n        }\n        graphics.drawArc(this.obtainPen(), this.bounds, this.startAngle, this.sweepAngle);\n    };\n    return PdfArc;\n}(PdfEllipsePart));\nexport { PdfArc };\n"],
  "mappings": "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,KAAU,KAAU,KAAU,GAAQ;AAAA,QACjD,CAAC,KAAU,KAAU,KAAU,KAAU,GAAQ;AAAA,QACjD,CAAC,KAAU,KAAU,KAAU,KAAU,GAAQ;AAAA,QACjD,CAAC,KAAU,KAAU,KAAU,KAAU,GAAQ;AAAA,QACjD,CAAC,KAAU,KAAU,KAAU,KAAU,GAAQ;AAAA,QACjD,CAAC,KAAU,KAAU,KAAU,KAAU,GAAQ;AAAA,QACjD,CAAC,KAAU,KAAU,KAAU,KAAU,GAAQ;AAAA,QACjD,CAAC,KAAU,KAAU,GAAQ;AAAA,QAC7B,CAAC,KAAU,KAAU,KAAU,KAAU,GAAQ;AAAA,QACjD,CAAC,KAAU,KAAU,KAAU,KAAU,GAAQ;AAAA,QACjD,CAAC,KAAU,KAAU,GAAQ;AAAA,QAC7B,CAAC,KAAU,KAAU,KAAU,KAAU,GAAQ;AAAA,QACjD,CAAC,KAAU,KAAU,KAAU,KAAU,GAAQ;AAAA,QACjD,CAAC,KAAU,KAAU,KAAU,KAAU,GAAQ;AAAA,QACjD,CAAC,KAAU,KAAU,KAAU,KAAU,GAAQ;AAAA,QACjD,CAAC,KAAU,KAAU,KAAU,KAAU,GAAQ;AAAA,QACjD,CAAC,KAAU,KAAU,KAAU,KAAU,GAAQ;AAAA,QACjD,CAAC,KAAU,KAAU,KAAU,KAAU,GAAQ;AAAA,QACjD,CAAC,KAAU,KAAU,KAAU,KAAU,GAAQ;AAAA,QACjD,CAAC,KAAU,KAAU,KAAU,KAAU,GAAQ;AAAA,QACjD,CAAC,KAAU,KAAU,KAAU,KAAU,GAAQ;AAAA,QACjD,CAAC,KAAU,KAAU,GAAQ;AAAA,QAC7B,CAAC,KAAU,KAAU,GAAQ;AAAA,QAC7B,CAAC,KAAU,KAAU,GAAQ;AAAA,QAC7B,CAAC,KAAU,KAAU,GAAQ;AAAA,QAC7B,CAAC,KAAU,KAAU,GAAQ;AAAA,QAC7B,CAAC,KAAU,KAAU,GAAQ;AAAA,QAC7B,CAAC,KAAU,KAAU,KAAU,KAAU,GAAQ;AAAA,QACjD,CAAC,KAAU,KAAU,KAAU,KAAU,GAAQ;AAAA,QACjD,CAAC,KAAU,KAAU,KAAU,KAAU,GAAQ;AAAA,QACjD,CAAC,KAAU,KAAU,KAAU,KAAU,GAAQ;AAAA,QACjD,CAAC,KAAU,KAAU,KAA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CjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,KAAK;AAClD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,KAAK;AAClD,WAAK,yBAAyB,SAAS,MAAM,KAAK;AAClD,WAAK,yBAAyB,SAAS,MAAM,KAAK;AAClD,WAAK,yBAAyB,SAAS,MAAM,KAAK;AAClD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AAEjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,MAAM,IAAI;AACjD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,IAAI;AAClD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,IAAI;AAClD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WAAK,yBAAyB,SAAS,OAAO,KAAK;AACnD,WA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AAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAC/E;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAK;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAC/E;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAK;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAC/E;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAC7E;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAI;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAI;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAC/E;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAK;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAI;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAChF;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAI;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAI;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAC/E;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAI;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAK;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAChF;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAI;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAI;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAI;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAChF;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAI;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAK;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAI;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QACjF;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAI;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAK;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAI;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QACjF;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAI;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAI;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAI;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAChF;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAI;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAI;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAK;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QACjF;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAK;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAI;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAChF;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAI;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAK;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAI;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QACjF;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAK;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAK;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QACjF;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAK;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAK;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QACjF;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAK;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAK;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QACjF;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAK;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAK;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QACjF;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAK;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAK;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QACjF;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAK;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAI;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAChF;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAK;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAK;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QACjF;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAK;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAK;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QACjF;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAK;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAK;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QACjF;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAK;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAK;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QACjF;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAK;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAK;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QACjF;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAK;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAK;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QACjF;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAI;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAK;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAChF;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAK;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAK;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QACjF;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAK;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAK;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QACjF;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAK;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAK;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QACjF;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAK;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAK;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QACjF;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAI;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAI;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAI;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAChF;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAK;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAK;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QACjF;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAK;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAK;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QACjF;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAK;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAK;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QACjF;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAK;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAK;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QACjF;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAK;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAK;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QACjF;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAK;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAK;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QACjF;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAK;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAI;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAChF;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAK;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAK;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QACjF;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAK;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAK;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QACjF;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAK;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAK;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QACjF;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAK;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAK;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QACjF;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAK;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAI;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAChF;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAK;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAC/E;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAK;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAC/E;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAK;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAC/E;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAK;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAC/E;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAK;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAC/E;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAI;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAC9E;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAK;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAC/E;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAK;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAC/E;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAK;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAC/E;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAK;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAC/E;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAK;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAC/E;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAI;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAK;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAChF;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAK;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAC/E;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAK;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAC/E;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAK;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAC/E;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAI;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAC9E;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAI;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAC9E;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAI;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAC9E;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAI;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAC9E;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAI;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAI;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAC/E;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAI;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAI;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAC/E;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAK;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAK;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAK;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QACnF;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAK;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAI;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAI;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QACjF;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAI;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAC9E;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAI;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAI;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAC/E;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAI;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAI;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAC/E;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAI;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAI;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAC/E;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAI;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAC9E;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAI;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAC9E;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAI;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAC9E;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAI;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAC9E;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAI;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAC9E;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAI;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAC9E;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAI;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAC9E;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAI;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAC9E;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAI;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAC9E;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAI;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAI;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAC/E;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAI;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAC9E;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAI;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAC9E;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAI;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAI;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAC/E;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAI;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAI;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAC/E;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAI;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAI;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAC/E;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAI;AAAA,QAAM;AAAA,QAAM,KAAK;AAAA,QAAG;AAAA,QAAM;AAAA,QAAO,KAAK;AAAA,QAAI;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAClF;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAI;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAG;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAI;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QACvF;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAI;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAG;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAI;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QACvF;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAI;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAG;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAI;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QACvF;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAI;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAG;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAI;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QACvF;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAI;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAG;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAI;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QACvF;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAI;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAG;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAI;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QACvF;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAI;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAG;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAI;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QACvF;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAI;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAI;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAG;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QACvF;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAG;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAK;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAI;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QACxF;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAI;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAG;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAI;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QACvF;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAK;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAI;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAG;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QACxF;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAG;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAI;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAG;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QACtF;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAG;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAI;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAG;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QACtF;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAG;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAI;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAG;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QACtF;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAG;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAI;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAG;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QACtF;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAG;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAI;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAG;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QACtF;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAG;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAI;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAG;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QACtF;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAK;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAG;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAI;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QACxF;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAG;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAG;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAG;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QACrF;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAG;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAG;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAG;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QACrF;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAG;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAG;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAI;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QACtF;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAI;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAI;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAG;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QACvF;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAG;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAI;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAG;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QACtF;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAI;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAG;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAK;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QACxF;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAK;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAG;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAI;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QACxF;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAI;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAI;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAG;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QACvF;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAI;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAI;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAI;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QACxF;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAI;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAI;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAG;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QACvF;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAI;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAI;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAG;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QACvF;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAG;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAI;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAG;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QACtF;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAG;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAI;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAI;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QACvF;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAI;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAI;AAAA,QAAO;AAAA,QAAO,KAAK;AAAA,QAAI;AA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K;AAAA,MAAM;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAM;AAAA,MAAK;AAAA,MAAK;AAAA,MAAM;AAAA,MAC1E;AAAA,MAAK;AAAA,MAAG;AAAA,MAAG;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAM;AAAA,MAAK;AAAA,MAAM;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MACzE;AAAA,MAAK;AAAA,MAAK;AAAA,MAAG;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MACzE;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAC3E;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAM;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAC5E;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAC3E;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAC3E;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;A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AA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAC3E;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAC3E;AAAA,MAAK;AAAA,MAAG;AAAA,MAAK;AAAA,MAAG;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAM;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAM;AAAA,MAAK;AAAA,MAAK;AAAA,MAAM;AAAA,MAC1E;AAAA,MAAK;AAAA,MAAG;AAAA,MAAG;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAM;AAAA,MAAK;AAAA,MAAM;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MACzE;AAAA,MAAK;AAAA,MAAK;AAAA,MAAG;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MACzE;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAC3E;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAM;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAC5E;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAC3E;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAC3E;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAC3E;AAAA,MAAK;AAAA,IACT;AAKA,IAAAA,+BAA8B,wBAAwB;AAAA,MAClD;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MACjxE;AAAA,MAAK;AAAA,MAAG;AAAA,MAAG;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MACvE;AAAA,MAAK;AAAA,MAAK;AAAA,MAAG;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MACzvD;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MACjzE;AAAA,MAAK;AAAA,MAAG;AAAA,MAAG;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAM;AAAA,MAAK;AAAA,MAAM;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MACzE;AAAA,MAAK;AAAA,MAAK;AAAA,MAAG;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MACzcAAc;AAAA,MACxC;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MACjE;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MACjE;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MACjE;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MACjE;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MACjE;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MACjE;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MACjE;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAM;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAClE;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAM;AAAA,MAAK;AAAA,MAClE;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MACjE;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MACjE;AAAA,MAAM;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAClE;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MACjE;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,IACvC;AAKA,IAAAA,+BAA8B,oBAAoB;AAAA,MAC9C;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MACjE;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MACjE;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MACjE;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MACjE;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MACjE;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MACjE;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MACjE;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MACjE;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MACjE;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MACjE;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAAA,MAAK;AAA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",
  "names": ["PdfHorizontalAlignment", "PdfVerticalAlignment", "PdfTextAlignment", "TextRenderingMode", "PdfLineJoin", "PdfLineCap", "PdfDashStyle", "PdfFillMode", "PdfColorSpace", "PdfBlendMode", "PdfGraphicsUnit", "PdfGridImagePosition", "PdfTextDirection", "Operators", "Dictionary", "PdfNumber", "PdfArray", "PdfColor", "PointF", "SizeF", "RectangleF", "Rectangle", "PdfBrush", "d", "b", "PdfSolidBrush", "PdfFontStyle", "PdfFontFamily", "PdfFontType", "PdfWordWrapType", "PdfSubSuperScript", "FontEncoding", "TtfCmapFormat", "TtfCmapEncoding", "TtfPlatformID", "TtfMicrosoftEncodingID", "TtfMacintoshEncodingID", "FontDescriptorFlags", "TtfCompositeGlyphFlags", "PdfStringFormat", "PdfPageOrientation", "PdfPageRotateAngle", "PdfNumberStyle", "PdfDockStyle", "PdfAlignmentStyle", "TemplateType", "PdfPageSize", "PdfMargins", "PdfPageSettings", "PdfPen", "ByteArray", "PdfName", "DictionaryProperties", "PdfDictionary", "SaveSectionCollectionEventHandler", "SaveDescendantFontEventHandler", "SaveFontDictionaryEventHandler", "SaveAnnotationEventHandler", "SaveSectionEventHandler", "SaveTemplateEventHandler", "InternalEnum", "ForceEncoding", "SourceType", "PdfString", "PdfReference", "PdfReferenceHolder", "Save", "isPopupBlocked", "XmlWriter", "Namespace", "XmlElement", "XmlAttribute", "Encoding", "StreamWriter", "Utils", "ZipArchive", "data", "ZipArchiveItemHelper", "ZipArchiveItem", "CompressedStreamWriter", "CompressorHuffmanTree", "ChecksumCalculator", "DecompressorHuffmanTree", "ChecksumCalculator", "CompressedStreamReader", "ChecksumCalculator", "Stream", "__extends", "d", "b", "PdfStream", "SaveCmapEventHandler", "SaveFontProgramEventHandler", "PdfBoolean", "ImageFormat", "ImageDecoder", "PdfUnitConverter", "PdfImage", "__extends", "d", "b", "PdfBitmap", "PdfLayoutType", "PdfLayoutBreakType", "PathPointType", "PdfWriter", "ObjectStatus", "PdfMainObjectCollection", "ObjectInfo", "PdfDocumentBase", "document", "ObjectType", "PdfViewerPreferences", "PdfPageMode", "PdfPageLayout", "DuplexMode", "PageScalingMode", "__extends", "d", "b", "PdfCatalog", "PdfCrossTable", "document", "RegisteredObject", "PdfStreamWriter", "StringTokenizer", "PdfStringLayouter", "PdfStringLayoutResult", "LineInfo", "LineType", "PdfFont", "PdfTransformationMatrix", "Matrix", "ProcedureSets", "TemporaryDictionary", "PdfTransparency", "PdfAutomaticFieldInfoCollection", "PdfGraphicsElement", "__extends", "d", "b", "PdfAutomaticField", "PdfAutomaticFieldInfo", "TtfTableInfo", "TtfNameTable", "TtfNameRecord", "TtfHeadTable", "TtfMetrics", "TtfHorizontalHeaderTable", "TtfOS2Table", "TtfPostTable", "TtfLongHorMetric", "TtfCmapSubTable", "TtfCmapTable", "TtfGlyphInfo", "TtfLocaTable", "TtfAppleCmapSubTable", "TtfMicrosoftCmapSubTable", "TtfTrimmedCmapSubTable", "TtfGlyphHeader", "BigEndianWriter", "TtfReader", "__extends", "d", "b", "PdfFontMetrics", "WidthTable", "__extends", "StandardWidthTable", "UnicodeTrueTypeFont", "ArabicShapeRenderer", "ArabicShape", "Bidi", "RtlCharacters", "RtlRenderer", "__extends", "d", "b", "PdfGradientBrush", "PdfTemplate", "__extends", "d", "b", "PdfResources", "Guid", "__extends", "d", "b", "PdfTilingBrush", "PdfGraphics", "GetResourceEventHandler", "PdfGraphicsState", "TransparencyData", "PdfPageLayer", "PdfCollection", "__extends", "d", "b", "PdfPageLayerCollection", "PdfPageBase", "PdfAnnotationCollection", "__extends", "d", "b", "PdfPage", "document", "PageAddedEventArgs", "PdfSectionPageCollection", "PdfDocumentTemplate", "__extends", "d", "b", "PdfSectionTemplate", "PdfSection", "document", "PageSettingsState", "document", "PdfSectionCollection", "document", "PdfDocumentPageCollection", "document", "PdfCacheCollection", "PdfStandardFontMetricsFactory", "__extends", "d", "b", "PdfStandardFont", "__extends", "d", "b", "PdfDocument", "PdfBorders", "PdfPaddings", "ElementLayouter", "PdfLayoutFormat", "PdfLayoutParams", "PdfLayoutResult", "PdfLayoutElement", "__extends", "d", "b", "TextLayouter", "TextPageLayoutResult", "__extends", "PdfTextLayoutResult", "__extends", "d", "b", "PdfTextElement", "PdfAnnotation", "__extends", "d", "b", "PdfLinkAnnotation", "__extends", "d", "b", "PdfActionLinkAnnotation", "PdfAction", "__extends", "d", "b", "PdfUriAction", "__extends", "d", "b", "PdfUriAnnotation", "__extends", "d", "b", "PdfTextWebLink", "PdfNumbersConvertor", "PdfTemplateValuePair", "__extends", "d", "b", "PdfMultipleValueField", "__extends", "d", "b", "PdfPageNumberField", "document", "__extends", "d", "b", "PdfCompositeField", "__extends", "d", "b", "PdfSingleValueField", "document", "__extends", "d", "b", "PdfPageCountField", "document", "PdfBorderOverlapStyle", "__extends", "d", "b", "PdfGridStyleBase", "__extends", "PdfGridStyle", "__extends", "PdfGridCellStyle", "PdfGridRowStyle", "PdfHorizontalOverflowType", "__extends", "d", "b", "PdfGridLayouter", "document", "__extends", "PdfGridLayoutResult", "__extends", "PdfGridLayoutFormat", "GridCellEventArgs", "__extends", "PdfGridBeginCellDrawEventArgs", "__extends", "PdfGridEndCellDrawEventArgs", "PdfCancelEventArgs", "__extends", "BeginPageLayoutEventArgs", "__extends", "EndPageLayoutEventArgs", "__extends", "PdfGridBeginPageLayoutEventArgs", "__extends", "PdfGridEndPageLayoutEventArgs", "RowLayoutResult", "PdfGridCell", "PdfGridCellCollection", "PdfGridColumn", "PdfGridColumnCollection", "PdfGridRow", "PdfGridRowCollection", "PdfGridHeaderCollection", "__extends", "d", "b", "PdfGrid", "__extends", "d", "b", "PdfTrueTypeFont", "PdfPageTemplateElement", "document", "__extends", "d", "b", "PdfDocumentLinkAnnotation", "PdfDestinationMode", "PdfDestination", "PdfFunction", "__extends", "d", "b", "PdfSampledFunction", "PdfExtend", "PdfLinearGradientMode", "ShadingType", "KnownColor", "PdfBrushes", "PdfBlend", "__extends", "d", "b", "PdfColorBlend", "__extends", "d", "b", "PdfLinearGradientBrush", "__extends", "d", "b", "PdfRadialGradientBrush", "__extends", "d", "b", "ShapeLayouter", "ShapeLayoutResult", "__extends", "d", "b", "PdfShapeElement", "__extends", "d", "b", "PdfDrawElement", "__extends", "d", "b", "PdfFillElement", "__extends", "d", "b", "PdfPath", "__extends", "d", "b", "PdfRectangleArea", "__extends", "d", "b", "PdfEllipsePart", "__extends", "d", "b", "PdfArc"]
}
